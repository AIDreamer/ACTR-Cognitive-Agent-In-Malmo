(#Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("PRODUCTION-PARSING" *modules* :test string= member "ACT-R-support:production-parsing-support" translate-logical-pathname common-lisp-user::compile-and-load)) #1=#P"C:/Users/Son Pham/Desktop/actr7/commands/p-star-cmd.lisp" 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 15 0 15 16 15 17 19 3 18 1 0 73 29) #2=#A(t (19) (common-lisp-user::define-p* ext::location (defmacro common-lisp-user::define-p*) (#1# . 14981) ext::annotate :lambda-list (&rest common-lisp-user::definition) #:g14993 #:g14992 #:g14994 common-lisp-user::definition common-lisp-user::p*-fct quote #Y(common-lisp-user::define-p* nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #2# #1# 14981) t si::fset function "Production definition." si::set-documentation)) #1# 14981) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #3=#A(t (11) (common-lisp-user::define-p*-fct ext::location (defun common-lisp-user::define-p*-fct) (#1# . 15525) ext::annotate :lambda-list (common-lisp-user::definition) common-lisp-user::definition common-lisp-user::p*-fct #Y(common-lisp-user::define-p*-fct nil nil (24 45 7 26 13 0 19 1 8 29) #3# #1# 15525) si::fset)) #1# 15525) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 15 0 15 16 15 17 19 3 18 1 0 73 29) #4=#A(t (19) (common-lisp-user::p* ext::location (defmacro common-lisp-user::p*) (#1# . 15583) ext::annotate :lambda-list (&rest common-lisp-user::definition) #:g14996 #:g14995 #:g14997 common-lisp-user::definition common-lisp-user::p*-fct quote #Y(common-lisp-user::p* nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #4# #1# 15583) t si::fset function "Production definition." si::set-documentation)) #1# 15583) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 19 2 24 1 0 73 29) #5=#A(t (25) (common-lisp-user::p*-fct ext::location (defun common-lisp-user::p*-fct) (#1# . 15669) ext::annotate :lambda-list (common-lisp-user::definition) common-lisp-user::definition common-lisp-user::procedural common-lisp-user::get-module-fct common-lisp-user::prod common-lisp-user::procedural-p common-lisp-user::create-production *error-output* "~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No procedural modulue found cannot create production." format finish-output #Y(common-lisp-user::p*-fct nil nil (24 45 7 26 15 8 19 1 9 45 10 13 0 19 1 11 39 10 13 0 13 1 19 2 12 38 40 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 12 14 13 19 1 22 22 73 43 1 29) #5# #1# 15669) si::fset)) #1# 15669))
