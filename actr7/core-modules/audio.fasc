(#Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("GENERAL-PM" *modules* :test string= member "ACT-R-support:general-pm" translate-logical-pathname common-lisp-user::compile-and-load)) #1=#P"C:/Users/Son Pham/Desktop/actr7/core-modules/audio.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t &optional t) t) common-lisp-user::get-articulation-time) proclaim)) #1# 21768) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 14 7 15 8 15 9 1 9 16 10 6 3 12 15 11 15 12 11 12 16 10 6 3 6 2 6 2 12 19 4 13 29) #A(t (14) (common-lisp-user::audio-module ext::location (defclass common-lisp-user::audio-module) (#1# . 21838) ext::annotate (common-lisp-user::attn-module) ((:initform nil :initargs (:audicon) :writers ((setf common-lisp-user::audicon)) :readers (common-lisp-user::audicon) :name common-lisp-user::audicon) (:initform 300 :initargs (:digit-dtct-dly) :writers ((setf common-lisp-user::digit-detect-delay)) :readers (common-lisp-user::digit-detect-delay) :name common-lisp-user::digit-detect-delay) (:initform 500 :initargs (:digit-rec-dly) :writers ((setf common-lisp-user::digit-recode-delay)) :readers (common-lisp-user::digit-recode-delay) :name common-lisp-user::digit-recode-delay) (:initform 600 :initargs (:digit-duration) :writers ((setf common-lisp-user::digit-duration)) :readers (common-lisp-user::digit-duration) :name common-lisp-user::digit-duration) (:initform 50 :initargs (:tone-dtct-dly) :writers ((setf common-lisp-user::tone-detect-delay)) :readers (common-lisp-user::tone-detect-delay) :name common-lisp-user::tone-detect-delay) (:initform 285 :initargs (:tone-rec-dly) :writers ((setf common-lisp-user::tone-recode-delay)) :readers (common-lisp-user::tone-recode-delay) :name common-lisp-user::tone-recode-delay) (:initform 3000 :initargs (:decay-time) :writers ((setf common-lisp-user::decay-time)) :readers (common-lisp-user::decay-time) :name common-lisp-user::sound-decay-time) (:initform nil :writers ((setf common-lisp-user::default-spec)) :readers (common-lisp-user::default-spec) :name common-lisp-user::default-spec) (:initform nil :writers ((setf common-lisp-user::last-aural-request)) :readers (common-lisp-user::last-aural-request) :name common-lisp-user::last-aural-request)) :direct-default-initargs :version-string "4.0" constantly :name :audio clos::load-defclass)) #1# 21838) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 14 5 1 7 12 1 8 7 3 12 15 9 15 10 15 11 15 12 15 13 15 14 15 15 15 16 14 5 1 19 12 1 20 7 3 12 14 5 1 22 12 1 23 7 3 12 15 24 15 25 1 26 6 14 12 77 19 4 27 29) #2=#A(t (28) (common-lisp-user::sound-event ext::location (defclass common-lisp-user::sound-event) (#1# . 22653) ext::annotate :initfunction common-lisp-user::mp-time-ms #Y(nil nil nil (26 19 0 6 29) #2# #1# 22653) (:initform (common-lisp-user::mp-time-ms) :initargs (:onset) :writers ((setf common-lisp-user::onset)) :readers (common-lisp-user::onset) :name common-lisp-user::onset) (:initform nil :initargs (:offset) :writers ((setf common-lisp-user::offset)) :readers (common-lisp-user::offset) :name common-lisp-user::offset) (:initform nil :initargs (:string) :writers ((setf common-lisp-user::snd-string)) :readers (common-lisp-user::snd-string) :name string) (:initform 0 :initargs (:duration) :writers ((setf common-lisp-user::duration)) :readers (common-lisp-user::duration) :name common-lisp-user::duration) (:initform nil :initargs (:content) :writers ((setf common-lisp-user::content)) :readers (common-lisp-user::content) :name common-lisp-user::content) (:initform nil :initargs (:delay) :writers ((setf common-lisp-user::delay)) :readers (common-lisp-user::delay) :name common-lisp-user::content-delay) (:initform 'common-lisp-user::speech :initargs (:kind) :writers ((setf common-lisp-user::kind)) :readers (common-lisp-user::kind) :name common-lisp-user::kind) (:initargs (:attended-p) :initform nil :writers ((setf common-lisp-user::attended-p)) :readers (common-lisp-user::attended-p) :name common-lisp-user::attended-p) (:initform 'common-lisp-user::external :initargs (:location) :writers ((setf common-lisp-user::location)) :readers (common-lisp-user::location) :name common-lisp-user::location) #3="SOUND" common-lisp-user::new-name-fct #Y(nil nil nil (26 15 17 19 1 18 29) #2# #1# 22653) (:initargs (:sname) :initform (common-lisp-user::new-name-fct #3#) :writers ((setf common-lisp-user::sname)) :readers (common-lisp-user::sname) :name common-lisp-user::sname) #4="AUDIO-EVENT" #Y(nil nil nil (26 15 21 19 1 18 29) #2# #1# 22653) (:initform (common-lisp-user::new-name-fct #4#) :writers ((setf common-lisp-user::ename)) :readers (common-lisp-user::ename) :name common-lisp-user::ename) (:initform nil :initargs (:recode) :writers ((setf common-lisp-user::recode)) :readers (common-lisp-user::recode) :name common-lisp-user::recode) (:initargs (:pitch) :initform 'common-lisp-user::middle :writers ((setf common-lisp-user::pitch)) :readers (common-lisp-user::pitch) :name common-lisp-user::pitch) (:initargs (:other-features) :initform nil :writers ((setf common-lisp-user::other-features)) :readers (common-lisp-user::other-features) :name common-lisp-user::other-features) clos::load-defclass)) #1# 22653) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 24 12 14 25 19 6 26 29) #5=#A(t (27) (initialize-instance ext::location (defmethod initialize-instance :after (common-lisp-user::self common-lisp-user::sound-event) &key) (#1# . 23799) ext::annotate (:after) (common-lisp-user::sound-event) (common-lisp-user::self &key) common-lisp-user::self (t) common-lisp-user::offset common-lisp-user::onset numberp common-lisp-user::duration #:g13249 + #:g13250 (setf common-lisp-user::offset) common-lisp-user::sname common-lisp-user::isa common-lisp-user::sound common-lisp-user::define-chunks-fct common-lisp-user::ename common-lisp-user::audio-event #Y(initialize-instance nil nil (24 45 8 28 9 13 0 19 1 10 76 39 52 13 0 19 1 11 16 12 39 8 13 0 19 1 13 16 12 39 34 10 0 45 14 13 1 19 1 11 12 13 1 19 1 13 12 19 2 15 45 16 13 0 13 1 33 17 18 2 43 1 43 1 13 0 19 1 18 12 15 19 1 20 6 3 6 1 12 19 1 21 13 0 19 1 22 12 15 19 1 23 6 3 6 1 12 19 1 21 29) #5# #1# 23799) t clos::install-method)) #1# 23799) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::detect-at-time ext::location (defgeneric common-lisp-user::detect-at-time) (#1# . 24177) ext::annotate :lambda-list (common-lisp-user::evt) :delete-methods t :documentation "Returns the time at which an event becomes detectable." ensure-generic-function)) #1# 24177) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #6=#A(t (14) (common-lisp-user::detect-at-time ext::location (defmethod common-lisp-user::detect-at-time (common-lisp-user::evt common-lisp-user::sound-event)) (#1# . 24288) ext::annotate (common-lisp-user::sound-event) (common-lisp-user::evt) common-lisp-user::evt common-lisp-user::onset common-lisp-user::delay + #Y(common-lisp-user::detect-at-time nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 19 2 10 29) #6# #1# 24288) t clos::install-method)) #1# 24288) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::detectable-p ext::location (defgeneric common-lisp-user::detectable-p) (#1# . 24366) ext::annotate :lambda-list (common-lisp-user::evt) :delete-methods t :documentation "Returns T if the given sound event is detectable." ensure-generic-function)) #1# 24366) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #7=#A(t (14) (common-lisp-user::detectable-p ext::location (defmethod common-lisp-user::detectable-p (common-lisp-user::evt common-lisp-user::sound-event)) (#1# . 24472) ext::annotate (common-lisp-user::sound-event) (common-lisp-user::evt) common-lisp-user::evt common-lisp-user::mp-time-ms common-lisp-user::detect-at-time >= #Y(common-lisp-user::detectable-p nil nil (24 45 7 26 19 0 8 12 13 0 19 1 9 12 19 2 10 29) #7# #1# 24472) t clos::install-method)) #1# 24472) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::finished-p ext::location (defgeneric common-lisp-user::finished-p) (#1# . 24559) ext::annotate :lambda-list (common-lisp-user::evt) :delete-methods t :documentation "Returns T if the given sound-event is finished." ensure-generic-function)) #1# 24559) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 11 19 6 13 29) #8=#A(t (14) (common-lisp-user::finished-p ext::location (defmethod common-lisp-user::finished-p (common-lisp-user::evt common-lisp-user::sound-event)) (#1# . 24661) ext::annotate (common-lisp-user::sound-event) (common-lisp-user::evt) common-lisp-user::evt common-lisp-user::mp-time-ms common-lisp-user::offset >= t #Y(common-lisp-user::finished-p nil nil (24 45 7 26 19 0 8 12 13 0 19 1 9 12 19 2 10 73 39 4 11 11 73 29) #8# #1# 24661) clos::install-method)) #1# 24661) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 77 14 6 15 7 15 8 1 9 16 10 6 3 12 15 11 15 12 1 17 6 3 12 15 18 15 19 1 21 6 3 12 15 22 15 23 1 25 6 3 12 15 26 15 27 1 30 6 3 6 5 6 2 12 19 4 31 29) #9=#A(t (32) (common-lisp-user::digit-sound-evt ext::location (defclass common-lisp-user::digit-sound-evt) (#1# . 24747) ext::annotate (common-lisp-user::sound-event) :direct-default-initargs :kind 'common-lisp-user::digit common-lisp-user::digit constantly :duration (common-lisp-user::randomize-time-ms (common-lisp-user::digit-duration (common-lisp-user::get-module :audio))) :audio common-lisp-user::get-module-fct common-lisp-user::digit-duration common-lisp-user::randomize-time-ms #Y(nil nil nil (26 15 13 19 1 14 12 19 1 15 12 19 1 16 29) #9# #1# 24747) :delay (common-lisp-user::randomize-time-ms (common-lisp-user::digit-detect-delay (common-lisp-user::get-module :audio))) common-lisp-user::digit-detect-delay #Y(nil nil nil (26 15 13 19 1 14 12 19 1 20 12 19 1 16 29) #9# #1# 24747) :recode (common-lisp-user::digit-recode-delay (common-lisp-user::get-module :audio)) common-lisp-user::digit-recode-delay #Y(nil nil nil (26 15 13 19 1 14 12 19 1 24 29) #9# #1# 24747) :sname (common-lisp-user::new-name-fct #10="DIGIT") #10# common-lisp-user::new-name-fct #Y(nil nil nil (26 15 28 19 1 29 29) #9# #1# 24747) clos::load-defclass)) #1# 24747) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 14 12 14 15 19 6 16 29) #11=#A(t (17) (initialize-instance ext::location (defmethod initialize-instance :after (common-lisp-user::self common-lisp-user::digit-sound-evt) &key) (#1# . 25066) ext::annotate (:after) (common-lisp-user::digit-sound-evt) (common-lisp-user::self &key) common-lisp-user::self (t) #:g13257 common-lisp-user::snd-string #:g13258 (setf common-lisp-user::content) #Y(initialize-instance nil nil (24 45 8 28 9 10 0 45 10 13 1 19 1 11 45 12 13 0 13 1 33 13 18 2 43 1 43 1 29) #11# #1# 25066) t clos::install-method)) #1# 25066) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 77 14 6 15 7 15 8 1 8 16 9 6 3 12 15 10 15 11 1 12 16 9 6 3 12 15 13 9 1000 8 1000 16 9 6 3 12 15 14 15 15 1 20 6 3 12 15 21 15 22 1 24 6 3 12 15 25 15 26 1 29 6 3 6 6 6 2 12 19 4 30 29) #12=#A(t (31) (common-lisp-user::tone-sound-evt ext::location (defclass common-lisp-user::tone-sound-evt) (#1# . 25179) ext::annotate (common-lisp-user::sound-event) :direct-default-initargs :string "" constantly :kind 'common-lisp-user::tone common-lisp-user::tone :content :delay (common-lisp-user::randomize-time-ms (common-lisp-user::tone-detect-delay (common-lisp-user::get-module :audio))) :audio common-lisp-user::get-module-fct common-lisp-user::tone-detect-delay common-lisp-user::randomize-time-ms #Y(nil nil nil (26 15 16 19 1 17 12 19 1 18 12 19 1 19 29) #12# #1# 25179) :recode (common-lisp-user::tone-recode-delay (common-lisp-user::get-module :audio)) common-lisp-user::tone-recode-delay #Y(nil nil nil (26 15 16 19 1 17 12 19 1 23 29) #12# #1# 25179) :sname (common-lisp-user::new-name-fct #13="TONE") #13# common-lisp-user::new-name-fct #Y(nil nil nil (26 15 27 19 1 28 29) #12# #1# 25179) clos::load-defclass)) #1# 25179) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 21 12 14 22 19 6 23 29) #14=#A(t (24) (initialize-instance ext::location (defmethod initialize-instance :after (common-lisp-user::self common-lisp-user::tone-sound-evt) &key) (#1# . 25621) ext::annotate (:after) (common-lisp-user::tone-sound-evt) (common-lisp-user::self &key) common-lisp-user::self (t) common-lisp-user::content > #:g13271 common-lisp-user::high #:g13272 (setf common-lisp-user::pitch) < #:g13273 common-lisp-user::low #:g13274 (setf common-lisp-user::pitch) #Y(initialize-instance nil nil (24 45 8 28 9 13 0 19 1 10 12 9 1500 19 2 11 39 23 10 0 45 12 1 13 45 14 13 0 13 1 33 15 18 2 43 1 43 1 38 35 13 0 19 1 10 12 9 900 19 2 16 73 39 21 10 0 45 17 1 18 45 19 13 0 13 1 33 20 18 2 43 1 43 1 29) #14# #1# 25621) t clos::install-method)) #1# 25621) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 77 14 6 15 7 15 8 1 9 16 10 6 3 12 15 11 15 12 1 17 6 3 12 15 18 15 19 1 22 6 3 12 15 23 9 0 8 0 16 10 6 3 12 15 24 77 75 16 10 6 3 6 5 6 2 12 19 4 25 29) #15=#A(t (26) (common-lisp-user::word-sound-evt ext::location (defclass common-lisp-user::word-sound-evt) (#1# . 25810) ext::annotate (common-lisp-user::sound-event) :direct-default-initargs :kind 'common-lisp-user::word common-lisp-user::word constantly :delay (common-lisp-user::randomize-time-ms (common-lisp-user::digit-detect-delay (common-lisp-user::get-module :audio))) :audio common-lisp-user::get-module-fct common-lisp-user::digit-detect-delay common-lisp-user::randomize-time-ms #Y(nil nil nil (26 15 13 19 1 14 12 19 1 15 12 19 1 16 29) #15# #1# 25810) :sname (common-lisp-user::new-name-fct #16="WORD") #16# common-lisp-user::new-name-fct #Y(nil nil nil (26 15 20 19 1 21 29) #15# #1# 25810) :duration :recode clos::load-defclass)) #1# 25810) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 33 12 14 14 19 6 34 29) #17=#A(t (35) (initialize-instance ext::location (defmethod initialize-instance :after (common-lisp-user::self common-lisp-user::word-sound-evt) &key) (#1# . 26037) ext::annotate (:after) (common-lisp-user::word-sound-evt) (common-lisp-user::self &key) common-lisp-user::self (t) common-lisp-user::duration zerop #:g13299 common-lisp-user::snd-string t common-lisp-user::get-articulation-time #:g13300 (setf common-lisp-user::duration) common-lisp-user::recode #:g13301 / - max #:g13302 (setf common-lisp-user::recode) #:g13303 #:g13304 (setf common-lisp-user::content) #:g13305 common-lisp-user::onset + #:g13306 (setf common-lisp-user::offset) #Y(initialize-instance nil nil (24 45 8 28 9 13 0 19 1 10 76 40 8 13 0 19 1 10 16 11 39 30 10 0 45 12 13 1 19 1 13 12 14 14 19 2 15 45 16 13 0 13 1 33 17 18 2 43 1 43 1 13 0 19 1 18 76 39 46 10 0 45 19 13 1 19 1 10 12 9 2 19 2 20 12 13 1 19 1 10 12 9 150 19 2 21 12 19 2 22 45 23 13 0 13 1 33 24 18 2 43 1 43 1 10 0 45 25 13 1 19 1 13 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 0 45 28 13 1 19 1 29 12 13 1 19 1 10 12 19 2 30 45 31 13 0 13 1 33 32 18 2 43 1 43 1 29) #17# #1# 26037) clos::install-method)) #1# 26037) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::new-sound-event ext::location (defgeneric common-lisp-user::new-sound-event) (#1# . 26532) ext::annotate :lambda-list (common-lisp-user::evt) :delete-methods t :documentation "Handles the bookkeeping when a new sound event is created." ensure-generic-function)) #1# 26532) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #18=#A(t (23) (common-lisp-user::stuff-sound-buffer ext::location (defun common-lisp-user::stuff-sound-buffer) (#1# . 26837) ext::annotate :lambda-list (common-lisp-user::audio-mod) common-lisp-user::audio-mod common-lisp-user::aural-location common-lisp-user::buffer-read common-lisp-user::chunk common-lisp-user::overstuff-loc common-lisp-user::chunk-copied-from-fct common-lisp-user::unmodified-copy common-lisp-user::x (common-lisp-user::buffer common-lisp-user::unrequested) common-lisp-user::query-buffer common-lisp-user::default-spec :stuffed t common-lisp-user::find-sound #Y(common-lisp-user::stuff-sound-buffer nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 76 40 31 13 1 19 1 11 39 24 13 0 19 1 12 47 1 13 45 14 10 1 43 2 39 8 15 8 15 15 19 2 16 73 39 16 13 1 13 1 19 1 17 12 14 18 14 19 19 4 20 43 1 29) #18# #1# 26837) si::fset)) #1# 26837) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 19 12 14 17 19 6 20 29) #19=#A(t (21) (common-lisp-user::new-sound-event ext::location (defmethod common-lisp-user::new-sound-event :around (common-lisp-user::evt common-lisp-user::sound-event)) (#1# . 27639) ext::annotate (:around) (common-lisp-user::sound-event) (common-lisp-user::evt) common-lisp-user::evt call-next-method common-lisp-user::detect-at-time common-lisp-user::stuff-sound-buffer :module :audio :destination :output :time-in-ms t common-lisp-user::schedule-event #Y(common-lisp-user::new-sound-event nil nil (24 45 8 26 19 0 9 45 8 10 0 73 39 30 13 0 19 1 10 12 15 11 14 12 14 13 14 14 14 13 14 15 77 14 16 14 17 19 10 18 11 17 73 43 1 29) #19# #1# 27639) clos::install-method)) #1# 27639) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 32 12 14 33 19 6 34 29) #20=#A(t (35) (common-lisp-user::new-sound-event ext::location (defmethod common-lisp-user::new-sound-event (common-lisp-user::evt common-lisp-user::sound-event)) (#1# . 27901) ext::annotate (common-lisp-user::sound-event) (common-lisp-user::evt) common-lisp-user::evt common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #21="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No meta-process found.  Cannot create a new sound." format finish-output common-lisp-user::meta-p-current-model "No current model found.  Cannot create a new sound." :audio common-lisp-user::get-module-fct common-lisp-user::it #:g13316 #:g13318 common-lisp-user::audicon nconc #:g13317 (setf common-lisp-user::audicon) "No Audio module found.  Cannot create a new sound." #Y(common-lisp-user::new-sound-event nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 144 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 91 15 22 19 1 23 45 24 10 0 39 39 10 0 45 25 10 2 6 1 45 26 13 1 19 1 27 12 13 0 19 2 28 45 29 13 0 13 2 33 30 18 2 43 3 10 1 73 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 31 19 5 18 12 14 10 19 1 19 22 73 43 1 29) #20# #1# 27901) t clos::install-method)) #1# 27901) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 15 0 15 36 15 37 19 3 38 1 0 73 29) #22=#A(t (39) (common-lisp-user::new-digit-sound ext::location (defun common-lisp-user::new-digit-sound) (#1# . 28294) ext::annotate :lambda-list (common-lisp-user::digit &optional common-lisp-user::onset common-lisp-user::time-in-ms) common-lisp-user::digit common-lisp-user::onset common-lisp-user::time-in-ms common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No meta-process found.  Cannot create a new sound." format finish-output common-lisp-user::meta-p-current-model "No current model found.  Cannot create a new sound." numberp "Digit must be a number.  No new digit sound created." "Onset must be a number.  No new digit sound created." common-lisp-user::digit-sound-evt :onset common-lisp-user::mp-time-ms common-lisp-user::safe-seconds->ms :string make-instance common-lisp-user::new-sound-event #Y(common-lisp-user::new-digit-sound nil nil (24 45 7 25 40 2 77 46 8 25 40 2 77 46 9 26 14 10 19 1 11 76 39 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 19 5 20 12 14 12 19 1 21 22 73 38 198 14 10 19 1 11 12 19 1 22 76 39 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 23 19 5 20 12 14 12 19 1 21 22 73 38 145 10 2 16 24 76 39 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 25 19 5 20 12 14 12 19 1 21 22 73 38 97 10 1 76 40 5 10 1 16 24 76 39 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 26 19 5 20 12 14 12 19 1 21 22 73 38 44 15 27 14 28 10 1 76 39 6 19 0 29 38 18 10 0 76 39 10 13 1 15 0 19 2 30 38 4 10 1 73 12 14 31 13 2 19 5 32 12 19 1 33 29) #22# #1# 28294) si::fset function "Creates and adds a digit sound <digit>, a number, starting optionally at <onset>." si::set-documentation)) #1# 28294) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 37 12 19 2 38 15 0 15 39 15 40 19 3 41 1 0 73 29) #23=#A(t (42) (common-lisp-user::new-tone-sound ext::location (defun common-lisp-user::new-tone-sound) (#1# . 29207) ext::annotate :lambda-list (common-lisp-user::freq common-lisp-user::duration &optional common-lisp-user::onset common-lisp-user::time-in-ms) common-lisp-user::freq common-lisp-user::duration common-lisp-user::onset common-lisp-user::time-in-ms common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No meta-process found.  Cannot create a new sound." format finish-output common-lisp-user::meta-p-current-model "No current model found.  Cannot create a new sound." numberp "Freq must be a number.  No new tone sound created." "Duration must be a number.  No new tone sound created." "Onset must be a number.  No new tone sound created." common-lisp-user::tone-sound-evt :onset common-lisp-user::mp-time-ms common-lisp-user::safe-seconds->ms :duration :content make-instance common-lisp-user::new-sound-event #Y(common-lisp-user::new-tone-sound nil nil (24 45 7 24 45 8 25 40 2 77 46 9 25 40 2 77 46 10 26 14 11 19 1 12 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 12 14 13 19 1 22 22 73 38 256 14 11 19 1 12 12 19 1 23 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 24 19 5 21 12 14 13 19 1 22 22 73 38 203 10 3 16 25 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 26 19 5 21 12 14 13 19 1 22 22 73 38 155 10 2 16 25 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 27 19 5 21 12 14 13 19 1 22 22 73 38 107 10 1 76 40 5 10 1 16 25 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 28 19 5 21 12 14 13 19 1 22 22 73 38 54 15 29 14 30 10 1 76 39 6 19 0 31 38 18 10 0 76 39 10 13 1 15 0 19 2 32 38 4 10 1 73 12 14 33 13 2 15 0 19 2 32 12 14 34 13 3 19 7 35 12 19 1 36 29) #23# #1# 29207) si::fset function "Creates and adds a tone sound of <freq>, starting optionally at <onset>." si::set-documentation)) #1# 29207) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 64 12 19 2 65 15 0 15 66 15 67 19 3 68 1 0 73 29) #24=#A(t (69) (common-lisp-user::new-other-sound ext::location (defun common-lisp-user::new-other-sound) (#1# . 30319) ext::annotate :lambda-list (common-lisp-user::content common-lisp-user::duration common-lisp-user::delay common-lisp-user::recode &optional common-lisp-user::onset (common-lisp-user::location 'common-lisp-user::external) (common-lisp-user::kind 'common-lisp-user::speech) common-lisp-user::time-in-ms &rest common-lisp-user::other-features) common-lisp-user::content common-lisp-user::duration common-lisp-user::delay common-lisp-user::recode common-lisp-user::onset common-lisp-user::external common-lisp-user::location common-lisp-user::speech common-lisp-user::kind common-lisp-user::time-in-ms common-lisp-user::other-features common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No meta-process found.  Cannot create a new sound." format finish-output common-lisp-user::meta-p-current-model "No current model found.  Cannot create a new sound." numberp "Duration must be a number.  No new sound created." "Delay must be a number.  No new sound created." "Recode must be a number.  No new sound created." "Onset must be a number.  No new sound created." common-lisp-user::x = :evt eq :sound :both #Y(nil nil nil (24 45 37 26 10 0 16 24 12 9 3 19 2 38 73 39 31 10 0 4 12 11 39 17 40 73 40 20 10 0 4 12 11 41 17 40 73 40 9 10 0 4 12 11 42 17 40 29) #24# #1# 30319) every "Other features must be lists of length 3 starting with one of: :evt, :sound, or :both.  No new sound created." si::%dolist-var common-lisp-user::o second common-lisp-user::valid-slot-name common-lisp-user::extend-possible-slots common-lisp-user::sound-event :onset common-lisp-user::mp-time-ms common-lisp-user::safe-seconds->ms :duration :content :delay :recode :location :kind :other-features make-instance common-lisp-user::new-sound-event #Y(common-lisp-user::new-other-sound nil nil (24 45 7 24 45 8 24 45 9 24 45 10 25 40 2 77 46 11 25 40 3 15 12 46 13 25 40 3 15 14 46 15 25 40 2 77 46 16 27 45 17 14 18 19 1 19 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 27 19 5 28 12 14 20 19 1 29 22 73 38 432 14 18 19 1 19 12 19 1 30 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 31 19 5 28 12 14 20 19 1 29 22 73 38 379 10 7 16 32 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 33 19 5 28 12 14 20 19 1 29 22 73 38 331 10 6 16 32 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 34 19 5 28 12 14 20 19 1 29 22 73 38 283 10 5 16 32 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 35 19 5 28 12 14 20 19 1 29 22 73 38 235 10 4 76 40 5 10 4 16 32 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 36 19 5 28 12 14 20 19 1 29 22 73 38 182 34 43 12 13 0 19 2 44 76 39 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 45 19 5 28 12 14 20 19 1 29 22 73 38 130 10 0 45 46 75 45 47 38 30 10 1 4 51 0 10 0 16 48 12 19 1 49 76 39 9 10 0 16 48 12 19 1 50 10 1 5 51 1 10 1 40 -32 43 2 15 51 14 52 10 4 76 39 6 19 0 53 38 18 10 1 76 39 10 13 4 15 0 19 2 54 38 4 10 4 73 12 14 55 13 7 15 0 19 2 54 12 14 56 13 8 14 57 13 6 15 0 19 2 54 12 14 58 13 5 15 0 19 2 54 12 14 59 13 3 14 60 13 2 14 61 13 0 19 17 62 12 19 1 63 29) #24# #1# 30319) si::fset function "Creates and adds a sound <content>, lasting <duration>, with content delay <delay>, with recode time <recode>, starting optionally at <onset>." si::set-documentation)) #1# 30319) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 38 12 19 2 39 15 0 15 40 15 41 19 3 42 1 0 73 29) #25=#A(t (43) (common-lisp-user::new-word-sound ext::location (defun common-lisp-user::new-word-sound) (#1# . 32401) ext::annotate :lambda-list (common-lisp-user::word &optional common-lisp-user::onset (common-lisp-user::location 'common-lisp-user::external) common-lisp-user::time-in-ms) common-lisp-user::word common-lisp-user::onset common-lisp-user::external common-lisp-user::location common-lisp-user::time-in-ms common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No meta-process found.  Cannot create a new sound." format finish-output common-lisp-user::meta-p-current-model "No current model found.  Cannot create a new sound." stringp "Word must be a string.  No new word sound created." numberp "Onset must be a number.  No new word sound created." common-lisp-user::word-sound-evt :onset common-lisp-user::mp-time-ms common-lisp-user::safe-seconds->ms :string :location make-instance common-lisp-user::new-sound-event #Y(common-lisp-user::new-word-sound nil nil (24 45 7 25 40 2 77 46 8 25 40 3 15 9 46 10 25 40 2 77 46 11 26 14 12 19 1 13 76 39 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 19 5 22 12 14 14 19 1 23 22 73 38 202 14 12 19 1 13 12 19 1 24 76 39 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 25 19 5 22 12 14 14 19 1 23 22 73 38 149 10 3 16 26 76 39 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 27 19 5 22 12 14 14 19 1 23 22 73 38 101 10 2 76 40 5 10 2 16 28 76 39 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 29 19 5 22 12 14 14 19 1 23 22 73 38 48 15 30 14 31 10 2 76 39 6 19 0 32 38 18 10 0 76 39 10 13 2 15 0 19 2 33 38 4 10 2 73 12 14 34 13 3 14 35 13 1 19 7 36 12 19 1 37 29) #25# #1# 32401) si::fset function "Creates and adds a word with optional onset time." si::set-documentation)) #1# 32401) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #26=#A(t (31) (common-lisp-user::update-sound-evt ext::location (defun common-lisp-user::update-sound-evt) (#1# . 33313) ext::annotate :lambda-list (common-lisp-user::evt) common-lisp-user::evt common-lisp-user::ename common-lisp-user::onset common-lisp-user::location common-lisp-user::kind common-lisp-user::id common-lisp-user::pitch common-lisp-user::finished-p common-lisp-user::offset common-lisp-user::duration - common-lisp-user::ms->seconds common-lisp-user::x :evt eq :both copy-list #Y(nil nil nil (24 45 19 26 10 0 4 12 11 20 17 21 40 9 10 0 4 12 11 22 17 21 73 39 6 10 0 5 16 23 29) #26# #1# 33313) common-lisp-user::other-features mapcan append common-lisp-user::mod-chunk-fct #Y(common-lisp-user::update-sound-evt nil nil (24 45 7 26 13 0 19 1 8 12 15 9 13 0 19 1 9 12 15 10 13 0 19 1 10 12 15 11 13 0 19 1 11 12 15 12 13 0 19 1 8 12 15 13 13 0 19 1 13 6 10 12 13 0 19 1 14 73 39 33 15 15 13 0 19 1 15 12 15 16 13 0 19 1 15 12 13 0 19 1 9 12 19 2 17 12 19 1 18 6 4 73 12 34 24 12 13 0 19 1 25 12 19 2 26 12 19 3 27 12 19 2 28 29) #26# #1# 33313) si::fset)) #1# 33313) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::find-sound ext::location (defgeneric common-lisp-user::find-sound) (#1# . 34027) ext::annotate :lambda-list (common-lisp-user::aud-mod common-lisp-user::spec &key common-lisp-user::stuffed) :delete-methods t :documentation "Given a chunk-spec return a sound event which matches." ensure-generic-function)) #1# 34027) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 109 12 14 75 19 6 110 29) #27=#A(t (111) (common-lisp-user::find-sound ext::location (defmethod common-lisp-user::find-sound (common-lisp-user::aud-mod common-lisp-user::audio-module) common-lisp-user::spec &key #28=(common-lisp-user::stuffed nil)) (#1# . 34444) ext::annotate (common-lisp-user::audio-module t) (common-lisp-user::aud-mod common-lisp-user::spec &key #28#) common-lisp-user::aud-mod common-lisp-user::spec (t :stuffed) common-lisp-user::stuffed common-lisp-user::chunk-spec-slot-spec common-lisp-user::slots :finished :key common-lisp-user::spec-slot-name find common-lisp-user::finished-spec :attended common-lisp-user::attended-spec common-lisp-user::relative-slots common-lisp-user::detectable-audicon common-lisp-user::event-ls common-lisp-user::x common-lisp-user::attended-p common-lisp-user::spec-slot-value eq #Y(nil nil nil (24 45 23 26 13 0 19 1 24 12 13 3 19 1 25 17 26 29) #27# #1# 34444) remove-if-not common-lisp-user::finished-p #Y(nil nil nil (24 45 23 26 13 0 19 1 29 12 13 4 19 1 25 17 26 29) #27# #1# 34444) si::%dolist-var common-lisp-user::lowest common-lisp-user::highest remove #:g13380 nconc common-lisp-user::slot-specs-to-chunk-spec :chunks common-lisp-user::update-sound-evt mapcar :variable-char #\& common-lisp-user::find-matching-chunks common-lisp-user::matching-chunks common-lisp-user::spec-slot-op common-lisp-user::test common-lisp-user::slot common-lisp-user::op common-lisp-user::value common-lisp-user::y common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::cur-val numberp :fail *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Cannot apply ~S constraint because not all chunks have a numerical value." format finish-output < common-lisp-user::define-chunk-spec-fct #:g13387 #:g13388 (setf common-lisp-user::loc-failure) common-lisp-user::random-item common-lisp-user::chunk common-lisp-user::aural-location common-lisp-user::buffer-read :time-in-ms t :module :audio :requested :priority common-lisp-user::schedule-overwrite-buffer-chunk common-lisp-user::schedule-set-buffer-chunk common-lisp-user::unstuff-loc common-lisp-user::ename common-lisp-user::event common-lisp-user::unstuff-event common-lisp-user::it common-lisp-user::delete-event #:g13389 common-lisp-user::unstuff-buffer :maintenance :params :destination :output :min :precondition common-lisp-user::check-unstuff-buffer common-lisp-user::schedule-event-relative common-lisp-user::offset common-lisp-user::decay-time + common-lisp-user::schedule-event #:g13390 (setf common-lisp-user::unstuff-event) common-lisp-user::find-sound-failure common-lisp-user::medium :details "find-sound-failure" common-lisp-user::schedule-event-now #Y(common-lisp-user::find-sound nil nil (24 45 7 24 45 8 28 9 22 40 2 77 46 10 13 1 19 1 11 45 12 14 13 13 0 14 14 15 15 19 4 16 45 17 14 18 13 1 14 14 15 15 19 4 16 45 19 75 45 20 13 6 19 1 21 45 22 10 2 39 11 34 27 12 13 0 19 2 28 51 0 10 3 39 11 34 30 12 13 0 19 2 28 51 0 10 4 45 31 75 45 23 38 61 10 1 4 51 0 13 0 19 1 25 12 1 32 17 26 40 11 13 0 19 1 25 12 1 33 17 26 39 27 13 0 13 6 19 2 34 51 6 10 0 6 1 45 35 13 4 13 0 19 2 36 51 4 43 1 10 1 5 51 1 10 1 40 -63 43 2 13 4 19 1 37 12 14 38 15 39 13 0 19 2 40 12 14 41 15 42 19 5 43 45 44 10 2 45 31 75 45 23 38 207 10 1 4 51 0 77 13 0 19 1 45 12 13 0 19 1 15 12 13 0 19 1 25 12 46 46 46 47 46 48 46 49 58 60 134 10 7 45 31 75 45 50 38 118 10 1 4 51 0 13 0 13 5 19 2 51 45 52 10 0 16 53 76 39 47 11 54 51 4 14 55 15 56 19 0 57 73 39 12 19 0 58 16 59 12 9 1 19 2 60 12 19 0 61 12 15 62 13 8 19 6 63 14 55 19 1 64 75 73 36 3 10 4 76 40 33 13 7 1 32 17 26 39 8 13 0 13 4 19 2 65 40 16 13 7 1 33 17 26 39 8 13 0 13 4 19 2 60 39 5 10 0 51 4 43 1 10 1 5 51 1 10 1 40 -120 43 2 63 13 0 11 54 17 26 76 39 23 13 1 13 2 10 0 6 3 12 19 1 66 12 14 38 13 6 19 3 43 51 6 43 4 10 1 5 51 1 10 1 40 -209 43 2 10 8 45 67 75 45 68 13 0 13 1 33 69 18 2 43 1 43 1 10 0 39 248 13 0 19 1 70 45 71 10 7 39 6 15 72 19 1 73 39 27 15 72 13 0 9 0 14 74 14 75 14 76 14 77 14 78 77 14 79 9 10 19 11 80 38 28 15 72 13 0 9 0 14 74 14 75 14 76 14 77 14 78 10 7 76 12 14 79 9 10 19 11 81 10 7 39 6 13 9 19 1 82 73 39 161 13 0 13 2 14 14 15 83 19 4 16 45 84 13 10 19 1 85 45 86 10 0 39 8 13 0 19 1 87 38 1 43 1 10 10 45 88 13 11 19 1 82 16 53 39 46 13 11 19 1 82 12 15 89 14 90 14 75 14 91 15 72 10 2 6 2 12 14 92 14 77 14 93 77 14 74 14 75 14 79 14 94 14 95 15 96 19 16 97 38 54 13 1 19 1 98 12 13 11 19 1 99 12 19 2 100 12 15 89 14 90 14 75 14 91 15 72 10 2 6 2 12 14 92 14 77 14 93 77 14 74 14 75 14 79 14 94 14 95 15 96 19 16 101 45 102 13 0 13 1 33 103 18 2 43 1 43 1 43 1 43 1 38 29 15 104 14 91 10 6 6 1 12 14 76 14 77 14 92 14 77 14 93 15 105 14 106 15 107 19 11 108 43 1 43 5 29) #27# #1# 34444) clos::install-method)) #1# 34444) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #29=#A(t (23) (common-lisp-user::audio-event-ended ext::location (defun common-lisp-user::audio-event-ended) (#1# . 38340) ext::annotate :lambda-list (common-lisp-user::evt) common-lisp-user::evt common-lisp-user::aural-location common-lisp-user::buffer-read common-lisp-user::buffer-chunk common-lisp-user::id common-lisp-user::chunk-slot-value-fct common-lisp-user::ename eq common-lisp-user::offset common-lisp-user::set-chunk-slot-value-fct common-lisp-user::duration common-lisp-user::onset - common-lisp-user::ms->seconds #Y(common-lisp-user::audio-event-ended nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 16 13 0 15 11 19 2 12 12 13 1 19 1 13 17 14 73 39 41 13 0 15 15 13 1 19 1 15 12 19 3 16 13 0 15 17 13 1 19 1 15 12 13 1 19 1 18 12 19 2 19 12 19 1 20 12 19 3 16 43 1 29) #29# #1# 38340) si::fset)) #1# 38340) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 17 12 19 2 18 15 0 15 19 15 20 19 3 21 1 0 73 29) #30=#A(t (22) (common-lisp-user::find-sound-failure ext::location (defun common-lisp-user::find-sound-failure) (#1# . 38684) ext::annotate :lambda-list (common-lisp-user::audio common-lisp-user::stuffed) common-lisp-user::audio common-lisp-user::stuffed #:g13393 t #:g13394 (setf common-lisp-user::loc-failure) common-lisp-user::aural-location :ignore-if-full :requested common-lisp-user::set-buffer-failure #Y(common-lisp-user::find-sound-failure nil nil (24 45 7 24 45 8 26 10 1 45 9 11 10 45 11 13 0 13 1 33 12 18 2 43 1 43 1 15 13 14 14 14 10 14 15 10 0 76 12 19 5 16 75 73 29) #30# #1# 38684) si::fset function "function to indicate a failure in the trace and set the error flag" si::set-documentation)) #1# 38684) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::attend-sound ext::location (defgeneric common-lisp-user::attend-sound) (#1# . 38918) ext::annotate :lambda-list (common-lisp-user::aud-mod &key common-lisp-user::event) :delete-methods t :documentation "Shift auditory attention to the given sound event." ensure-generic-function)) #1# 38918) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 82 12 14 23 19 6 83 29) #31=#A(t (84) (common-lisp-user::attend-sound ext::location (defmethod common-lisp-user::attend-sound (common-lisp-user::aud-mod common-lisp-user::audio-module) &key common-lisp-user::event) (#1# . 39295) ext::annotate (common-lisp-user::audio-module) (common-lisp-user::aud-mod &key common-lisp-user::event) common-lisp-user::aud-mod (t :event) common-lisp-user::event common-lisp-user::exec-s common-lisp-user::busy eq common-lisp-user::printing-module common-lisp-user::get-module-fct #:g13423 #:g13422 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g13424 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* t *standard-output* eql #32="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::mp-models length > common-lisp-user::current-model "Auditory attention shift requested at ~S while one was already in progress." common-lisp-user::mp-time format finish-output #33="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #34="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::last-aural-request common-lisp-user::complete-request common-lisp-user::id common-lisp-user::chunk-slot-value-fct common-lisp-user::current-audicon :test common-lisp-user::x common-lisp-user::y common-lisp-user::ename #Y(nil nil nil (24 45 43 24 45 44 26 13 1 13 0 19 1 45 17 12 29) #31# #1# 39295) find common-lisp-user::s-event #:g13425 #:g13426 (setf common-lisp-user::attend-failure) :exec common-lisp-user::change-state #:g13427 #:g13428 (setf common-lisp-user::attended-p) #:g13429 #:g13430 (setf common-lisp-user::current-marker) common-lisp-user::offset common-lisp-user::duration common-lisp-user::audio-event-ended :module :audio :priority :output common-lisp-user::high :params :time-in-ms :details "~s ~s" common-lisp-user::schedule-event common-lisp-user::recode common-lisp-user::randomize-time-ms common-lisp-user::audio-encoding-complete :destination common-lisp-user::schedule-event-relative common-lisp-user::digit-recode-delay common-lisp-user::attend-sound-failure common-lisp-user::medium "attend-sound-failure" #Y(common-lisp-user::attend-sound nil nil (24 45 7 28 8 22 40 2 77 46 9 13 1 19 1 10 12 1 11 17 12 39 192 15 13 19 1 14 47 1 15 45 16 10 1 39 10 13 0 19 1 17 12 19 1 18 39 154 13 0 19 1 17 12 19 1 18 45 19 13 1 19 1 20 76 40 133 10 0 76 40 27 13 0 11 21 17 12 40 19 11 22 40 15 13 0 11 23 17 12 39 7 14 21 11 24 17 25 39 37 14 21 15 26 19 0 27 16 28 12 9 1 19 2 29 12 19 0 30 12 15 31 19 0 32 12 19 6 33 14 21 19 1 34 38 64 14 21 15 35 19 0 27 16 28 12 9 1 19 2 29 12 19 0 30 12 15 31 19 0 32 12 19 6 33 14 21 19 1 34 13 0 15 36 19 0 27 16 28 12 9 1 19 2 29 12 19 0 30 12 15 31 19 0 32 12 19 6 33 43 1 43 2 13 1 19 1 37 12 19 1 38 38 248 13 0 15 39 19 2 40 12 13 1 19 1 41 12 14 42 34 46 12 19 4 47 45 48 10 2 45 49 75 45 50 13 0 13 1 33 51 18 2 43 1 43 1 13 2 14 52 15 11 19 3 53 10 0 39 155 10 0 45 54 11 23 45 55 13 0 13 1 33 56 18 2 43 1 43 1 10 2 45 57 10 1 45 58 13 0 13 1 33 59 18 2 43 1 43 1 13 0 19 1 45 12 15 60 19 2 40 39 12 13 0 19 1 45 12 15 61 19 2 40 76 39 52 13 0 19 1 60 12 15 62 14 63 14 64 14 65 9 9 14 66 15 67 14 68 10 0 6 1 12 14 69 14 23 14 70 77 15 71 15 62 13 0 19 1 45 12 19 4 33 12 19 14 72 13 0 19 1 73 12 19 1 74 12 15 75 14 63 14 64 14 76 14 64 14 68 10 0 6 1 12 14 69 14 23 19 10 77 38 36 13 2 19 1 78 12 19 1 74 12 15 79 14 69 14 23 14 63 14 64 14 76 14 64 14 66 15 80 14 70 15 81 19 12 77 43 1 29) #31# #1# 39295) clos::install-method)) #1# 39295) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 15 0 15 21 15 22 19 3 23 1 0 73 29) #35=#A(t (24) (common-lisp-user::attend-sound-failure ext::location (defun common-lisp-user::attend-sound-failure) (#1# . 41631) ext::annotate :lambda-list (common-lisp-user::audio) common-lisp-user::audio #:g13433 t #:g13434 (setf common-lisp-user::attend-failure) common-lisp-user::aural common-lisp-user::set-buffer-failure :exec common-lisp-user::free common-lisp-user::change-state common-lisp-user::last-aural-request common-lisp-user::complete-request #Y(common-lisp-user::attend-sound-failure nil nil (24 45 7 26 10 0 45 8 11 9 45 10 13 0 13 1 33 11 18 2 43 1 43 1 15 12 19 1 13 13 0 14 14 15 15 19 3 16 13 0 19 1 17 12 19 1 18 29) #35# #1# 41631) si::fset function "Flag that an error occured" si::set-documentation)) #1# 41631) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::audio-encoding-complete ext::location (defgeneric common-lisp-user::audio-encoding-complete) (#1# . 41852) ext::annotate :lambda-list (common-lisp-user::aud-mod common-lisp-user::sevt) :delete-methods t :documentation "Put the sound into the aural buffer." ensure-generic-function)) #1# 41852) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 39 12 14 13 19 6 40 29) #36=#A(t (41) (common-lisp-user::audio-encoding-complete ext::location (defmethod common-lisp-user::audio-encoding-complete (common-lisp-user::aud-mod common-lisp-user::audio-module) (common-lisp-user::sevt common-lisp-user::sound-event)) (#1# . 41965) ext::annotate (common-lisp-user::audio-module common-lisp-user::sound-event) (common-lisp-user::aud-mod common-lisp-user::sevt) common-lisp-user::aud-mod common-lisp-user::sevt :exec common-lisp-user::free common-lisp-user::change-state #:g13441 t #:g13442 (setf common-lisp-user::attended-p) common-lisp-user::last-aural-request common-lisp-user::complete-request common-lisp-user::sname common-lisp-user::content common-lisp-user::kind common-lisp-user::event common-lisp-user::ename common-lisp-user::x :sound eq :both copy-list #Y(nil nil nil (24 45 23 26 10 0 4 12 11 24 17 25 40 9 10 0 4 12 11 26 17 25 73 39 6 10 0 5 16 27 29) #36# #1# 41965) common-lisp-user::other-features mapcan append common-lisp-user::mod-chunk-fct common-lisp-user::aural :time-in-ms :module :audio common-lisp-user::schedule-set-buffer-chunk common-lisp-user::set-attended #Y(common-lisp-user::audio-encoding-complete nil nil (24 45 7 24 45 8 26 13 1 14 9 15 10 19 3 11 10 0 45 12 11 13 45 14 13 0 13 1 33 15 18 2 43 1 43 1 13 1 19 1 16 12 19 1 17 13 0 19 1 18 12 15 19 13 0 19 1 19 12 15 20 13 0 19 1 20 12 15 21 13 0 19 1 22 6 6 12 34 28 12 13 0 19 1 29 12 19 2 30 12 19 2 31 12 19 2 32 15 33 13 0 19 1 18 12 9 0 14 34 14 13 14 35 14 36 19 7 37 13 1 13 0 19 1 18 12 19 2 38 29) #36# #1# 41965) clos::install-method)) #1# 41965) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 15 12 14 16 19 6 17 29) #37=#A(t (18) (common-lisp-user::clear ext::location (defmethod common-lisp-user::clear :after (common-lisp-user::aud-mod common-lisp-user::audio-module)) (#1# . 42812) ext::annotate (:after) (common-lisp-user::audio-module) (common-lisp-user::aud-mod) common-lisp-user::aud-mod #:g13455 #:g13456 (setf common-lisp-user::loc-failure) #:g13457 #:g13458 (setf common-lisp-user::attend-failure) #Y(common-lisp-user::clear nil nil (24 45 8 26 10 0 45 9 75 45 10 13 0 13 1 33 11 18 2 43 1 43 1 10 0 45 12 75 45 13 13 0 13 1 33 14 18 2 43 1 43 1 29) #37# #1# 42812) t clos::install-method)) #1# 42812) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::purge-old-sounds ext::location (defgeneric common-lisp-user::purge-old-sounds) (#1# . 42936) ext::annotate :lambda-list (common-lisp-user::aud-mod) :delete-methods t :documentation "Removes sounds that have decayed from the audicon but can't delete corresponding event chunks" ensure-generic-function)) #1# 42936) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 25 12 14 26 19 6 27 29) #38=#A(t (28) (common-lisp-user::purge-old-sounds ext::location (defmethod common-lisp-user::purge-old-sounds (common-lisp-user::aud-mod common-lisp-user::audio-module)) (#1# . 43279) ext::annotate (common-lisp-user::audio-module) (common-lisp-user::aud-mod) common-lisp-user::aud-mod common-lisp-user::new-audicon #:g13477 common-lisp-user::audicon si::%dolist-var common-lisp-user::e common-lisp-user::offset common-lisp-user::decay-time + common-lisp-user::mp-time-ms < common-lisp-user::sname common-lisp-user::chunk-p-fct common-lisp-user::delete-chunk-fct #:g13482 nconc #:g13478 (setf common-lisp-user::audicon) #Y(common-lisp-user::purge-old-sounds nil nil (24 45 7 26 75 45 8 10 1 45 9 13 2 19 1 10 45 11 75 45 12 38 75 10 1 4 51 0 13 0 19 1 13 12 13 4 19 1 14 12 19 2 15 12 19 0 16 12 19 2 17 39 23 13 0 19 1 18 12 19 1 19 39 10 13 0 19 1 18 12 19 1 20 38 18 10 0 6 1 45 21 13 4 13 0 19 2 22 51 4 43 1 10 1 5 51 1 10 1 40 -77 75 51 0 10 3 43 2 45 23 13 0 13 1 33 24 18 2 43 1 43 1 43 1 29) #38# #1# 43279) t clos::install-method)) #1# 43279) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::current-audicon ext::location (defgeneric common-lisp-user::current-audicon) (#1# . 43744) ext::annotate :lambda-list (common-lisp-user::aud-mod) :delete-methods t :documentation "Returns the audicon, assuming all events that currently exist are in there." ensure-generic-function)) #1# 43744) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #39=#A(t (19) (common-lisp-user::current-audicon ext::location (defmethod common-lisp-user::current-audicon (common-lisp-user::aud-mod common-lisp-user::audio-module)) (#1# . 43882) ext::annotate (common-lisp-user::audio-module) (common-lisp-user::aud-mod) common-lisp-user::aud-mod common-lisp-user::purge-old-sounds common-lisp-user::x common-lisp-user::onset common-lisp-user::mp-time-ms > #Y(nil nil nil (24 45 9 26 13 0 19 1 10 12 19 0 11 12 19 2 12 29) #39# #1# 43882) common-lisp-user::audicon remove-if #Y(common-lisp-user::current-audicon nil nil (24 45 7 26 13 0 19 1 8 34 13 12 13 0 19 1 14 12 19 2 15 29) #39# #1# 43882) t clos::install-method)) #1# 43882) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::detectable-audicon ext::location (defgeneric common-lisp-user::detectable-audicon) (#1# . 44037) ext::annotate :lambda-list (common-lisp-user::aud-mod) :delete-methods t :documentation "Returns the audicon, but only those events that are currently detectable." ensure-generic-function)) #1# 44037) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 14 12 14 15 19 6 16 29) #40=#A(t (17) (common-lisp-user::detectable-audicon ext::location (defmethod common-lisp-user::detectable-audicon (common-lisp-user::aud-mod common-lisp-user::audio-module)) (#1# . 44177) ext::annotate (common-lisp-user::audio-module) (common-lisp-user::aud-mod) common-lisp-user::aud-mod common-lisp-user::purge-old-sounds common-lisp-user::x common-lisp-user::detectable-p #Y(nil nil nil (24 45 9 26 13 0 19 1 10 76 73 29) #40# #1# 44177) common-lisp-user::audicon remove-if #Y(common-lisp-user::detectable-audicon nil nil (24 45 7 26 13 0 19 1 8 34 11 12 13 0 19 1 12 12 19 2 13 29) #40# #1# 44177) t clos::install-method)) #1# 44177) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 37 12 19 2 38 1 0 73 29) #41=#A(t (39) (common-lisp-user::reset-audio-module ext::location (defun common-lisp-user::reset-audio-module) (#1# . 44331) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance common-lisp-user::reset-pm-module (common-lisp-user::audio-event common-lisp-user::onset common-lisp-user::offset common-lisp-user::duration common-lisp-user::pitch common-lisp-user::kind common-lisp-user::location common-lisp-user::id) common-lisp-user::chunk-type-fct ((common-lisp-user::set-audloc-default (:include common-lisp-user::audio-event)) (common-lisp-user::set-audloc-default t)) (common-lisp-user::sound common-lisp-user::kind common-lisp-user::content common-lisp-user::event) #:g13493 #:g13494 (setf common-lisp-user::audicon) #:g13495 #:g13496 (setf common-lisp-user::loc-failure) #:g13497 #:g13498 (setf common-lisp-user::attend-failure) #:g13499 #:g13500 (setf common-lisp-user::last-aural-request) (common-lisp-user::digit common-lisp-user::speech common-lisp-user::tone common-lisp-user::word common-lisp-user::highest common-lisp-user::lowest common-lisp-user::sound common-lisp-user::find-sound common-lisp-user::set-audloc-default common-lisp-user::internal common-lisp-user::external common-lisp-user::self common-lisp-user::high common-lisp-user::middle common-lisp-user::low) si::%dolist-var common-lisp-user::c common-lisp-user::chunk-p-fct common-lisp-user::name common-lisp-user::define-chunks-fct common-lisp-user::make-chunk-immutable #:g13501 (:attended nil) common-lisp-user::define-chunk-spec-fct #:g13502 (setf common-lisp-user::default-spec) #Y(common-lisp-user::reset-audio-module nil nil (24 45 7 26 13 0 19 1 8 15 9 19 1 10 15 11 19 1 10 15 12 19 1 10 10 0 45 13 75 45 14 13 0 13 1 33 15 18 2 43 1 43 1 10 0 45 16 75 45 17 13 0 13 1 33 18 18 2 43 1 43 1 10 0 45 19 75 45 20 13 0 13 1 33 21 18 2 43 1 43 1 10 0 45 22 75 45 23 13 0 13 1 33 24 18 2 43 1 43 1 1 25 45 26 75 45 27 38 38 10 1 4 51 0 13 0 19 1 28 76 39 20 13 0 15 29 10 0 6 3 6 1 12 19 1 30 13 0 19 1 31 10 1 5 51 1 10 1 40 -40 43 2 10 0 45 32 15 33 19 1 34 45 35 13 0 13 1 33 36 18 2 43 1 43 1 29) #41# #1# 44331) si::fset)) #1# 44331) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 68 12 19 2 69 1 0 73 29) #42=#A(t (70) (common-lisp-user::query-audio-module ext::location (defun common-lisp-user::query-audio-module) (#1# . 45261) ext::annotate :lambda-list (common-lisp-user::aud-mod common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value) common-lisp-user::aud-mod common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value common-lisp-user::aural (common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor common-lisp-user::modality) member common-lisp-user::generic-state-query common-lisp-user::state common-lisp-user::busy common-lisp-user::mode-s eq common-lisp-user::free error common-lisp-user::attend-failure *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid query made of the ~S buffer with slot ~S and value ~S" format finish-output "Invalid query made of the ~S buffer with slot ~S and value ~S" common-lisp-user::aural-location t common-lisp-user::loc-failure common-lisp-user::printing-module common-lisp-user::get-module-fct #:g13507 #:g13506 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g13508 common-lisp-user::printing-module-model-warnings common-lisp-user::*one-stream-hack* *standard-output* eql #32# "Invalid query made of the ~S buffer with slot ~S and value ~S" #33# #34# common-lisp-user::attended common-lisp-user::buffer-read common-lisp-user::it common-lisp-user::id common-lisp-user::chunk-slot-value-fct common-lisp-user::audicon :test common-lisp-user::x common-lisp-user::y common-lisp-user::ename #Y(nil nil nil (24 45 58 24 45 59 26 13 1 13 0 19 1 60 17 18 29) #42# #1# 45261) find common-lisp-user::s-event common-lisp-user::attended-p common-lisp-user::finished #Y(nil nil nil (24 45 58 24 45 59 26 13 1 13 0 19 1 60 17 18 29) #42# #1# 45261) common-lisp-user::finished-p #Y(common-lisp-user::query-audio-module nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 2 42 11 164 13 1 15 12 19 2 13 39 14 13 3 13 2 13 1 13 0 19 4 14 38 140 10 1 42 15 90 10 0 42 16 13 13 3 19 1 17 12 1 16 17 18 38 71 42 19 13 13 3 19 1 17 12 1 19 17 18 38 56 42 20 8 13 3 19 1 21 38 46 14 22 15 23 19 0 24 73 39 12 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 2 13 1 13 0 19 8 30 12 14 22 19 1 31 22 73 38 46 14 22 15 23 19 0 24 73 39 12 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 32 13 2 13 1 13 0 19 8 30 12 14 22 19 1 31 22 73 38 357 42 33 352 10 1 42 15 219 10 0 42 16 5 75 73 38 208 42 19 6 11 34 73 38 200 42 20 8 13 3 19 1 35 38 190 15 36 19 1 37 47 1 38 45 39 10 1 39 10 13 0 19 1 40 12 19 1 41 73 39 162 13 0 19 1 40 12 19 1 41 45 42 13 1 19 1 43 76 40 139 10 0 76 40 27 13 0 11 22 17 18 40 19 11 44 40 15 13 0 11 34 17 18 39 7 14 22 11 45 17 46 39 39 14 22 15 47 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 48 13 5 13 4 13 3 19 8 30 14 22 19 1 31 38 68 14 22 15 49 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 48 13 5 13 4 13 3 19 8 30 14 22 19 1 31 13 0 15 50 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 48 13 5 13 4 13 3 19 8 30 75 73 43 1 43 2 38 127 42 51 60 15 33 19 1 52 45 53 10 0 39 43 13 0 15 54 19 2 55 12 13 4 19 1 56 12 14 57 34 61 12 19 4 62 45 63 10 0 73 39 10 13 2 13 0 19 1 64 17 18 43 1 38 3 75 73 43 1 38 65 42 65 60 15 33 19 1 52 45 53 10 0 39 43 13 0 15 54 19 2 55 12 13 4 19 1 56 12 14 57 34 66 12 19 4 62 45 63 10 0 73 39 10 13 2 13 0 19 1 67 17 18 43 1 38 3 75 73 43 1 38 3 75 73 38 3 75 73 29) #42# #1# 45261) si::fset)) #1# 45261) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #43=#A(t (19) (common-lisp-user::pm-module-last-cmd-name ext::location (defmethod common-lisp-user::pm-module-last-cmd-name (common-lisp-user::aud-mod common-lisp-user::audio-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 46937) ext::annotate (common-lisp-user::audio-module t t) (common-lisp-user::aud-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::aud-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::aural-location common-lisp-user::set-audloc-default common-lisp-user::chunk-spec-slot-spec common-lisp-user::find-sound common-lisp-user::aural common-lisp-user::sound #Y(common-lisp-user::pm-module-last-cmd-name nil nil (24 45 7 24 45 8 24 45 9 26 10 1 42 10 20 13 0 15 11 19 2 12 39 6 1 11 73 38 4 1 13 73 38 11 42 14 6 1 15 73 38 3 75 73 29) #43# #1# 46937) t clos::install-method)) #1# 46937) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 65 12 14 66 19 6 67 29) #44=#A(t (68) (common-lisp-user::pm-module-request ext::location (defmethod common-lisp-user::pm-module-request (common-lisp-user::aud-mod common-lisp-user::audio-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 47239) ext::annotate (common-lisp-user::audio-module t t) (common-lisp-user::aud-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::aud-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::aural common-lisp-user::test-for-clear-request common-lisp-user::clear :module :audio :destination :output common-lisp-user::medium common-lisp-user::schedule-event-now common-lisp-user::event common-lisp-user::chunk-spec-slot-spec common-lisp-user::event-spec length = common-lisp-user::spec-slot-op eq common-lisp-user::spec-slot-value common-lisp-user::chunk-p-fct #:g13515 #:g13516 (setf common-lisp-user::last-aural-request) common-lisp-user::attend-sound :params :event :details " " common-lisp-user::mkstr common-lisp-user::complete-request *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Invalid command to the aural buffer does not describe a valid action" format finish-output common-lisp-user::aural-location :attended ":attended specification only allowed once in an aural-location request." :finished ":finished specification only allowed once in an aural-location request." common-lisp-user::set-audloc-default common-lisp-user::specs common-lisp-user::spec "set-audloc-default slot can only be specified once in an aural-location request." "set-audloc-default slot must use the = test in an aural-location request." common-lisp-user::set-audloc-default-fct append common-lisp-user::x common-lisp-user::spec-slot-name #Y(nil nil nil (24 45 59 26 13 0 19 1 60 12 1 52 17 25 29) #44# #1# 47239) remove-if apply common-lisp-user::find-sound #Y(common-lisp-user::pm-module-request nil nil (24 45 7 24 45 8 24 45 9 26 10 1 42 10 193 13 0 19 1 11 39 20 15 12 14 13 14 14 14 15 14 14 14 16 15 17 19 7 18 38 165 13 0 15 19 19 2 20 45 21 10 0 16 22 12 9 1 19 2 23 39 25 15 23 10 0 4 12 19 1 24 17 25 39 12 10 0 4 12 19 1 26 12 19 1 27 39 72 10 3 45 28 10 2 45 29 13 0 13 1 33 30 18 2 43 1 43 1 15 31 14 32 14 33 10 0 4 12 19 1 26 6 2 12 14 13 14 14 14 15 14 14 14 34 15 31 15 35 10 0 4 12 19 1 26 12 19 3 36 12 14 16 15 17 19 11 18 38 45 13 1 19 1 37 14 38 15 39 19 0 40 73 39 12 19 0 41 16 22 12 9 1 19 2 42 12 19 0 43 12 15 44 19 5 45 12 14 38 19 1 46 22 73 43 1 38 333 42 47 328 13 0 14 48 19 2 20 16 22 12 9 1 19 2 42 39 42 14 38 15 39 19 0 40 73 39 12 19 0 41 16 22 12 9 1 19 2 42 12 19 0 43 12 15 49 19 5 45 12 14 38 19 1 46 22 73 38 268 13 0 14 50 19 2 20 16 22 12 9 1 19 2 42 39 42 14 38 15 39 19 0 40 73 39 12 19 0 41 16 22 12 9 1 19 2 42 12 19 0 43 12 15 51 19 5 45 12 14 38 19 1 46 22 73 38 210 13 0 15 52 19 2 20 39 169 13 0 15 52 19 2 20 45 53 10 0 4 45 54 10 1 16 22 12 9 1 19 2 42 39 42 14 38 15 39 19 0 40 73 39 12 19 0 41 16 22 12 9 1 19 2 42 12 19 0 43 12 15 55 19 5 45 12 14 38 19 1 46 22 73 38 98 15 23 13 0 19 1 24 17 25 76 39 42 14 38 15 39 19 0 40 73 39 12 19 0 41 16 22 12 9 1 19 2 42 12 19 0 43 12 15 56 19 5 45 12 14 38 19 1 46 22 73 38 45 15 57 14 32 15 58 34 61 12 13 2 19 1 20 12 19 2 62 12 19 2 63 6 1 12 14 16 15 17 14 13 14 14 14 34 15 52 19 1 36 12 19 9 18 43 2 38 33 15 64 14 13 14 14 14 16 15 17 14 15 14 14 14 34 15 64 19 1 36 12 14 32 10 0 6 1 12 19 11 18 38 3 75 73 29) #44# #1# 47239) t clos::install-method)) #1# 47239) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 54 12 19 2 55 1 0 73 29) #45=#A(t (56) (common-lisp-user::params-audio-module ext::location (defun common-lisp-user::params-audio-module) (#1# . 50022) ext::annotate :lambda-list (common-lisp-user::aud-mod common-lisp-user::param) common-lisp-user::aud-mod common-lisp-user::param consp :digit-detect-delay #:g13533 common-lisp-user::sgp common-lisp-user::safe-seconds->ms #:g13534 (setf common-lisp-user::digit-detect-delay) :digit-duration #:g13535 #:g13536 (setf common-lisp-user::digit-duration) :digit-recode-delay #:g13537 #:g13538 (setf common-lisp-user::digit-recode-delay) :sound-decay-time #:g13539 #:g13540 (setf common-lisp-user::decay-time) :tone-detect-delay #:g13541 #:g13542 (setf common-lisp-user::tone-detect-delay) :tone-recode-delay #:g13543 #:g13544 (setf common-lisp-user::tone-recode-delay) :unstuff-aural-location #:g13545 numberp #:g13546 (setf common-lisp-user::unstuff-loc) :overstuff-aural-location #:g13547 #:g13548 (setf common-lisp-user::overstuff-loc) common-lisp-user::digit-detect-delay common-lisp-user::ms->seconds common-lisp-user::digit-duration common-lisp-user::digit-recode-delay common-lisp-user::decay-time common-lisp-user::tone-detect-delay common-lisp-user::tone-recode-delay common-lisp-user::unstuff-loc common-lisp-user::overstuff-loc #Y(common-lisp-user::params-audio-module nil nil (24 45 7 24 45 8 26 10 0 16 9 39 296 10 0 4 42 10 34 10 1 45 11 10 1 5 12 15 12 19 2 13 45 14 13 0 13 1 33 15 18 2 43 1 43 1 10 0 5 73 38 255 42 16 34 10 1 45 17 10 1 5 12 15 12 19 2 13 45 18 13 0 13 1 33 19 18 2 43 1 43 1 10 0 5 73 38 219 42 20 34 10 1 45 21 10 1 5 12 15 12 19 2 13 45 22 13 0 13 1 33 23 18 2 43 1 43 1 10 0 5 73 38 183 42 24 34 10 1 45 25 10 1 5 12 15 12 19 2 13 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 0 5 73 38 147 42 28 34 10 1 45 29 10 1 5 12 15 12 19 2 13 45 30 13 0 13 1 33 31 18 2 43 1 43 1 10 0 5 73 38 111 42 32 34 10 1 45 33 10 1 5 12 15 12 19 2 13 45 34 13 0 13 1 33 35 18 2 43 1 43 1 10 0 5 73 38 75 42 36 44 10 1 45 37 10 1 5 16 38 39 10 10 1 5 12 19 1 13 38 4 10 1 5 45 39 13 0 13 1 33 40 18 2 43 1 43 1 10 0 5 73 38 29 42 41 24 10 1 45 42 10 1 5 45 43 13 0 13 1 33 44 18 2 43 1 43 1 38 3 75 73 38 129 10 0 42 10 12 13 1 19 1 45 12 19 1 46 38 113 42 16 12 13 1 19 1 47 12 19 1 46 38 99 42 20 12 13 1 19 1 48 12 19 1 46 38 85 42 24 12 13 1 19 1 49 12 19 1 46 38 71 42 28 12 13 1 19 1 50 12 19 1 46 38 57 42 32 12 13 1 19 1 51 12 19 1 46 38 43 42 36 28 13 1 19 1 52 16 38 39 12 13 1 19 1 52 12 19 1 46 38 6 13 1 19 1 52 38 13 42 41 8 13 1 19 1 53 38 3 75 73 29) #45# #1# 50022) si::fset)) #1# 50022) #Y(si::bytecodes nil nil (14 0 15 1 14 2 15 3 14 4 15 5 14 6 1 31 12 19 7 32 12 15 33 14 4 15 34 14 6 1 36 12 14 37 14 38 19 7 32 6 2 12 14 39 14 40 15 41 14 42 15 43 14 44 15 45 14 46 15 47 19 9 48 12 14 49 14 40 15 41 14 42 15 50 14 44 15 51 14 46 15 52 19 9 48 12 14 53 14 40 15 41 14 42 15 54 14 44 15 55 14 46 15 56 19 9 48 12 14 57 14 40 15 41 14 42 15 58 14 44 15 59 14 46 15 60 19 9 48 12 14 61 14 40 15 41 14 42 15 62 14 44 15 63 14 46 15 64 19 9 48 12 14 65 14 40 15 41 14 42 15 66 14 44 15 67 14 46 15 68 19 9 48 12 14 69 14 40 1 73 12 14 42 77 14 44 15 74 14 46 15 75 19 9 48 12 14 76 14 40 15 71 14 42 14 38 14 44 15 77 14 46 15 78 19 9 48 6 8 12 14 79 15 80 14 46 15 81 14 82 1 85 12 14 86 33 87 12 14 88 33 89 12 14 90 33 91 12 14 92 33 93 12 19 17 94 29) #46=#A(t (95) (:audio common-lisp-user::aural-location :request-params (:attended :finished) :queries (common-lisp-user::attended common-lisp-user::finished) :status-fn common-lisp-user::printing-module common-lisp-user::get-module-fct #:g13550 #:g13549 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #47="~&~@?~%" "  attended nil          : ~S" (common-lisp-user::attended nil) common-lisp-user::query-buffer format #:g13552 #:g13551 "  attended t            : ~S" (common-lisp-user::attended t) #:g13554 #:g13553 "  finished nil          : ~S" (common-lisp-user::finished nil) #:g13556 #:g13555 "  finished t            : ~S" (common-lisp-user::finished t) #Y(nil nil nil (26 15 7 19 1 8 47 1 9 45 10 10 1 39 18 13 0 19 1 11 76 39 10 13 0 19 1 12 12 19 1 13 39 26 13 0 19 1 12 12 19 1 13 12 15 14 15 15 15 1 15 16 19 2 17 12 19 4 18 43 2 15 7 19 1 8 47 1 19 45 20 10 1 39 18 13 0 19 1 11 76 39 10 13 0 19 1 12 12 19 1 13 39 26 13 0 19 1 12 12 19 1 13 12 15 14 15 21 15 1 15 22 19 2 17 12 19 4 18 43 2 15 7 19 1 8 47 1 23 45 24 10 1 39 18 13 0 19 1 11 76 39 10 13 0 19 1 12 12 19 1 13 39 26 13 0 19 1 12 12 19 1 13 12 15 14 15 25 15 1 15 26 19 2 17 12 19 4 18 43 2 15 7 19 1 8 47 1 27 45 28 10 1 39 18 13 0 19 1 11 76 39 10 13 0 19 1 12 12 19 1 13 73 39 26 13 0 19 1 12 12 19 1 13 12 15 14 15 29 15 1 15 30 19 2 17 12 19 4 18 43 2 29) #46# #1# 51819) common-lisp-user::define-buffer-fct common-lisp-user::aural (common-lisp-user::modality common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor) common-lisp-user::print-module-status #Y(nil nil nil (26 15 0 19 1 8 12 19 1 35 29) #46# #1# 51819) :trackable t :digit-detect-delay :valid-test common-lisp-user::nonneg :default-value 0.3 :warning "a non-negative number" :documentation "Lag between onset and detectability for digits" common-lisp-user::define-parameter :digit-duration 0.6 "a non-negative number" "Default duration for digit sounds." :digit-recode-delay 0.5 "a non-negative number" "Recoding delay for digit sound content." :sound-decay-time 3.0 "a non-negative number" "The amount of time after a sound has finished it takes for the sound to be deleted from the audicon" :tone-detect-delay 0.05 "a non-negative number" "Lag between sound onset and detectability for tones" :tone-recode-delay 0.285 "a non-negative number" "Recoding delay for tone sound content." :unstuff-aural-location common-lisp-user::x common-lisp-user::tornil numberp #Y(nil nil nil (24 45 70 26 13 0 19 1 71 73 40 5 10 0 16 72 29) #46# #1# 51819) "T, NIL, or a number" "Whether chunks stuffed into the aural-location buffer should be automatically cleared by the module if unused" :overstuff-aural-location "T or nil" "Whether a chunk previously stuffed into the aural-location buffer can be overwritten by a new chunk to be stuffed" :version "4.0" "A module which gives the model an auditory attentional system" :creation common-lisp-user::audio-module make-instance #Y(nil nil nil (24 45 70 26 15 83 19 1 84 29) #46# #1# 51819) :reset common-lisp-user::reset-audio-module :query common-lisp-user::query-audio-module :request common-lisp-user::pm-module-request :params common-lisp-user::params-audio-module common-lisp-user::define-module-fct)) #1# 51819) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 39 12 19 2 40 1 0 73 29) #48=#A(t (41) (common-lisp-user::print-audicon ext::location (defun common-lisp-user::print-audicon) (#1# . 54805) ext::annotate :lambda-list :audio common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::printing-module #:g13562 #:g13561 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #47# "Sound event    Att  Detectable  Kind           Content           location     onset     offset  Sound ID" format #:g13564 #:g13563 "-----------    ---  ----------  -------------  ----------------  --------     -----     ------  --------" common-lisp-user::current-audicon copy-list < :key common-lisp-user::onset sort si::%dolist-var common-lisp-user::x common-lisp-user::print-audio-feature *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No audio module found" finish-output #Y(common-lisp-user::print-audicon nil nil (26 15 6 19 1 7 45 8 10 0 39 155 15 9 19 1 7 47 1 10 45 11 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 18 13 0 19 1 13 12 19 1 14 12 15 15 15 16 19 3 17 43 2 15 9 19 1 7 47 1 18 45 19 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 18 13 0 19 1 13 12 19 1 14 12 15 15 15 20 19 3 17 43 2 13 0 19 1 21 16 22 12 33 23 12 14 24 15 25 19 4 26 45 27 75 45 28 38 16 10 1 4 51 0 13 0 19 1 29 10 1 5 51 1 10 1 40 -18 75 73 43 2 38 40 14 30 15 31 19 0 32 73 39 12 19 0 33 16 34 12 9 1 19 2 35 12 19 0 36 12 15 37 19 5 17 12 14 30 19 1 38 22 73 43 1 29) #48# #1# 54805) si::fset)) #1# 54805) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::print-audio-feature ext::location (defgeneric common-lisp-user::print-audio-feature) (#1# . 55460) ext::annotate :lambda-list (common-lisp-user::feat) :delete-methods t :documentation "Print out an ASCII representation of the audicon." ensure-generic-function)) #1# 55460) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 27 12 14 28 19 6 29 29) #49=#A(t (30) (common-lisp-user::print-audio-feature ext::location (defmethod common-lisp-user::print-audio-feature (common-lisp-user::feat common-lisp-user::sound-event)) (#1# . 55573) ext::annotate (common-lisp-user::sound-event) (common-lisp-user::feat) common-lisp-user::feat common-lisp-user::printing-module common-lisp-user::get-module-fct #:g13572 #:g13571 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #47# "~15a~5A~12A~15A~18s~10s~8d   ~8d  ~a" common-lisp-user::ename common-lisp-user::attended-p common-lisp-user::detectable-p common-lisp-user::kind common-lisp-user::content common-lisp-user::location common-lisp-user::onset common-lisp-user::offset common-lisp-user::sname format #Y(common-lisp-user::print-audio-feature nil nil (24 45 7 26 15 8 19 1 9 47 1 10 45 11 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 73 39 72 13 0 19 1 13 12 19 1 14 12 15 15 15 16 13 2 19 1 17 12 13 2 19 1 18 12 13 2 19 1 19 12 13 2 19 1 20 12 13 2 19 1 21 12 13 2 19 1 22 12 13 2 19 1 23 12 13 2 19 1 24 12 13 2 19 1 25 12 19 12 26 43 2 29) #49# #1# 55573) t clos::install-method)) #1# 55573) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 15 0 15 16 15 17 19 3 18 1 0 73 29) #50=#A(t (19) (common-lisp-user::set-audloc-default ext::location (defmacro common-lisp-user::set-audloc-default) (#1# . 55981) ext::annotate :lambda-list (&rest common-lisp-user::params) #:g13574 #:g13573 #:g13575 common-lisp-user::params common-lisp-user::set-audloc-default-fct quote #Y(common-lisp-user::set-audloc-default nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #50# #1# 55981) t si::fset function "Macro to set the default specification for aural location buffer stuffing." si::set-documentation)) #1# 55981) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 40 12 19 2 41 15 0 15 42 15 43 19 3 44 1 0 73 29) #51=#A(t (45) (common-lisp-user::set-audloc-default-fct ext::location (defun common-lisp-user::set-audloc-default-fct) (#1# . 56143) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #21# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No current meta-process.  Cannot set audloc defaults." format finish-output common-lisp-user::meta-p-current-model "No current model.  Cannot set audloc defaults." :audio common-lisp-user::get-module-fct common-lisp-user::it common-lisp-user::define-chunk-spec-fct common-lisp-user::spec :attended common-lisp-user::chunk-spec-slot-spec common-lisp-user::attended :finished common-lisp-user::finished "The :attended and :finished specification for set-audloc-default can only be specified at most once." "Audloc defaults not changed." #:g13578 #:g13579 (setf common-lisp-user::default-spec) t "Invalid chunk specification.  Default audloc not changed." "No audio module found.  Cannot set audloc defaults." #Y(common-lisp-user::set-audloc-default-fct nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 312 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 259 15 22 19 1 23 45 24 10 0 39 207 13 1 19 1 25 45 26 10 0 39 8 13 0 14 27 19 2 28 45 29 10 1 39 8 13 1 14 30 19 2 28 45 31 10 1 16 14 12 9 1 19 2 15 40 11 10 0 16 14 12 9 1 19 2 15 39 78 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 32 19 5 18 14 10 19 1 19 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 33 19 5 18 12 14 10 19 1 19 22 73 38 69 10 2 39 26 10 3 45 34 10 3 45 35 13 0 13 1 33 36 18 2 43 1 43 1 11 37 73 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 38 19 5 18 12 14 10 19 1 19 22 73 43 3 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 39 19 5 18 12 14 10 19 1 19 22 73 43 1 29) #51# #1# 56143) si::fset function "Function to set the default specification for aural location buffer stuffing." si::set-documentation)) #1# 56143))
