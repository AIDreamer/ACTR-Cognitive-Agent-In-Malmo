(#Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("CENTRAL-PARAMETERS" *modules* :test string= member "ACT-R-support:central-parameters" translate-logical-pathname common-lisp-user::compile-and-load)) #1=#P"C:/Users/Son Pham/Desktop/actr7/core-modules/declarative-memory.lisp" 0) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 8 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 30 78 26 15 12 1 28 12 19 2 29 1 0 73 29) #2=#A(t (31) (common-lisp-user::last-request "LAST-REQUEST-" (time common-lisp-user::spec common-lisp-user::finst common-lisp-user::finst-chunks common-lisp-user::best common-lisp-user::matches common-lisp-user::rt common-lisp-user::invalid) ((time nil t nil 0 nil) (common-lisp-user::spec nil t nil 1 nil) (common-lisp-user::finst nil t nil 2 nil) (common-lisp-user::finst-chunks nil t nil 3 nil) (common-lisp-user::best nil t nil 4 nil) (common-lisp-user::matches nil t nil 5 nil) (common-lisp-user::rt nil t nil 6 nil) (common-lisp-user::invalid nil t nil 7 nil)) common-lisp-user::copy-last-request (common-lisp-user::make-last-request) common-lisp-user::last-request-p si::define-structure ext::location (defstruct common-lisp-user::last-request) (#1# . 26756) ext::annotate common-lisp-user::make-last-request (defun common-lisp-user::make-last-request) (#1# . 26756) :lambda-list (&key #3=#:time #4=#:spec #5=#:finst #6=#:finst-chunks #7=#:best #8=#:matches #9=#:rt #10=#:invalid) (nil :invalid :rt :matches :best :finst-chunks :finst :spec :time) #3# #4# #5# #6# #7# #8# #9# #10# 0 si::make-structure #Y(common-lisp-user::make-last-request nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 15 26 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 9 27 29) #2# #1# 26756) si::fset find-class)) #1# 26756) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 46 77 15 6 15 7 19 15 8 15 0 15 9 15 10 15 11 19 4 12 15 13 15 9 15 14 15 15 19 4 12 15 13 14 16 77 15 17 19 4 12 15 0 19 1 69 78 65 15 13 1 67 12 19 2 68 1 0 73 29) #11=#A(t (70) (common-lisp-user::dm "DM-" (#12="an instance of the declarative memory module" common-lisp-user::chunks (common-lisp-user::busy nil) (common-lisp-user::failed nil) common-lisp-user::esc common-lisp-user::er common-lisp-user::ol common-lisp-user::blc common-lisp-user::ans common-lisp-user::pas common-lisp-user::lf common-lisp-user::le common-lisp-user::mp common-lisp-user::ms common-lisp-user::md common-lisp-user::rt common-lisp-user::bll common-lisp-user::mas common-lisp-user::sa common-lisp-user::act common-lisp-user::num-finsts common-lisp-user::finst-span common-lisp-user::finsts common-lisp-user::sim-hook common-lisp-user::sji-hook common-lisp-user::w-hook common-lisp-user::bl-hook common-lisp-user::spreading-hook common-lisp-user::partial-matching-hook common-lisp-user::noise-hook common-lisp-user::offsets common-lisp-user::retrieval-request-hook common-lisp-user::retrieval-set-hook common-lisp-user::retrieved-chunk-hook common-lisp-user::chunk-merge-hook common-lisp-user::chunk-add-hook common-lisp-user::chunk-hash-table common-lisp-user::sact common-lisp-user::trace-table common-lisp-user::current-trace common-lisp-user::current-sact-chunk common-lisp-user::stuff common-lisp-user::stuff-event common-lisp-user::nsji common-lisp-user::last-request common-lisp-user::act-scale common-lisp-user::pending-request) ((common-lisp-user::chunks nil t nil 0 nil) (common-lisp-user::busy nil t nil 1 nil) (common-lisp-user::failed nil t nil 2 nil) (common-lisp-user::esc nil t nil 3 nil) (common-lisp-user::er nil t nil 4 nil) (common-lisp-user::ol nil t nil 5 nil) (common-lisp-user::blc nil t nil 6 nil) (common-lisp-user::ans nil t nil 7 nil) (common-lisp-user::pas nil t nil 8 nil) (common-lisp-user::lf nil t nil 9 nil) (common-lisp-user::le nil t nil 10 nil) (common-lisp-user::mp nil t nil 11 nil) (common-lisp-user::ms nil t nil 12 nil) (common-lisp-user::md nil t nil 13 nil) (common-lisp-user::rt nil t nil 14 nil) (common-lisp-user::bll nil t nil 15 nil) (common-lisp-user::mas nil t nil 16 nil) (common-lisp-user::sa nil t nil 17 nil) (common-lisp-user::act nil t nil 18 nil) (common-lisp-user::num-finsts nil t nil 19 nil) (common-lisp-user::finst-span nil t nil 20 nil) (common-lisp-user::finsts nil t nil 21 nil) (common-lisp-user::sim-hook nil t nil 22 nil) (common-lisp-user::sji-hook nil t nil 23 nil) (common-lisp-user::w-hook nil t nil 24 nil) (common-lisp-user::bl-hook nil t nil 25 nil) (common-lisp-user::spreading-hook nil t nil 26 nil) (common-lisp-user::partial-matching-hook nil t nil 27 nil) (common-lisp-user::noise-hook nil t nil 28 nil) (common-lisp-user::offsets nil t nil 29 nil) (common-lisp-user::retrieval-request-hook nil t nil 30 nil) (common-lisp-user::retrieval-set-hook nil t nil 31 nil) (common-lisp-user::retrieved-chunk-hook nil t nil 32 nil) (common-lisp-user::chunk-merge-hook nil t nil 33 nil) (common-lisp-user::chunk-add-hook nil t nil 34 nil) (common-lisp-user::chunk-hash-table nil t nil 35 nil) (common-lisp-user::sact nil t nil 36 nil) (common-lisp-user::trace-table nil t nil 37 nil) (common-lisp-user::current-trace nil t nil 38 nil) (common-lisp-user::current-sact-chunk nil t nil 39 nil) (common-lisp-user::stuff nil t nil 40 nil) (common-lisp-user::stuff-event nil t nil 41 nil) (common-lisp-user::nsji nil t nil 42 nil) (common-lisp-user::last-request nil t nil 43 nil) (common-lisp-user::act-scale nil t nil 44 nil) (common-lisp-user::pending-request nil t nil 45 nil)) common-lisp-user::copy-dm (common-lisp-user::make-dm) #12# common-lisp-user::dm-p si::define-structure ext::location (defstruct common-lisp-user::dm) (#1# . 26891) ext::annotate common-lisp-user::make-dm (defun common-lisp-user::make-dm) (#1# . 26891) :lambda-list (&key #13=#:chunks #14=#:busy #15=#:failed #16=#:esc #17=#:er #18=#:ol #19=#:blc #20=#:ans #21=#:pas #22=#:lf #23=#:le #24=#:mp #25=#:ms #26=#:md #27=#:rt #28=#:bll #29=#:mas #30=#:sa #31=#:act #32=#:num-finsts #33=#:finst-span #34=#:finsts #35=#:sim-hook #36=#:sji-hook #37=#:w-hook #38=#:bl-hook #39=#:spreading-hook #40=#:partial-matching-hook #41=#:noise-hook #42=#:offsets #43=#:retrieval-request-hook #44=#:retrieval-set-hook #45=#:retrieved-chunk-hook #46=#:chunk-merge-hook #47=#:chunk-add-hook #48=#:chunk-hash-table #49=#:sact #50=#:trace-table #51=#:current-trace #52=#:current-sact-chunk #53=#:stuff #54=#:stuff-event #55=#:nsji #56=#:last-request #57=#:act-scale #58=#:pending-request) (nil :pending-request :act-scale :last-request :nsji :stuff-event :stuff :current-sact-chunk :current-trace :trace-table :sact :chunk-hash-table :chunk-add-hook :chunk-merge-hook :retrieved-chunk-hook :retrieval-set-hook :retrieval-request-hook :offsets :noise-hook :partial-matching-hook :spreading-hook :bl-hook :w-hook :sji-hook :sim-hook :finsts :finst-span :num-finsts :act :sa :mas :bll :rt :md :ms :mp :le :lf :pas :ans :blc :ol :er :esc :failed :busy :chunks) #13# #14# #15# #16# #17# #18# #19# #20# #21# #22# #23# #24# #25# #26# #27# #28# #29# #30# #31# #32# #33# #34# #35# #36# #37# #38# #39# #40# #41# #42# #43# #44# #45# #46# #47# #48# #49# #50# #51# #52# #53# #54# #55# #56# #57# #58# 0 si::make-structure #Y(common-lisp-user::make-dm nil nil (28 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 22 40 2 77 46 26 22 40 2 77 46 27 22 40 2 77 46 28 22 40 2 77 46 29 22 40 2 77 46 30 22 40 2 77 46 31 22 40 2 77 46 32 22 40 2 77 46 33 22 40 2 77 46 34 22 40 2 77 46 35 22 40 2 77 46 36 22 40 2 77 46 37 22 40 2 77 46 38 22 40 2 77 46 39 22 40 2 77 46 40 22 40 2 77 46 41 22 40 2 77 46 42 22 40 2 77 46 43 22 40 2 77 46 44 22 40 2 77 46 45 22 40 2 77 46 46 22 40 2 77 46 47 22 40 2 77 46 48 22 40 2 77 46 49 22 40 2 77 46 50 22 40 2 77 46 51 22 40 2 77 46 52 22 40 2 77 46 53 22 40 2 77 46 54 22 40 2 77 46 55 22 40 2 77 46 56 22 40 2 77 46 57 22 40 2 77 46 58 22 40 2 77 46 59 22 40 2 77 46 60 22 40 2 77 46 61 22 40 2 77 46 62 22 40 2 77 46 63 22 40 2 77 46 64 15 65 13 45 13 44 13 43 13 42 13 41 13 40 13 39 13 38 13 37 13 36 13 35 13 34 13 33 13 32 13 31 13 30 13 29 13 28 13 27 13 26 13 25 13 24 13 23 13 22 13 21 13 20 13 19 13 18 13 17 13 16 13 15 13 14 13 13 13 12 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 47 66 29) #11# #1# 26891) si::fset find-class)) #1# 26891) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 9 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 31 78 27 15 12 1 29 12 19 2 30 1 0 73 29) #59=#A(t (32) (common-lisp-user::sact-trace "SACT-TRACE-" (common-lisp-user::only-recent common-lisp-user::remove-recent common-lisp-user::recents common-lisp-user::matches common-lisp-user::no-matches common-lisp-user::chunks common-lisp-user::esc common-lisp-user::result-type common-lisp-user::result) ((common-lisp-user::only-recent nil t nil 0 nil) (common-lisp-user::remove-recent nil t nil 1 nil) (common-lisp-user::recents nil t nil 2 nil) (common-lisp-user::matches nil t nil 3 nil) (common-lisp-user::no-matches nil t nil 4 nil) (common-lisp-user::chunks nil t nil 5 nil) (common-lisp-user::esc nil t nil 6 nil) (common-lisp-user::result-type nil t nil 7 nil) (common-lisp-user::result nil t nil 8 nil)) common-lisp-user::copy-sact-trace (common-lisp-user::make-sact-trace) common-lisp-user::sact-trace-p si::define-structure ext::location (defstruct common-lisp-user::sact-trace) (#1# . 31413) ext::annotate common-lisp-user::make-sact-trace (defun common-lisp-user::make-sact-trace) (#1# . 31413) :lambda-list (&key #60=#:only-recent #61=#:remove-recent #62=#:recents #63=#:matches #64=#:no-matches #65=#:chunks #66=#:esc #67=#:result-type #68=#:result) (nil :result :result-type :esc :chunks :no-matches :matches :recents :remove-recent :only-recent) #60# #61# #62# #63# #64# #65# #66# #67# #68# 0 si::make-structure #Y(common-lisp-user::make-sact-trace nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 22 40 2 77 46 26 15 27 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 10 28 29) #59# #1# 31413) si::fset find-class)) #1# 31413) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 22 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 44 78 40 15 12 1 42 12 19 2 43 1 0 73 29) #69=#A(t (45) (common-lisp-user::sact-chunk "SACT-CHUNK-" (common-lisp-user::bl-style common-lisp-user::bl-result common-lisp-user::name common-lisp-user::total common-lisp-user::offsets common-lisp-user::blc common-lisp-user::base-level common-lisp-user::zero-ref common-lisp-user::bl-count common-lisp-user::bl-refs common-lisp-user::bl-ct common-lisp-user::decay common-lisp-user::ol common-lisp-user::sa common-lisp-user::sa-value common-lisp-user::sa-buffers common-lisp-user::pm common-lisp-user::pm-value common-lisp-user::pm-tests common-lisp-user::noise common-lisp-user::noise-p common-lisp-user::noise-t) ((common-lisp-user::bl-style nil t nil 0 nil) (common-lisp-user::bl-result nil t nil 1 nil) (common-lisp-user::name nil t nil 2 nil) (common-lisp-user::total nil t nil 3 nil) (common-lisp-user::offsets nil t nil 4 nil) (common-lisp-user::blc nil t nil 5 nil) (common-lisp-user::base-level nil t nil 6 nil) (common-lisp-user::zero-ref nil t nil 7 nil) (common-lisp-user::bl-count nil t nil 8 nil) (common-lisp-user::bl-refs nil t nil 9 nil) (common-lisp-user::bl-ct nil t nil 10 nil) (common-lisp-user::decay nil t nil 11 nil) (common-lisp-user::ol nil t nil 12 nil) (common-lisp-user::sa nil t nil 13 nil) (common-lisp-user::sa-value nil t nil 14 nil) (common-lisp-user::sa-buffers nil t nil 15 nil) (common-lisp-user::pm nil t nil 16 nil) (common-lisp-user::pm-value nil t nil 17 nil) (common-lisp-user::pm-tests nil t nil 18 nil) (common-lisp-user::noise nil t nil 19 nil) (common-lisp-user::noise-p nil t nil 20 nil) (common-lisp-user::noise-t nil t nil 21 nil)) common-lisp-user::copy-sact-chunk (common-lisp-user::make-sact-chunk) common-lisp-user::sact-chunk-p si::define-structure ext::location (defstruct common-lisp-user::sact-chunk) (#1# . 31618) ext::annotate common-lisp-user::make-sact-chunk (defun common-lisp-user::make-sact-chunk) (#1# . 31618) :lambda-list (&key #70=#:bl-style #71=#:bl-result #72=#:name #73=#:total #74=#:offsets #75=#:blc #76=#:base-level #77=#:zero-ref #78=#:bl-count #79=#:bl-refs #80=#:bl-ct #81=#:decay #82=#:ol #83=#:sa #84=#:sa-value #85=#:sa-buffers #86=#:pm #87=#:pm-value #88=#:pm-tests #89=#:noise #90=#:noise-p #91=#:noise-t) (nil :noise-t :noise-p :noise :pm-tests :pm-value :pm :sa-buffers :sa-value :sa :ol :decay :bl-ct :bl-refs :bl-count :zero-ref :base-level :blc :offsets :total :name :bl-result :bl-style) #70# #71# #72# #73# #74# #75# #76# #77# #78# #79# #80# #81# #82# #83# #84# #85# #86# #87# #88# #89# #90# #91# 0 si::make-structure #Y(common-lisp-user::make-sact-chunk nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 22 40 2 77 46 26 22 40 2 77 46 27 22 40 2 77 46 28 22 40 2 77 46 29 22 40 2 77 46 30 22 40 2 77 46 31 22 40 2 77 46 32 22 40 2 77 46 33 22 40 2 77 46 34 22 40 2 77 46 35 22 40 2 77 46 36 22 40 2 77 46 37 22 40 2 77 46 38 22 40 2 77 46 39 15 40 13 21 13 20 13 19 13 18 13 17 13 16 13 15 13 14 13 13 13 12 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 23 41 29) #69# #1# 31618) si::fset find-class)) #1# 31618) #Y(si::bytecodes nil nil (19 0 0 29) #A(t (1) (common-lisp-user::suppress-extension-warnings)) #1# 31859) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #92=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-activation fboundp *error-output* #93="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94="Function ~s already exists and is being redefined." format finish-output common-lisp-user::chunk-activation-setf #95="Function ~s already exists and is being redefined." common-lisp-user::*chunk-parameters-count* #:g7392 common-lisp-user::activation common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7393 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7394 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7424 #:g7425 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7427 + ext::location (defun common-lisp-user::chunk-activation) (#1# . 31996) ext::annotate :lambda-list #96=(common-lisp-user::chunk-name) common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97="Chunk ~s does not exist in attempt to access ~a." #Y(common-lisp-user::chunk-activation nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #92# #1# 31996) si::fset (defun common-lisp-user::chunk-activation-setf) (#1# . 31996) #98=(common-lisp-user::chunk-name common-lisp-user::new-value) common-lisp-user::new-value #99="Chunk ~s does not exist in attempt to set ~a." #Y(common-lisp-user::chunk-activation-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #92# #1# 31996) (defsetf common-lisp-user::chunk-activation) (#1# . 31996) si::do-defsetf)) #1# 31996) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #100=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-in-dm fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-in-dm-setf #95# common-lisp-user::*chunk-parameters-count* #:g7445 common-lisp-user::in-dm common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7446 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7447 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7477 #:g7478 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7480 + ext::location (defun common-lisp-user::chunk-in-dm) (#1# . 32042) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-in-dm nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #100# #1# 32042) si::fset (defun common-lisp-user::chunk-in-dm-setf) (#1# . 32042) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-in-dm-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #100# #1# 32042) (defsetf common-lisp-user::chunk-in-dm) (#1# . 32042) si::do-defsetf)) #1# 32042) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #101=#A(t (13) (common-lisp-user::merge-fan-outs ext::location (defun common-lisp-user::merge-fan-outs) (#1# . 32402) ext::annotate :lambda-list (common-lisp-user::c1 common-lisp-user::c2) common-lisp-user::c1 common-lisp-user::c2 common-lisp-user::chunk-fan-out + #Y(common-lisp-user::merge-fan-outs nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 1 9 12 19 2 10 29) #101# #1# 32402) si::fset)) #1# 32402) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 15 28 14 29 77 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 1 28 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #102=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-fan-out fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-fan-out-setf #95# common-lisp-user::*chunk-parameters-count* #:g7498 common-lisp-user::fan-out common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7499 :name :index :default-value :default-function :merge common-lisp-user::merge-fan-outs :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7500 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7530 #:g7531 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7533 + ext::location (defun common-lisp-user::chunk-fan-out) (#1# . 32478) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-fan-out nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #102# #1# 32478) si::fset (defun common-lisp-user::chunk-fan-out-setf) (#1# . 32478) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-fan-out-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #102# #1# 32478) (defsetf common-lisp-user::chunk-fan-out) (#1# . 32478) si::do-defsetf)) #1# 32478) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 77 14 28 77 14 29 15 30 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 36 3 52 36 38 12 1 30 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #103=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-c-fan-out fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-c-fan-out-setf #95# common-lisp-user::*chunk-parameters-count* #:g7551 common-lisp-user::c-fan-out common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7552 :name :index :default-value :default-function :merge :copy :copy-from-chunk common-lisp-user::chunk-fan-out :accessor common-lisp-user::make-act-r-chunk-parameter #:g7553 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7583 #:g7584 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7586 + ext::location (defun common-lisp-user::chunk-c-fan-out) (#1# . 32552) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-c-fan-out nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #103# #1# 32552) si::fset (defun common-lisp-user::chunk-c-fan-out-setf) (#1# . 32552) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-c-fan-out-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #103# #1# 32552) (defsetf common-lisp-user::chunk-c-fan-out) (#1# . 32552) si::do-defsetf)) #1# 32552) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #104=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-fan-in fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-fan-in-setf #95# common-lisp-user::*chunk-parameters-count* #:g7604 common-lisp-user::fan-in common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7605 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7606 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7636 #:g7637 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7639 + ext::location (defun common-lisp-user::chunk-fan-in) (#1# . 32636) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-fan-in nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #104# #1# 32636) si::fset (defun common-lisp-user::chunk-fan-in-setf) (#1# . 32636) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-fan-in-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #104# #1# 32636) (defsetf common-lisp-user::chunk-fan-in) (#1# . 32636) si::do-defsetf)) #1# 32636) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #105=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-creation-time fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-creation-time-setf #95# common-lisp-user::*chunk-parameters-count* #:g7657 common-lisp-user::creation-time common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7658 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7659 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7689 #:g7690 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7692 + ext::location (defun common-lisp-user::chunk-creation-time) (#1# . 32679) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-creation-time nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #105# #1# 32679) si::fset (defun common-lisp-user::chunk-creation-time-setf) (#1# . 32679) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-creation-time-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #105# #1# 32679) (defsetf common-lisp-user::chunk-creation-time) (#1# . 32679) si::do-defsetf)) #1# 32679) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #106=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-base-level fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-base-level-setf #95# common-lisp-user::*chunk-parameters-count* #:g7710 common-lisp-user::base-level common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7711 :name :index :default-value :default-function :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7712 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7742 #:g7743 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7745 + ext::location (defun common-lisp-user::chunk-base-level) (#1# . 32845) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-base-level nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #106# #1# 32845) si::fset (defun common-lisp-user::chunk-base-level-setf) (#1# . 32845) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-base-level-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #106# #1# 32845) (defsetf common-lisp-user::chunk-base-level) (#1# . 32845) si::do-defsetf)) #1# 32845) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #107=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-last-base-level fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-last-base-level-setf #95# common-lisp-user::*chunk-parameters-count* #:g7763 common-lisp-user::last-base-level common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7764 :name :index :default-value :default-function :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7765 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7795 #:g7796 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7798 + ext::location (defun common-lisp-user::chunk-last-base-level) (#1# . 33004) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-last-base-level nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #107# #1# 33004) si::fset (defun common-lisp-user::chunk-last-base-level-setf) (#1# . 33004) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-last-base-level-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #107# #1# 33004) (defsetf common-lisp-user::chunk-last-base-level) (#1# . 33004) si::do-defsetf)) #1# 33004) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #108=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-source-spread fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-source-spread-setf #95# common-lisp-user::*chunk-parameters-count* #:g7816 common-lisp-user::source-spread common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7817 :name :index :default-value :default-function :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7818 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7848 #:g7849 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7851 + ext::location (defun common-lisp-user::chunk-source-spread) (#1# . 33129) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-source-spread nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #108# #1# 33129) si::fset (defun common-lisp-user::chunk-source-spread-setf) (#1# . 33129) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-source-spread-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #108# #1# 33129) (defsetf common-lisp-user::chunk-source-spread) (#1# . 33129) si::do-defsetf)) #1# 33129) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #109=#A(t (24) (common-lisp-user::merge-reference-list ext::location (defun common-lisp-user::merge-reference-list) (#1# . 33270) ext::annotate :lambda-list (common-lisp-user::chunk1 common-lisp-user::chunk2) common-lisp-user::chunk1 common-lisp-user::chunk2 common-lisp-user::declarative common-lisp-user::get-module-fct common-lisp-user::dm common-lisp-user::dm-ol common-lisp-user::ol common-lisp-user::mp-time-ms common-lisp-user::chunk-reference-list t eq length 1+ min subseq #Y(common-lisp-user::merge-reference-list nil nil (24 45 7 24 45 8 26 15 9 19 1 10 45 11 13 0 19 1 12 45 13 10 0 76 39 14 19 0 14 12 13 3 19 1 15 3 73 38 45 13 0 11 16 17 17 39 5 75 73 38 33 19 0 14 12 13 3 19 1 15 3 12 9 0 13 0 13 3 19 1 15 16 18 16 19 12 19 2 20 12 19 3 21 43 2 29) #109# #1# 33270) si::fset)) #1# 33270) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #110=#A(t (13) (common-lisp-user::merge-reference-count ext::location (defun common-lisp-user::merge-reference-count) (#1# . 33774) ext::annotate :lambda-list (common-lisp-user::chunk1 common-lisp-user::chunk2) common-lisp-user::chunk1 common-lisp-user::chunk2 common-lisp-user::chunk-reference-count + #Y(common-lisp-user::merge-reference-count nil nil (24 45 7 24 45 8 26 9 1 13 1 19 1 9 12 19 2 10 29) #110# #1# 33774) si::fset)) #1# 33774) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 15 28 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 1 28 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #111=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-reference-list fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-reference-list-setf #95# common-lisp-user::*chunk-parameters-count* #:g7869 common-lisp-user::reference-list common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7870 :name :index :default-value :default-function :merge common-lisp-user::merge-reference-list :copy copy-list :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7871 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7901 #:g7902 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7904 + ext::location (defun common-lisp-user::chunk-reference-list) (#1# . 33888) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-reference-list nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #111# #1# 33888) si::fset (defun common-lisp-user::chunk-reference-list-setf) (#1# . 33888) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-reference-list-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #111# #1# 33888) (defsetf common-lisp-user::chunk-reference-list) (#1# . 33888) si::do-defsetf)) #1# 33888) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 9 0 14 26 77 14 27 15 28 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 1 28 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #112=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-reference-count fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-reference-count-setf #95# common-lisp-user::*chunk-parameters-count* #:g7922 common-lisp-user::reference-count common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7923 :name :index :default-value :default-function :merge common-lisp-user::merge-reference-count :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7924 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g7954 #:g7955 common-lisp-user::act-r-chunk-parameter si::structure-set #:g7957 + ext::location (defun common-lisp-user::chunk-reference-count) (#1# . 34001) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-reference-count nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #112# #1# 34001) si::fset (defun common-lisp-user::chunk-reference-count-setf) (#1# . 34001) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-reference-count-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #112# #1# 34001) (defsetf common-lisp-user::chunk-reference-count) (#1# . 34001) si::do-defsetf)) #1# 34001) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #113=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-similarities fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-similarities-setf #95# common-lisp-user::*chunk-parameters-count* #:g7975 common-lisp-user::similarities common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g7976 :name :index :default-value :default-function :merge :copy copy-tree :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g7977 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g8007 #:g8008 common-lisp-user::act-r-chunk-parameter si::structure-set #:g8010 + ext::location (defun common-lisp-user::chunk-similarities) (#1# . 34113) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-similarities nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #113# #1# 34113) si::fset (defun common-lisp-user::chunk-similarities-setf) (#1# . 34113) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-similarities-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #113# #1# 34113) (defsetf common-lisp-user::chunk-similarities) (#1# . 34113) si::do-defsetf)) #1# 34113) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #114=#A(t (16) (common-lisp-user::default-permanent-noise ext::location (defun common-lisp-user::default-permanent-noise) (#1# . 34252) ext::annotate :lambda-list (common-lisp-user::chunk) common-lisp-user::chunk common-lisp-user::declarative common-lisp-user::get-module-fct common-lisp-user::dm common-lisp-user::dm-pas common-lisp-user::act-r-noise #115=0.0 #Y(common-lisp-user::default-permanent-noise nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 6 13 0 19 1 11 39 12 13 0 19 1 11 12 19 1 12 38 4 1 13 73 43 1 29) #114# #1# 34252) si::fset)) #1# 34252) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 15 27 14 28 77 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 75 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #116=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-permanent-noise fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-permanent-noise-setf #95# common-lisp-user::*chunk-parameters-count* #:g8028 common-lisp-user::permanent-noise common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g8029 :name :index :default-value :default-function common-lisp-user::default-permanent-noise :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g8030 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g8060 #:g8061 common-lisp-user::act-r-chunk-parameter si::structure-set #:g8063 + ext::location (defun common-lisp-user::chunk-permanent-noise) (#1# . 34481) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-permanent-noise nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #116# #1# 34481) si::fset (defun common-lisp-user::chunk-permanent-noise-setf) (#1# . 34481) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-permanent-noise-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #116# #1# 34481) (defsetf common-lisp-user::chunk-permanent-noise) (#1# . 34481) si::do-defsetf)) #1# 34481) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #117=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-sjis fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-sjis-setf #95# common-lisp-user::*chunk-parameters-count* #:g8081 common-lisp-user::sjis common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g8082 :name :index :default-value :default-function :merge :copy copy-tree :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g8083 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g8113 #:g8114 common-lisp-user::act-r-chunk-parameter si::structure-set #:g8116 + ext::location (defun common-lisp-user::chunk-sjis) (#1# . 34580) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-sjis nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #117# #1# 34580) si::fset (defun common-lisp-user::chunk-sjis-setf) (#1# . 34580) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-sjis-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #117# #1# 34580) (defsetf common-lisp-user::chunk-sjis) (#1# . 34580) si::do-defsetf)) #1# 34580) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #118=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-retrieval-activation fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-retrieval-activation-setf #95# common-lisp-user::*chunk-parameters-count* #:g8134 common-lisp-user::retrieval-activation common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g8135 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g8136 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g8166 #:g8167 common-lisp-user::act-r-chunk-parameter si::structure-set #:g8169 + ext::location (defun common-lisp-user::chunk-retrieval-activation) (#1# . 34696) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-retrieval-activation nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #118# #1# 34696) si::fset (defun common-lisp-user::chunk-retrieval-activation-setf) (#1# . 34696) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-retrieval-activation-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #118# #1# 34696) (defsetf common-lisp-user::chunk-retrieval-activation) (#1# . 34696) si::do-defsetf)) #1# 34696) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #119=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-retrieval-time fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-retrieval-time-setf #95# common-lisp-user::*chunk-parameters-count* #:g8187 common-lisp-user::retrieval-time common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g8188 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g8189 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g8219 #:g8220 common-lisp-user::act-r-chunk-parameter si::structure-set #:g8222 + ext::location (defun common-lisp-user::chunk-retrieval-time) (#1# . 34851) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-retrieval-time nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #119# #1# 34851) si::fset (defun common-lisp-user::chunk-retrieval-time-setf) (#1# . 34851) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-retrieval-time-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #119# #1# 34851) (defsetf common-lisp-user::chunk-retrieval-time) (#1# . 34851) si::do-defsetf)) #1# 34851) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #120=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-fast-merge-key fboundp *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #94# format finish-output common-lisp-user::chunk-fast-merge-key-setf #95# common-lisp-user::*chunk-parameters-count* #:g8240 common-lisp-user::fast-merge-key common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g8241 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g8242 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g8272 #:g8273 common-lisp-user::act-r-chunk-parameter si::structure-set #:g8275 + ext::location (defun common-lisp-user::chunk-fast-merge-key) (#1# . 34901) ext::annotate :lambda-list #96# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #97# #Y(common-lisp-user::chunk-fast-merge-key nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #120# #1# 34901) si::fset (defun common-lisp-user::chunk-fast-merge-key-setf) (#1# . 34901) #98# common-lisp-user::new-value #99# #Y(common-lisp-user::chunk-fast-merge-key-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #120# #1# 34901) (defsetf common-lisp-user::chunk-fast-merge-key) (#1# . 34901) si::do-defsetf)) #1# 34901) #Y(si::bytecodes nil nil (19 0 0 29) #A(t (1) (common-lisp-user::unsuppress-extension-warnings)) #1# 35030) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #121=#A(t (21) (common-lisp-user::dm-fm-rh ext::location (defun common-lisp-user::dm-fm-rh) (#1# . 35063) ext::annotate :lambda-list (common-lisp-user::chunk) common-lisp-user::chunk common-lisp-user::chunk-fast-merge-key common-lisp-user::it common-lisp-user::declarative common-lisp-user::get-module-fct common-lisp-user::hash-chunk-contents common-lisp-user::new-key common-lisp-user::dm common-lisp-user::dm-chunk-hash-table remhash common-lisp-user::chunk-fast-merge-key-setf si::hash-set #Y(common-lisp-user::dm-fm-rh nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 50 15 10 19 1 11 12 13 1 19 1 12 12 46 13 46 14 13 2 13 0 19 1 15 17 16 13 3 13 1 19 2 17 13 1 13 0 19 1 15 12 13 3 19 3 18 43 2 38 3 75 73 43 1 29) #121# #1# 35063) si::fset)) #1# 35063) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 1 0 73 29) #122=#A(t (18) (common-lisp-user::hash-chunk-contents ext::location (defun common-lisp-user::hash-chunk-contents) (#1# . 35399) ext::annotate :lambda-list (common-lisp-user::chunk) common-lisp-user::chunk common-lisp-user::chunk-slots-vector common-lisp-user::x common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::true-chunk-name-fct #Y(nil nil nil (24 45 9 26 13 1 13 0 19 2 10 12 19 1 11 29) #122# #1# 35399) t common-lisp-user::chunk-filled-slots-list-fct mapcar #Y(common-lisp-user::hash-chunk-contents nil nil (24 45 7 26 13 0 19 1 8 12 34 12 12 13 0 14 13 19 2 14 12 19 2 15 3 73 29) #122# #1# 35399) si::fset)) #1# 35399) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 1 0 73 29) #123=#A(t (36) (common-lisp-user::reset-dm-module ext::location (defun common-lisp-user::reset-dm-module) (#1# . 35688) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm #:g8323 #:g8324 si::structure-set #:g8325 #:g8326 #:g8327 #:g8328 #:g8329 #:g8330 #:g8331 #:g8332 #:g8333 #:g8334 #:g8335 :test equal make-hash-table #:g8336 #:g8337 #:g8338 #:g8339 :name common-lisp-user::make-sact-chunk #:g8340 #:g8341 #:g8342 #Y(common-lisp-user::reset-dm-module nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 7 9 0 13 0 19 4 10 43 1 43 1 10 0 45 11 75 45 12 13 1 15 7 9 1 13 0 19 4 10 43 1 43 1 10 0 45 13 75 45 14 13 1 15 7 9 2 13 0 19 4 10 43 1 43 1 10 0 45 15 75 45 16 13 1 15 7 9 21 13 0 19 4 10 43 1 43 1 10 0 45 17 75 45 18 13 1 15 7 9 43 13 0 19 4 10 43 1 43 1 10 0 45 19 75 45 20 13 1 15 7 9 45 13 0 19 4 10 43 1 43 1 10 0 45 21 14 22 33 23 12 19 2 24 45 25 13 1 15 7 9 35 13 0 19 4 10 43 1 43 1 10 0 45 26 14 22 33 23 12 19 2 24 45 27 13 1 15 7 9 37 13 0 19 4 10 43 1 43 1 10 0 45 28 14 29 77 19 2 30 45 31 13 1 15 7 9 39 13 0 19 4 10 43 1 43 1 10 0 45 32 75 45 33 13 1 15 7 9 38 13 0 19 4 10 43 1 43 1 29) #123# #1# 35688) si::fset)) #1# 35688) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #124=#A(t (12) (common-lisp-user::secondary-reset-dm-module ext::location (defun common-lisp-user::secondary-reset-dm-module) (#1# . 36524) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm (:dcsc-hook common-lisp-user::dm-fm-rh) common-lisp-user::sgp-fct #Y(common-lisp-user::secondary-reset-dm-module nil nil (24 45 7 26 15 8 19 1 9 29) #124# #1# 36524) si::fset)) #1# 36524) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #125=#A(t (20) (common-lisp-user::tertiary-reset-dm-module ext::location (defun common-lisp-user::tertiary-reset-dm-module) (#1# . 36619) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm common-lisp-user::dm-stuff common-lisp-user::check-declarative-stuffing :module common-lisp-user::declarative :destination :output common-lisp-user::low :maintenance t common-lisp-user::schedule-event-now #Y(common-lisp-user::tertiary-reset-dm-module nil nil (24 45 7 26 13 0 19 1 8 73 39 22 15 9 14 10 15 11 14 12 15 11 14 13 15 14 14 15 14 16 19 9 17 29) #125# #1# 36619) si::fset)) #1# 36619) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #126=#A(t (23) (common-lisp-user::remove-old-dm-finsts ext::location (defun common-lisp-user::remove-old-dm-finsts) (#1# . 36810) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm #:g8345 time common-lisp-user::mp-time-ms - common-lisp-user::dm-finst-span > #Y(nil nil nil (24 45 9 26 19 0 10 12 13 0 19 2 11 12 13 2 19 1 12 12 19 2 13 29) #126# #1# 36810) common-lisp-user::dm-finsts :key cdr remove-if #:g8346 si::structure-set #Y(common-lisp-user::remove-old-dm-finsts nil nil (24 45 7 26 10 0 45 8 34 14 12 13 1 19 1 15 12 14 16 33 17 12 19 4 18 45 19 13 1 15 7 9 21 13 0 19 4 20 43 1 43 1 29) #126# #1# 36810) si::fset)) #1# 36810) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 35 12 19 2 36 1 0 73 29) #127=#A(t (37) (common-lisp-user::dm-query-request ext::location (defun common-lisp-user::dm-query-request) (#1# . 37030) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value) common-lisp-user::dm common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value common-lisp-user::state common-lisp-user::busy common-lisp-user::dm-busy common-lisp-user::free error common-lisp-user::dm-failed *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid query made of the ~S buffer with slot ~S and value ~S" format finish-output common-lisp-user::recently-retrieved common-lisp-user::remove-old-dm-finsts common-lisp-user::buffer-read common-lisp-user::chunk-copied-from-fct common-lisp-user::dm-finsts :key car find #Y(common-lisp-user::dm-query-request nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 1 42 11 82 10 0 42 12 8 13 3 19 1 13 38 68 42 14 10 13 3 19 1 13 76 73 38 56 42 15 8 13 3 19 1 16 38 46 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 13 2 13 1 13 0 19 8 25 12 14 17 19 1 26 22 73 38 89 42 27 84 13 3 19 1 28 13 2 19 1 29 73 39 69 13 2 19 1 29 12 19 1 30 73 39 57 10 0 39 27 13 2 19 1 29 12 19 1 30 12 13 3 19 1 31 12 14 32 33 33 12 19 4 34 38 27 13 2 19 1 29 12 19 1 30 12 13 3 19 1 31 12 14 32 33 33 12 19 4 34 76 73 38 3 75 73 29) #127# #1# 37030) si::fset)) #1# 37030) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 64 12 19 2 65 1 0 73 29) #128=#A(t (66) (common-lisp-user::dm-request ext::location (defun common-lisp-user::dm-request) (#1# . 37838) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::buffer common-lisp-user::request) common-lisp-user::dm common-lisp-user::buffer common-lisp-user::request #:g8358 :time common-lisp-user::mp-time-ms :spec :rt common-lisp-user::dm-rt common-lisp-user::make-last-request #:g8359 si::structure-set common-lisp-user::dm-busy common-lisp-user::printing-module common-lisp-user::get-module-fct #:g8361 #:g8360 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g8362 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #129="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::mp-models length > common-lisp-user::current-model "A retrieval event has been aborted by a new request" format finish-output #130="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #131="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::delete-event common-lisp-user::dm-pending-request common-lisp-user::complete-request #:g8363 #:g8364 #:g8365 #:g8366 #:g8367 common-lisp-user::start-retrieval :module common-lisp-user::declarative :destination :details symbol-name :priority :params :output common-lisp-user::medium common-lisp-user::schedule-event-now #:g8368 #Y(common-lisp-user::dm-request nil nil (24 45 7 24 45 8 24 45 9 26 10 2 45 10 14 11 19 0 12 12 14 13 13 1 14 14 13 3 19 1 15 12 19 6 16 45 17 13 1 15 7 9 43 13 0 19 4 18 43 1 43 1 13 2 19 1 19 39 187 15 20 19 1 21 47 1 22 45 23 10 1 39 10 13 0 19 1 24 12 19 1 25 39 142 13 0 19 1 24 12 19 1 25 45 26 13 1 19 1 27 76 40 121 10 0 76 40 27 13 0 11 28 17 29 40 19 11 30 40 15 13 0 11 31 17 29 39 7 14 28 11 32 17 33 39 33 14 28 15 34 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 19 5 40 14 28 19 1 41 38 56 14 28 15 42 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 19 5 40 14 28 19 1 41 13 0 15 43 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 19 5 40 43 1 43 2 13 2 19 1 19 12 19 1 44 13 2 19 1 45 12 19 1 46 10 2 45 47 10 1 45 48 13 1 15 7 9 45 13 0 19 4 18 43 1 43 1 10 2 45 49 75 45 50 13 1 15 7 9 2 13 0 19 4 18 43 1 43 1 10 2 45 51 15 52 14 53 15 54 14 55 15 54 14 56 1 52 16 57 12 14 58 9 -2000 14 59 10 1 6 1 12 14 60 15 61 19 13 62 45 63 13 1 15 7 9 1 13 0 19 4 18 43 1 43 1 29) #128# #1# 37838) si::fset)) #1# 37838) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #132=#A(t (16) (common-lisp-user::dm-act-level ext::location (defun common-lisp-user::dm-act-level) (#1# . 39509) ext::annotate :lambda-list (common-lisp-user::act common-lisp-user::level) common-lisp-user::act common-lisp-user::level common-lisp-user::high eq t common-lisp-user::medium common-lisp-user::low #Y(common-lisp-user::dm-act-level nil nil (24 45 7 24 45 8 26 10 1 73 39 46 10 0 42 9 18 13 1 1 9 17 10 73 40 7 13 1 11 11 17 10 38 24 42 12 11 13 1 1 13 17 10 76 73 38 11 42 13 6 11 11 73 38 3 75 73 29) #132# #1# 39509) si::fset)) #1# 39509) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 312 12 19 2 313 1 0 73 29) #133=#A(t (314) (common-lisp-user::start-retrieval ext::location (defun common-lisp-user::start-retrieval) (#1# . 39678) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::request) common-lisp-user::dm common-lisp-user::request common-lisp-user::dm-stuff-event common-lisp-user::delete-event #:g8369 #:g8370 si::structure-set common-lisp-user::dm-retrieval-request-hook si::%dolist-var common-lisp-user::x common-lisp-user::dm-sact #:g8371 :esc common-lisp-user::dm-esc common-lisp-user::make-sact-trace #:g8372 common-lisp-user::mp-time-ms common-lisp-user::dm-trace-table common-lisp-user::dm-current-trace si::hash-set common-lisp-user::chunk-spec-filled-slots common-lisp-user::filled common-lisp-user::chunk-spec-empty-slots common-lisp-user::empty common-lisp-user::slots-vector-match-signature copy-list #Y(nil nil nil (24 45 16 26 10 0 4 12 13 2 13 1 19 3 31 39 8 10 0 5 16 32 38 3 75 73 29) #133# #1# 39678) common-lisp-user::dm-chunks mapcan common-lisp-user::chunk-list common-lisp-user::temp-mp :recently-retrieved common-lisp-user::chunk-spec-slots member common-lisp-user::chunk-spec-slot-spec common-lisp-user::recent length > *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models common-lisp-user::current-model "Invalid retrieval request." format finish-output ":recently-retrieved parameter used more than once." #:g8376 #:g8377 common-lisp-user::dm-last-request #:g8378 :too-many #:g8379 common-lisp-user::last-request common-lisp-user::dm-pending-request common-lisp-user::complete-request - caar eq = "Invalid retrieval request." ":recently-retrieved parameter's modifier can only be = or -." #:g8380 #:g8381 #:g8382 :bad-modifier #:g8383 t third common-lisp-user::reset "Invalid retrieval request." ":recently-retrieved parameter's value can only be t, nil, or reset." #:g8384 #:g8385 #:g8386 :bad-value #:g8387 common-lisp-user::remove-old-dm-finsts #:g8388 #:g8389 car common-lisp-user::dm-finsts mapcar intersection #:g8391 :marked #:g8392 #:g8393 #:g8394 #:g8395 #:g8396 common-lisp-user::sact-trace #:g8397 #:g8398 common-lisp-user::dm-act common-lisp-user::high common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g8400 #:g8399 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134="~&~@?~%" "Only recently retrieved chunks: ~s" #:g8401 #:g8402 #:g8404 #:g8403 "Removing recently retrieved chunks:" #:g8405 :unmarked #:g8406 :key :test common-lisp-user::eq-chunks-fct #:g8408 #:g8410 common-lisp-user::sact-trace-recents nconc #:g8409 #:g8412 #:g8411 "~s" #:g8415 #:g8413 common-lisp-user::last-request-finst-chunks #:g8414 #Y(nil nil nil (24 45 16 26 13 0 13 8 19 1 88 12 14 120 15 87 14 121 15 122 19 6 40 73 39 143 13 8 19 1 17 39 40 13 8 19 1 25 45 123 10 1 6 1 45 124 13 1 19 1 125 12 13 0 19 2 126 45 127 13 2 15 98 9 2 13 0 19 4 13 43 3 13 8 19 1 101 12 15 102 19 2 103 39 47 15 104 19 1 105 47 1 128 45 129 10 1 39 10 13 0 19 1 108 12 19 1 109 39 20 13 0 19 1 108 12 19 1 109 12 15 110 15 130 13 2 19 4 51 43 2 10 0 45 131 13 9 19 1 56 45 132 13 1 13 0 19 1 133 3 45 134 13 1 15 60 9 3 13 0 19 4 13 43 3 11 74 73 29) #133# #1# 39678) remove-if :mp-value common-lisp-user::mp-value "Invalid retrieval request." ":mp-value parameter used more than once." #:g8416 #:g8417 #:g8418 :mp-multi #:g8419 "Invalid retrieval request." ":mp-value parameter's modifier can only be =." #:g8420 #:g8421 #:g8422 :mp-modifier #:g8423 common-lisp-user::numornil "Invalid retrieval request." ":mp-value parameter's value can only be nil or a number." #:g8424 #:g8425 #:g8426 :mp-not-num #:g8427 common-lisp-user::dm-mp #:g8429 #:g8430 common-lisp-user::found common-lisp-user::name common-lisp-user::match-chunk-spec-p #:g8443 #:g8445 common-lisp-user::sact-trace-matches #:g8444 common-lisp-user::medium #:g8447 #:g8446 "Chunk ~s matches" #:g8449 #:g8450 #:g8452 common-lisp-user::sact-trace-no-matches #:g8451 #:g8454 #:g8453 "Chunk ~s does not match" second keywordp #Y(nil nil nil (24 45 16 26 10 0 4 12 1 66 17 65 40 17 10 0 4 12 1 63 17 65 40 7 10 0 16 183 16 184 76 73 39 4 10 0 73 29) #133# #1# 39678) common-lisp-user::extra-spec common-lisp-user::define-chunk-spec-fct :chunks common-lisp-user::find-matching-chunks nreverse common-lisp-user::matches set-difference common-lisp-user::non-matches common-lisp-user::c #:g8458 #:g8457 "Chunk ~s does not match" #:g8459 #:g8460 #:g8461 #:g8462 common-lisp-user::chunk-set common-lisp-user::return-val common-lisp-user::best common-lisp-user::best-val #:g8463 #:g8464 common-lisp-user::compute-activation common-lisp-user::chunk-activation common-lisp-user::chunk-retrieval-activation-setf common-lisp-user::chunk-retrieval-time-setf #:g8487 #:g8486 "Chunk ~s has the current best activation ~f" #:g8490 #:g8489 "Chunk ~s matches the current best activation ~f" #:g8494 #:g8493 "Chunk ~s is now the current best with activation ~f" common-lisp-user::dm-er common-lisp-user::random-item common-lisp-user::b remove string< sort #:g8498 #:g8499 common-lisp-user::dm-retrieval-set-hook common-lisp-user::chunk-set-with-best common-lisp-user::val "multiple set-hook functions returned a value - none used" :error consp #:g8504 common-lisp-user::retrieved-chunk :module common-lisp-user::declarative :destination :params :details string symbol-name " " concatenate :output common-lisp-user::schedule-event-relative #:g8505 #:g8506 :force #:g8507 #:g8508 #:g8509 common-lisp-user::low #:g8511 #:g8510 "Retrieval-set-hook function forced retrieval of" numberp #:g8512 common-lisp-user::retrieval-failure #:g8513 #:g8514 :force-fail #:g8515 #:g8517 #:g8516 "Retrieval-set-hook function forced retrieval failure" common-lisp-user::dm-rt < #:g8518 common-lisp-user::compute-activation-latency :time-in-ms #:g8519 #:g8520 :fail #:g8521 #:g8522 #:g8523 #:g8525 #:g8524 "No matching chunk found retrieval failure" #:g8527 #:g8526 "No chunk above the retrieval threshold: ~f" #:g8528 " " #:g8529 #:g8530 :single #:g8531 #:g8532 #:g8533 #:g8535 #:g8534 "Chunk ~s with activation ~f is the best" common-lisp-user::best1 #:g8536 " " #:g8537 #:g8538 :multi #:g8539 #:g8540 #:g8541 #:g8543 #:g8542 "Chunk ~s chosen among the chunks with activation ~f" #:g8544 #:g8545 #:g8546 #:g8547 #Y(common-lisp-user::start-retrieval nil nil (24 45 7 24 45 8 26 57 0 60 3792 13 2 19 1 9 39 32 13 2 19 1 9 12 19 1 10 10 2 45 11 75 45 12 13 1 15 7 9 41 13 0 19 4 13 43 1 43 1 13 2 19 1 14 45 15 75 45 16 38 18 10 1 4 51 0 13 0 13 3 20 1 23 10 1 5 51 1 10 1 40 -20 43 2 13 2 19 1 17 39 52 10 2 45 18 14 19 13 3 19 1 20 12 19 2 21 45 22 13 1 15 7 9 38 13 0 19 4 13 43 1 43 1 19 0 23 12 13 2 19 1 24 12 13 2 19 1 25 12 19 3 26 13 1 19 1 27 45 28 13 2 19 1 29 45 30 34 33 12 13 4 19 1 34 12 19 2 35 45 36 75 45 37 14 38 13 5 19 1 39 12 19 2 40 39 891 13 5 14 38 19 2 41 45 42 10 0 16 43 12 9 1 19 2 44 39 136 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 50 19 5 51 14 45 19 1 52 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 53 19 5 51 14 45 19 1 52 10 7 45 54 75 45 55 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 56 45 57 11 58 45 59 13 1 15 60 9 7 13 0 19 4 13 43 1 43 1 13 7 19 1 61 12 19 1 62 75 73 36 5 38 733 15 63 10 0 16 64 17 65 40 9 15 66 10 0 16 64 17 65 76 39 136 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 67 19 5 51 14 45 19 1 52 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 68 19 5 51 14 45 19 1 52 10 7 45 69 75 45 70 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 56 45 71 11 72 45 73 13 1 15 60 9 7 13 0 19 4 13 43 1 43 1 13 7 19 1 61 12 19 1 62 75 73 36 5 38 577 14 74 10 0 4 16 75 17 65 40 30 77 10 0 4 16 75 17 65 40 20 15 76 10 0 4 16 75 17 65 39 9 15 66 10 0 16 64 17 65 76 39 136 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 77 19 5 51 14 45 19 1 52 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 78 19 5 51 14 45 19 1 52 10 7 45 79 75 45 80 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 61 12 19 1 62 13 7 19 1 56 45 81 11 82 45 83 13 1 15 60 9 7 13 0 19 4 13 43 1 43 1 75 73 36 5 38 399 13 7 19 1 84 15 76 10 0 4 16 75 17 65 39 25 10 7 45 85 75 45 86 13 1 15 7 9 21 13 0 19 4 13 43 1 43 1 38 359 14 74 10 0 4 16 75 17 65 39 10 10 0 16 64 12 1 66 17 65 40 18 10 0 4 16 75 76 39 10 10 0 16 64 12 1 63 17 65 39 192 15 87 13 7 19 1 88 12 19 2 89 12 13 2 19 2 90 51 2 13 7 19 1 56 45 91 11 92 45 93 13 1 15 60 9 2 13 0 19 4 13 43 1 43 1 13 7 19 1 56 45 94 10 3 45 95 13 1 15 60 9 3 13 0 19 4 13 43 1 43 1 13 7 19 1 17 39 53 13 7 19 1 25 45 96 11 74 45 97 13 1 15 98 9 0 13 0 19 4 13 43 1 43 1 13 7 19 1 25 45 99 10 3 45 100 13 1 15 98 9 2 13 0 19 4 13 43 1 43 1 13 7 19 1 101 12 15 102 19 2 103 39 47 15 104 19 1 105 47 1 106 45 107 10 1 39 10 13 0 19 1 108 12 19 1 109 39 20 13 0 19 1 108 12 19 1 109 12 15 110 15 111 13 4 19 4 51 43 2 38 127 13 7 19 1 17 39 27 13 7 19 1 25 45 112 11 74 45 113 13 1 15 98 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 101 12 15 102 19 2 103 39 45 15 104 19 1 105 47 1 114 45 115 10 1 39 10 13 0 19 1 108 12 19 1 109 39 18 13 0 19 1 108 12 19 1 109 12 15 110 15 116 19 3 51 43 2 13 7 19 1 56 45 117 11 118 45 119 13 1 15 60 9 2 13 0 19 4 13 43 1 43 1 34 135 12 13 2 19 2 136 51 2 43 1 64 2663 14 137 13 5 19 1 39 12 19 2 40 39 487 13 5 14 137 19 2 41 45 138 10 0 16 43 12 9 1 19 2 44 39 136 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 139 19 5 51 14 45 19 1 52 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 140 19 5 51 14 45 19 1 52 10 7 45 141 75 45 142 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 61 12 19 1 62 13 7 19 1 56 45 143 11 144 45 145 13 1 15 60 9 7 13 0 19 4 13 43 1 43 1 75 73 36 5 38 329 15 66 10 0 16 64 17 65 76 39 136 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 146 19 5 51 14 45 19 1 52 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 147 19 5 51 14 45 19 1 52 10 7 45 148 75 45 149 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 61 12 19 1 62 13 7 19 1 56 45 150 11 151 45 152 13 1 15 60 9 7 13 0 19 4 13 43 1 43 1 75 73 36 5 38 183 10 0 4 16 75 12 19 1 153 76 39 136 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 154 19 5 51 14 45 19 1 52 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 155 19 5 51 14 45 19 1 52 10 7 45 156 75 45 157 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 7 19 1 61 12 19 1 62 13 7 19 1 56 45 158 11 159 45 160 13 1 15 60 9 7 13 0 19 4 13 43 1 43 1 75 73 36 5 38 36 13 7 19 1 161 6 1 51 1 10 7 45 162 10 1 4 16 75 45 163 13 1 15 7 9 11 13 0 19 4 13 43 1 43 1 43 1 77 77 77 13 6 19 1 20 76 40 7 13 6 19 1 161 76 39 277 75 45 164 10 2 45 15 75 45 165 38 249 10 1 4 51 0 13 0 13 8 19 2 166 39 125 13 9 19 1 17 39 40 13 9 19 1 25 45 167 10 1 6 1 45 168 13 1 19 1 169 12 13 0 19 2 126 45 170 13 2 15 98 9 3 13 0 19 4 13 43 3 13 9 19 1 101 12 15 171 19 2 103 39 47 15 104 19 1 105 47 1 172 45 173 10 1 39 10 13 0 19 1 108 12 19 1 109 39 20 13 0 19 1 108 12 19 1 109 12 15 110 15 174 13 2 19 4 51 43 2 10 0 6 1 45 175 13 3 13 0 19 2 126 51 3 43 1 38 106 13 9 19 1 17 39 40 13 9 19 1 25 45 176 10 1 6 1 45 177 13 1 19 1 178 12 13 0 19 2 126 45 179 13 2 15 98 9 4 13 0 19 4 13 43 3 13 9 19 1 101 12 15 102 19 2 103 39 47 15 104 19 1 105 47 1 180 45 181 10 1 39 10 13 0 19 1 108 12 19 1 109 39 20 13 0 19 1 108 12 19 1 109 12 15 110 15 182 13 2 19 4 51 43 2 10 1 5 51 1 10 1 40 -251 75 51 0 10 2 73 43 2 43 1 38 211 34 185 12 13 5 19 1 41 12 19 2 35 45 186 10 0 39 16 13 0 19 1 187 12 14 188 13 2 19 3 189 38 5 10 2 16 190 45 191 13 8 19 1 101 40 6 13 8 19 1 17 39 8 13 3 13 0 19 2 192 45 193 13 9 19 1 101 12 15 102 19 2 103 39 72 10 0 45 15 75 45 194 38 57 10 1 4 51 0 15 104 19 1 105 47 1 195 45 196 10 1 39 10 13 0 19 1 108 12 19 1 109 39 20 13 0 19 1 108 12 19 1 109 12 15 110 15 197 13 2 19 4 51 43 2 10 1 5 51 1 10 1 40 -59 43 2 13 9 19 1 17 39 53 13 9 19 1 25 45 198 10 2 45 199 13 1 15 98 9 3 13 0 19 4 13 43 1 43 1 13 9 19 1 25 45 200 10 1 45 201 13 1 15 98 9 4 13 0 19 4 13 43 1 43 1 10 1 73 43 3 12 46 202 46 203 46 204 46 205 13 10 19 1 56 45 206 10 4 45 207 13 1 15 60 9 5 13 0 19 4 13 43 1 43 1 13 10 19 1 20 39 309 10 3 45 15 75 45 16 38 292 10 1 4 51 0 13 12 13 0 13 11 19 3 208 13 0 13 0 19 1 209 12 19 2 210 13 0 19 0 23 12 19 2 211 10 2 76 39 78 13 0 19 1 209 51 2 13 0 10 3 3 51 3 13 12 19 1 101 12 15 171 19 2 103 39 49 15 104 19 1 105 47 1 212 45 213 10 1 39 10 13 0 19 1 108 12 19 1 109 39 22 13 0 19 1 108 12 19 1 109 12 15 110 15 214 13 2 13 4 19 5 51 43 2 38 171 13 0 19 1 209 12 13 2 19 2 66 39 71 13 0 10 3 3 51 3 13 12 19 1 101 12 15 171 19 2 103 39 49 15 104 19 1 105 47 1 215 45 216 10 1 39 10 13 0 19 1 108 12 19 1 109 39 22 13 0 19 1 108 12 19 1 109 12 15 110 15 217 13 2 13 4 19 5 51 43 2 38 88 13 0 19 1 209 12 13 2 19 2 44 39 75 13 0 19 1 209 51 2 10 0 6 1 51 3 13 12 19 1 101 12 15 171 19 2 103 39 49 15 104 19 1 105 47 1 218 45 219 10 1 39 10 13 0 19 1 108 12 19 1 109 39 22 13 0 19 1 108 12 19 1 109 12 15 110 15 220 13 2 13 4 19 5 51 43 2 10 1 5 51 1 10 1 40 -294 43 2 38 5 10 3 51 1 10 1 16 43 12 9 1 19 2 44 39 40 13 10 19 1 221 39 24 13 1 19 1 222 45 223 13 0 13 0 13 2 19 2 224 3 51 2 43 1 38 10 13 1 15 225 19 2 226 51 1 13 10 19 1 56 45 227 10 2 45 228 13 1 15 60 9 4 13 0 19 4 13 43 1 43 1 13 10 19 1 229 4 39 116 10 1 39 15 10 1 4 12 10 1 4 12 13 3 19 2 224 3 45 230 13 11 19 1 229 45 15 75 45 16 38 76 10 1 4 51 0 13 0 13 2 20 1 23 45 231 10 0 39 51 10 6 39 43 14 45 15 46 19 0 47 73 39 12 19 0 48 16 43 12 9 1 19 2 44 12 19 0 49 12 15 232 19 5 51 14 45 19 1 52 11 233 51 6 38 5 10 0 51 6 43 1 10 1 5 51 1 10 1 40 -78 43 2 43 1 10 2 16 234 39 195 10 10 45 235 10 3 5 12 15 236 14 237 15 238 14 239 15 238 14 240 10 3 4 6 1 12 14 241 15 242 1 236 16 243 12 15 244 10 3 4 16 243 12 19 4 245 12 14 246 15 171 19 12 247 45 248 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 10 19 1 17 39 54 13 10 19 1 25 45 249 11 250 45 251 13 1 15 98 9 7 13 0 19 4 13 43 1 43 1 13 10 19 1 25 45 252 10 3 4 45 253 13 1 15 98 9 8 13 0 19 4 13 43 1 43 1 13 10 19 1 101 12 15 254 19 2 103 39 49 15 104 19 1 105 47 1 255 45 256 10 1 39 10 13 0 19 1 108 12 19 1 109 39 22 13 0 19 1 108 12 19 1 109 12 15 110 15 257 10 4 4 12 19 4 51 43 2 38 902 10 2 16 258 39 133 10 10 45 259 13 3 15 260 14 237 15 238 14 239 15 238 14 246 15 254 19 8 247 45 261 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 10 19 1 17 39 27 13 10 19 1 25 45 262 11 263 45 264 13 1 15 98 9 7 13 0 19 4 13 43 1 43 1 13 10 19 1 101 12 15 254 19 2 103 39 45 15 104 19 1 105 47 1 265 45 266 10 1 39 10 13 0 19 1 108 12 19 1 109 39 18 13 0 19 1 108 12 19 1 109 12 15 110 15 267 19 3 51 43 2 38 764 10 1 76 40 19 13 10 19 1 20 39 12 13 0 13 10 19 1 268 12 19 2 269 39 264 10 10 45 270 13 11 19 1 20 39 14 13 11 13 11 19 1 268 12 19 2 271 38 4 8 0 73 12 15 260 14 272 14 74 14 237 15 238 14 239 15 238 14 246 15 254 19 10 247 45 273 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 10 19 1 17 39 60 13 10 19 1 25 45 274 11 275 45 276 13 1 15 98 9 7 13 0 19 4 13 43 1 43 1 13 10 19 1 25 45 277 10 2 39 6 13 11 19 1 268 45 278 13 1 15 98 9 8 13 0 19 4 13 43 1 43 1 13 10 19 1 101 12 15 254 19 2 103 39 4 10 1 76 39 45 15 104 19 1 105 47 1 279 45 280 10 1 39 10 13 0 19 1 108 12 19 1 109 39 18 13 0 19 1 108 12 19 1 109 12 15 110 15 281 19 3 51 43 2 13 10 19 1 101 12 15 254 19 2 103 39 3 10 1 39 51 15 104 19 1 105 47 1 282 45 283 10 1 39 10 13 0 19 1 108 12 19 1 109 39 24 13 0 19 1 108 12 19 1 109 12 15 110 15 284 13 12 19 1 268 12 19 4 51 43 2 38 476 10 1 16 43 12 9 1 19 2 66 39 234 10 10 45 285 13 11 19 1 20 39 16 13 11 10 2 4 12 19 1 209 12 19 2 271 38 4 8 0 73 12 15 236 14 272 14 74 14 237 15 238 14 239 15 238 14 240 13 2 14 241 15 242 1 236 16 243 12 15 286 10 2 4 16 243 12 19 4 245 12 14 246 15 171 19 14 247 45 287 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 10 19 1 17 39 63 13 10 19 1 25 45 288 11 289 45 290 13 1 15 98 9 7 13 0 19 4 13 43 1 43 1 13 10 19 1 25 45 291 10 2 4 12 10 2 4 12 19 1 209 3 45 292 13 1 15 98 9 8 13 0 19 4 13 43 1 43 1 13 10 19 1 101 12 15 254 19 2 103 39 57 15 104 19 1 105 47 1 293 45 294 10 1 39 10 13 0 19 1 108 12 19 1 109 39 30 13 0 19 1 108 12 19 1 109 12 15 110 15 295 10 3 4 12 10 3 4 12 19 1 209 12 19 5 51 43 2 38 231 10 1 4 45 296 10 11 45 297 13 12 19 1 20 39 14 13 12 13 1 19 1 209 12 19 2 271 38 4 8 0 73 12 15 236 14 272 14 74 14 237 15 238 14 239 15 238 14 240 10 1 6 1 12 14 241 15 242 1 236 16 243 12 15 298 10 1 16 243 12 19 4 245 12 14 246 15 171 19 14 247 45 299 13 1 15 7 9 1 13 0 19 4 13 43 1 43 1 13 11 19 1 17 39 59 13 11 19 1 25 45 300 11 301 45 302 13 1 15 98 9 7 13 0 19 4 13 43 1 43 1 13 11 19 1 25 45 303 13 1 13 1 19 1 209 3 45 304 13 1 15 98 9 8 13 0 19 4 13 43 1 43 1 13 11 19 1 101 12 15 254 19 2 103 39 53 15 104 19 1 105 47 1 305 45 306 10 1 39 10 13 0 19 1 108 12 19 1 109 39 26 13 0 19 1 108 12 19 1 109 12 15 110 15 307 13 2 13 2 19 1 209 12 19 5 51 43 2 43 1 43 4 65 10 0 39 25 10 6 45 308 10 1 4 45 309 13 1 15 7 9 11 13 0 19 4 13 43 1 43 1 66 43 4 13 2 19 1 17 73 39 23 10 2 45 310 75 45 311 13 1 15 7 9 38 13 0 19 4 13 43 1 43 1 63 29) #133# #1# 39678) si::fset)) #1# 39678) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 59 12 19 2 60 1 0 73 29) #135=#A(t (61) (common-lisp-user::check-declarative-stuffing ext::location (defun common-lisp-user::check-declarative-stuffing) (#1# . 60396) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm common-lisp-user::all-dm-chunks common-lisp-user::chunk-set common-lisp-user::best common-lisp-user::best-val common-lisp-user::dm-esc si::%dolist-var common-lisp-user::x (common-lisp-user::isa common-lisp-user::chunk) common-lisp-user::define-chunk-spec-fct common-lisp-user::compute-activation common-lisp-user::chunk-activation = > length common-lisp-user::dm-er common-lisp-user::random-item common-lisp-user::b remove copy-list string< sort common-lisp-user::dm-rt < #:g8580 common-lisp-user::dm-stuff :time-in-ms t :module common-lisp-user::declarative :destination :output common-lisp-user::low :maintenance common-lisp-user::schedule-event-relative #:g8581 si::structure-set #:g8582 common-lisp-user::compute-activation-latency common-lisp-user::stuff-declarative-chunk :params :details string common-lisp-user::stuffing-chunk symbol-name " " concatenate #:g8583 common-lisp-user::best1 #:g8584 " " #:g8585 #Y(common-lisp-user::check-declarative-stuffing nil nil (24 45 7 26 77 77 13 0 19 1 8 12 46 9 46 10 46 11 13 3 19 1 12 39 110 10 2 45 13 75 45 14 38 93 10 1 4 51 0 13 5 13 0 15 15 19 1 16 12 19 3 17 10 2 76 39 17 13 0 19 1 18 51 2 13 0 10 3 3 51 3 38 49 13 0 19 1 18 12 13 2 19 2 19 39 10 13 0 10 3 3 51 3 38 27 13 0 19 1 18 12 13 2 19 2 20 39 14 13 0 19 1 18 51 2 10 0 6 1 51 3 10 1 5 51 1 10 1 40 -95 43 2 38 5 10 2 51 1 10 1 16 21 12 9 1 19 2 20 39 44 13 3 19 1 22 39 24 13 1 19 1 23 45 24 13 0 13 0 13 2 19 2 25 3 51 2 43 1 38 14 10 1 16 26 12 33 27 12 19 2 28 51 1 10 1 76 40 19 13 3 19 1 12 39 12 13 0 13 3 19 1 29 12 19 2 30 39 55 10 3 45 31 13 4 19 1 32 12 15 0 14 33 14 34 14 35 15 36 14 37 15 36 14 38 15 39 14 40 14 34 19 12 41 45 42 13 1 15 7 9 41 13 0 19 4 43 43 1 43 1 38 208 10 1 16 21 12 9 1 19 2 19 39 96 10 3 45 44 13 4 19 1 12 39 16 13 4 10 2 4 12 19 1 18 12 19 2 45 38 4 8 0 73 12 15 46 14 33 14 34 14 35 15 36 14 37 15 36 14 47 13 2 14 48 15 49 1 50 16 51 12 15 52 10 2 4 16 51 12 19 4 53 12 14 38 15 39 19 14 41 45 54 13 1 15 7 9 41 13 0 19 4 43 43 1 43 1 38 101 10 1 4 45 55 10 4 45 56 13 5 19 1 12 39 14 13 5 13 1 19 1 18 12 19 2 45 38 4 8 0 73 12 15 46 14 33 14 34 14 35 15 36 14 37 15 36 14 47 10 1 6 1 12 14 48 15 49 1 50 16 51 12 15 57 10 1 16 51 12 19 4 53 12 14 38 15 39 19 14 41 45 58 13 1 15 7 9 41 13 0 19 4 43 43 1 43 1 43 1 43 3 29) #135# #1# 60396) si::fset)) #1# 60396) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 26 12 19 2 27 1 0 73 29) #136=#A(t (28) (common-lisp-user::retrieved-chunk ext::location (defun common-lisp-user::retrieved-chunk) (#1# . 64090) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk #:g8588 #:g8589 si::structure-set common-lisp-user::dm-pending-request common-lisp-user::complete-request common-lisp-user::dm-retrieved-chunk-hook si::%dolist-var common-lisp-user::x common-lisp-user::retrieval :time-in-ms t :module common-lisp-user::declarative :priority :max common-lisp-user::schedule-set-buffer-chunk common-lisp-user::update-declarative-finsts #Y(common-lisp-user::retrieved-chunk nil nil (24 45 7 24 45 8 26 10 1 45 9 75 45 10 13 1 15 7 9 1 13 0 19 4 11 43 1 43 1 13 1 19 1 12 12 19 1 13 13 1 19 1 14 4 39 36 13 1 19 1 14 45 15 75 45 16 38 18 10 1 4 51 0 13 0 13 2 20 1 23 10 1 5 51 1 10 1 40 -20 43 2 15 17 13 0 9 0 14 18 14 19 14 20 15 21 14 22 14 23 19 9 24 13 1 13 0 19 2 25 29) #136# #1# 64090) si::fset)) #1# 64090) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #137=#A(t (30) (common-lisp-user::stuff-declarative-chunk ext::location (defun common-lisp-user::stuff-declarative-chunk) (#1# . 65005) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::retrieval :time-in-ms t :module common-lisp-user::declarative :priority :max :requested common-lisp-user::schedule-set-buffer-chunk #:g8592 common-lisp-user::dm-stuff common-lisp-user::check-declarative-stuffing :destination :output common-lisp-user::low :maintenance common-lisp-user::schedule-event-relative #:g8593 si::structure-set #Y(common-lisp-user::stuff-declarative-chunk nil nil (24 45 7 24 45 8 26 15 9 13 0 9 0 14 10 14 11 14 12 15 13 14 14 14 15 14 16 77 19 11 17 10 1 45 18 13 2 19 1 19 12 15 20 14 10 14 11 14 12 15 13 14 21 15 13 14 22 15 23 14 24 14 11 19 12 25 45 26 13 1 15 7 9 41 13 0 19 4 27 43 1 43 1 29) #137# #1# 65005) si::fset)) #1# 65005) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #138=#A(t (30) (common-lisp-user::update-declarative-finsts ext::location (defun common-lisp-user::update-declarative-finsts) (#1# . 65506) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk #:g8601 common-lisp-user::dm-finsts :key car :test common-lisp-user::eq-chunks-fct remove #:g8602 si::structure-set common-lisp-user::mp-time-ms #:g8605 #:g8603 #:g8604 #:g8606 length common-lisp-user::dm-num-finsts min subseq #:g8607 #Y(common-lisp-user::update-declarative-finsts nil nil (24 45 7 24 45 8 26 10 1 45 9 13 1 13 2 19 1 10 12 14 11 33 12 12 14 13 33 14 12 19 6 15 45 16 13 1 15 7 9 21 13 0 19 4 17 43 1 43 1 13 0 19 0 18 3 45 19 10 2 45 20 13 1 13 0 19 1 10 3 45 21 13 1 15 7 9 21 13 0 19 4 17 43 3 10 1 45 22 13 2 19 1 10 12 9 0 13 2 19 1 10 16 23 12 13 2 19 1 24 12 19 2 25 12 19 3 26 45 27 13 1 15 7 9 21 13 0 19 4 17 43 1 43 1 29) #138# #1# 65506) si::fset)) #1# 65506) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #139=#A(t (23) (common-lisp-user::retrieval-failure ext::location (defun common-lisp-user::retrieval-failure) (#1# . 65789) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm #:g8612 #:g8613 si::structure-set common-lisp-user::dm-pending-request common-lisp-user::complete-request common-lisp-user::dm-retrieved-chunk-hook si::%dolist-var common-lisp-user::x common-lisp-user::retrieval common-lisp-user::set-buffer-failure #:g8614 t #:g8615 #Y(common-lisp-user::retrieval-failure nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 7 9 1 13 0 19 4 10 43 1 43 1 13 0 19 1 11 12 19 1 12 13 0 19 1 13 4 39 35 13 0 19 1 13 45 14 75 45 15 38 17 10 1 4 51 0 13 0 77 20 1 23 10 1 5 51 1 10 1 40 -19 43 2 15 16 19 1 17 10 0 45 18 11 19 45 20 13 1 15 7 9 2 13 0 19 4 10 43 1 43 1 29) #139# #1# 65789) si::fset)) #1# 65789) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 198 12 19 2 199 1 0 73 29) #140=#A(t (200) (common-lisp-user::dm-params ext::location (defun common-lisp-user::dm-params) (#1# . 66325) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::param) common-lisp-user::dm common-lisp-user::param consp common-lisp-user::dm-chunks (:esc :ol :bll :mas) find *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Changing declarative parameters with chunks in dm not supported." format finish-output "Results may not be what one expects." :esc #:g8704 #:g8705 si::structure-set :er #:g8706 #:g8707 :ol #:g8708 #:g8709 :blc #:g8710 #:g8711 :ans #:g8712 #:g8713 :pas #:g8714 #:g8715 :lf #:g8716 common-lisp-user::seconds->ms #:g8717 :le #:g8718 #:g8719 :mp #:g8720 #:g8721 :ms #:g8722 #:g8723 :md #:g8724 #:g8725 :rt #:g8726 #:g8727 :bll common-lisp-user::dm-ol 1.0 >= "Setting :bll to a value >= 1 when optimized learning is enabled will result in complex number activations and probably errors." #:g8728 1/1000 - expt log #:g8729 #:g8730 #:g8731 :mas #:g8732 #:g8733 #:g8734 #:g8735 :act #:g8736 #:g8737 :sact #:g8738 #:g8739 :declarative-num-finsts #:g8740 #:g8741 :declarative-finst-span #:g8742 common-lisp-user::sgp common-lisp-user::safe-seconds->ms #:g8743 :sim-hook #:g8744 #:g8745 :sji-hook #:g8746 #:g8747 :w-hook #:g8748 #:g8749 :bl-hook #:g8750 #:g8751 :spreading-hook #:g8752 #:g8753 :partial-matching-hook #:g8754 #:g8755 :noise-hook #:g8756 #:g8757 :declarative-stuffing #:g8758 numberp #:g8759 :activation-offsets common-lisp-user::dm-offsets member "Setting parameter ~s failed because ~s already on the hook." #:g8762 #:g8760 #:g8761 #:g8763 #:g8764 :retrieval-request-hook common-lisp-user::dm-retrieval-request-hook "Setting parameter ~s failed because ~s already on the hook." #:g8767 #:g8765 #:g8766 #:g8768 #:g8769 :retrieval-set-hook common-lisp-user::dm-retrieval-set-hook "Setting parameter ~s failed because ~s already on the hook." #:g8772 #:g8770 #:g8771 #:g8773 #:g8774 :retrieved-chunk-hook common-lisp-user::dm-retrieved-chunk-hook "Setting parameter ~s failed because ~s already on the hook." #:g8777 #:g8775 #:g8776 #:g8778 #:g8779 :chunk-merge-hook common-lisp-user::dm-chunk-merge-hook "Setting parameter ~s failed because ~s already on the hook." #:g8782 #:g8780 #:g8781 #:g8783 #:g8784 :chunk-add-hook common-lisp-user::dm-chunk-add-hook "Setting parameter ~s failed because ~s already on the hook." #:g8787 #:g8785 #:g8786 #:g8788 #:g8789 :nsji #:g8790 #:g8791 common-lisp-user::dm-blc common-lisp-user::dm-ans common-lisp-user::dm-pas common-lisp-user::dm-lf common-lisp-user::ms->seconds common-lisp-user::dm-le common-lisp-user::dm-mp common-lisp-user::dm-ms common-lisp-user::dm-md common-lisp-user::dm-rt common-lisp-user::dm-bll common-lisp-user::dm-mas :sa "The :SA parameter is no longer used" common-lisp-user::dm-act common-lisp-user::dm-sact common-lisp-user::dm-num-finsts common-lisp-user::dm-finst-span common-lisp-user::dm-sim-hook common-lisp-user::dm-sji-hook common-lisp-user::dm-w-hook common-lisp-user::dm-bl-hook common-lisp-user::dm-spreading-hook common-lisp-user::dm-partial-matching-hook common-lisp-user::dm-noise-hook common-lisp-user::dm-stuff common-lisp-user::dm-nsji #Y(common-lisp-user::dm-params nil nil (24 45 7 24 45 8 26 10 0 16 9 39 1813 13 1 19 1 10 39 10 10 0 4 12 15 11 19 2 12 39 73 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 14 13 19 1 22 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 23 19 5 21 14 13 19 1 22 10 0 4 42 24 27 10 1 45 25 10 1 5 45 26 13 1 15 7 9 3 13 0 19 4 27 43 1 43 1 38 1689 42 28 27 10 1 45 29 10 1 5 45 30 13 1 15 7 9 4 13 0 19 4 27 43 1 43 1 38 1660 42 31 27 10 1 45 32 10 1 5 45 33 13 1 15 7 9 5 13 0 19 4 27 43 1 43 1 38 1631 42 34 27 10 1 45 35 10 1 5 45 36 13 1 15 7 9 6 13 0 19 4 27 43 1 43 1 38 1602 42 37 27 10 1 45 38 10 1 5 45 39 13 1 15 7 9 7 13 0 19 4 27 43 1 43 1 38 1573 42 40 27 10 1 45 41 10 1 5 45 42 13 1 15 7 9 8 13 0 19 4 27 43 1 43 1 38 1544 42 43 35 10 1 45 44 10 1 5 12 19 1 45 45 46 13 1 15 7 9 9 13 0 19 4 27 43 1 43 1 10 0 5 73 38 1507 42 47 27 10 1 45 48 10 1 5 45 49 13 1 15 7 9 10 13 0 19 4 27 43 1 43 1 38 1478 42 50 27 10 1 45 51 10 1 5 45 52 13 1 15 7 9 11 13 0 19 4 27 43 1 43 1 38 1449 42 53 27 10 1 45 54 10 1 5 45 55 13 1 15 7 9 12 13 0 19 4 27 43 1 43 1 38 1420 42 56 27 10 1 45 57 10 1 5 45 58 13 1 15 7 9 13 13 0 19 4 27 43 1 43 1 38 1391 42 59 27 10 1 45 60 10 1 5 45 61 13 1 15 7 9 14 13 0 19 4 27 43 1 43 1 38 1362 42 62 127 13 1 19 1 63 39 15 10 0 5 39 10 10 0 5 12 15 64 19 2 65 39 37 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 66 19 5 21 14 13 19 1 22 10 0 5 39 37 10 1 45 67 15 68 10 1 5 12 19 1 69 17 70 12 19 1 71 45 72 13 1 15 7 9 44 13 0 19 4 27 43 1 43 1 10 1 45 73 10 1 5 45 74 13 1 15 7 9 15 13 0 19 4 27 43 1 43 1 38 1233 42 75 51 10 1 45 76 10 1 5 45 77 13 1 15 7 9 16 13 0 19 4 27 43 1 43 1 10 1 45 78 10 1 5 45 79 13 1 15 7 9 17 13 0 19 4 27 43 1 43 1 38 1180 42 80 27 10 1 45 81 10 1 5 45 82 13 1 15 7 9 18 13 0 19 4 27 43 1 43 1 38 1151 42 83 27 10 1 45 84 10 1 5 45 85 13 1 15 7 9 36 13 0 19 4 27 43 1 43 1 38 1122 42 86 27 10 1 45 87 10 1 5 45 88 13 1 15 7 9 19 13 0 19 4 27 43 1 43 1 38 1093 42 89 37 10 1 45 90 10 1 5 12 15 91 19 2 92 45 93 13 1 15 7 9 20 13 0 19 4 27 43 1 43 1 10 0 5 73 38 1054 42 94 27 10 1 45 95 10 1 5 45 96 13 1 15 7 9 22 13 0 19 4 27 43 1 43 1 38 1025 42 97 27 10 1 45 98 10 1 5 45 99 13 1 15 7 9 23 13 0 19 4 27 43 1 43 1 38 996 42 100 27 10 1 45 101 10 1 5 45 102 13 1 15 7 9 24 13 0 19 4 27 43 1 43 1 38 967 42 103 27 10 1 45 104 10 1 5 45 105 13 1 15 7 9 25 13 0 19 4 27 43 1 43 1 38 938 42 106 27 10 1 45 107 10 1 5 45 108 13 1 15 7 9 26 13 0 19 4 27 43 1 43 1 38 909 42 109 27 10 1 45 110 10 1 5 45 111 13 1 15 7 9 27 13 0 19 4 27 43 1 43 1 38 880 42 112 27 10 1 45 113 10 1 5 45 114 13 1 15 7 9 28 13 0 19 4 27 43 1 43 1 38 851 42 115 49 10 1 45 116 10 1 5 16 117 39 12 10 1 5 12 15 91 19 2 92 38 4 10 1 5 45 118 13 1 15 7 9 40 13 0 19 4 27 43 1 43 1 10 0 5 73 38 800 42 119 126 10 0 5 39 97 10 0 5 12 13 1 19 1 120 12 19 2 121 39 48 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 122 14 119 10 0 5 12 19 7 21 12 14 13 19 1 22 22 73 38 33 10 0 5 45 123 10 2 45 124 13 1 13 0 19 1 120 3 45 125 13 1 15 7 9 29 13 0 19 4 27 43 3 38 23 10 1 45 126 75 45 127 13 1 15 7 9 29 13 0 19 4 27 43 1 43 1 38 672 42 128 126 10 0 5 39 97 10 0 5 12 13 1 19 1 129 12 19 2 121 39 48 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 130 14 128 10 0 5 12 19 7 21 12 14 13 19 1 22 22 73 38 33 10 0 5 45 131 10 2 45 132 13 1 13 0 19 1 129 3 45 133 13 1 15 7 9 30 13 0 19 4 27 43 3 38 23 10 1 45 134 75 45 135 13 1 15 7 9 30 13 0 19 4 27 43 1 43 1 38 544 42 136 126 10 0 5 39 97 10 0 5 12 13 1 19 1 137 12 19 2 121 39 48 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 138 14 136 10 0 5 12 19 7 21 12 14 13 19 1 22 22 73 38 33 10 0 5 45 139 10 2 45 140 13 1 13 0 19 1 137 3 45 141 13 1 15 7 9 31 13 0 19 4 27 43 3 38 23 10 1 45 142 75 45 143 13 1 15 7 9 31 13 0 19 4 27 43 1 43 1 38 416 42 144 126 10 0 5 39 97 10 0 5 12 13 1 19 1 145 12 19 2 121 39 48 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 146 14 144 10 0 5 12 19 7 21 12 14 13 19 1 22 22 73 38 33 10 0 5 45 147 10 2 45 148 13 1 13 0 19 1 145 3 45 149 13 1 15 7 9 32 13 0 19 4 27 43 3 38 23 10 1 45 150 75 45 151 13 1 15 7 9 32 13 0 19 4 27 43 1 43 1 38 288 42 152 126 10 0 5 39 97 10 0 5 12 13 1 19 1 153 12 19 2 121 39 48 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 154 14 152 10 0 5 12 19 7 21 12 14 13 19 1 22 22 73 38 33 10 0 5 45 155 10 2 45 156 13 1 13 0 19 1 153 3 45 157 13 1 15 7 9 33 13 0 19 4 27 43 3 38 23 10 1 45 158 75 45 159 13 1 15 7 9 33 13 0 19 4 27 43 1 43 1 38 160 42 160 126 10 0 5 39 97 10 0 5 12 13 1 19 1 161 12 19 2 121 39 48 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 162 14 160 10 0 5 12 19 7 21 12 14 13 19 1 22 22 73 38 33 10 0 5 45 163 10 2 45 164 13 1 13 0 19 1 161 3 45 165 13 1 15 7 9 34 13 0 19 4 27 43 3 38 23 10 1 45 166 75 45 167 13 1 15 7 9 34 13 0 19 4 27 43 1 43 1 38 32 42 168 27 10 1 45 169 10 1 5 45 170 13 1 15 7 9 42 13 0 19 4 27 43 1 43 1 38 3 75 73 38 377 10 0 42 34 8 13 1 19 1 171 38 365 42 37 8 13 1 19 1 172 38 355 42 40 8 13 1 19 1 173 38 345 42 43 12 13 1 19 1 174 12 19 1 175 38 331 42 47 8 13 1 19 1 176 38 321 42 50 8 13 1 19 1 177 38 311 42 53 8 13 1 19 1 178 38 301 42 56 8 13 1 19 1 179 38 291 42 59 8 13 1 19 1 180 38 281 42 62 8 13 1 19 1 181 38 271 42 75 8 13 1 19 1 182 38 261 42 183 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 184 19 5 21 12 14 13 19 1 22 22 73 38 217 42 80 8 13 1 19 1 185 38 207 42 83 8 13 1 19 1 186 38 197 42 86 8 13 1 19 1 187 38 187 42 89 12 13 1 19 1 188 12 19 1 175 38 173 42 94 8 13 1 19 1 189 38 163 42 97 8 13 1 19 1 190 38 153 42 100 8 13 1 19 1 191 38 143 42 103 8 13 1 19 1 192 38 133 42 106 8 13 1 19 1 193 38 123 42 109 8 13 1 19 1 194 38 113 42 112 8 13 1 19 1 195 38 103 42 119 8 13 1 19 1 120 38 93 42 115 28 13 1 19 1 196 16 117 39 12 13 1 19 1 196 12 19 1 175 38 6 13 1 19 1 196 38 63 42 128 8 13 1 19 1 129 38 53 42 136 8 13 1 19 1 137 38 43 42 144 8 13 1 19 1 145 38 33 42 152 8 13 1 19 1 153 38 23 42 160 8 13 1 19 1 161 38 13 42 168 8 13 1 19 1 197 38 3 75 73 29) #140# #1# 66325) si::fset)) #1# 66325) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 38 12 19 2 39 1 0 73 29) #141=#A(t (40) (common-lisp-user::merge-chunk-into-dm ext::location (defun common-lisp-user::merge-chunk-into-dm) (#1# . 72697) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::buffer common-lisp-user::chunk &optional (common-lisp-user::ignore-stuffing nil)) common-lisp-user::dm common-lisp-user::buffer common-lisp-user::chunk common-lisp-user::ignore-stuffing common-lisp-user::dm-stuff common-lisp-user::retrieval eq common-lisp-user::dm-stuff-event #:g8794 common-lisp-user::check-declarative-stuffing :module common-lisp-user::declarative :destination :output common-lisp-user::low :priority :min :maintenance t common-lisp-user::schedule-event-now #:g8795 si::structure-set common-lisp-user::hash-chunk-contents common-lisp-user::dm-chunk-hash-table gethash common-lisp-user::existing common-lisp-user::merge-chunks-fct common-lisp-user::dm-chunk-merge-hook si::%dolist-var common-lisp-user::x common-lisp-user::add-chunk-into-dm #Y(common-lisp-user::merge-chunk-into-dm nil nil (24 45 7 24 45 8 24 45 9 25 40 2 77 46 10 26 13 3 19 1 11 39 12 13 2 1 12 17 13 39 4 10 0 76 39 55 13 3 19 1 14 76 39 47 10 3 45 15 15 16 14 17 15 18 14 19 15 18 14 20 15 21 14 22 14 23 14 24 14 25 19 11 26 45 27 13 1 15 7 9 41 13 0 19 4 28 43 1 43 1 13 1 19 1 29 12 13 3 19 1 30 12 19 2 31 45 32 10 0 39 56 13 0 13 2 19 2 33 13 4 19 1 34 4 73 39 38 13 4 19 1 34 45 35 75 45 36 38 18 10 1 4 51 0 13 0 13 4 20 1 23 10 1 5 51 1 10 1 40 -20 75 73 43 2 38 8 13 4 13 2 19 2 37 43 1 29) #141# #1# 72697) si::fset)) #1# 72697) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 68 12 19 2 69 1 0 73 29) #142=#A(t (70) (common-lisp-user::add-chunk-into-dm ext::location (defun common-lisp-user::add-chunk-into-dm) (#1# . 74245) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::chunk-slots-vector common-lisp-user::dm-chunks assoc common-lisp-user::it #:g8836 #:g8834 #:g8835 rplacd #:g8839 #:g8837 #:g8838 si::structure-set common-lisp-user::make-chunk-immutable common-lisp-user::hash-chunk-contents common-lisp-user::key common-lisp-user::chunk-fast-merge-key-setf common-lisp-user::dm-chunk-hash-table si::hash-set t common-lisp-user::chunk-in-dm-setf common-lisp-user::mp-time-ms common-lisp-user::chunk-creation-time-setf common-lisp-user::chunk-reference-list-setf common-lisp-user::chunk-reference-count-setf common-lisp-user::chunk-buffer-set-invalid-setf common-lisp-user::dm-sa #:g8855 #:g8857 common-lisp-user::chunk-fan-out + #:g8856 common-lisp-user::chunk-fan-out-setf common-lisp-user::slot common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::val common-lisp-user::chunk-p-fct #Y(nil nil nil (24 45 41 26 13 1 13 0 19 2 42 45 43 13 0 19 1 44 73 39 6 10 0 6 1 73 43 1 29) #142# #1# 74245) common-lisp-user::chunk-filled-slots-list-fct mapcan common-lisp-user::new-fans si::%dolist-var common-lisp-user::j #:g8861 #:g8863 #:g8862 common-lisp-user::x count #Y(nil nil nil (24 45 54 26 13 0 13 0 13 1 19 2 55 3 73 29) #142# #1# 74245) remove-duplicates mapcar common-lisp-user::chunk-fan-in-setf common-lisp-user::chunk-fan-in #:g8866 #:g8868 #:g8867 #:g8871 #:g8869 #:g8870 common-lisp-user::dm-chunk-add-hook #Y(common-lisp-user::add-chunk-into-dm nil nil (24 45 7 24 45 8 26 13 0 19 1 9 12 13 1 19 1 10 12 19 2 11 45 12 10 0 39 29 10 1 45 13 10 1 45 14 13 1 10 0 5 3 45 15 13 1 10 0 17 16 10 0 43 3 38 41 13 1 19 1 9 12 10 1 6 1 3 45 17 10 3 45 18 13 1 13 0 19 1 10 3 45 19 13 1 15 7 9 0 13 0 19 4 20 43 3 43 1 13 0 19 1 21 13 0 19 1 22 45 23 13 1 13 0 19 2 24 13 0 13 2 19 1 25 12 13 1 19 3 26 43 1 13 0 14 27 19 2 28 13 0 19 0 29 12 19 2 30 13 0 19 0 29 6 1 12 19 2 31 13 0 9 1 19 2 32 13 0 14 27 19 2 33 13 1 19 1 34 39 200 10 0 45 35 8 1 45 36 13 1 19 1 37 12 13 0 19 2 38 45 39 13 2 13 0 19 2 40 43 3 34 45 12 13 0 19 1 46 12 19 2 47 45 48 10 0 45 49 75 45 50 38 41 10 1 4 51 0 10 0 45 51 8 1 45 52 13 1 19 1 37 12 13 0 19 2 38 45 53 13 2 13 0 19 2 40 43 3 10 1 5 51 1 10 1 40 -43 43 2 13 1 34 56 12 13 0 19 1 57 12 19 2 58 12 19 2 59 43 1 13 0 13 0 19 1 60 12 19 2 11 45 12 10 0 39 32 10 0 45 61 8 1 45 62 10 1 5 12 13 0 19 2 38 45 63 13 2 10 0 17 16 10 0 43 3 38 31 13 1 8 1 3 45 64 10 2 45 65 13 1 13 0 19 1 60 3 45 66 13 1 13 0 19 2 59 43 3 43 1 13 1 19 1 67 4 73 39 38 13 1 19 1 67 45 49 75 45 54 38 18 10 1 4 51 0 13 0 13 2 20 1 23 10 1 5 51 1 10 1 40 -20 75 73 43 2 29) #142# #1# 74245) si::fset)) #1# 74245) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 1 0 73 29) #143=#A(t (16) (common-lisp-user::add-dm ext::location (defmacro common-lisp-user::add-dm) (#1# . 76168) ext::annotate :lambda-list (&rest common-lisp-user::chunk-list) #:g8873 #:g8872 #:g8874 common-lisp-user::chunk-list common-lisp-user::add-dm-fct quote #Y(common-lisp-user::add-dm nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #143# #1# 76168) t si::fset)) #1# 76168) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #144=#A(t (29) (common-lisp-user::add-dm-fct ext::location (defun common-lisp-user::add-dm-fct) (#1# . 76644) ext::annotate :lambda-list (common-lisp-user::chunk-definitions) common-lisp-user::chunk-definitions common-lisp-user::declarative common-lisp-user::get-module-fct common-lisp-user::dm common-lisp-user::dm-p common-lisp-user::define-chunks-fct common-lisp-user::chunks si::%dolist-var common-lisp-user::chunk common-lisp-user::add-chunk-into-dm *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Could not create chunks because no declarative module was found" format finish-output #Y(common-lisp-user::add-dm-fct nil nil (24 45 7 26 15 8 19 1 9 45 10 13 0 19 1 11 39 50 13 1 19 1 12 45 13 10 0 45 14 75 45 15 38 18 10 1 4 51 0 13 3 13 0 19 2 16 10 1 5 51 1 10 1 40 -20 75 51 0 10 2 73 43 2 43 1 38 40 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 19 5 25 12 14 17 19 1 26 22 73 43 1 29) #144# #1# 76644) si::fset)) #1# 76644) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #145=#A(t (21) (common-lisp-user::sort-for-binding-dm ext::location (defun common-lisp-user::sort-for-binding-dm) (#1# . 77405) ext::annotate :lambda-list (common-lisp-user::ordering) common-lisp-user::ordering common-lisp-user::result si::%dolist-var common-lisp-user::x common-lisp-user::y find #Y(nil nil nil (24 45 11 26 10 1 4 12 10 0 5 12 19 2 12 29) #145# #1# 77405) position-if common-lisp-user::it common-lisp-user::splice-into-position-des #:g8886 nconc #Y(common-lisp-user::sort-for-binding-dm nil nil (24 45 7 26 75 45 8 10 1 45 9 75 45 10 38 57 10 1 4 51 0 34 13 12 13 2 19 2 14 45 15 10 0 39 14 13 3 13 0 13 1 19 3 16 51 3 38 18 10 1 6 1 45 17 13 4 13 0 19 2 18 51 4 43 1 43 1 10 1 5 51 1 10 1 40 -59 75 51 0 10 2 73 43 2 43 1 29) #145# #1# 77405) si::fset)) #1# 77405) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 1 0 73 29) #146=#A(t (16) (common-lisp-user::merge-dm ext::location (defmacro common-lisp-user::merge-dm) (#1# . 78240) ext::annotate :lambda-list (&rest common-lisp-user::chunk-list) #:g8888 #:g8887 #:g8889 common-lisp-user::chunk-list common-lisp-user::merge-dm-fct quote #Y(common-lisp-user::merge-dm nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #146# #1# 78240) t si::fset)) #1# 78240) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 62 12 19 2 63 1 0 73 29) #147=#A(t (64) (common-lisp-user::merge-dm-fct ext::location (defun common-lisp-user::merge-dm-fct) (#1# . 78320) ext::annotate :lambda-list (common-lisp-user::chunk-definitions) common-lisp-user::chunk-definitions common-lisp-user::declarative common-lisp-user::get-module-fct common-lisp-user::dm common-lisp-user::dm-p common-lisp-user::define-chunks-fct common-lisp-user::chunks common-lisp-user::x common-lisp-user::slot common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::val common-lisp-user::chunk-p-fct find #Y(nil nil nil (24 45 15 26 13 1 13 0 19 2 16 45 17 13 0 19 1 18 39 8 13 0 13 3 19 2 19 73 39 6 10 0 6 1 73 43 1 29) #147# #1# 78320) common-lisp-user::chunk-filled-slots-list-fct mapcan #Y(nil nil nil (24 45 14 26 13 0 34 20 12 13 0 19 1 21 12 19 2 22 3 73 29) #147# #1# 78320) mapcar common-lisp-user::ordering common-lisp-user::circular-references common-lisp-user::printing-module #:g8898 #:g8897 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g8899 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #129# common-lisp-user::mp-models length > common-lisp-user::current-model "Chunks in call to merge-dm have circular references." format finish-output #130# #131# #:g8901 #:g8900 #:g8902 "  Because of that there is no safe order for merging and they will be merged in the order provided." si::%dolist-var common-lisp-user::chunk common-lisp-user::merge-chunk-into-dm car common-lisp-user::sort-for-binding-dm #93# common-lisp-user::current-mp-fct "Could not create chunks because no declarative module was found" #Y(common-lisp-user::merge-dm-fct nil nil (24 45 7 26 15 8 19 1 9 45 10 13 0 19 1 11 39 462 13 1 19 1 12 45 13 34 23 12 13 0 19 2 24 45 25 13 0 19 1 26 39 380 15 27 19 1 9 47 1 28 45 29 10 1 39 10 13 0 19 1 30 12 19 1 31 39 142 13 0 19 1 30 12 19 1 31 45 32 13 1 19 1 33 76 40 121 10 0 76 40 27 13 0 11 34 17 35 40 19 11 36 40 15 13 0 11 37 17 35 39 7 14 34 11 38 17 39 39 33 14 34 15 40 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 19 5 46 14 34 19 1 47 38 56 14 34 15 48 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 19 5 46 14 34 19 1 47 13 0 15 49 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 19 5 46 43 1 43 2 15 27 19 1 9 47 1 50 45 51 10 1 39 10 13 0 19 1 30 12 19 1 31 39 142 13 0 19 1 30 12 19 1 31 45 52 13 1 19 1 33 76 40 121 10 0 76 40 27 13 0 11 34 17 35 40 19 11 36 40 15 13 0 11 37 17 35 39 7 14 34 11 38 17 39 39 33 14 34 15 40 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 53 19 5 46 14 34 19 1 47 38 56 14 34 15 48 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 53 19 5 46 14 34 19 1 47 13 0 15 49 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 53 19 5 46 43 1 43 2 10 1 45 54 75 45 55 38 21 10 1 4 51 0 13 4 77 13 0 14 37 19 4 56 10 1 5 51 1 10 1 40 -23 75 51 0 10 3 73 43 2 38 55 15 57 13 0 19 1 58 12 19 2 24 51 1 10 1 45 54 75 45 55 38 21 10 1 4 51 0 13 4 77 13 0 14 37 19 4 56 10 1 5 51 1 10 1 40 -23 75 51 0 10 3 73 43 2 43 2 38 40 14 34 15 59 19 0 60 73 39 12 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 61 19 5 46 12 14 34 19 1 47 22 73 43 1 29) #147# #1# 78320) si::fset)) #1# 78320) #Y(si::bytecodes nil nil (15 0 15 1 14 2 14 3 11 4 6 2 12 14 5 1 6 6 1 12 14 7 1 24 12 14 25 14 26 19 9 27 6 1 12 14 28 14 29 77 19 3 30 12 14 31 14 29 77 19 3 30 12 14 32 14 29 77 19 3 30 12 14 33 14 34 15 35 14 36 15 37 14 38 15 39 14 40 15 41 19 9 30 12 14 42 14 34 15 43 14 36 77 14 38 15 44 14 40 15 45 19 9 30 12 14 46 14 34 15 43 14 36 77 14 38 15 47 14 40 15 48 19 9 30 12 14 49 14 34 15 50 14 36 15 51 14 38 15 52 14 40 15 53 19 9 30 12 14 54 14 34 15 50 14 36 15 51 14 38 15 55 14 40 15 56 19 9 30 12 14 57 14 34 15 58 14 36 77 14 38 15 59 14 40 15 60 19 9 30 12 14 61 14 34 15 35 14 36 15 37 14 38 15 62 14 40 15 63 19 9 30 12 14 64 14 34 15 35 14 36 15 65 14 38 15 66 14 40 15 67 19 9 30 12 14 68 14 34 15 35 14 36 15 37 14 38 15 69 14 40 15 70 19 9 30 12 14 71 14 34 15 43 14 36 77 14 38 15 72 14 40 15 73 19 9 30 12 14 74 14 34 15 58 14 36 77 14 38 15 75 14 40 15 76 19 9 30 12 14 77 14 34 15 43 14 36 77 14 38 15 78 14 40 15 79 19 9 30 12 14 80 14 34 1 86 12 14 36 77 14 38 15 87 14 40 15 88 19 9 30 12 14 89 14 34 1 90 12 14 36 77 14 38 15 91 14 40 15 92 19 9 30 12 14 93 14 34 15 94 14 36 9 4 14 38 15 95 14 40 15 96 19 9 30 12 14 97 14 34 15 94 14 36 15 98 14 38 15 99 14 40 15 100 19 9 30 12 14 101 14 34 15 102 14 36 77 14 38 15 103 14 40 15 104 19 9 30 12 14 105 14 34 15 102 14 36 77 14 38 15 106 14 40 15 107 19 9 30 12 14 108 14 34 15 102 14 36 77 14 38 15 109 14 40 15 110 19 9 30 12 14 111 14 34 15 102 14 36 77 14 38 15 112 14 40 15 113 19 9 30 12 14 114 14 34 15 102 14 36 77 14 38 15 115 14 40 15 116 19 9 30 12 14 117 14 34 15 102 14 36 77 14 38 15 118 14 40 15 119 19 9 30 12 14 120 14 34 15 102 14 36 77 14 38 15 121 14 40 15 122 19 9 30 12 14 123 14 34 15 102 14 36 77 14 38 15 124 14 40 15 125 19 9 30 12 14 126 14 34 15 102 14 36 77 14 38 15 127 14 40 15 128 19 9 30 12 14 129 14 34 15 102 14 36 77 14 38 15 130 14 40 15 131 19 9 30 12 14 132 14 34 15 102 14 36 77 14 38 15 133 14 40 15 134 19 9 30 12 14 135 14 34 15 102 14 36 77 14 38 15 136 14 40 15 137 19 9 30 12 14 138 14 34 15 102 14 36 77 14 38 15 139 14 40 15 140 19 9 30 12 14 141 14 34 1 145 12 14 36 15 144 14 38 15 146 14 40 15 147 19 9 30 6 33 12 14 148 15 149 14 40 15 150 14 151 1 153 12 14 154 15 155 14 156 15 157 14 158 15 159 14 160 15 161 14 162 15 163 19 19 164 29) #148=#A(t (165) (common-lisp-user::declarative common-lisp-user::retrieval :request-params :recently-retrieved :mp-value :queries common-lisp-user::recently-retrieved :status-fn common-lisp-user::printing-module common-lisp-user::get-module-fct #:g8905 #:g8904 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" "  recently-retrieved nil: ~S" (common-lisp-user::recently-retrieved nil) common-lisp-user::query-buffer format #:g8907 #:g8906 "  recently-retrieved t  : ~S" (common-lisp-user::recently-retrieved t) #Y(nil nil nil (26 15 8 19 1 9 47 1 10 45 11 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 26 13 0 19 1 13 12 19 1 14 12 15 15 15 16 15 1 15 17 19 2 18 12 19 4 19 43 2 15 8 19 1 9 47 1 20 45 21 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 73 39 26 13 0 19 1 13 12 19 1 14 12 15 15 15 22 15 1 15 23 19 2 18 12 19 4 19 43 2 29) #148# #1# 80070) :trackable t common-lisp-user::define-buffer-fct :esc :owner common-lisp-user::define-parameter :er :ol :blc :valid-test numberp :default-value #115# :warning "a number" :documentation "Base Level Constant" :ans common-lisp-user::posnumornil "a positive number or nil" "Activation Noise S" :pas "a positive number or nil" "Permanent Activation noise S" :lf common-lisp-user::nonneg 1.0 "a non-negative number" "Latency Factor" :le "a non-negative number" "Latency Exponent" :mp common-lisp-user::numornil "a number or nil" "Mismatch Penalty" :ms "a number" "Maximum Similarity" :md -1.0 "a number" "Maximum Difference" :rt "a number" "Retrieval Threshold" :bll "a positive number or nil" "Base Level Learning" :mas "a number or nil" "Maximum Associative Strength" :declarative-stuffing "a positive number or nil" "Period of declarative buffer stuffing attempts" :act common-lisp-user::val eq common-lisp-user::high common-lisp-user::medium common-lisp-user::low #Y(nil nil nil (24 45 81 26 10 0 76 73 40 34 13 0 11 26 17 82 73 40 25 13 0 1 83 17 82 73 40 16 13 0 1 84 17 82 73 40 7 13 0 1 85 17 82 29) #148# #1# 80070) "T, nil, high, medium, or low" "Activation Trace" :sact #Y(nil nil nil (24 45 81 26 10 0 76 73 40 34 13 0 11 26 17 82 73 40 25 13 0 1 83 17 82 73 40 16 13 0 1 84 17 82 73 40 7 13 0 1 85 17 82 29) #148# #1# 80070) "T, nil, high, medium, or low" "Save Activation Trace" :declarative-num-finsts common-lisp-user::posnum "positive number" "Number of declarative finst markers" :declarative-finst-span 3.0 "positive number" "Duration of declarative finst markers in seconds" :sim-hook common-lisp-user::fctornil "a function or nil" "Similarity hook" :sji-hook "a function or nil" "Sji hook" :w-hook "a function or nil" "Wkj hook" :bl-hook "a function or nil" "Baselevel component hook" :spreading-hook "a function or nil" "Spreading component hook" :partial-matching-hook "a function or nil" "Partial matching component hook" :noise-hook "a function or nil" "Noise component hook" :activation-offsets "a function or nil" "Add additional activation equation components" :retrieval-request-hook "a function or nil" "Retrieval notification hook" :retrieval-set-hook "a function or nil" "Prospective retrievals hook" :retrieved-chunk-hook "a function or nil" "Retrieval completion hook" :chunk-merge-hook "a function or nil" "Hook called when a chunk is merged into dm" :chunk-add-hook "a function or nil" "Hook called when a chunk is added to dm" :nsji common-lisp-user::x common-lisp-user::tornil warn #Y(nil nil nil (24 45 142 26 13 0 19 1 143 73 40 7 13 0 1 144 17 82 29) #148# #1# 80070) "T, warn, or nil" "Indicate whether S-log(fan) is allowed to return negative values" :version "2.0" "The declarative memory module stores chunks from the buffers for retrieval" :creation common-lisp-user::make-dm #Y(nil nil nil (24 45 142 26 19 0 152 29) #148# #1# 80070) :reset (common-lisp-user::reset-dm-module common-lisp-user::secondary-reset-dm-module common-lisp-user::tertiary-reset-dm-module) :query common-lisp-user::dm-query-request :request common-lisp-user::dm-request :params common-lisp-user::dm-params :notify-on-clear common-lisp-user::merge-chunk-into-dm common-lisp-user::define-module-fct)) #1# 80070) #Y(si::bytecodes nil nil (14 0 14 1 14 2 14 3 14 4 14 5 14 6 14 7 14 8 14 9 14 10 14 11 19 12 12 29) #A(t (13) (:blc :ans :pas :lf :le :mp :ms :md :rt :bll :mas :sa common-lisp-user::register-subsymbolic-parameters)) #1# 86787) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 70 12 19 2 71 1 0 73 29) #149=#A(t (72) (common-lisp-user::compute-activation ext::location (defun common-lisp-user::compute-activation) (#1# . 86941) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk common-lisp-user::request) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::request common-lisp-user::clear-trace common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g8932 #:g8931 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "Computing activation for chunk ~s" format common-lisp-user::dm-sact common-lisp-user::dm-current-trace t common-lisp-user::mp-time-ms common-lisp-user::dm-trace-table gethash common-lisp-user::it #:g8934 #:g8935 si::structure-set #:g8936 :esc common-lisp-user::dm-esc common-lisp-user::make-sact-trace #:g8937 si::hash-set #:g8941 :name common-lisp-user::make-sact-chunk #:g8942 common-lisp-user::base-level-activation common-lisp-user::spreading-activation common-lisp-user::partial-matching common-lisp-user::activation-noise common-lisp-user::activation-offsets + common-lisp-user::chunk-activation-setf common-lisp-user::dm-current-sact-chunk #:g8945 common-lisp-user::chunk-activation #:g8946 common-lisp-user::sact-chunk common-lisp-user::sact-trace-chunks :key common-lisp-user::sact-chunk-name find #:g8947 #:g8949 nconc #:g8948 common-lisp-user::sact-trace #:g8950 #:g8951 common-lisp-user::low #:g8953 #:g8952 "Chunk ~s has an activation of: ~f" #Y(common-lisp-user::compute-activation nil nil (24 45 7 24 45 8 24 45 9 26 75 45 10 13 3 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 16 45 17 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 21 13 4 19 4 22 43 2 13 3 19 1 23 39 138 13 3 19 1 24 76 39 102 11 25 51 0 19 0 26 12 13 3 19 1 27 12 19 2 28 45 29 10 0 39 26 10 4 45 30 10 1 45 31 13 1 15 7 9 38 13 0 19 4 32 43 1 43 1 38 52 10 4 45 33 14 34 13 5 19 1 35 12 19 2 36 45 37 13 1 15 7 9 38 13 0 19 4 32 43 1 43 1 19 0 26 12 13 4 19 1 27 12 13 4 19 1 24 12 19 3 38 43 1 10 3 45 39 14 40 13 3 19 2 41 45 42 13 1 15 7 9 39 13 0 19 4 32 43 1 43 1 13 2 13 3 13 2 19 2 43 12 13 3 13 2 19 2 44 12 13 3 13 2 13 1 19 3 45 12 13 3 13 2 19 2 46 12 13 3 13 2 19 2 47 12 19 5 48 12 19 2 49 13 3 19 1 23 39 120 13 3 19 1 50 45 51 13 3 19 1 52 45 53 13 1 15 54 9 3 13 0 19 4 32 43 1 43 1 13 2 13 3 19 1 24 12 19 1 55 12 14 56 15 57 19 4 58 76 39 43 13 3 19 1 24 45 59 13 4 19 1 50 6 1 45 60 13 1 19 1 55 12 13 0 19 2 61 45 62 13 2 15 63 9 5 13 0 19 4 32 43 3 10 0 39 23 10 3 45 64 75 45 65 13 1 15 7 9 38 13 0 19 4 32 43 1 43 1 13 3 19 1 11 12 15 66 19 2 13 73 39 54 15 14 19 1 15 47 1 67 45 68 10 1 39 10 13 0 19 1 18 12 19 1 19 73 39 26 13 0 19 1 18 12 19 1 19 12 15 20 15 69 13 4 13 4 19 1 52 12 19 5 22 43 2 43 1 29) #149# #1# 86941) si::fset)) #1# 86941) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #150=#A(t (31) (common-lisp-user::activation-offsets ext::location (defun common-lisp-user::activation-offsets) (#1# . 88541) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::offset common-lisp-user::dm-offsets si::%dolist-var common-lisp-user::x common-lisp-user::res numberp common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g8967 #:g8966 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "Adding offset from ~a: ~f" format #:g8969 + #Y(common-lisp-user::activation-offsets nil nil (24 45 7 24 45 8 26 8 0 45 9 13 2 19 1 10 39 130 13 2 19 1 10 45 11 75 45 12 38 104 10 1 4 51 0 13 0 13 3 20 1 23 45 13 10 0 16 14 39 77 13 5 19 1 15 12 15 16 19 2 17 39 49 15 18 19 1 19 47 1 20 45 21 10 1 39 10 13 0 19 1 22 12 19 1 23 39 22 13 0 19 1 22 12 19 1 23 12 15 24 15 25 13 3 13 2 19 5 26 43 2 10 0 45 27 13 4 13 0 19 2 28 51 4 43 1 43 1 10 1 5 51 1 10 1 40 -106 75 51 0 10 2 73 43 2 38 4 10 0 73 43 1 29) #150# #1# 88541) si::fset)) #1# 88541) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 95 12 19 2 96 1 0 73 29) #151=#A(t (97) (common-lisp-user::base-level-activation ext::location (defun common-lisp-user::base-level-activation) (#1# . 88912) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9008 #:g9007 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "Computing base-level" format common-lisp-user::base-level common-lisp-user::dm-bl-hook numberp common-lisp-user::dm-sact common-lisp-user::dm-current-sact-chunk #:g9010 :hook #:g9011 common-lisp-user::sact-chunk si::structure-set #:g9012 common-lisp-user::dm-blc #:g9013 #:g9015 #:g9014 "base-level hook returns: ~f" common-lisp-user::dm-bll #:g9017 :learn #:g9018 #:g9019 #:g9020 #:g9022 #:g9021 "Starting with blc: ~f" common-lisp-user::chunk-reference-count zerop #:g9023 t #:g9024 #:g9026 #:g9025 #:g9027 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* *standard-output* eql #129# common-lisp-user::mp-models length > common-lisp-user::current-model "Cannot compute base-level for a chunk with no references." finish-output #130# #131# -999999.0 common-lisp-user::chunk-reference-list common-lisp-user::chunk-creation-time - common-lisp-user::compute-references + #:g9028 :simple #:g9029 #:g9030 #:g9031 #:g9032 common-lisp-user::chunk-base-level #:g9033 #:g9035 #:g9034 "User provided chunk base-level: ~f" #:g9037 #:g9036 "Starting with blc: ~f" #:g9039 #:g9038 "Total base-level: ~f" #:g9040 #:g9041 common-lisp-user::chunk-last-base-level-setf #Y(common-lisp-user::base-level-activation nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 15 10 19 2 11 39 45 15 12 19 1 13 47 1 14 45 15 10 1 39 10 13 0 19 1 16 12 19 1 17 39 18 13 0 19 1 16 12 19 1 17 12 15 18 15 19 19 3 20 43 2 75 45 21 13 2 19 1 22 39 14 13 2 19 1 22 12 13 1 20 1 23 51 0 10 0 16 23 39 124 13 2 19 1 24 39 56 13 2 19 1 25 45 26 11 27 45 28 13 1 15 29 9 0 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 31 13 3 19 1 32 45 33 13 1 15 29 9 5 13 0 19 4 30 43 1 43 1 13 2 19 1 9 12 15 10 19 2 11 39 47 15 12 19 1 13 47 1 34 45 35 10 1 39 10 13 0 19 1 16 12 19 1 17 39 20 13 0 19 1 16 12 19 1 17 12 15 18 15 36 13 2 19 4 20 43 2 38 690 13 2 19 1 37 39 386 13 2 19 1 24 39 56 13 2 19 1 25 45 38 11 39 45 40 13 1 15 29 9 0 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 41 13 3 19 1 32 45 42 13 1 15 29 9 5 13 0 19 4 30 43 1 43 1 13 2 19 1 9 12 15 10 19 2 11 39 51 15 12 19 1 13 47 1 43 45 44 10 1 39 10 13 0 19 1 16 12 19 1 17 39 24 13 0 19 1 16 12 19 1 17 12 15 18 15 45 13 4 19 1 32 12 19 4 20 43 2 13 2 19 1 32 12 13 1 19 1 46 16 47 39 207 13 2 19 1 24 39 27 13 2 19 1 25 45 48 11 49 45 50 13 1 15 29 9 7 13 0 19 4 30 43 1 43 1 15 12 19 1 13 47 1 51 45 52 10 1 39 10 13 0 19 1 16 12 19 1 17 39 142 13 0 19 1 16 12 19 1 17 45 53 13 1 19 1 54 76 40 121 10 0 76 40 27 13 0 11 55 17 56 40 19 11 57 40 15 13 0 11 49 17 56 39 7 14 55 11 58 17 59 39 33 14 55 15 60 19 0 61 16 62 12 9 1 19 2 63 12 19 0 64 12 15 65 19 5 20 14 55 19 1 66 38 56 14 55 15 67 19 0 61 16 62 12 9 1 19 2 63 12 19 0 64 12 15 65 19 5 20 14 55 19 1 66 13 0 15 68 19 0 61 16 62 12 9 1 19 2 63 12 19 0 64 12 15 65 19 5 20 43 1 43 2 1 69 73 38 34 13 2 13 1 19 1 46 12 13 1 19 1 70 12 13 1 19 1 71 12 13 2 19 1 37 12 19 1 72 12 19 5 73 12 19 2 74 38 237 13 2 19 1 24 39 85 13 2 19 1 25 45 75 11 76 45 77 13 1 15 29 9 0 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 78 13 3 19 1 32 45 79 13 1 15 29 9 5 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 80 13 2 19 1 81 45 82 13 1 15 29 9 6 13 0 19 4 30 43 1 43 1 13 1 19 1 81 39 71 13 2 19 1 9 12 15 10 19 2 11 39 51 15 12 19 1 13 47 1 83 45 84 10 1 39 10 13 0 19 1 16 12 19 1 17 39 24 13 0 19 1 16 12 19 1 17 12 15 18 15 85 13 3 19 1 81 12 19 4 20 43 2 13 1 19 1 81 38 69 13 2 19 1 9 12 15 10 19 2 11 39 51 15 12 19 1 13 47 1 86 45 87 10 1 39 10 13 0 19 1 16 12 19 1 17 39 24 13 0 19 1 16 12 19 1 17 12 15 18 15 88 13 4 19 1 32 12 19 4 20 43 2 13 2 19 1 32 51 0 13 2 19 1 9 12 15 10 19 2 11 39 47 15 12 19 1 13 47 1 89 45 90 10 1 39 10 13 0 19 1 16 12 19 1 17 39 20 13 0 19 1 16 12 19 1 17 12 15 18 15 91 13 2 19 4 20 43 2 13 2 19 1 24 39 27 13 2 19 1 25 45 92 10 1 45 93 13 1 15 29 9 1 13 0 19 4 30 43 1 43 1 13 1 13 0 19 2 94 43 1 29) #151# #1# 88912) si::fset)) #1# 88912) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 97 12 19 2 98 1 0 73 29) #152=#A(t (99) (common-lisp-user::spreading-activation ext::location (defun common-lisp-user::spreading-activation) (#1# . 92005) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::dm-sa common-lisp-user::sa common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9114 #:g9113 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "Computing activation spreading from buffers" format common-lisp-user::dm-spreading-hook numberp common-lisp-user::dm-sact common-lisp-user::dm-current-sact-chunk #:g9116 :hook #:g9117 common-lisp-user::sact-chunk si::structure-set #:g9118 #:g9119 #:g9121 #:g9120 "spreading activation hook returns: ~f" #115# common-lisp-user::total-spread common-lisp-user::buffers si::%dolist-var common-lisp-user::buffer common-lisp-user::buffer-read common-lisp-user::buffer-chunk common-lisp-user::buffer-spread zerop #:g9149 #:g9147 common-lisp-user::sact-chunk-sa-buffers #:g9148 #:g9151 #:g9150 "  Spreading ~f from buffer ~s chunk ~s" common-lisp-user::slot common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::val common-lisp-user::chunk-p-fct #Y(nil nil nil (24 45 53 26 13 1 13 0 19 2 54 45 55 13 0 19 1 56 73 39 9 13 0 10 1 3 6 1 73 43 1 29) #152# #1# 92005) common-lisp-user::chunk-filled-slots-list-fct mapcan common-lisp-user::js #:g9153 #:g9152 "    sources of activation are: ~s" car mapcar common-lisp-user::j common-lisp-user::compute-sji common-lisp-user::sji common-lisp-user::dm-w-hook #:g9164 #:g9163 "    Wkj hook returns level ~f" length / common-lisp-user::level * common-lisp-user::total #:g9165 #:g9167 nconc #:g9166 rplaca #:g9169 #:g9168 "    Spreading activation  ~f from source ~s level  ~f times Sji ~f" #:g9171 + #:g9173 #:g9172 "Total spreading activation: ~f" #:g9174 :full #:g9175 #:g9176 #:g9177 common-lisp-user::chunk-source-spread-setf #Y(common-lisp-user::spreading-activation nil nil (24 45 7 24 45 8 26 13 0 13 1 19 1 9 39 901 75 45 10 13 2 19 1 11 12 15 12 19 2 13 39 45 15 14 19 1 15 47 1 16 45 17 10 1 39 10 13 0 19 1 18 12 19 1 19 39 18 13 0 19 1 18 12 19 1 19 12 15 20 15 21 19 3 22 43 2 13 2 19 1 23 39 14 13 2 19 1 23 12 13 1 20 1 23 51 0 10 0 16 24 39 124 13 2 19 1 25 39 53 13 2 19 1 26 45 27 11 28 45 29 13 1 15 30 9 13 13 0 19 4 31 43 1 43 1 13 2 19 1 26 45 32 10 1 45 33 13 1 15 30 9 14 13 0 19 4 31 43 1 43 1 13 2 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 34 45 35 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 36 13 2 19 4 22 43 2 10 0 73 38 688 1 37 45 38 19 0 39 45 40 75 45 41 38 545 10 1 4 51 0 13 0 19 1 42 45 43 10 0 39 9 13 1 19 1 44 16 45 76 39 512 13 6 19 1 25 39 44 13 1 13 0 13 1 19 1 44 6 3 45 46 13 7 19 1 26 45 47 13 1 13 0 19 1 48 3 45 49 13 1 15 30 9 15 13 0 19 4 31 43 3 13 6 19 1 11 12 15 12 19 2 13 39 55 15 14 19 1 15 47 1 50 45 51 10 1 39 10 13 0 19 1 18 12 19 1 19 39 28 13 0 19 1 18 12 19 1 19 12 15 20 15 52 13 3 19 1 44 12 13 3 13 2 19 6 22 43 2 34 57 12 13 0 19 1 58 12 19 2 59 45 60 13 7 19 1 11 12 15 12 19 2 13 39 53 15 14 19 1 15 47 1 61 45 62 10 1 39 10 13 0 19 1 18 12 19 1 19 39 26 13 0 19 1 18 12 19 1 19 12 15 20 15 63 15 64 13 2 19 2 65 12 19 4 22 43 2 10 0 45 40 75 45 66 38 299 10 1 4 51 0 13 9 10 0 4 12 13 8 19 3 67 45 68 13 10 19 1 69 39 105 13 10 19 1 69 12 13 5 10 1 5 12 20 2 23 45 55 10 0 16 24 39 64 13 11 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 70 45 71 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 72 13 2 19 4 22 43 2 10 0 38 15 13 6 19 1 44 12 10 4 16 73 12 19 2 74 43 1 38 15 13 5 19 1 44 12 10 3 16 73 12 19 2 74 45 75 13 0 13 1 19 2 76 45 77 13 12 19 1 25 39 49 13 12 19 1 26 12 19 1 48 45 78 10 4 4 12 13 1 13 2 10 3 6 4 6 1 45 79 10 1 4 12 13 0 19 2 80 45 81 13 2 10 0 17 82 10 0 43 3 13 12 19 1 11 12 15 12 19 2 13 39 55 15 14 19 1 15 47 1 83 45 84 10 1 39 10 13 0 19 1 18 12 19 1 19 39 28 13 0 19 1 18 12 19 1 19 12 15 20 15 85 13 2 10 5 4 12 13 3 13 4 19 7 22 43 2 10 0 45 86 13 10 13 0 19 2 87 51 10 43 1 43 3 10 1 5 51 1 10 1 40 -301 43 2 43 1 43 1 10 1 5 51 1 10 1 40 -547 43 2 13 3 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 88 45 89 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 90 13 2 19 4 22 43 2 13 3 19 1 25 39 53 13 3 19 1 26 45 91 11 92 45 93 13 1 15 30 9 13 13 0 19 4 31 43 1 43 1 13 3 19 1 26 45 94 10 1 45 95 13 1 15 30 9 14 13 0 19 4 31 43 1 43 1 10 0 73 43 1 43 1 38 4 1 37 73 12 19 2 96 29) #152# #1# 92005) si::fset)) #1# 92005) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 52 12 19 2 53 1 0 73 29) #153=#A(t (54) (common-lisp-user::compute-sji ext::location (defun common-lisp-user::compute-sji) (#1# . 96605) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::j common-lisp-user::i) common-lisp-user::dm common-lisp-user::j common-lisp-user::i common-lisp-user::dm-sji-hook common-lisp-user::sji numberp common-lisp-user::chunk-sjis :test common-lisp-user::eq-chunks-fct assoc common-lisp-user::chunk-fan-in common-lisp-user::it common-lisp-user::dm-mas common-lisp-user::chunk-fan-j-to-i log - common-lisp-user::val common-lisp-user::dm-nsji t eq minusp common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9182 #:g9181 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g9183 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* *standard-output* eql #129# common-lisp-user::mp-models length > common-lisp-user::current-model "Calculated Sji value between ~s and ~s is negative, but using a value of 0." format finish-output #130# #131# #115# max #Y(common-lisp-user::compute-sji nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 39 16 13 2 19 1 10 12 13 1 13 0 20 2 23 38 2 75 45 11 10 0 16 12 39 6 10 0 73 38 307 13 2 13 1 19 1 13 12 14 14 15 15 19 4 16 39 20 13 2 13 1 19 1 13 12 14 14 15 15 19 4 16 5 73 38 271 13 2 13 1 19 1 17 12 14 14 15 15 19 4 16 45 18 10 0 39 245 13 4 19 1 19 12 13 3 13 0 19 2 20 12 19 1 21 12 19 2 22 45 23 13 5 19 1 24 12 11 25 17 26 39 6 10 0 73 38 201 13 5 19 1 24 39 5 10 0 16 27 39 181 15 28 19 1 29 47 1 30 45 31 10 1 39 10 13 0 19 1 32 12 19 1 33 39 154 13 0 19 1 32 12 19 1 33 45 34 13 1 19 1 35 76 40 133 10 0 76 40 27 13 0 11 36 17 26 40 19 11 37 40 15 13 0 11 25 17 26 39 7 14 36 11 38 17 39 39 37 14 36 15 40 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 13 7 13 6 19 7 46 14 36 19 1 47 38 64 14 36 15 48 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 13 7 13 6 19 7 46 14 36 19 1 47 13 0 15 49 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 13 7 13 6 19 7 46 43 1 43 2 13 0 15 50 19 2 51 43 1 38 4 1 50 73 43 1 43 1 29) #153# #1# 96605) si::fset)) #1# 96605) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 1 0 73 29) #154=#A(t (17) (common-lisp-user::chunk-fan-j-to-i ext::location (defun common-lisp-user::chunk-fan-j-to-i) (#1# . 97353) ext::annotate :lambda-list (common-lisp-user::j common-lisp-user::i-spread) common-lisp-user::j common-lisp-user::i-spread common-lisp-user::chunk-in-dm common-lisp-user::chunk-fan-out / common-lisp-user::chunk-c-fan-out max + #Y(common-lisp-user::chunk-fan-j-to-i nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 16 13 1 19 1 10 12 10 0 5 12 19 2 11 38 30 13 1 19 1 10 12 9 1 13 1 19 1 12 12 19 2 13 12 19 2 14 12 10 0 5 12 19 2 11 29) #154# #1# 97353) si::fset)) #1# 97353) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 86 12 19 2 87 1 0 73 29) #155=#A(t (88) (common-lisp-user::partial-matching ext::location (defun common-lisp-user::partial-matching) (#1# . 97531) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk common-lisp-user::request) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::request common-lisp-user::dm-mp common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9225 #:g9224 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "Computing partial matching component" format common-lisp-user::dm-partial-matching-hook common-lisp-user::pm numberp common-lisp-user::dm-sact common-lisp-user::dm-current-sact-chunk #:g9226 :hook #:g9227 common-lisp-user::sact-chunk si::structure-set #:g9228 #:g9229 #:g9231 #:g9230 "partial matching hook returns: ~f" #115# common-lisp-user::total-sim common-lisp-user::chunk-spec-slot-spec si::%dolist-var common-lisp-user::k = eq - second keywordp third common-lisp-user::chunk-spec-variable-p common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::value #:g9246 #:g9245 "  comparing slot ~S" #:g9248 #:g9247 "  Requested: ~s ~s  Chunk's slot value: ~s" t common-lisp-user::chunks-similarity common-lisp-user::sim * common-lisp-user::dm-ms common-lisp-user::dm-md #:g9250 #:g9249 "  negation test with similarity not ms has no effect" common-lisp-user::sim-dif #:g9252 #:g9251 "  effective similarity value is ~f" #:g9253 #:g9255 common-lisp-user::sact-chunk-pm-tests nconc #:g9254 #:g9257 + #:g9258 :full #:g9259 #:g9260 #:g9261 #:g9263 #:g9262 "Total similarity score ~f" #Y(common-lisp-user::partial-matching nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 39 813 13 2 19 1 11 12 15 12 19 2 13 39 45 15 14 19 1 15 47 1 16 45 17 10 1 39 10 13 0 19 1 18 12 19 1 19 39 18 13 0 19 1 18 12 19 1 19 12 15 20 15 21 19 3 22 43 2 13 2 19 1 23 39 14 13 2 19 1 23 12 13 1 13 0 20 2 23 45 24 10 0 16 25 39 124 13 3 19 1 26 39 53 13 3 19 1 27 45 28 11 29 45 30 13 1 15 31 9 16 13 0 19 4 32 43 1 43 1 13 3 19 1 27 45 33 10 1 45 34 13 1 15 31 9 17 13 0 19 4 32 43 1 43 1 13 3 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 35 45 36 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 37 13 2 19 4 22 43 2 10 0 73 38 601 1 38 45 39 13 2 19 1 40 45 41 75 45 42 38 456 10 1 4 51 0 10 0 4 12 1 43 17 44 40 9 10 0 4 12 1 45 17 44 39 19 10 0 16 46 16 47 76 39 10 10 0 16 48 12 19 1 49 76 39 406 13 5 10 0 16 46 12 19 2 50 45 51 13 7 19 1 11 12 15 12 19 2 13 39 105 15 14 19 1 15 47 1 52 45 53 10 1 39 10 13 0 19 1 18 12 19 1 19 39 23 13 0 19 1 18 12 19 1 19 12 15 20 15 54 10 3 16 46 12 19 4 22 43 2 15 14 19 1 15 47 1 55 45 56 10 1 39 10 13 0 19 1 18 12 19 1 19 39 29 13 0 19 1 18 12 19 1 19 12 15 20 15 57 10 3 4 12 10 3 16 48 12 13 2 19 6 22 43 2 13 7 10 1 16 48 12 13 0 14 58 19 4 59 45 60 10 2 4 42 43 14 13 8 19 1 10 12 13 0 19 2 61 38 96 42 45 92 13 0 13 8 19 1 62 12 19 2 43 39 18 13 8 19 1 10 12 13 8 19 1 63 12 19 2 61 38 60 13 8 19 1 11 12 15 12 19 2 13 39 45 15 14 19 1 15 47 1 64 45 65 10 1 39 10 13 0 19 1 18 12 19 1 19 39 18 13 0 19 1 18 12 19 1 19 12 15 20 15 66 19 3 22 43 2 8 0 38 2 75 45 67 13 9 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 68 45 69 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 70 13 2 19 4 22 43 2 13 9 19 1 26 39 60 13 9 19 1 27 45 71 10 4 16 46 12 10 4 4 12 10 4 16 48 12 13 3 13 2 10 1 6 6 6 1 45 72 13 1 19 1 73 12 13 0 19 2 74 45 75 13 2 15 31 9 18 13 0 19 4 32 43 3 10 0 45 76 13 6 13 0 19 2 77 51 6 43 1 43 2 43 1 10 1 5 51 1 10 1 40 -458 43 2 13 4 19 1 26 39 53 13 4 19 1 27 45 78 11 79 45 80 13 1 15 31 9 16 13 0 19 4 32 43 1 43 1 13 4 19 1 27 45 81 10 1 45 82 13 1 15 31 9 17 13 0 19 4 32 43 1 43 1 13 4 19 1 11 12 15 12 19 2 13 39 47 15 14 19 1 15 47 1 83 45 84 10 1 39 10 13 0 19 1 18 12 19 1 19 39 20 13 0 19 1 18 12 19 1 19 12 15 20 15 85 13 2 19 4 22 43 2 10 0 73 43 1 43 1 38 4 1 38 73 29) #155# #1# 97531) si::fset)) #1# 97531) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 37 12 19 2 38 1 0 73 29) #156=#A(t (39) (common-lisp-user::chunks-similarity ext::location (defun common-lisp-user::chunks-similarity) (#1# . 100778) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk1 common-lisp-user::chunk2 &optional (trace nil)) common-lisp-user::dm common-lisp-user::chunk1 common-lisp-user::chunk2 trace common-lisp-user::dm-sim-hook common-lisp-user::sim numberp common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9270 #:g9269 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "  similarity hook returns: ~f" format common-lisp-user::chunk-p-fct common-lisp-user::chunk-slot-equal common-lisp-user::dm-ms common-lisp-user::dm-md common-lisp-user::chunk-similarities :test common-lisp-user::eq-chunks-fct assoc #:g9273 #:g9272 "  similarity: ~f" #Y(common-lisp-user::chunks-similarity nil nil (24 45 7 24 45 8 24 45 9 25 40 2 77 46 10 26 13 3 19 1 11 39 16 13 3 19 1 11 12 13 2 13 1 20 2 23 38 2 75 45 12 10 0 16 13 39 69 13 4 19 1 14 12 15 15 19 2 16 39 3 10 1 39 47 15 17 19 1 18 47 1 19 45 20 10 1 39 10 13 0 19 1 21 12 19 1 22 39 20 13 0 19 1 21 12 19 1 22 12 15 23 15 24 13 2 19 4 25 43 2 10 0 73 38 163 13 3 19 1 26 39 6 13 2 19 1 26 76 39 24 13 3 13 2 19 2 27 39 8 13 4 19 1 28 38 6 13 4 19 1 29 38 57 13 3 13 2 19 1 30 12 14 31 15 32 19 4 33 39 19 13 3 13 2 19 1 30 12 14 31 15 32 19 4 33 5 38 22 13 3 13 2 19 2 32 39 8 13 4 19 1 28 38 6 13 4 19 1 29 51 0 13 4 19 1 14 12 15 15 19 2 16 39 3 10 1 39 47 15 17 19 1 18 47 1 34 45 35 10 1 39 10 13 0 19 1 21 12 19 1 22 39 20 13 0 19 1 21 12 19 1 22 12 15 23 15 36 13 2 19 4 25 43 2 10 0 73 43 1 29) #156# #1# 100778) si::fset)) #1# 100778) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 51 12 19 2 52 1 0 73 29) #157=#A(t (53) (common-lisp-user::activation-noise ext::location (defun common-lisp-user::activation-noise) (#1# . 101863) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::chunk) common-lisp-user::dm common-lisp-user::chunk common-lisp-user::dm-noise-hook common-lisp-user::noise numberp common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9292 #:g9291 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "noise hook returns: ~f" format common-lisp-user::dm-sact common-lisp-user::dm-current-sact-chunk #:g9293 :hook #:g9294 common-lisp-user::sact-chunk si::structure-set #:g9295 #:g9296 common-lisp-user::dm-ans common-lisp-user::act-r-noise #115# #:g9298 :full #:g9299 #:g9300 common-lisp-user::chunk-permanent-noise #:g9301 #:g9302 #:g9303 #:g9305 #:g9304 "Adding transient noise ~f" #:g9307 #:g9306 "Adding permanent noise ~f" + #Y(common-lisp-user::activation-noise nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 12 13 1 19 1 9 12 13 0 20 1 23 45 10 10 0 16 11 39 124 13 2 19 1 12 12 15 13 19 2 14 39 47 15 15 19 1 16 47 1 17 45 18 10 1 39 10 13 0 19 1 19 12 19 1 20 39 20 13 0 19 1 19 12 19 1 20 12 15 21 15 22 13 2 19 4 23 43 2 13 2 19 1 24 39 53 13 2 19 1 25 45 26 11 27 45 28 13 1 15 29 9 19 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 31 10 1 45 32 13 1 15 29 9 20 13 0 19 4 30 43 1 43 1 10 0 73 38 231 13 2 19 1 33 39 12 13 2 19 1 33 12 19 1 34 38 3 1 35 51 0 13 2 19 1 24 39 82 13 2 19 1 25 45 36 11 37 45 38 13 1 15 29 9 19 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 39 13 2 19 1 40 45 41 13 1 15 29 9 20 13 0 19 4 30 43 1 43 1 13 2 19 1 25 45 42 10 1 45 43 13 1 15 29 9 21 13 0 19 4 30 43 1 43 1 13 2 19 1 12 12 15 13 19 2 14 39 97 15 15 19 1 16 47 1 44 45 45 10 1 39 10 13 0 19 1 19 12 19 1 20 39 20 13 0 19 1 19 12 19 1 20 12 15 21 15 46 13 2 19 4 23 43 2 15 15 19 1 16 47 1 47 45 48 10 1 39 10 13 0 19 1 19 12 19 1 20 39 24 13 0 19 1 19 12 19 1 20 12 15 21 15 49 13 3 19 1 40 12 19 4 23 43 2 13 0 13 1 19 1 40 12 19 2 50 43 1 29) #157# #1# 101863) si::fset)) #1# 101863) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #158=#A(t (16) (common-lisp-user::compute-activation-latency ext::location (defun common-lisp-user::compute-activation-latency) (#1# . 103047) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::activation) common-lisp-user::dm common-lisp-user::activation common-lisp-user::dm-lf common-lisp-user::dm-le * exp round #Y(common-lisp-user::compute-activation-latency nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 9 -1 13 1 19 1 10 12 13 0 19 3 11 16 12 12 19 2 11 12 19 1 13 29) #158# #1# 103047) si::fset)) #1# 103047) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 78 12 19 2 79 15 0 15 80 15 81 19 3 82 1 0 73 29) #159=#A(t (83) (common-lisp-user::compute-references ext::location (defun common-lisp-user::compute-references) (#1# . 103184) ext::annotate :lambda-list (common-lisp-user::dm common-lisp-user::n common-lisp-user::references common-lisp-user::creation-time common-lisp-user::minus-decay) common-lisp-user::dm common-lisp-user::n common-lisp-user::references common-lisp-user::creation-time common-lisp-user::minus-decay common-lisp-user::dm-act common-lisp-user::medium common-lisp-user::dm-act-level common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9338 #:g9337 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #134# "Computing base-level from ~d references (~{~/print-time-in-seconds/~^ ~})" format #:g9340 #:g9339 "  creation time: ~/print-time-in-seconds/ decay: ~f  Optimized-learning: ~s" - common-lisp-user::dm-ol #115# common-lisp-user::last-reference common-lisp-user::value si::%dolist-var common-lisp-user::reference common-lisp-user::mp-time-ms max expt #:g9345 + 1.0 denominator numberp > < *error-output* #93# common-lisp-user::current-mp-fct common-lisp-user::mp-models length common-lisp-user::current-model "Activation calculation problem because time has moved backwards.  Assuming a 0 time delay to avoid calculation error." finish-output * / #:g9348 log common-lisp-user::dm-act-scale 0.05 common-lisp-user::ms->seconds common-lisp-user::dm-sact common-lisp-user::dm-current-sact-chunk #:g9352 #:g9353 common-lisp-user::sact-chunk si::structure-set #:g9354 #:g9355 #:g9356 #:g9357 #:g9358 #:g9359 #:g9360 #:g9361 #:g9362 #:g9363 #:g9365 #:g9364 "base-level value: ~f" #Y(common-lisp-user::compute-references nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 26 13 4 19 1 12 12 15 13 19 2 14 39 107 15 15 19 1 16 47 1 17 45 18 10 1 39 10 13 0 19 1 19 12 19 1 20 39 22 13 0 19 1 19 12 19 1 20 12 15 21 15 22 13 5 13 4 19 5 23 43 2 15 15 19 1 16 47 1 24 45 25 10 1 39 10 13 0 19 1 19 12 19 1 20 39 32 13 0 19 1 19 12 19 1 20 12 15 21 15 26 13 3 13 2 19 1 27 12 13 6 19 1 28 12 19 6 23 43 2 15 29 9 0 46 30 46 31 10 4 39 63 10 4 45 32 75 45 33 38 48 10 1 4 51 0 9 50 19 0 34 12 13 0 19 2 27 12 19 2 35 12 10 4 17 36 45 37 13 3 13 0 19 2 38 51 3 43 1 10 0 51 3 10 1 5 51 1 10 1 40 -50 43 2 13 6 19 1 28 39 253 15 39 13 2 19 2 38 45 40 13 7 19 1 28 16 41 39 189 13 6 13 7 19 1 28 12 19 2 42 39 157 19 0 34 12 13 4 19 2 43 40 10 19 0 34 12 13 2 19 2 43 39 37 14 44 15 45 19 0 46 73 39 12 19 0 47 16 48 12 9 1 19 2 42 12 19 0 49 12 15 50 19 5 23 14 44 19 1 51 13 6 13 7 19 1 28 12 19 2 27 12 9 0 19 0 34 12 13 4 19 2 27 12 19 2 35 12 10 0 17 36 12 9 0 19 0 34 12 13 2 19 2 27 12 19 2 35 12 10 0 17 36 12 19 2 27 12 19 2 52 12 9 50 13 2 13 4 19 2 27 12 19 2 35 12 13 0 19 2 52 12 19 2 53 45 54 13 2 13 0 19 2 38 51 2 43 1 13 1 19 1 55 12 13 7 19 1 56 12 19 2 38 51 1 38 43 13 6 15 57 19 0 34 12 13 4 19 2 27 12 19 1 58 12 19 2 35 12 10 3 17 36 12 19 2 52 12 13 0 19 2 53 12 19 1 55 51 1 43 1 38 18 13 0 19 1 55 12 13 6 19 1 56 12 19 2 38 51 0 13 6 19 1 59 39 163 13 6 19 1 60 45 61 10 1 45 62 13 1 15 63 9 6 13 0 19 4 64 43 1 43 1 13 6 19 1 60 45 65 10 6 45 66 13 1 15 63 9 8 13 0 19 4 64 43 1 43 1 13 6 19 1 60 45 67 10 5 45 68 13 1 15 63 9 9 13 0 19 4 64 43 1 43 1 13 6 19 1 60 45 69 10 4 45 70 13 1 15 63 9 10 13 0 19 4 64 43 1 43 1 13 6 19 1 60 45 71 13 3 19 1 27 45 72 13 1 15 63 9 11 13 0 19 4 64 43 1 43 1 13 6 19 1 60 45 73 13 7 19 1 28 45 74 13 1 15 63 9 12 13 0 19 4 64 43 1 43 1 13 6 19 1 12 12 15 13 19 2 14 39 47 15 15 19 1 16 47 1 75 45 76 10 1 39 10 13 0 19 1 19 12 19 1 20 39 20 13 0 19 1 19 12 19 1 20 12 15 21 15 77 13 2 19 4 23 43 2 10 0 73 43 2 29) #159# #1# 103184) si::fset function "Computes generalized decay formula from number and list of references,
   creation time and minus the decay rate." si::set-documentation)) #1# 103184) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #160=#A(t (15) (common-lisp-user::all-dm-chunks ext::location (defun common-lisp-user::all-dm-chunks) (#1# . 105690) ext::annotate :lambda-list (common-lisp-user::dm) common-lisp-user::dm common-lisp-user::x copy-list #Y(nil nil nil (24 45 8 26 10 0 5 16 9 29) #160# #1# 105690) common-lisp-user::dm-chunks mapcan #Y(common-lisp-user::all-dm-chunks nil nil (24 45 7 26 34 10 12 13 0 19 1 11 12 19 2 12 29) #160# #1# 105690) si::fset)) #1# 105690))
