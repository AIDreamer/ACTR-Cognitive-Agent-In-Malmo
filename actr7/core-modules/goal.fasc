(#Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("GOAL-STYLE-MODULE" *modules* :test string= member "ACT-R-support:goal-style-module" translate-logical-pathname common-lisp-user::compile-and-load)) #1=#P"C:/Users/Son Pham/Desktop/actr7/core-modules/goal.lisp" 0) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 1 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 23 78 19 15 12 1 21 12 19 2 22 1 0 73 29) #2=#A(t (24) (common-lisp-user::goal-module "GOAL-MODULE-" (common-lisp-user::delayed) ((common-lisp-user::delayed nil t nil 0 nil)) common-lisp-user::copy-goal-module (common-lisp-user::make-goal-module) common-lisp-user::goal-module-p si::define-structure ext::location (defstruct common-lisp-user::goal-module) (#1# . 7307) ext::annotate common-lisp-user::make-goal-module (defun common-lisp-user::make-goal-module) (#1# . 7307) :lambda-list (&key #3=#:delayed) (nil :delayed) #3# 0 si::make-structure #Y(common-lisp-user::make-goal-module nil nil (28 17 22 40 2 77 46 18 15 19 13 0 19 2 20 29) #2# #1# 7307) si::fset find-class)) #1# 7307) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #4=#A(t (11) (common-lisp-user::create-goal-module ext::location (defun common-lisp-user::create-goal-module) (#1# . 7412) ext::annotate :lambda-list (common-lisp-user::model-name) common-lisp-user::model-name common-lisp-user::make-goal-module #Y(common-lisp-user::create-goal-module nil nil (24 45 7 26 19 0 8 29) #4# #1# 7412) si::fset)) #1# 7412) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #5=#A(t (16) (common-lisp-user::goal-reset ext::location (defun common-lisp-user::goal-reset) (#1# . 7506) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance #:g9368 #:g9369 common-lisp-user::goal-module si::structure-set (:do-not-harvest common-lisp-user::goal) common-lisp-user::sgp-fct #Y(common-lisp-user::goal-reset nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 0 13 0 19 4 11 43 1 43 1 15 12 19 1 13 29) #5# #1# 7506) si::fset)) #1# 7506) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #6=#A(t (29) (common-lisp-user::goal-query ext::location (defun common-lisp-user::goal-query) (#1# . 7667) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::slot common-lisp-user::value) common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::slot common-lisp-user::value common-lisp-user::state common-lisp-user::busy common-lisp-user::free t error *error-output* #7="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Unknown state query ~S to goal module" format finish-output "Unknown query ~S ~S to the goal module" #Y(common-lisp-user::goal-query nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 1 42 11 67 10 0 42 12 5 75 73 38 56 42 13 6 11 14 73 38 48 42 15 5 75 73 38 41 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 0 19 6 24 14 16 19 1 25 75 73 38 44 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 13 1 13 0 19 7 24 12 14 16 19 1 25 22 73 29) #6# #1# 7667) si::fset)) #1# 7667) #Y(si::bytecodes nil nil (15 0 15 1 77 14 2 15 3 14 4 15 5 14 6 33 7 12 14 8 33 9 12 14 10 33 11 12 14 12 33 13 12 14 14 77 33 15 6 2 12 19 17 16 29) #A(t (17) (common-lisp-user::goal ((common-lisp-user::goal (:ga 0.0))) :version "2.0" :documentation "The goal module creates new goals for the goal buffer" :creation common-lisp-user::create-goal-module :query common-lisp-user::goal-query :request common-lisp-user::goal-style-request :buffer-mod common-lisp-user::goal-style-mod-request :reset common-lisp-user::goal-reset common-lisp-user::define-module-fct)) #1# 8062) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 14 15 9 2 19 4 16 15 0 15 17 15 18 19 3 19 1 0 73 29) #8=#A(t (20) (common-lisp-user::goal-focus ext::location (defmacro common-lisp-user::goal-focus) (#1# . 8403) ext::annotate :lambda-list (&optional (common-lisp-user::chunk-name nil)) #:g9371 #:g9370 #:g9372 common-lisp-user::chunk-name si::dm-too-many-arguments common-lisp-user::goal-focus-fct quote #Y(common-lisp-user::goal-focus nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 39 13 10 0 4 12 10 0 5 51 0 22 38 2 75 45 10 10 1 39 6 13 3 19 1 11 15 12 15 13 10 0 6 2 6 2 73 29) #8# #1# 8403) t si::fset function "Place a chunk into the goal buffer or return either the chunk that is there
   now or the one that will be placed there by a pendng goal-focus" si::set-documentation)) #1# 8403) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 62 12 19 2 63 15 0 15 64 15 65 19 3 66 1 0 73 29) #9=#A(t (67) (common-lisp-user::goal-focus-fct ext::location (defun common-lisp-user::goal-focus-fct) (#1# . 8824) ext::annotate :lambda-list (&optional (common-lisp-user::chunk-name nil)) common-lisp-user::chunk-name common-lisp-user::goal common-lisp-user::get-module-fct common-lisp-user::g-module common-lisp-user::chunk-p-fct :time-in-ms t :module :priority :max :requested common-lisp-user::schedule-set-buffer-chunk common-lisp-user::clear-delayed-goal :output :destination :maintenance common-lisp-user::schedule-event-after-module #:g9383 #:g9384 common-lisp-user::goal-module si::structure-set *error-output* #7# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~S is not the name of a chunk in the current model - goal-focus failed" format finish-output common-lisp-user::buffer-read common-lisp-user::goal-module-delayed common-lisp-user::delayed common-lisp-user::chunk common-lisp-user::printing-module #:g9386 #:g9385 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" "Goal buffer is empty" #:g9388 #:g9387 "Will be a copy of ~a when the model runs" common-lisp-user::pprint-chunks-fct common-lisp-user::chunk-copied-from-fct eq #:g9390 #:g9389 "Will be a copy of ~a when the model runs" #:g9392 #:g9391 "Currently holds:" #Y(common-lisp-user::goal-focus-fct nil nil (25 40 2 77 46 7 26 15 8 19 1 9 45 10 10 1 39 125 13 1 19 1 11 39 75 15 8 13 1 9 0 14 12 14 13 14 14 15 8 14 15 14 16 14 17 77 19 11 18 15 8 15 19 14 14 15 8 14 20 77 14 21 15 8 14 22 14 13 19 10 23 10 0 45 24 10 2 45 25 13 1 15 26 9 0 13 0 19 4 27 43 1 43 1 10 1 73 38 42 14 28 15 29 19 0 30 73 39 12 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 13 1 19 6 36 12 14 28 19 1 37 22 73 38 316 15 8 19 1 38 12 13 0 19 1 39 12 46 40 46 41 10 0 76 39 4 10 1 76 39 57 15 42 19 1 9 47 1 43 45 44 10 1 39 18 13 0 19 1 45 76 39 10 13 0 19 1 46 12 19 1 47 39 18 13 0 19 1 46 12 19 1 47 12 15 48 15 49 19 3 36 43 2 75 73 38 232 10 0 76 39 68 15 42 19 1 9 47 1 50 45 51 10 1 39 18 13 0 19 1 45 76 39 10 13 0 19 1 46 12 19 1 47 39 20 13 0 19 1 46 12 19 1 47 12 15 48 15 52 13 3 19 4 36 43 2 10 1 6 1 12 19 1 53 10 1 73 38 160 10 1 76 39 14 10 0 6 1 12 19 1 53 10 0 73 38 142 13 1 13 0 19 1 54 17 55 39 14 10 0 6 1 12 19 1 53 10 0 73 38 118 15 42 19 1 9 47 1 56 45 57 10 1 39 18 13 0 19 1 45 76 39 10 13 0 19 1 46 12 19 1 47 39 20 13 0 19 1 46 12 19 1 47 12 15 48 15 58 13 3 19 4 36 43 2 15 42 19 1 9 47 1 59 45 60 10 1 39 18 13 0 19 1 45 76 39 10 13 0 19 1 46 12 19 1 47 39 18 13 0 19 1 46 12 19 1 47 12 15 48 15 61 19 3 36 43 2 10 0 6 1 12 19 1 53 10 1 73 43 2 43 1 29) #9# #1# 8824) si::fset function "Place a chunk into the goal buffer or return either the chunk that is there
   now or the one that will be placed there by a pending goal-focus" si::set-documentation)) #1# 8824) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #10=#A(t (14) (common-lisp-user::clear-delayed-goal ext::location (defun common-lisp-user::clear-delayed-goal) (#1# . 10801) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance #:g9395 #:g9396 common-lisp-user::goal-module si::structure-set #Y(common-lisp-user::clear-delayed-goal nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 0 13 0 19 4 11 43 1 43 1 29) #10# #1# 10801) si::fset)) #1# 10801) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 15 0 15 16 15 17 19 3 18 1 0 73 29) #11=#A(t (19) (common-lisp-user::mod-focus ext::location (defmacro common-lisp-user::mod-focus) (#1# . 10885) ext::annotate :lambda-list (&rest common-lisp-user::modifications) #:g9398 #:g9397 #:g9399 common-lisp-user::modifications common-lisp-user::mod-focus-fct quote #Y(common-lisp-user::mod-focus nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #11# #1# 10885) t si::fset function "Modify the chunk in the goal buffer as if by mod-chunk" si::set-documentation)) #1# 10885) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 15 0 15 31 15 32 19 3 33 1 0 73 29) #12=#A(t (34) (common-lisp-user::mod-focus-fct ext::location (defun common-lisp-user::mod-focus-fct) (#1# . 11023) ext::annotate :lambda-list (common-lisp-user::modifications) common-lisp-user::modifications common-lisp-user::goal common-lisp-user::buffer-read common-lisp-user::chunk common-lisp-user::goal-modification :module :priority :max :output common-lisp-user::medium common-lisp-user::schedule-event-now common-lisp-user::mod-chunk-fct *error-output* #7# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No chunk in the goal buffer to modify" format finish-output #Y(common-lisp-user::mod-focus-fct nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 27 15 11 14 12 15 8 14 13 14 14 14 15 15 16 19 7 17 13 0 13 1 19 2 18 38 40 14 19 15 20 19 0 21 73 39 12 19 0 22 16 23 12 9 1 19 2 24 12 19 0 25 12 15 26 19 5 27 12 14 19 19 1 28 22 73 43 1 29) #12# #1# 11023) si::fset function "Modify the chunk in the goal buffer as if by mod-chunk-fct" si::set-documentation)) #1# 11023) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 7 12 19 2 8 1 0 73 29) #13=#A(t (9) (common-lisp-user::goal-modification ext::location (defun common-lisp-user::goal-modification) (#1# . 11433) ext::annotate :lambda-list "Dummy function for mod-focus event" #Y(common-lisp-user::goal-modification nil nil (26 1 6 73 29) #13# #1# 11433) si::fset)) #1# 11433))
