(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::compile-productions) proclaim)) #1=#P"C:/Users/Son Pham/Desktop/actr7/core-modules/procedural.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::learn-parameters) proclaim)) #1# 45979) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::productions-action-time) proclaim)) #1# 46031) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::note-production-selection) proclaim)) #1# 46090) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::spp-fct) proclaim)) #1# 46151) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t &optional t) t) common-lisp-user::compute-utility) proclaim)) #1# 46194) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::get-valid-productions) proclaim)) #1# 46257) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function nil t) common-lisp-user::minimum-utility) proclaim)) #1# 46314) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::replace-variables-for-eval) proclaim)) #1# 46364) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::replace-variables) proclaim)) #1# 46428) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::similarity-fct) proclaim)) #1# 46483) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::conflict-node-valid) proclaim)) #1# 46535) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::copy-conflict-tree) proclaim)) #1# 46590) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::build-conflict-tree) proclaim)) #1# 46646) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (&key) t) common-lisp-user::make-root-node) proclaim)) #1# 46701) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::remove-production-from-tree) proclaim)) #1# 46754) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::add-production-to-tree) proclaim)) #1# 46819) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::compilation-buffer-type-fct) proclaim)) #1# 46879) #Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("CENTRAL-PARAMETERS" *modules* :test string= member "ACT-R-support:central-parameters" translate-logical-pathname common-lisp-user::compile-and-load)) #1# 46942) #Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("PRODUCTIONS" *modules* :test string= member "ACT-R-support:productions" translate-logical-pathname common-lisp-user::compile-and-load)) #1# 47019) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 47 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 73 78 69 15 12 1 71 12 19 2 72 1 0 73 29) #2=#A(t (74) (common-lisp-user::procedural "PROCEDURAL-" (common-lisp-user::productions common-lisp-user::p-table common-lisp-user::er common-lisp-user::crt common-lisp-user::cst common-lisp-user::v common-lisp-user::dat common-lisp-user::conflict-set-hook common-lisp-user::cycle-hook common-lisp-user::bindings common-lisp-user::lhst common-lisp-user::rhst common-lisp-user::delayed-resolution common-lisp-user::unharvested-buffers common-lisp-user::busy common-lisp-user::random-times (common-lisp-user::check-p*-mods t) common-lisp-user::buffer-indices common-lisp-user::buffer-lookup common-lisp-user::buffer-lookup-size common-lisp-user::slot-lookup common-lisp-user::conflict-tree common-lisp-user::last-conflict-tree common-lisp-user::delay-tree common-lisp-user::use-tree common-lisp-user::req-spec common-lisp-user::current-p common-lisp-user::ppm common-lisp-user::md common-lisp-user::ppm-hook common-lisp-user::used-search-buffers common-lisp-user::search-buffer-table common-lisp-user::search-matches-table common-lisp-user::temp-search common-lisp-user::last-cr-time common-lisp-user::style-warnings common-lisp-user::style-check common-lisp-user::cond-style-usage-table common-lisp-user::req-style-usage-table common-lisp-user::retrieval-cond-style-usage-table common-lisp-user::retrieval-req-style-usage-table common-lisp-user::mod-style-usage-table common-lisp-user::init-chunk-slots common-lisp-user::all-cond-style-usage-table (common-lisp-user::action-parse-table #3=(make-hash-table :test 'equal)) (common-lisp-user::condition-parse-table #4=(make-hash-table :test 'equal)) common-lisp-user::in-model-definition) ((common-lisp-user::productions nil t nil 0 nil) (common-lisp-user::p-table nil t nil 1 nil) (common-lisp-user::er nil t nil 2 nil) (common-lisp-user::crt nil t nil 3 nil) (common-lisp-user::cst nil t nil 4 nil) (common-lisp-user::v nil t nil 5 nil) (common-lisp-user::dat nil t nil 6 nil) (common-lisp-user::conflict-set-hook nil t nil 7 nil) (common-lisp-user::cycle-hook nil t nil 8 nil) (common-lisp-user::bindings nil t nil 9 nil) (common-lisp-user::lhst nil t nil 10 nil) (common-lisp-user::rhst nil t nil 11 nil) (common-lisp-user::delayed-resolution nil t nil 12 nil) (common-lisp-user::unharvested-buffers nil t nil 13 nil) (common-lisp-user::busy nil t nil 14 nil) (common-lisp-user::random-times nil t nil 15 nil) (common-lisp-user::check-p*-mods t t nil 16 nil) (common-lisp-user::buffer-indices nil t nil 17 nil) (common-lisp-user::buffer-lookup nil t nil 18 nil) (common-lisp-user::buffer-lookup-size nil t nil 19 nil) (common-lisp-user::slot-lookup nil t nil 20 nil) (common-lisp-user::conflict-tree nil t nil 21 nil) (common-lisp-user::last-conflict-tree nil t nil 22 nil) (common-lisp-user::delay-tree nil t nil 23 nil) (common-lisp-user::use-tree nil t nil 24 nil) (common-lisp-user::req-spec nil t nil 25 nil) (common-lisp-user::current-p nil t nil 26 nil) (common-lisp-user::ppm nil t nil 27 nil) (common-lisp-user::md nil t nil 28 nil) (common-lisp-user::ppm-hook nil t nil 29 nil) (common-lisp-user::used-search-buffers nil t nil 30 nil) (common-lisp-user::search-buffer-table nil t nil 31 nil) (common-lisp-user::search-matches-table nil t nil 32 nil) (common-lisp-user::temp-search nil t nil 33 nil) (common-lisp-user::last-cr-time nil t nil 34 nil) (common-lisp-user::style-warnings nil t nil 35 nil) (common-lisp-user::style-check nil t nil 36 nil) (common-lisp-user::cond-style-usage-table nil t nil 37 nil) (common-lisp-user::req-style-usage-table nil t nil 38 nil) (common-lisp-user::retrieval-cond-style-usage-table nil t nil 39 nil) (common-lisp-user::retrieval-req-style-usage-table nil t nil 40 nil) (common-lisp-user::mod-style-usage-table nil t nil 41 nil) (common-lisp-user::init-chunk-slots nil t nil 42 nil) (common-lisp-user::all-cond-style-usage-table nil t nil 43 nil) (common-lisp-user::action-parse-table #3# t nil 44 nil) (common-lisp-user::condition-parse-table #4# t nil 45 nil) (common-lisp-user::in-model-definition nil t nil 46 nil)) common-lisp-user::copy-procedural (common-lisp-user::make-procedural) common-lisp-user::procedural-p si::define-structure ext::location (defstruct common-lisp-user::procedural) (#1# . 47080) ext::annotate common-lisp-user::make-procedural (defun common-lisp-user::make-procedural) (#1# . 47080) :lambda-list (&key #5=#:productions #6=#:p-table #7=#:er #8=#:crt #9=#:cst #10=#:v #11=#:dat #12=#:conflict-set-hook #13=#:cycle-hook #14=#:bindings #15=#:lhst #16=#:rhst #17=#:delayed-resolution #18=#:unharvested-buffers #19=#:busy #20=#:random-times (#21=#:check-p*-mods t) #22=#:buffer-indices #23=#:buffer-lookup #24=#:buffer-lookup-size #25=#:slot-lookup #26=#:conflict-tree #27=#:last-conflict-tree #28=#:delay-tree #29=#:use-tree #30=#:req-spec #31=#:current-p #32=#:ppm #33=#:md #34=#:ppm-hook #35=#:used-search-buffers #36=#:search-buffer-table #37=#:search-matches-table #38=#:temp-search #39=#:last-cr-time #40=#:style-warnings #41=#:style-check #42=#:cond-style-usage-table #43=#:req-style-usage-table #44=#:retrieval-cond-style-usage-table #45=#:retrieval-req-style-usage-table #46=#:mod-style-usage-table #47=#:init-chunk-slots #48=#:all-cond-style-usage-table (#49=#:action-parse-table (make-hash-table :test 'equal)) (#50=#:condition-parse-table (make-hash-table :test 'equal)) #51=#:in-model-definition) (nil :in-model-definition :condition-parse-table :action-parse-table :all-cond-style-usage-table :init-chunk-slots :mod-style-usage-table :retrieval-req-style-usage-table :retrieval-cond-style-usage-table :req-style-usage-table :cond-style-usage-table :style-check :style-warnings :last-cr-time :temp-search :search-matches-table :search-buffer-table :used-search-buffers :ppm-hook :md :ppm :current-p :req-spec :use-tree :delay-tree :last-conflict-tree :conflict-tree :slot-lookup :buffer-lookup-size :buffer-lookup :buffer-indices :check-p*-mods :random-times :busy :unharvested-buffers :delayed-resolution :rhst :lhst :bindings :cycle-hook :conflict-set-hook :dat :v :cst :crt :er :p-table :productions) #5# #6# #7# #8# #9# #10# #11# #12# #13# #14# #15# #16# #17# #18# #19# #20# t #21# #22# #23# #24# #25# #26# #27# #28# #29# #30# #31# #32# #33# #34# #35# #36# #37# #38# #39# #40# #41# #42# #43# #44# #45# #46# #47# #48# :test equal make-hash-table #49# #50# #51# 0 si::make-structure #Y(common-lisp-user::make-procedural nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 22 40 2 77 46 26 22 40 2 77 46 27 22 40 2 77 46 28 22 40 2 77 46 29 22 40 2 77 46 30 22 40 2 77 46 31 22 40 2 77 46 32 22 40 2 77 46 33 22 40 3 14 34 46 35 22 40 2 77 46 36 22 40 2 77 46 37 22 40 2 77 46 38 22 40 2 77 46 39 22 40 2 77 46 40 22 40 2 77 46 41 22 40 2 77 46 42 22 40 2 77 46 43 22 40 2 77 46 44 22 40 2 77 46 45 22 40 2 77 46 46 22 40 2 77 46 47 22 40 2 77 46 48 22 40 2 77 46 49 22 40 2 77 46 50 22 40 2 77 46 51 22 40 2 77 46 52 22 40 2 77 46 53 22 40 2 77 46 54 22 40 2 77 46 55 22 40 2 77 46 56 22 40 2 77 46 57 22 40 2 77 46 58 22 40 2 77 46 59 22 40 2 77 46 60 22 40 2 77 46 61 22 40 2 77 46 62 22 40 9 14 63 15 64 19 2 65 12 46 66 22 40 9 14 63 15 64 19 2 65 12 46 67 22 40 2 77 46 68 15 69 13 46 13 45 13 44 13 43 13 42 13 41 13 40 13 39 13 38 13 37 13 36 13 35 13 34 13 33 13 32 13 31 13 30 13 29 13 28 13 27 13 26 13 25 13 24 13 23 13 22 13 21 13 20 13 19 13 18 13 17 13 16 13 15 13 14 13 13 13 12 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 48 70 29) #2# #1# 47080) si::fset find-class)) #1# 47080) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 4 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 26 78 22 15 12 1 24 12 19 2 25 1 0 73 29) #52=#A(t (27) (common-lisp-user::production-statement "PRODUCTION-STATEMENT-" (common-lisp-user::op common-lisp-user::target common-lisp-user::definition common-lisp-user::spec) ((common-lisp-user::op nil t nil 0 nil) (common-lisp-user::target nil t nil 1 nil) (common-lisp-user::definition nil t nil 2 nil) (common-lisp-user::spec nil t nil 3 nil)) common-lisp-user::copy-production-statement (common-lisp-user::make-production-statement) common-lisp-user::production-statement-p si::define-structure ext::location (defstruct common-lisp-user::production-statement) (#1# . 47985) ext::annotate common-lisp-user::make-production-statement (defun common-lisp-user::make-production-statement) (#1# . 47985) :lambda-list (&key #53=#:op #54=#:target #55=#:definition #56=#:spec) (nil :spec :definition :target :op) #53# #54# #55# #56# 0 si::make-structure #Y(common-lisp-user::make-production-statement nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 15 22 13 3 13 2 13 1 13 0 19 5 23 29) #52# #1# 47985) si::fset find-class)) #1# 47985) #Y(si::bytecodes nil nil (19 0 0 29) #A(t (1) (common-lisp-user::suppress-extension-warnings)) #1# 48046) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 15 15 14 16 14 17 15 18 19 4 19 39 14 15 15 14 16 14 17 15 18 19 4 20 52 16 14 21 15 15 14 22 77 14 23 77 14 24 15 1 19 8 25 12 11 16 3 52 16 15 1 15 26 15 27 15 28 19 4 29 15 1 14 30 77 15 31 19 4 29 15 1 1 43 12 19 2 44 15 13 15 26 15 45 15 46 19 4 29 15 13 14 30 77 15 47 19 4 29 15 13 1 50 12 19 2 44 15 1 15 26 15 51 15 52 19 4 29 15 1 15 13 9 1 19 3 53 1 1 73 29) #57=#A(t (54) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::production-requested-actions fboundp *error-output* #58="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Function ~s already exists and is being redefined." format finish-output common-lisp-user::production-requested-actions-setf "Function ~s already exists and is being redefined." common-lisp-user::requested-actions common-lisp-user::*production-parameters-list* :key common-lisp-user::act-r-production-parameter-name find remove :name :default-value :default-function :accessor common-lisp-user::make-act-r-production-parameter ext::location (defun common-lisp-user::production-requested-actions) (#1# . 48332) ext::annotate :lambda-list (common-lisp-user::production-name) common-lisp-user::production-name common-lisp-user::get-production common-lisp-user::production common-lisp-user::production? common-lisp-user::production-parameter-values gethash common-lisp-user::exists common-lisp-user::value common-lisp-user::production-parameter-default si::hash-set "~S called with invalid production name." #Y(common-lisp-user::production-requested-actions nil nil (24 45 32 26 13 0 19 1 33 45 34 13 0 19 1 35 39 59 15 15 13 0 19 1 36 12 19 2 37 47 1 38 45 39 10 1 39 6 10 0 73 38 30 15 15 13 2 19 1 36 12 15 15 14 16 14 17 15 18 19 4 19 12 13 2 19 2 40 12 19 3 41 43 2 38 42 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 42 15 1 19 6 11 12 14 3 19 1 12 22 73 43 1 29) #57# #1# 48332) si::fset (defun common-lisp-user::production-requested-actions-setf) (#1# . 48332) (common-lisp-user::production-name common-lisp-user::new-value) common-lisp-user::new-value "Setf of ~S called with invalid production." #Y(common-lisp-user::production-requested-actions-setf nil nil (24 45 32 24 45 48 26 13 1 19 1 33 45 34 13 0 19 1 35 39 16 15 15 13 0 19 1 36 12 13 1 19 3 41 38 42 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 49 15 1 19 6 11 12 14 3 19 1 12 22 73 43 1 29) #57# #1# 48332) (defsetf common-lisp-user::production-requested-actions) (#1# . 48332) si::do-defsetf)) #1# 48332) #Y(si::bytecodes nil nil (19 0 0 29) #A(t (1) (common-lisp-user::unsuppress-extension-warnings)) #1# 48371) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #59=#A(t (11) (common-lisp-user::productions-list ext::location (defun common-lisp-user::productions-list) (#1# . 48403) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod common-lisp-user::procedural-productions #Y(common-lisp-user::productions-list nil nil (24 45 7 26 13 0 19 1 8 29) #59# #1# 48403) si::fset)) #1# 48403) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #60=#A(t (13) (common-lisp-user::get-production ext::location (defun common-lisp-user::get-production) (#1# . 48572) ext::annotate :lambda-list (common-lisp-user::production-name) common-lisp-user::production-name common-lisp-user::procedural common-lisp-user::get-module-fct common-lisp-user::get-production-internal #Y(common-lisp-user::get-production nil nil (24 45 7 26 15 8 19 1 9 45 8 10 0 73 39 8 13 1 13 0 19 2 10 43 1 29) #60# #1# 48572) si::fset)) #1# 48572) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #61=#A(t (13) (common-lisp-user::get-production-internal ext::location (defun common-lisp-user::get-production-internal) (#1# . 48742) ext::annotate :lambda-list (common-lisp-user::production-name common-lisp-user::procedural) common-lisp-user::production-name common-lisp-user::procedural common-lisp-user::procedural-p-table gethash #Y(common-lisp-user::get-production-internal nil nil (24 45 7 24 45 8 26 13 1 13 0 19 1 9 12 19 2 10 29) #61# #1# 48742) si::fset)) #1# 48742) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #62=#A(t (23) (common-lisp-user::add-production ext::location (defun common-lisp-user::add-production) (#1# . 48864) ext::annotate :lambda-list (common-lisp-user::production common-lisp-user::procedural) common-lisp-user::production common-lisp-user::procedural #:g9441 #:g9443 common-lisp-user::procedural-productions nconc #:g9442 si::structure-set common-lisp-user::production-name common-lisp-user::procedural-p-table si::hash-set common-lisp-user::procedural-use-tree common-lisp-user::procedural-delay-tree common-lisp-user::add-production-to-tree #Y(common-lisp-user::add-production nil nil (24 45 7 24 45 8 26 10 0 45 9 10 2 6 1 45 10 13 1 19 1 11 12 13 0 19 2 12 45 13 13 2 15 8 9 0 13 0 19 4 14 43 3 13 1 19 1 15 12 13 0 19 1 16 12 13 1 19 3 17 13 0 19 1 18 39 7 13 0 19 1 19 76 73 39 8 13 1 13 0 19 2 20 29) #62# #1# 48864) si::fset)) #1# 48864) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #63=#A(t (22) (common-lisp-user::remove-production ext::location (defun common-lisp-user::remove-production) (#1# . 49207) ext::annotate :lambda-list (common-lisp-user::production common-lisp-user::procedural) common-lisp-user::production common-lisp-user::procedural #:g9449 common-lisp-user::procedural-productions remove #:g9450 si::structure-set common-lisp-user::production-name common-lisp-user::procedural-p-table remhash common-lisp-user::procedural-use-tree common-lisp-user::procedural-delay-tree common-lisp-user::remove-production-from-tree #Y(common-lisp-user::remove-production nil nil (24 45 7 24 45 8 26 10 0 45 9 13 2 13 1 19 1 10 12 19 2 11 45 12 13 1 15 8 9 0 13 0 19 4 13 43 1 43 1 13 1 19 1 14 12 13 0 19 1 15 17 16 13 0 19 1 17 39 7 13 0 19 1 18 76 73 39 8 13 1 13 0 19 2 19 29) #63# #1# 49207) si::fset)) #1# 49207) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 132 12 19 2 133 1 0 73 29) #64=#A(t (134) (common-lisp-user::procedural-params ext::location (defun common-lisp-user::procedural-params) (#1# . 49584) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::param) common-lisp-user::prod common-lisp-user::param consp common-lisp-user::un-delay-conflict-resolution :use-tree #:g9506 #:g9507 common-lisp-user::procedural si::structure-set :er #:g9508 #:g9509 :v #:g9510 #:g9511 :md #:g9512 #:g9513 :ppm common-lisp-user::ppm-offset common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9515 #:g9514 common-lisp-user::printing-module-suppress-cmds #:g9516 #:g9517 t #:g9518 (setf common-lisp-user::printing-module-suppress-cmds) (:utility-offsets) common-lisp-user::sgp-fct #:g9519 #:g9520 (setf common-lisp-user::printing-module-suppress-cmds) find (:utility-offsets common-lisp-user::ppm-offset) #:g9522 #:g9521 #:g9523 #:g9524 #:g9525 (setf common-lisp-user::printing-module-suppress-cmds) (:utility-offsets) #:g9526 #:g9527 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::previous (:utility-offsets nil) si::%dolist-var common-lisp-user::x eq :utility-offsets #:g9528 #:g9529 :ppm-hook #:g9530 #:g9531 :dat #:g9532 common-lisp-user::safe-seconds->ms #:g9533 :crt #:g9534 #:g9535 :cst #:g9536 #:g9537 :lhst #:g9538 #:g9539 :rhst #:g9540 #:g9541 :vpft #:g9542 #:g9543 :style-warnings #:g9544 #:g9545 :do-not-harvest common-lisp-user::procedural-unharvested-buffers *error-output* #58# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Setting parameter ~s failed because ~s already on the list." format finish-output #:g9548 #:g9546 #:g9547 #:g9549 #:g9550 :cycle-hook common-lisp-user::procedural-cycle-hook member "Setting parameter ~s failed because ~s already on the hook." #:g9553 #:g9551 #:g9552 #:g9554 #:g9555 :conflict-set-hook common-lisp-user::procedural-conflict-set-hook "Setting parameter ~s failed because ~s already on the hook." #:g9558 #:g9556 #:g9557 #:g9559 #:g9560 common-lisp-user::procedural-use-tree common-lisp-user::procedural-ppm common-lisp-user::procedural-ppm-hook common-lisp-user::procedural-dat common-lisp-user::ms->seconds common-lisp-user::procedural-crt common-lisp-user::procedural-cst common-lisp-user::procedural-lhst common-lisp-user::procedural-rhst common-lisp-user::procedural-random-times common-lisp-user::procedural-style-warnings #Y(common-lisp-user::procedural-params nil nil (24 45 7 24 45 8 26 10 0 16 9 39 1006 19 0 10 10 0 4 42 11 27 10 1 45 12 10 1 5 45 13 13 1 15 14 9 24 13 0 19 4 15 43 1 43 1 38 969 42 16 27 10 1 45 17 10 1 5 45 18 13 1 15 14 9 2 13 0 19 4 15 43 1 43 1 38 940 42 19 27 10 1 45 20 10 1 5 45 21 13 1 15 14 9 5 13 0 19 4 15 43 1 43 1 38 911 42 22 27 10 1 45 23 10 1 5 45 24 13 1 15 14 9 28 13 0 19 4 15 43 1 43 1 38 882 42 25 253 10 0 5 39 94 15 26 15 27 19 1 28 47 1 29 45 30 10 1 73 39 61 13 0 19 1 31 45 32 10 1 45 33 11 34 45 35 13 0 13 1 33 36 18 2 43 1 43 1 64 9 15 37 19 1 38 4 73 65 10 1 45 39 10 1 45 40 13 0 13 1 33 41 18 2 43 1 43 1 66 43 1 12 43 2 19 2 42 76 39 6 15 43 19 1 38 38 129 15 27 19 1 28 47 1 44 45 45 10 1 39 59 13 0 19 1 31 45 46 10 1 45 47 11 34 45 48 13 0 13 1 33 49 18 2 43 1 43 1 64 7 15 50 19 1 38 65 10 1 45 51 10 1 45 52 13 0 13 1 33 53 18 2 43 1 43 1 66 43 1 43 2 4 45 54 15 55 19 1 38 10 0 45 56 75 45 57 38 30 10 1 4 51 0 13 0 1 26 17 58 76 39 11 14 59 10 0 6 2 12 19 1 38 10 1 5 51 1 10 1 40 -32 43 2 43 1 10 1 45 60 10 1 5 45 61 13 1 15 14 9 27 13 0 19 4 15 43 1 43 1 38 627 42 62 27 10 1 45 63 10 1 5 45 64 13 1 15 14 9 29 13 0 19 4 15 43 1 43 1 38 598 42 65 35 10 1 45 66 10 1 5 12 19 1 67 45 68 13 1 15 14 9 6 13 0 19 4 15 43 1 43 1 10 0 5 73 38 561 42 69 27 10 1 45 70 10 1 5 45 71 13 1 15 14 9 3 13 0 19 4 15 43 1 43 1 38 532 42 72 27 10 1 45 73 10 1 5 45 74 13 1 15 14 9 4 13 0 19 4 15 43 1 43 1 38 503 42 75 27 10 1 45 76 10 1 5 45 77 13 1 15 14 9 10 13 0 19 4 15 43 1 43 1 38 474 42 78 27 10 1 45 79 10 1 5 45 80 13 1 15 14 9 11 13 0 19 4 15 43 1 43 1 38 445 42 81 27 10 1 45 82 10 1 5 45 83 13 1 15 14 9 15 13 0 19 4 15 43 1 43 1 38 416 42 84 27 10 1 45 85 10 1 5 45 86 13 1 15 14 9 35 13 0 19 4 15 43 1 43 1 38 387 42 87 126 10 0 5 39 97 10 0 5 12 13 1 19 1 88 12 19 2 42 39 48 14 89 15 90 19 0 91 73 39 12 19 0 92 16 93 12 9 1 19 2 94 12 19 0 95 12 15 96 14 87 10 0 5 12 19 7 97 12 14 89 19 1 98 22 73 38 33 10 0 5 45 99 10 2 45 100 13 1 13 0 19 1 88 3 45 101 13 1 15 14 9 13 13 0 19 4 15 43 3 38 23 10 1 45 102 75 45 103 13 1 15 14 9 13 13 0 19 4 15 43 1 43 1 38 259 42 104 126 10 0 5 39 97 10 0 5 12 13 1 19 1 105 12 19 2 106 39 48 14 89 15 90 19 0 91 73 39 12 19 0 92 16 93 12 9 1 19 2 94 12 19 0 95 12 15 107 14 104 10 0 5 12 19 7 97 12 14 89 19 1 98 22 73 38 33 10 0 5 45 108 10 2 45 109 13 1 13 0 19 1 105 3 45 110 13 1 15 14 9 8 13 0 19 4 15 43 3 38 23 10 1 45 111 75 45 112 13 1 15 14 9 8 13 0 19 4 15 43 1 43 1 38 131 42 113 126 10 0 5 39 97 10 0 5 12 13 1 19 1 114 12 19 2 106 39 48 14 89 15 90 19 0 91 73 39 12 19 0 92 16 93 12 9 1 19 2 94 12 19 0 95 12 15 115 14 113 10 0 5 12 19 7 97 12 14 89 19 1 98 22 73 38 33 10 0 5 45 116 10 2 45 117 13 1 13 0 19 1 114 3 45 118 13 1 15 14 9 7 13 0 19 4 15 43 3 38 23 10 1 45 119 75 45 120 13 1 15 14 9 7 13 0 19 4 15 43 1 43 1 38 3 75 73 38 139 10 0 42 11 8 13 1 19 1 121 38 127 42 25 8 13 1 19 1 122 38 117 42 62 8 13 1 19 1 123 38 107 42 65 12 13 1 19 1 124 12 19 1 125 38 93 42 69 8 13 1 19 1 126 38 83 42 72 8 13 1 19 1 127 38 73 42 75 8 13 1 19 1 128 38 63 42 78 8 13 1 19 1 129 38 53 42 81 8 13 1 19 1 130 38 43 42 84 8 13 1 19 1 131 38 33 42 87 8 13 1 19 1 88 38 23 42 104 8 13 1 19 1 105 38 13 42 113 8 13 1 19 1 114 38 3 75 73 29) #64# #1# 49584) si::fset)) #1# 49584) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 71 12 19 2 72 1 0 73 29) #65=#A(t (73) (common-lisp-user::reset-procedural-module ext::location (defun common-lisp-user::reset-procedural-module) (#1# . 53642) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod #:g9605 #:g9606 common-lisp-user::procedural si::structure-set #:g9607 :size :test eq make-hash-table #:g9608 #:g9609 #:g9610 #:g9611 #:g9612 #:g9613 #:g9614 #:g9615 #:g9616 #:g9617 #:g9618 #:g9619 (common-lisp-user::isa common-lisp-user::chunk) common-lisp-user::define-chunk-spec-fct #:g9620 #:g9621 t #:g9622 common-lisp-user::procedural-conflict-tree #:g9623 common-lisp-user::make-root-node #:g9624 #:g9625 #:g9626 #:g9627 #:g9628 #:g9629 #:g9630 #:g9631 #:g9632 #:g9633 #:g9634 #:g9635 #:g9636 #:g9637 #:g9638 #:g9639 #:g9640 #:g9641 #:g9642 #:g9643 #:g9644 #:g9645 #:g9646 #:g9647 #:g9648 common-lisp-user::conflict-resolution :module :priority :min :destination :output common-lisp-user::medium common-lisp-user::schedule-event-now #Y(common-lisp-user::reset-procedural-module nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 0 13 0 19 4 11 43 1 43 1 10 0 45 12 14 13 9 31 14 14 15 15 19 4 16 45 17 13 1 15 10 9 1 13 0 19 4 11 43 1 43 1 10 0 45 18 75 45 19 13 1 15 10 9 9 13 0 19 4 11 43 1 43 1 10 0 45 20 75 45 21 13 1 15 10 9 12 13 0 19 4 11 43 1 43 1 10 0 45 22 75 45 23 13 1 15 10 9 17 13 0 19 4 11 43 1 43 1 10 0 45 24 8 0 45 25 13 1 15 10 9 19 13 0 19 4 11 43 1 43 1 10 0 45 26 75 45 27 13 1 15 10 9 14 13 0 19 4 11 43 1 43 1 10 0 45 28 15 29 19 1 30 45 31 13 1 15 10 9 25 13 0 19 4 11 43 1 43 1 10 0 45 32 11 33 45 34 13 1 15 10 9 23 13 0 19 4 11 43 1 43 1 13 0 19 1 35 76 39 25 10 0 45 36 19 0 37 45 38 13 1 15 10 9 21 13 0 19 4 11 43 1 43 1 10 0 45 39 19 0 16 45 40 13 1 15 10 9 31 13 0 19 4 11 43 1 43 1 10 0 45 41 19 0 16 45 42 13 1 15 10 9 32 13 0 19 4 11 43 1 43 1 10 0 45 43 19 0 16 45 44 13 1 15 10 9 37 13 0 19 4 11 43 1 43 1 10 0 45 45 19 0 16 45 46 13 1 15 10 9 43 13 0 19 4 11 43 1 43 1 10 0 45 47 19 0 16 45 48 13 1 15 10 9 38 13 0 19 4 11 43 1 43 1 10 0 45 49 19 0 16 45 50 13 1 15 10 9 41 13 0 19 4 11 43 1 43 1 10 0 45 51 19 0 16 45 52 13 1 15 10 9 39 13 0 19 4 11 43 1 43 1 10 0 45 53 19 0 16 45 54 13 1 15 10 9 40 13 0 19 4 11 43 1 43 1 10 0 45 55 75 45 56 13 1 15 10 9 34 13 0 19 4 11 43 1 43 1 10 0 45 57 75 45 58 13 1 15 10 9 36 13 0 19 4 11 43 1 43 1 10 0 45 59 19 0 16 45 60 13 1 15 10 9 42 13 0 19 4 11 43 1 43 1 10 0 45 61 11 33 45 62 13 1 15 10 9 46 13 0 19 4 11 43 1 43 1 15 63 14 64 15 10 14 65 14 66 14 67 15 10 14 68 15 69 19 9 70 29) #65# #1# 53642) si::fset)) #1# 53642) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*safe-perceptual-buffers* si::*make-special boundp ext::location (defvar common-lisp-user::*safe-perceptual-buffers*) (#1# . 55213) ext::annotate)) #1# 55213) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 113 12 19 2 114 1 0 73 29) #66=#A(t (115) (common-lisp-user::check-production-for-style ext::location (defun common-lisp-user::check-production-for-style) (#1# . 55255) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::p) common-lisp-user::prod common-lisp-user::p common-lisp-user::queries common-lisp-user::production-lhs si::%dolist-var common-lisp-user::c common-lisp-user::production-statement-definition common-lisp-user::def common-lisp-user::production-statement-target common-lisp-user::buffer common-lisp-user::compilation-buffer-type-fct common-lisp-user::compilation-type common-lisp-user::production-statement-op common-lisp-user::op common-lisp-user::production-statement-spec common-lisp-user::spec #\? eq #\= common-lisp-user::retrieval common-lisp-user::procedural-retrieval-cond-style-usage-table common-lisp-user::goal common-lisp-user::imaginal common-lisp-user::procedural-cond-style-usage-table common-lisp-user::procedural-all-cond-style-usage-table common-lisp-user::table common-lisp-user::x common-lisp-user::act-r-slot-spec-name common-lisp-user::chunk-spec-variable-p #Y(nil nil nil (24 45 33 26 13 0 19 1 34 12 19 1 35 76 73 39 9 13 0 19 1 34 6 1 73 29) #66# #1# 55255) common-lisp-user::act-r-chunk-spec-slots mapcan common-lisp-user::slots gethash append remove-duplicates si::hash-set (common-lisp-user::isa common-lisp-user::chunk) equalp common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9717 #:g9716 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g9718 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* t *standard-output* eql #67="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::mp-models length > common-lisp-user::current-model "Production ~s has a condition for buffer ~s with an isa that provides no tests." common-lisp-user::production-name format finish-output #68="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #69="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::production-rhs common-lisp-user::a #\+ #\* common-lisp-user::procedural-mod-style-usage-table common-lisp-user::procedural-retrieval-req-style-usage-table common-lisp-user::procedural-req-style-usage-table common-lisp-user::slot keywordp #Y(nil nil nil (24 45 33 26 13 0 19 1 34 45 77 10 0 16 78 40 6 13 0 19 1 35 76 73 39 6 10 0 6 1 73 43 1 29) #66# #1# 55255) common-lisp-user::y #Y(common-lisp-user::compare-actions nil nil (24 45 33 24 45 80 26 13 1 19 1 19 12 13 0 19 1 19 17 24 73 39 14 13 1 19 1 15 12 13 0 19 1 15 17 24 29) #66# #1# 55255) :test count #:g9744 #:g9743 #:g9745 "Production ~s makes multiple modification requests to the ~s buffer." #:g9747 #:g9746 #:g9748 "Production ~s makes multiple requests to the ~s buffer." #:g9750 #:g9749 #:g9751 "Production ~s makes multiple modifications to the ~s buffer." #\- #:g9753 #:g9752 #:g9754 "Production ~s clears the ~s buffer multiple times." #\@ #:g9756 #:g9755 #:g9757 "Production ~s overwrites the ~s buffer multiple times." find common-lisp-user::perceptual common-lisp-user::*safe-perceptual-buffers* #:g9759 #:g9758 #:g9760 "Production ~s makes a request to buffer ~s without a query in the conditions." #Y(common-lisp-user::check-production-for-style nil nil (24 45 7 24 45 8 26 75 45 9 13 1 19 1 10 45 11 75 45 12 38 384 10 1 4 51 0 13 0 19 1 13 45 14 13 1 19 1 15 45 16 13 0 19 1 17 45 18 13 3 19 1 19 45 20 13 4 19 1 21 45 22 13 1 1 23 17 24 39 8 13 3 10 7 3 51 7 13 1 1 25 17 24 39 97 13 2 1 26 17 24 39 8 13 9 19 1 27 38 37 13 2 1 28 17 24 40 15 13 2 1 29 17 24 40 7 13 2 1 26 17 24 39 8 13 9 19 1 30 38 6 13 9 19 1 31 45 32 34 36 12 13 1 19 1 37 12 19 2 38 45 39 13 5 13 1 13 5 13 1 19 2 40 12 13 0 19 2 41 12 19 1 42 12 19 3 43 43 1 43 1 13 1 1 25 17 24 39 16 13 0 19 1 37 76 39 8 13 4 1 44 17 45 76 39 193 15 46 19 1 47 47 1 48 45 49 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 52 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 64 13 11 19 1 65 12 13 6 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 64 13 11 19 1 65 12 13 6 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 64 13 11 19 1 65 12 13 6 19 7 66 43 1 43 2 43 5 10 1 5 51 1 10 1 40 -386 43 2 13 1 19 1 70 45 11 75 45 71 38 181 10 1 4 51 0 13 0 19 1 15 45 16 13 0 19 1 17 45 18 13 2 19 1 19 45 20 13 3 19 1 21 45 22 13 1 1 25 17 24 40 39 13 1 1 72 17 24 40 7 13 1 1 73 17 24 39 23 13 2 1 28 17 24 40 15 13 2 1 29 17 24 40 7 13 2 1 26 17 24 39 3 10 0 39 89 13 1 1 25 17 24 40 7 13 1 1 73 17 24 39 8 13 8 19 1 74 38 21 13 2 1 26 17 24 39 8 13 8 19 1 75 38 6 13 8 19 1 76 12 34 79 12 13 0 19 1 37 12 19 2 38 12 46 39 46 32 13 5 13 0 13 5 13 0 19 2 40 12 13 1 19 2 41 12 19 1 42 12 19 3 43 43 2 43 4 10 1 5 51 1 10 1 40 -183 43 2 30 1 81 13 2 19 1 70 12 14 82 32 0 12 19 3 42 45 11 75 45 71 38 1287 10 1 4 51 0 13 0 19 1 15 45 16 13 0 19 1 17 45 18 13 2 19 1 19 45 20 13 3 13 7 19 1 70 12 14 82 32 5 12 19 4 83 12 9 1 19 2 62 39 986 10 0 42 73 195 15 46 19 1 47 47 1 84 45 85 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 86 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 87 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 87 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 87 13 10 19 1 65 12 13 5 19 7 66 43 1 43 2 38 787 42 72 195 15 46 19 1 47 47 1 88 45 89 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 90 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 91 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 91 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 91 13 10 19 1 65 12 13 5 19 7 66 43 1 43 2 38 590 42 25 195 15 46 19 1 47 47 1 92 45 93 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 94 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 95 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 95 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 95 13 10 19 1 65 12 13 5 19 7 66 43 1 43 2 38 393 42 96 195 15 46 19 1 47 47 1 97 45 98 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 99 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 100 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 100 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 100 13 10 19 1 65 12 13 5 19 7 66 43 1 43 2 38 196 42 101 193 15 46 19 1 47 47 1 102 45 103 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 104 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 105 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 105 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 105 13 10 19 1 65 12 13 5 19 7 66 43 1 43 2 13 0 1 72 17 24 39 43 13 2 13 6 19 2 106 76 39 33 13 1 1 28 17 24 40 24 13 1 1 26 17 24 40 16 13 1 1 107 17 24 39 8 13 2 14 108 19 2 106 76 39 193 15 46 19 1 47 47 1 109 45 110 10 1 39 10 13 0 19 1 50 12 19 1 51 39 166 13 0 19 1 50 12 19 1 51 45 111 13 1 19 1 53 76 40 145 10 0 76 40 27 13 0 11 54 17 24 40 19 11 55 40 15 13 0 11 56 17 24 39 7 14 54 11 57 17 58 39 41 14 54 15 59 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 112 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 38 72 14 54 15 68 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 112 13 10 19 1 65 12 13 5 19 7 66 14 54 19 1 67 13 0 15 69 19 0 60 16 61 12 9 1 19 2 62 12 19 0 63 12 15 112 13 10 19 1 65 12 13 5 19 7 66 43 1 43 2 43 3 10 1 5 51 1 10 1 40 -1289 75 73 43 2 43 1 43 1 29) #66# #1# 55255) si::fset)) #1# 55255) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 72 12 19 2 73 1 0 73 29) #70=#A(t (74) (common-lisp-user::check-between-production-style ext::location (defun common-lisp-user::check-between-production-style) (#1# . 60512) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod common-lisp-user::buffer common-lisp-user::slots common-lisp-user::procedural-req-style-usage-table gethash common-lisp-user::procedural-mod-style-usage-table common-lisp-user::procedural-init-chunk-slots common-lisp-user::init common-lisp-user::mods common-lisp-user::requests si::%dolist-var common-lisp-user::slot find common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9787 #:g9786 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g9788 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #67# common-lisp-user::mp-models length > common-lisp-user::current-model "Productions test the ~s slot in the ~s buffer which is not requested or modified in any productions." format finish-output #68# #69# #Y(nil nil nil (24 45 8 24 45 9 26 13 1 13 2 19 1 10 12 19 2 11 12 13 1 13 2 19 1 12 12 19 2 11 12 13 1 13 2 19 1 13 12 19 2 11 12 46 14 46 15 46 16 10 3 45 17 75 45 18 38 219 10 1 4 51 0 13 0 13 2 19 2 19 40 17 13 0 13 3 19 2 19 40 8 13 0 13 4 19 2 19 76 39 181 15 20 19 1 21 47 1 22 45 23 10 1 39 10 13 0 19 1 24 12 19 1 25 39 154 13 0 19 1 24 12 19 1 25 45 26 13 1 19 1 27 76 40 133 10 0 76 40 27 13 0 11 28 17 29 40 19 11 30 40 15 13 0 11 31 17 29 39 7 14 28 11 32 17 33 39 37 14 28 15 34 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 13 3 13 9 19 7 40 14 28 19 1 41 38 64 14 28 15 42 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 13 3 13 9 19 7 40 14 28 19 1 41 13 0 15 43 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 13 3 13 9 19 7 40 43 1 43 2 10 1 5 51 1 10 1 40 -221 75 73 43 2 43 3 29) #70# #1# 60512) common-lisp-user::procedural-cond-style-usage-table maphash common-lisp-user::procedural-all-cond-style-usage-table common-lisp-user::res common-lisp-user::key common-lisp-user::value append #Y(nil nil nil (24 45 49 24 45 50 26 13 0 13 2 19 2 51 51 2 73 29) #70# #1# 60512) common-lisp-user::procedural-retrieval-cond-style-usage-table #Y(nil nil nil (24 45 49 24 45 50 26 13 0 13 2 19 2 51 51 2 73 29) #70# #1# 60512) common-lisp-user::procedural-retrieval-req-style-usage-table common-lisp-user::retrieval-requests common-lisp-user::retrieval-conds common-lisp-user::other-conds common-lisp-user::conditions #:g9795 #:g9794 #:g9796 "Productions request a value for the ~s slot in a request to the ~s buffer, but that slot is not used in other productions." #Y(nil nil nil (24 45 8 24 45 9 26 13 1 13 2 19 1 45 12 19 2 11 12 13 1 13 2 19 1 47 12 19 2 11 12 75 45 48 34 52 12 13 3 19 1 53 17 46 13 0 43 1 75 45 48 34 54 12 13 3 19 1 55 17 46 13 0 43 1 46 56 46 57 46 58 46 59 10 4 45 17 75 45 18 38 228 10 1 4 51 0 13 0 13 2 19 2 19 40 26 13 0 13 3 19 2 19 40 17 13 0 13 4 19 2 19 40 8 13 0 13 5 19 2 19 76 39 181 15 20 19 1 21 47 1 60 45 61 10 1 39 10 13 0 19 1 24 12 19 1 25 39 154 13 0 19 1 24 12 19 1 25 45 62 13 1 19 1 27 76 40 133 10 0 76 40 27 13 0 11 28 17 29 40 19 11 30 40 15 13 0 11 31 17 29 39 7 14 28 11 32 17 33 39 37 14 28 15 34 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 63 13 3 13 10 19 7 40 14 28 19 1 41 38 64 14 28 15 42 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 63 13 3 13 10 19 7 40 14 28 19 1 41 13 0 15 43 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 63 13 3 13 10 19 7 40 43 1 43 2 10 1 5 51 1 10 1 40 -230 75 73 43 2 43 4 29) #70# #1# 60512) #Y(nil nil nil (24 45 49 24 45 50 26 13 0 13 2 19 2 51 51 2 73 29) #70# #1# 60512) #Y(nil nil nil (24 45 49 24 45 50 26 13 0 13 2 19 2 51 51 2 73 29) #70# #1# 60512) #:g9803 #:g9802 #:g9804 "Productions modify the ~s slot in the ~s buffer, but that slot is not used in other productions." #Y(nil nil nil (24 45 8 24 45 9 26 13 1 13 2 19 1 45 12 19 2 11 12 13 1 13 2 19 1 47 12 19 2 11 12 75 45 48 34 65 12 13 3 19 1 53 17 46 13 0 43 1 75 45 48 34 66 12 13 3 19 1 55 17 46 13 0 43 1 46 56 46 57 46 58 46 59 10 4 45 17 75 45 18 38 228 10 1 4 51 0 13 0 13 2 19 2 19 40 26 13 0 13 3 19 2 19 40 17 13 0 13 4 19 2 19 40 8 13 0 13 5 19 2 19 76 39 181 15 20 19 1 21 47 1 67 45 68 10 1 39 10 13 0 19 1 24 12 19 1 25 39 154 13 0 19 1 24 12 19 1 25 45 69 13 1 19 1 27 76 40 133 10 0 76 40 27 13 0 11 28 17 29 40 19 11 30 40 15 13 0 11 31 17 29 39 7 14 28 11 32 17 33 39 37 14 28 15 34 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 70 13 3 13 10 19 7 40 14 28 19 1 41 38 64 14 28 15 42 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 70 13 3 13 10 19 7 40 14 28 19 1 41 13 0 15 43 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 70 13 3 13 10 19 7 40 43 1 43 2 10 1 5 51 1 10 1 40 -230 75 73 43 2 43 4 29) #70# #1# 60512) #Y(common-lisp-user::check-between-production-style nil nil (24 45 7 26 34 44 12 13 0 19 1 45 17 46 34 64 12 13 0 19 1 10 17 46 34 71 12 13 0 19 1 12 17 46 29) #70# #1# 60512) si::fset)) #1# 60512) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 84 12 19 2 85 1 0 73 29) #71=#A(t (86) (common-lisp-user::finalize-procedural-reset ext::location (defun common-lisp-user::finalize-procedural-reset) (#1# . 66775) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod #:g9832 #:g9833 common-lisp-user::procedural si::structure-set #:g9834 #:g9835 common-lisp-user::procedural-style-warnings #:g9836 t #:g9837 common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-events si::%dolist-var common-lisp-user::event common-lisp-user::evt-model common-lisp-user::current-model eq common-lisp-user::evt-action common-lisp-user::set-buffer-chunk common-lisp-user::evt-params common-lisp-user::params common-lisp-user::procedural-init-chunk-slots gethash second common-lisp-user::chunk-filled-slots-list-fct append remove-duplicates si::hash-set common-lisp-user::buffers common-lisp-user::buffer common-lisp-user::buffer-read common-lisp-user::it common-lisp-user::procedural-productions common-lisp-user::x common-lisp-user::check-production-for-style common-lisp-user::check-between-production-style common-lisp-user::procedural-use-tree common-lisp-user::procedural-crt common-lisp-user::procedural-ppm common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9851 #:g9850 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g9852 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* *standard-output* eql #67# common-lisp-user::mp-models length > "Conflict resolution cannot use the decision tree when :crt or :ppm is enabled." format finish-output #68# #69# common-lisp-user::procedural-last-conflict-tree common-lisp-user::build-conflict-tree #:g9853 common-lisp-user::procedural-conflict-tree common-lisp-user::copy-conflict-tree #:g9854 common-lisp-user::production-name common-lisp-user::productions-list mapcar common-lisp-user::conflict-node-valid equal #:g9855 #:g9856 #:g9857 #:g9858 #Y(common-lisp-user::finalize-procedural-reset nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 46 13 0 19 4 11 43 1 43 1 10 0 45 12 75 45 13 13 1 15 10 9 23 13 0 19 4 11 43 1 43 1 13 0 19 1 14 39 264 10 0 45 15 11 16 45 17 13 1 15 10 9 36 13 0 19 4 11 43 1 43 1 14 18 19 1 19 12 19 1 20 45 21 75 45 22 38 101 10 1 4 51 0 13 0 19 1 23 12 19 0 24 17 25 39 23 13 0 19 1 26 12 1 27 17 25 40 11 13 0 19 1 26 12 33 27 17 25 39 54 13 0 19 1 28 45 29 10 0 4 12 13 3 19 1 30 12 10 0 4 12 13 3 19 1 30 12 19 2 31 12 10 0 16 32 12 19 1 33 12 19 2 34 12 19 1 35 12 19 3 36 43 1 10 1 5 51 1 10 1 40 -103 43 2 19 0 37 45 21 75 45 38 38 63 10 1 4 51 0 13 0 19 1 39 45 40 10 0 39 40 13 1 13 3 19 1 30 12 13 1 13 3 19 1 30 12 19 2 31 12 13 0 19 1 33 12 19 2 34 12 19 1 35 12 19 3 36 38 1 43 1 10 1 5 51 1 10 1 40 -65 43 2 13 0 19 1 41 45 21 75 45 42 38 18 10 1 4 51 0 13 2 13 0 19 2 43 10 1 5 51 1 10 1 40 -20 43 2 13 0 19 1 44 13 0 19 1 45 73 39 349 13 0 19 1 46 40 6 13 0 19 1 47 39 169 15 48 19 1 49 47 1 50 45 51 10 1 39 10 13 0 19 1 52 12 19 1 53 39 142 13 0 19 1 52 12 19 1 53 45 54 13 1 19 1 55 76 40 121 10 0 76 40 27 13 0 11 56 17 25 40 19 11 57 40 15 13 0 11 16 17 25 39 7 14 56 11 58 17 59 39 33 14 56 15 60 19 0 61 16 62 12 9 1 19 2 63 12 19 0 24 12 15 64 19 5 65 14 56 19 1 66 38 56 14 56 15 67 19 0 61 16 62 12 9 1 19 2 63 12 19 0 24 12 15 64 19 5 65 14 56 19 1 66 13 0 15 68 19 0 61 16 62 12 9 1 19 2 63 12 19 0 24 12 15 64 19 5 65 43 1 43 2 13 0 19 1 69 76 39 39 13 0 19 1 70 10 0 45 71 13 1 19 1 72 12 77 19 2 73 45 74 13 1 15 10 9 22 13 0 19 4 11 43 1 43 1 38 121 15 75 13 0 19 1 76 12 19 2 77 12 13 0 19 1 72 12 19 1 78 17 79 73 40 95 15 75 13 0 19 1 76 12 19 2 77 12 13 0 19 1 69 12 19 1 78 17 79 39 34 10 0 45 80 13 1 19 1 69 12 77 19 2 73 45 81 13 1 15 10 9 21 13 0 19 4 11 43 1 43 1 38 37 13 0 19 1 70 10 0 45 82 13 1 19 1 72 12 77 19 2 73 45 83 13 1 15 10 9 22 13 0 19 4 11 43 1 43 1 29) #71# #1# 66775) si::fset)) #1# 66775) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 8 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 30 78 26 15 12 1 28 12 19 2 29 1 0 73 29) #72=#A(t (31) (common-lisp-user::cr-condition "CR-CONDITION-" (type common-lisp-user::buffer common-lisp-user::bi common-lisp-user::slot common-lisp-user::si common-lisp-user::value common-lisp-user::test common-lisp-user::result) ((type nil t nil 0 nil) (common-lisp-user::buffer nil t nil 1 nil) (common-lisp-user::bi nil t nil 2 nil) (common-lisp-user::slot nil t nil 3 nil) (common-lisp-user::si nil t nil 4 nil) (common-lisp-user::value nil t nil 5 nil) (common-lisp-user::test nil t nil 6 nil) (common-lisp-user::result nil t nil 7 nil)) common-lisp-user::copy-cr-condition (common-lisp-user::make-cr-condition) common-lisp-user::cr-condition-p si::define-structure ext::location (defstruct common-lisp-user::cr-condition) (#1# . 69254) ext::annotate common-lisp-user::make-cr-condition (defun common-lisp-user::make-cr-condition) (#1# . 69254) :lambda-list (&key #73=#:type #74=#:buffer #75=#:bi #76=#:slot #77=#:si #78=#:value #79=#:test #80=#:result) (nil :result :test :value :si :slot :bi :buffer :type) #73# #74# #75# #76# #77# #78# #79# #80# 0 si::make-structure #Y(common-lisp-user::make-cr-condition nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 15 26 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 9 27 29) #72# #1# 69254) si::fset find-class)) #1# 69254) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #81=#A(t (22) (common-lisp-user::cr-buffer-read ext::location (defun common-lisp-user::cr-buffer-read) (#1# . 69803) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::buffer common-lisp-user::index) common-lisp-user::prod common-lisp-user::buffer common-lisp-user::index common-lisp-user::procedural-buffer-lookup aref common-lisp-user::val :untested eq common-lisp-user::buffer-read common-lisp-user::chunk common-lisp-user::chunk-slots-vector common-lisp-user::slots si::aset #Y(common-lisp-user::cr-buffer-read nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 12 13 0 19 2 11 45 12 13 0 11 13 17 14 39 43 13 2 19 1 15 45 16 10 0 39 6 13 0 19 1 17 45 18 13 5 19 1 10 12 13 3 13 1 10 0 3 12 19 3 19 10 1 73 43 2 38 5 10 0 4 73 43 1 29) #81# #1# 69803) si::fset)) #1# 69803) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #82=#A(t (22) (common-lisp-user::cr-buffer-type-read ext::location (defun common-lisp-user::cr-buffer-type-read) (#1# . 70158) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::buffer common-lisp-user::index) common-lisp-user::prod common-lisp-user::buffer common-lisp-user::index common-lisp-user::procedural-buffer-lookup aref common-lisp-user::val :untested eq common-lisp-user::buffer-read common-lisp-user::chunk common-lisp-user::chunk-slots-vector common-lisp-user::slots si::aset #Y(common-lisp-user::cr-buffer-type-read nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 12 13 0 19 2 11 45 12 13 0 11 13 17 14 39 43 13 2 19 1 15 45 16 10 0 39 6 13 0 19 1 17 45 18 13 5 19 1 10 12 13 3 13 1 10 0 3 12 19 3 19 10 0 73 43 2 38 5 10 0 5 73 43 1 29) #82# #1# 70158) si::fset)) #1# 70158) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #83=#A(t (22) (common-lisp-user::cr-buffer-slot-read ext::location (defun common-lisp-user::cr-buffer-slot-read) (#1# . 70518) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::buffer common-lisp-user::bi common-lisp-user::si common-lisp-user::slot) common-lisp-user::prod common-lisp-user::buffer common-lisp-user::bi common-lisp-user::si common-lisp-user::slot common-lisp-user::procedural-slot-lookup aref common-lisp-user::val :untested eq common-lisp-user::cr-buffer-read common-lisp-user::fast-chunk-slot-value-fct si::aset #Y(common-lisp-user::cr-buffer-slot-read nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 26 13 4 19 1 12 12 13 2 13 1 19 3 13 45 14 13 0 11 15 17 16 39 32 13 5 19 1 12 12 13 3 13 2 13 5 13 4 13 3 19 3 17 12 13 1 19 2 18 12 19 4 19 38 4 10 0 73 43 1 29) #83# #1# 70518) si::fset)) #1# 70518) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #84=#A(t (16) (common-lisp-user::slot-value-from-index ext::location (defun common-lisp-user::slot-value-from-index) (#1# . 70792) ext::annotate :lambda-list (common-lisp-user::chunk common-lisp-user::index) common-lisp-user::chunk common-lisp-user::index common-lisp-user::chunk-p-fct common-lisp-user::slot-index->name common-lisp-user::slot-name common-lisp-user::fast-chunk-slot-value-fct t #Y(common-lisp-user::slot-value-from-index nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 35 13 0 19 1 10 45 11 10 0 39 15 13 2 13 0 19 2 12 12 14 13 72 2 38 6 77 14 13 72 2 43 1 38 5 77 77 72 2 29) #84# #1# 70792) si::fset)) #1# 70792) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 19 2 24 1 0 73 29) #85=#A(t (25) (common-lisp-user::cr-condition-equal ext::location (defun common-lisp-user::cr-condition-equal) (#1# . 71052) ext::annotate :lambda-list (common-lisp-user::a common-lisp-user::b) common-lisp-user::a common-lisp-user::b common-lisp-user::cr-condition-type eq common-lisp-user::cr-condition-buffer common-lisp-user::isa common-lisp-user::cr-condition-value equalp common-lisp-user::slot common-lisp-user::cr-condition-si = common-lisp-user::query common-lisp-user::cr-condition-slot eql common-lisp-user::test-slot common-lisp-user::cr-condition-test #Y(common-lisp-user::cr-condition-equal nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 1 9 17 10 73 39 148 13 1 19 1 11 12 13 0 19 1 11 17 10 73 39 132 13 1 19 1 9 42 12 16 13 1 19 1 13 12 13 0 19 1 13 17 14 38 109 42 15 18 13 1 19 1 16 12 13 0 19 1 16 12 19 2 17 38 89 42 18 32 13 1 19 1 19 12 13 0 19 1 19 17 10 73 39 14 13 1 19 1 13 12 13 0 19 1 13 17 20 38 55 42 21 50 13 1 19 1 22 12 13 0 19 1 22 17 10 73 39 32 13 1 19 1 16 12 13 0 19 1 16 12 19 2 17 73 39 14 13 1 19 1 13 12 13 0 19 1 13 17 20 38 3 75 73 29) #85# #1# 71052) si::fset)) #1# 71052) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 43 12 19 2 44 1 0 73 29) #86=#A(t (45) (common-lisp-user::test-constant-condition ext::location (defun common-lisp-user::test-constant-condition) (#1# . 71997) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::test &optional common-lisp-user::production) common-lisp-user::prod common-lisp-user::test common-lisp-user::production common-lisp-user::cr-condition-type common-lisp-user::isa common-lisp-user::cr-condition-buffer common-lisp-user::cr-condition-bi common-lisp-user::cr-buffer-type-read common-lisp-user::slots common-lisp-user::cr-condition-value common-lisp-user::slots-vector-match-signature common-lisp-user::slot common-lisp-user::cr-condition-si common-lisp-user::cr-condition-slot common-lisp-user::cr-buffer-slot-read real common-lisp-user::chunk-slot-equal t common-lisp-user::procedural-ppm common-lisp-user::similarity-fct common-lisp-user::sim numberp common-lisp-user::procedural-md > #:g9884 common-lisp-user::procedural-current-p #:g9882 common-lisp-user::production-partial-matched-slots #:g9883 si::structure-set common-lisp-user::query common-lisp-user::cr-condition-result common-lisp-user::query-buffer eq common-lisp-user::test-slot common-lisp-user::cr-condition-test #Y(common-lisp-user::test-constant-condition nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 13 1 19 1 10 42 11 48 13 2 13 1 19 1 12 12 13 1 19 1 13 12 19 3 14 45 15 10 0 73 39 20 13 0 13 2 19 1 16 4 12 13 2 19 1 16 5 12 19 3 17 43 1 38 257 42 18 153 13 2 13 1 19 1 12 12 13 1 19 1 13 12 13 1 19 1 19 12 13 1 19 1 20 12 19 5 21 45 22 13 2 19 1 16 12 13 0 19 2 23 39 6 11 24 73 38 100 13 3 19 1 25 73 39 92 13 2 19 1 16 12 13 0 19 2 26 45 27 10 0 16 28 39 12 13 0 13 4 19 1 29 12 19 2 30 73 39 57 13 3 19 1 12 12 13 3 19 1 20 12 13 3 19 1 16 12 13 1 10 0 6 5 45 31 13 5 19 1 32 45 33 13 1 13 0 19 1 34 3 45 35 13 1 15 9 9 25 13 0 19 4 36 43 3 43 1 43 1 38 102 42 37 34 13 1 19 1 38 12 13 1 19 1 12 12 13 1 19 1 20 12 13 1 19 1 16 6 2 12 19 2 39 17 40 38 66 42 41 61 13 2 13 1 19 1 12 12 13 1 19 1 13 12 13 1 19 1 19 12 13 1 19 1 20 12 19 5 21 45 22 13 2 19 1 38 12 13 2 19 1 42 12 13 0 13 2 19 1 16 12 20 2 23 17 40 43 1 38 3 75 73 29) #86# #1# 71997) si::fset)) #1# 71997) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 56 12 19 2 57 1 0 73 29) #87=#A(t (58) (common-lisp-user::test-search-constants ext::location (defun common-lisp-user::test-search-constants) (#1# . 73494) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::test common-lisp-user::production) common-lisp-user::prod common-lisp-user::test common-lisp-user::production common-lisp-user::cr-condition-type common-lisp-user::isa common-lisp-user::cr-condition-buffer common-lisp-user::cr-condition-bi common-lisp-user::cr-buffer-type-read common-lisp-user::slots common-lisp-user::cr-condition-value common-lisp-user::slots-vector-match-signature common-lisp-user::slot common-lisp-user::cr-buffer-read common-lisp-user::cr-condition-si common-lisp-user::slot-value-from-index common-lisp-user::exists real common-lisp-user::chunk-slot-equal t common-lisp-user::procedural-ppm common-lisp-user::similarity-fct common-lisp-user::sim numberp common-lisp-user::procedural-md > common-lisp-user::cr-condition-slot #:g9896 common-lisp-user::procedural-current-p #:g9894 common-lisp-user::production-partial-matched-slots #:g9895 si::structure-set common-lisp-user::test-slot common-lisp-user::cr-condition-result common-lisp-user::cr-condition-test common-lisp-user::production-bindings common-lisp-user::replace-variables eq common-lisp-user::safe-chunk-slot-equal common-lisp-user::desired #:g9899 #:g9897 #:g9898 common-lisp-user::test-var-slot common-lisp-user::slot-name common-lisp-user::fast-chunk-slot-value-fct #:g9902 #:g9900 #:g9901 #Y(common-lisp-user::test-search-constants nil nil (24 45 7 24 45 8 24 45 9 26 13 1 19 1 10 42 11 48 13 2 13 1 19 1 12 12 13 1 19 1 13 12 19 3 14 45 15 10 0 73 39 20 13 0 13 2 19 1 16 4 12 13 2 19 1 16 5 12 19 3 17 43 1 38 605 42 18 159 13 2 13 1 19 1 12 12 13 1 19 1 13 12 19 3 19 12 13 1 19 1 20 12 19 2 21 47 1 22 45 23 10 1 73 39 118 13 3 19 1 16 12 13 0 19 2 24 39 6 11 25 73 38 100 13 4 19 1 26 73 39 92 13 3 19 1 16 12 13 0 19 2 27 45 28 10 0 16 29 39 12 13 0 13 5 19 1 30 12 19 2 31 73 39 57 13 4 19 1 12 12 13 4 19 1 32 12 13 4 19 1 16 12 13 1 10 0 6 5 45 33 13 6 19 1 34 45 35 13 1 13 0 19 1 36 3 45 37 13 1 15 9 9 25 13 0 19 4 38 43 3 43 1 43 2 38 444 42 39 211 13 2 13 1 19 1 12 12 13 1 19 1 13 12 19 3 19 12 13 1 19 1 20 12 19 2 21 47 1 22 45 23 10 1 73 39 170 13 3 19 1 40 12 13 3 19 1 41 12 13 0 13 3 19 1 16 12 13 2 19 1 42 12 19 2 43 12 20 2 23 17 44 39 6 11 25 73 38 128 13 4 19 1 26 39 18 13 3 19 1 41 12 1 45 17 44 39 6 13 3 19 1 40 73 39 101 13 3 19 1 16 12 13 2 19 1 42 12 19 2 43 45 46 13 0 13 1 19 2 27 45 28 10 0 16 29 39 12 13 0 13 6 19 1 30 12 19 2 31 73 39 53 13 5 19 1 12 12 13 5 19 1 32 12 13 1 13 2 10 0 6 5 45 47 13 7 19 1 34 45 48 13 1 13 0 19 1 36 3 45 49 13 1 15 9 9 25 13 0 19 4 38 43 3 43 2 43 2 38 231 42 50 226 13 1 19 1 32 12 13 0 19 1 42 12 19 2 43 45 51 13 3 13 2 19 1 12 12 13 2 19 1 13 12 19 3 19 12 13 0 19 2 52 45 23 13 3 19 1 40 12 13 3 19 1 41 12 13 0 13 3 19 1 16 12 13 2 19 1 42 12 19 2 43 12 20 2 23 17 44 39 6 11 25 73 38 138 13 4 19 1 26 39 18 13 3 19 1 41 12 1 45 17 44 39 6 13 3 19 1 40 73 39 111 13 3 19 1 16 12 13 2 19 1 42 12 19 2 43 45 46 13 0 13 1 19 2 27 45 28 10 0 16 29 39 12 13 0 13 6 19 1 30 12 19 2 31 73 39 63 13 5 19 1 12 12 13 5 19 1 32 12 13 4 19 1 42 12 19 2 43 12 13 1 13 2 10 0 6 5 45 53 13 7 19 1 34 45 54 13 1 13 0 19 1 36 3 45 55 13 1 15 9 9 25 13 0 19 4 38 43 3 43 2 43 2 38 3 75 73 29) #87# #1# 73494) si::fset)) #1# 73494) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 43 12 19 2 44 1 0 73 29) #88=#A(t (45) (common-lisp-user::test-and-perform-bindings ext::location (defun common-lisp-user::test-and-perform-bindings) (#1# . 77157) ext::annotate :lambda-list (common-lisp-user::procedural common-lisp-user::bind common-lisp-user::production) common-lisp-user::procedural common-lisp-user::bind common-lisp-user::production common-lisp-user::cr-condition-type common-lisp-user::bind-slot common-lisp-user::cr-condition-value common-lisp-user::cr-condition-buffer common-lisp-user::cr-condition-bi common-lisp-user::cr-condition-si common-lisp-user::cr-condition-slot common-lisp-user::cr-buffer-slot-read common-lisp-user::bind-variable common-lisp-user::bind-buffer common-lisp-user::cr-buffer-read common-lisp-user::bind-var-slot common-lisp-user::production-bindings common-lisp-user::replace-variables common-lisp-user::slot common-lisp-user::valid-slot-name common-lisp-user::index numberp real common-lisp-user::cr-condition-result common-lisp-user::replace-variables-for-eval eval common-lisp-user::result common-lisp-user::mv-bind list common-lisp-user::results common-lisp-user::all-vars length = member common-lisp-user::vals common-lisp-user::vars t #Y(common-lisp-user::test-and-perform-bindings nil nil (24 45 7 24 45 8 24 45 9 26 13 1 19 1 10 42 11 44 13 1 19 1 12 12 13 2 13 1 19 1 13 12 13 1 19 1 14 12 13 1 19 1 15 12 13 1 19 1 16 12 19 5 17 12 13 0 19 3 18 38 282 42 19 32 13 1 19 1 12 12 13 2 13 1 19 1 13 12 13 1 19 1 14 12 19 3 20 12 13 0 19 3 18 38 248 42 21 79 13 1 19 1 16 12 13 0 19 1 22 12 19 2 23 45 24 13 0 19 1 25 45 26 10 0 16 27 73 39 44 13 4 13 3 19 1 13 12 13 3 19 1 14 12 13 0 13 1 19 5 17 45 28 10 0 73 39 14 13 4 19 1 12 12 13 0 13 3 19 3 18 43 1 43 2 38 167 42 8 45 13 1 19 1 29 12 13 0 19 1 22 12 19 2 30 16 31 45 32 10 0 39 16 13 2 19 1 12 12 13 0 13 1 19 3 18 38 3 75 73 43 1 38 120 42 33 115 13 1 19 1 12 12 15 34 13 1 19 1 29 12 13 0 19 1 22 12 19 2 30 16 31 69 21 23 12 46 35 46 36 10 1 16 37 12 10 0 16 37 12 19 2 38 76 39 5 75 73 38 58 77 13 1 19 2 39 39 5 75 73 38 46 13 0 13 1 46 40 46 41 38 26 10 0 4 12 10 1 4 12 13 4 19 3 18 10 0 5 12 10 1 5 12 53 1 53 0 10 0 76 39 -29 11 42 73 43 2 43 2 38 3 75 73 29) #88# #1# 77157) si::fset)) #1# 77157) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 44 12 19 2 45 1 0 73 29) #89=#A(t (46) (common-lisp-user::test-and-perform-bindings-search ext::location (defun common-lisp-user::test-and-perform-bindings-search) (#1# . 78800) ext::annotate :lambda-list (common-lisp-user::procedural common-lisp-user::bind common-lisp-user::production) common-lisp-user::procedural common-lisp-user::bind common-lisp-user::production common-lisp-user::cr-condition-type common-lisp-user::bind-slot common-lisp-user::cr-condition-buffer common-lisp-user::cr-condition-bi common-lisp-user::cr-buffer-read common-lisp-user::cr-condition-si common-lisp-user::slot-value-from-index common-lisp-user::exists real common-lisp-user::cr-condition-value common-lisp-user::bind-variable common-lisp-user::bind-buffer common-lisp-user::bind-var-slot common-lisp-user::cr-condition-slot common-lisp-user::production-bindings common-lisp-user::replace-variables common-lisp-user::slot common-lisp-user::valid-slot-name common-lisp-user::index numberp common-lisp-user::cr-condition-result common-lisp-user::replace-variables-for-eval eval common-lisp-user::result common-lisp-user::mv-bind list common-lisp-user::results common-lisp-user::all-vars length = member common-lisp-user::vals common-lisp-user::vars t #Y(common-lisp-user::test-and-perform-bindings-search nil nil (24 45 7 24 45 8 24 45 9 26 13 1 19 1 10 42 11 55 13 2 13 1 19 1 12 12 13 1 19 1 13 12 19 3 14 12 13 1 19 1 15 12 19 2 16 47 1 17 45 18 10 1 73 39 14 13 3 19 1 19 12 13 0 13 2 19 3 20 43 2 38 287 42 21 32 13 1 19 1 19 12 13 2 13 1 19 1 12 12 13 1 19 1 13 12 19 3 14 12 13 0 19 3 20 38 253 42 22 84 13 1 19 1 23 12 13 0 19 1 24 12 19 2 25 45 26 13 0 19 1 27 45 28 10 0 16 29 73 39 49 13 4 13 3 19 1 12 12 13 3 19 1 13 12 19 3 14 12 13 0 19 2 16 47 1 17 45 18 10 1 73 39 14 13 5 19 1 19 12 13 0 13 4 19 3 20 43 2 43 2 38 167 42 8 45 13 1 19 1 30 12 13 0 19 1 24 12 19 2 31 16 32 45 33 10 0 39 16 13 2 19 1 19 12 13 0 13 1 19 3 20 38 3 75 73 43 1 38 120 42 34 115 13 1 19 1 19 12 15 35 13 1 19 1 30 12 13 0 19 1 24 12 19 2 31 16 32 69 21 23 12 46 36 46 37 10 1 16 38 12 10 0 16 38 12 19 2 39 76 39 5 75 73 38 58 77 13 1 19 2 40 39 5 75 73 38 46 13 0 13 1 46 41 46 42 38 26 10 0 4 12 10 1 4 12 13 4 19 3 20 10 0 5 12 10 1 5 12 53 1 53 0 10 0 76 39 -29 11 43 73 43 2 43 2 38 3 75 73 29) #89# #1# 78800) si::fset)) #1# 78800) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 50 12 19 2 51 1 0 73 29) #90=#A(t (52) (common-lisp-user::test-other-condition ext::location (defun common-lisp-user::test-other-condition) (#1# . 80879) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::test common-lisp-user::production) common-lisp-user::prod common-lisp-user::test common-lisp-user::production common-lisp-user::cr-condition-type common-lisp-user::query common-lisp-user::cr-condition-result common-lisp-user::cr-condition-buffer common-lisp-user::cr-condition-slot common-lisp-user::cr-condition-value common-lisp-user::production-bindings common-lisp-user::replace-variables common-lisp-user::query-buffer eq common-lisp-user::test-slot common-lisp-user::cr-condition-bi common-lisp-user::cr-condition-si common-lisp-user::cr-buffer-slot-read real common-lisp-user::cr-condition-test t common-lisp-user::procedural-ppm common-lisp-user::safe-chunk-slot-equal common-lisp-user::desired common-lisp-user::similarity-fct common-lisp-user::sim numberp common-lisp-user::procedural-md > #:g9911 common-lisp-user::procedural-current-p #:g9909 common-lisp-user::production-partial-matched-slots #:g9910 si::structure-set eval common-lisp-user::replace-variables-for-eval common-lisp-user::test-var-slot common-lisp-user::slot common-lisp-user::valid-slot-name common-lisp-user::index #:g9914 #:g9912 #:g9913 #Y(common-lisp-user::test-other-condition nil nil (24 45 7 24 45 8 24 45 9 26 13 1 19 1 10 42 11 44 13 1 19 1 12 12 13 1 19 1 13 12 13 1 19 1 14 12 13 1 19 1 15 12 13 0 19 1 16 12 19 2 17 6 2 12 19 2 18 17 19 38 469 42 20 205 13 2 13 1 19 1 13 12 13 1 19 1 21 12 13 1 19 1 22 12 13 1 19 1 14 12 19 5 23 45 24 13 2 19 1 12 12 13 2 19 1 25 12 13 0 13 2 19 1 15 12 13 1 19 1 16 12 19 2 17 12 20 2 23 17 19 39 6 11 26 73 38 128 13 3 19 1 27 39 18 13 2 19 1 25 12 1 28 17 19 39 6 13 2 19 1 12 73 39 101 13 2 19 1 15 12 13 1 19 1 16 12 19 2 17 45 29 13 0 13 1 19 2 30 45 31 10 0 16 32 39 12 13 0 13 5 19 1 33 12 19 2 34 73 39 53 13 4 19 1 13 12 13 4 19 1 14 12 13 1 13 2 10 0 6 5 45 35 13 6 19 1 36 45 37 13 1 13 0 19 1 38 3 45 39 13 1 15 9 9 25 13 0 19 4 40 43 3 43 2 43 1 38 262 42 41 20 13 1 19 1 15 12 13 0 19 1 16 12 19 2 42 16 41 38 240 42 43 235 13 1 19 1 14 12 13 0 19 1 16 12 19 2 17 45 44 13 0 19 1 45 45 46 10 0 39 22 13 4 13 3 19 1 13 12 13 3 19 1 21 12 13 0 13 1 19 5 23 45 24 13 4 19 1 12 12 13 4 19 1 25 12 13 0 13 4 19 1 15 12 13 3 19 1 16 12 19 2 17 12 20 2 23 17 19 39 6 11 26 73 38 138 13 5 19 1 27 39 18 13 4 19 1 25 12 1 28 17 19 39 6 13 4 19 1 12 73 39 111 13 4 19 1 15 12 13 3 19 1 16 12 19 2 17 45 29 13 0 13 1 19 2 30 45 31 10 0 16 32 39 12 13 0 13 7 19 1 33 12 19 2 34 73 39 63 13 6 19 1 13 12 13 6 19 1 14 12 13 5 19 1 16 12 19 2 17 12 13 1 13 2 10 0 6 5 45 47 13 8 19 1 36 45 48 13 1 13 0 19 1 38 3 45 49 13 1 15 9 9 25 13 0 19 4 40 43 3 43 2 43 3 38 3 75 73 29) #90# #1# 80879) si::fset)) #1# 80879) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 50 12 19 2 51 1 0 73 29) #91=#A(t (52) (common-lisp-user::test-search-buffers ext::location (defun common-lisp-user::test-search-buffers) (#1# . 83417) ext::annotate :lambda-list (common-lisp-user::prod common-lisp-user::test common-lisp-user::production) common-lisp-user::prod common-lisp-user::test common-lisp-user::production common-lisp-user::cr-condition-buffer common-lisp-user::buffer common-lisp-user::procedural-search-buffer-table gethash common-lisp-user::exists common-lisp-user::val common-lisp-user::m-buffer-search common-lisp-user::new-val common-lisp-user::e common-lisp-user::get-m-buffer-chunks common-lisp-user::valid common-lisp-user::x member #Y(nil nil nil (24 45 21 26 13 0 13 1 19 2 22 29) #91# #1# 83417) remove-if-not si::hash-set common-lisp-user::chunk-list si::%dolist-var common-lisp-user::c common-lisp-user::procedural-buffer-lookup common-lisp-user::cr-condition-bi common-lisp-user::chunk-slots-vector si::aset common-lisp-user::procedural-crt common-lisp-user::crt #:g9931 #:g9932 common-lisp-user::procedural si::structure-set common-lisp-user::cr-condition-value common-lisp-user::test-search-constants common-lisp-user::conflict-tests common-lisp-user::result #:g9933 #:g9934 #:g9937 #:g9935 common-lisp-user::procedural-temp-search #:g9936 t #Y(common-lisp-user::test-search-buffers nil nil (24 45 7 24 45 8 24 45 9 26 57 0 60 258 13 2 19 1 10 45 11 13 0 13 4 19 1 12 12 19 2 13 47 1 14 45 15 10 1 39 5 10 0 38 53 13 2 19 1 16 47 1 17 45 18 13 4 13 8 19 1 12 12 10 0 39 20 13 4 19 1 19 45 20 34 23 12 13 2 19 2 24 43 1 38 6 13 4 19 1 19 12 19 3 25 43 2 43 2 45 26 10 0 45 27 75 45 28 38 151 10 1 4 51 0 13 7 19 1 29 12 13 6 19 1 30 12 13 0 13 0 19 1 31 3 12 19 3 32 13 7 19 1 33 45 34 10 8 45 35 75 45 36 13 1 15 37 9 3 13 0 19 4 38 43 1 43 1 13 8 13 7 19 1 39 12 13 6 15 40 19 4 41 45 42 10 9 45 43 10 2 45 44 13 1 15 37 9 3 13 0 19 4 38 43 1 43 1 10 0 39 40 13 5 10 2 3 45 45 10 10 45 46 13 1 13 0 19 1 47 3 45 48 13 1 15 37 9 33 13 0 19 4 38 43 3 11 49 73 36 6 43 1 43 1 10 1 5 51 1 10 1 40 -153 43 2 75 73 43 2 63 29) #91# #1# 83417) si::fset)) #1# 83417) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 62 12 19 2 63 1 0 73 29) #92=#A(t (64) (common-lisp-user::failure-reason-string ext::location (defun common-lisp-user::failure-reason-string) (#1# . 85081) ext::annotate :lambda-list (condition common-lisp-user::production) condition common-lisp-user::production common-lisp-user::production-disabled "The production is disabled." common-lisp-user::cr-condition-type common-lisp-user::isa common-lisp-user::cr-condition-buffer common-lisp-user::buffer-read common-lisp-user::it common-lisp-user::chunk-slots-vector common-lisp-user::slots common-lisp-user::cr-condition-value common-lisp-user::compare-slots-vector-to-signature common-lisp-user::filled common-lisp-user::unfilled common-lisp-user::extra common-lisp-user::match "This should not happen -- the isa test failed but reports as a match now." format "The chunk in the ~S buffer does not have slot~p ~{~s~^, ~}." length "The chunk in the ~S buffer has the slot~p ~{~s~^, ~}." "This should not happen -- the isa test failed but there are neither unfilled or filled slots but extra is ~s" "The ~s buffer is empty." search "The searched multi-buffer ~s did not have a matching chunk." common-lisp-user::slot "The ~s slot of the chunk in the ~s buffer does not have the value ~s." common-lisp-user::cr-condition-slot common-lisp-user::query "The ~s ~s query of the ~s buffer failed." common-lisp-user::test-slot "The value in the ~s slot of the chunk in the ~s buffer does not satisfy the constraints." eval "The evaluation of the expression ~s returned nil." common-lisp-user::test-var-slot common-lisp-user::production-bindings common-lisp-user::replace-variables common-lisp-user::slot-name "The value in the ~s slot (the value of the ~s variable) of the chunk of the ~s buffer does not satisfy the constraints." common-lisp-user::bind "The evaluation of the expression ~s returned nil." common-lisp-user::cr-condition-result common-lisp-user::mv-bind "The evaluation of the expression ~s either returned a nil value or too few values to bind to all of the variables." common-lisp-user::bind-buffer "The ~s buffer is empty." common-lisp-user::bind-slot "This should not happen -- a bind-slot has failed.  Please report this to Dan." common-lisp-user::bind-var-slot common-lisp-user::valid-slot-name common-lisp-user::index numberp "The chunk in the ~s buffer does not have a slot named ~s (the value of the ~s variable)." "The value of the ~s variable does not name a valid slot in the chunk in the ~s buffer." #Y(common-lisp-user::failure-reason-string nil nil (24 45 7 24 45 8 26 13 0 19 1 9 39 6 1 10 73 38 464 13 1 19 1 11 42 12 145 13 1 19 1 13 12 19 1 14 45 15 10 0 39 114 13 0 19 1 16 45 17 13 0 13 3 19 1 18 4 12 13 3 19 1 18 5 12 19 3 19 47 3 20 47 2 21 47 1 22 45 23 10 0 39 9 77 15 24 19 2 25 38 59 10 2 39 22 77 15 26 13 7 19 1 13 12 10 2 16 27 12 13 2 19 5 25 38 34 10 3 39 22 77 15 28 13 7 19 1 13 12 10 3 16 27 12 13 3 19 5 25 38 9 77 15 29 13 1 19 3 25 43 4 43 1 38 13 77 15 30 13 2 19 1 13 12 19 3 25 43 1 38 312 42 31 15 77 15 32 13 1 19 1 13 12 19 3 25 38 295 42 33 27 77 15 34 13 1 19 1 35 12 13 1 19 1 13 12 13 1 19 1 18 12 19 5 25 38 266 42 36 27 77 15 37 13 1 19 1 35 12 13 1 19 1 18 12 13 1 19 1 13 12 19 5 25 38 237 42 38 21 77 15 39 13 1 19 1 35 12 13 1 19 1 13 12 19 4 25 38 214 42 40 15 77 15 41 13 1 19 1 18 12 19 3 25 38 197 42 42 42 13 1 19 1 35 12 13 0 19 1 43 12 19 2 44 45 45 77 15 46 13 0 13 2 19 1 35 12 13 2 19 1 13 12 19 5 25 43 1 38 153 42 47 15 77 15 48 13 1 19 1 49 12 19 3 25 38 136 42 50 15 77 15 51 13 1 19 1 49 12 19 3 25 38 119 42 52 15 77 15 53 13 1 19 1 13 12 19 3 25 38 102 42 54 9 77 15 55 19 2 25 38 91 42 56 86 13 1 19 1 35 12 13 0 19 1 43 12 19 2 44 12 19 1 57 45 58 10 0 16 59 39 37 77 15 60 13 2 19 1 13 12 13 2 19 1 35 12 13 1 19 1 43 12 19 2 44 12 13 2 19 1 35 12 19 5 25 38 19 77 15 61 13 2 19 1 35 12 13 2 19 1 13 12 19 4 25 43 1 38 3 75 73 29) #92# #1# 85081) si::fset)) #1# 85081) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #93=#A(t (22) (common-lisp-user::bind-variable ext::location (defun common-lisp-user::bind-variable) (#1# . 88920) ext::annotate :lambda-list (common-lisp-user::var common-lisp-user::value common-lisp-user::production) common-lisp-user::var common-lisp-user::value common-lisp-user::production common-lisp-user::production-bindings assoc common-lisp-user::it #:g9943 #:g9944 rplacd #:g9947 #:g9945 #:g9946 si::structure-set #Y(common-lisp-user::bind-variable nil nil (24 45 7 24 45 8 24 45 9 26 13 2 13 0 19 1 10 12 19 2 11 45 12 10 0 39 24 10 0 45 13 10 3 45 14 13 1 10 0 17 15 10 0 73 43 1 43 1 38 38 13 3 10 2 3 45 16 10 2 45 17 13 1 13 0 19 1 10 3 45 18 13 1 15 9 9 4 13 0 19 4 19 43 3 10 2 73 43 1 29) #93# #1# 88920) si::fset)) #1# 88920) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 33 12 19 2 34 1 0 73 29) #94=#A(t (35) (common-lisp-user::conflict-tests ext::location (defun common-lisp-user::conflict-tests) (#1# . 89145) ext::annotate :lambda-list (common-lisp-user::procedural common-lisp-user::test-list common-lisp-user::production common-lisp-user::tester &key (common-lisp-user::report t)) common-lisp-user::procedural common-lisp-user::test-list common-lisp-user::production common-lisp-user::tester (nil :report) t common-lisp-user::report common-lisp-user::tests common-lisp-user::result common-lisp-user::outcome #:g9954 #:g9955 si::structure-set common-lisp-user::procedural-crt common-lisp-user::printing-module common-lisp-user::get-module-fct #:g9957 #:g9956 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #95="~&~@?~%" "Fails because: " format #:g9959 #:g9958 common-lisp-user::failure-reason-string #Y(common-lisp-user::conflict-tests nil nil (24 45 7 24 45 8 24 45 9 24 45 10 28 11 22 40 3 14 12 46 13 10 3 76 39 6 11 12 73 38 209 10 3 45 14 13 2 13 5 10 0 4 12 13 3 20 3 23 45 15 38 21 10 1 5 51 1 13 3 13 6 10 1 4 12 13 4 20 3 23 51 0 10 0 76 40 5 10 1 5 76 39 -30 13 0 10 1 4 3 43 2 45 16 10 0 4 76 39 136 10 3 45 17 10 1 5 45 18 13 1 15 9 9 24 13 0 19 4 19 43 1 43 1 13 5 19 1 20 39 3 10 1 39 97 15 21 19 1 22 47 1 23 45 24 10 1 39 10 13 0 19 1 25 12 19 1 26 39 18 13 0 19 1 25 12 19 1 26 12 15 27 15 28 19 3 29 43 2 15 21 19 1 22 47 1 30 45 31 10 1 39 10 13 0 19 1 25 12 19 1 26 39 26 13 0 19 1 25 12 19 1 26 12 15 27 10 2 5 12 13 5 19 2 32 12 19 3 29 43 2 75 73 38 4 11 12 73 43 1 29) #94# #1# 89145) si::fset)) #1# 89145) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 223 12 19 2 224 1 0 73 29) #96=#A(t (225) (common-lisp-user::conflict-resolution ext::location (defun common-lisp-user::conflict-resolution) (#1# . 89966) ext::annotate :lambda-list (common-lisp-user::procedural) common-lisp-user::procedural #:g10088 #:g10089 si::structure-set #:g10090 common-lisp-user::procedural-buffer-lookup-size :initial-element :untested make-array #:g10091 #:g10092 common-lisp-user::largest-chunk-type-size #:g10093 common-lisp-user::conflict-set common-lisp-user::hook-set common-lisp-user::best common-lisp-user::minimum-utility common-lisp-user::best-ut common-lisp-user::mu make-hash-table common-lisp-user::offsets-table common-lisp-user::procedural-use-tree common-lisp-user::procedural-crt common-lisp-user::procedural-ppm common-lisp-user::procedural-productions common-lisp-user::x common-lisp-user::get-production-internal #Y(nil nil nil (24 45 32 26 13 0 13 7 19 2 33 29) #96# #1# 89966) common-lisp-user::get-valid-productions mapcar common-lisp-user::test-set common-lisp-user::saved-search-chunks #:g10094 common-lisp-user::mp-time-ms #:g10095 common-lisp-user::procedural-search-matches-table clrhash common-lisp-user::procedural-used-search-buffers si::%dolist-var common-lisp-user::b common-lisp-user::buffer-read common-lisp-user::it si::hash-set :clear common-lisp-user::procedural-search-buffer-table common-lisp-user::production #:g10130 #:g10131 #:g10132 #:g10133 #:g10134 #:g10135 #:g10136 #:g10137 #:g10138 #:g10139 common-lisp-user::production-disabled common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10141 #:g10140 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #95# "Trying production: ~s" common-lisp-user::production-name format common-lisp-user::production-constants common-lisp-user::test-constant-condition common-lisp-user::conflict-tests common-lisp-user::production-binds common-lisp-user::test-and-perform-bindings common-lisp-user::production-others common-lisp-user::test-other-condition common-lisp-user::production-searches common-lisp-user::test-search-buffers common-lisp-user::production-search-binds common-lisp-user::test-and-perform-bindings-search common-lisp-user::production-search-others common-lisp-user::procedural-temp-search common-lisp-user::s #:g10149 #:g10146 #:g10147 gethash adjoin #:g10148 #:g10151 nconc common-lisp-user::buffer common-lisp-user::chunks common-lisp-user::m-buffer-offset common-lisp-user::offsets common-lisp-user::exists numberp every cons #Y(nil nil nil (24 45 96 24 45 97 26 13 1 13 0 19 2 98 47 1 99 45 100 10 0 39 12 10 1 39 8 15 101 13 1 19 2 102 73 39 18 13 3 13 6 15 103 13 2 13 1 19 3 36 12 19 3 49 43 2 29) #96# #1# 89966) maphash t common-lisp-user::compute-utility common-lisp-user::u #:g10171 #:g10170 "Production ~s matches" common-lisp-user::cr-condition-buffer common-lisp-user::buf common-lisp-user::cr-condition-test common-lisp-user::buf-var common-lisp-user::production-bindings assoc common-lisp-user::bound-chunk common-lisp-user::offset #:g10175 + #:g10176 #:g10177 < #:g10179 #:g10178 "Fails because:~%Utility ~s is below the threshold ~s" > = common-lisp-user::procedural-er #:g10183 listp common-lisp-user::permute-list common-lisp-user::procedural-conflict-set-hook copy-list common-lisp-user::y common-lisp-user::sort-productions #Y(nil nil nil (24 45 32 24 45 136 26 13 1 13 0 13 7 19 3 137 29) #96# #1# 89966) sort common-lisp-user::cs-names common-lisp-user::old-val common-lisp-user::val common-lisp-user::hook stringp member *error-output* #58# common-lisp-user::current-mp-fct common-lisp-user::mp-models length common-lisp-user::current-model "Only productions in the conflict set, a string, or nil are valid return values of a conflict-set-hook function." finish-output "Multiple functions on the conflict-set-hook returned a value" common-lisp-user::procedural-cst common-lisp-user::procedural-v common-lisp-user::print-instantiation :utility :u common-lisp-user::spp-fct common-lisp-user::production-conflict-val #:g10203 #:g10202 common-lisp-user::printing-module-suppress-cmds #:g10204 #:g10205 #:g10206 (setf common-lisp-user::printing-module-suppress-cmds) caar #:g10207 #:g10208 (setf common-lisp-user::printing-module-suppress-cmds) #:g10210 #:g10209 common-lisp-user::printing-module-c #97="~&~@?~%" "{buffer search adjusted u value is ~,3f}" eq common-lisp-user::erase-buffer common-lisp-user::overwrite-buffer-chunk common-lisp-user::best-production common-lisp-user::production-selected :module :destination :priority :max :params :details string symbol-name " " concatenate common-lisp-user::schedule-event-now common-lisp-user::production-conflict-code common-lisp-user::code common-lisp-user::production-break :output :time-in-ms " " common-lisp-user::schedule-break-relative #:g10211 common-lisp-user::medium :dynamic common-lisp-user::schedule-event-after-change #:g10212 symbolp " " " " #:g10214 #:g10213 #:g10215 common-lisp-user::printing-module-model-warnings common-lisp-user::*one-stream-hack* *standard-output* eql #67# "conflict-set-hook function canceled selection because : ~a" #68# #69# common-lisp-user::procedural-dat common-lisp-user::schedule-event-relative "Illegal conflict resolution situation occured. Contact Dan to let him know." #Y(common-lisp-user::conflict-resolution nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 7 9 12 13 0 19 4 10 43 1 43 1 10 0 45 11 13 1 19 1 12 6 1 12 14 13 14 14 19 3 15 45 16 13 1 15 7 9 18 13 0 19 4 10 43 1 43 1 10 0 45 17 13 1 19 1 12 12 19 0 18 6 2 12 14 13 14 14 19 3 15 45 19 13 1 15 7 9 20 13 0 19 4 10 43 1 43 1 75 45 20 75 45 21 75 45 22 19 0 23 45 24 10 0 45 25 19 0 26 45 27 13 6 19 1 28 76 40 13 13 6 19 1 29 40 6 13 6 19 1 30 39 8 13 6 19 1 31 38 13 34 34 12 13 6 19 1 35 12 19 2 36 45 37 19 0 26 45 38 10 8 45 39 19 0 40 45 41 13 1 15 7 9 34 13 0 19 4 10 43 1 43 1 13 8 19 1 42 16 43 13 8 19 1 44 45 45 75 45 46 38 44 10 1 4 51 0 13 0 19 1 47 45 48 10 0 39 12 13 1 13 3 13 0 19 3 49 38 10 13 1 13 3 14 50 19 3 49 43 1 10 1 5 51 1 10 1 40 -46 43 2 13 8 19 1 51 16 43 10 1 45 45 75 45 52 38 377 10 1 4 51 0 10 0 45 53 75 45 54 13 1 15 52 9 4 13 0 19 4 10 43 1 43 1 10 0 45 55 75 45 56 13 1 15 52 9 24 13 0 19 4 10 43 1 43 1 10 10 45 57 10 1 45 58 13 1 15 7 9 26 13 0 19 4 10 43 1 43 1 10 0 45 59 75 45 60 13 1 15 52 9 25 13 0 19 4 10 43 1 43 1 10 10 45 61 75 45 62 13 1 15 7 9 33 13 0 19 4 10 43 1 43 1 13 0 19 1 63 76 39 248 13 10 19 1 29 39 51 15 64 19 1 65 47 1 66 45 67 10 1 39 10 13 0 19 1 68 12 19 1 69 39 24 13 0 19 1 68 12 19 1 69 12 15 70 15 71 13 2 19 1 72 12 19 4 73 43 2 13 10 13 0 19 1 74 12 13 0 15 75 19 4 76 39 84 13 10 13 0 19 1 77 12 13 0 15 78 19 4 76 39 67 13 10 13 0 19 1 79 12 13 0 15 80 19 4 76 39 50 13 10 13 0 19 1 81 12 13 0 15 82 19 4 76 39 33 13 10 13 0 19 1 83 12 13 0 15 84 19 4 76 39 16 13 10 13 0 19 1 85 12 13 0 15 80 19 4 76 39 89 13 10 19 1 86 45 45 75 45 87 38 54 10 1 4 51 0 10 0 5 45 88 10 1 4 45 89 13 14 19 1 42 45 90 13 2 13 1 13 0 19 2 91 12 19 2 92 45 93 13 2 13 1 13 0 19 3 49 43 4 10 1 5 51 1 10 1 40 -56 43 2 10 0 6 1 45 94 13 10 13 0 19 2 95 51 10 43 1 10 1 5 51 1 10 1 40 -379 43 2 34 104 12 13 8 19 1 42 17 105 10 7 45 45 75 45 52 38 336 10 1 4 51 0 13 0 19 1 72 12 14 106 19 2 107 45 108 13 11 19 1 29 39 51 15 64 19 1 65 47 1 109 45 110 10 1 39 10 13 0 19 1 68 12 19 1 69 39 24 13 0 19 1 68 12 19 1 69 12 15 70 15 111 13 3 19 1 72 12 19 4 73 43 2 13 1 19 1 81 45 45 75 45 87 38 78 10 1 4 51 0 13 0 19 1 112 45 113 13 1 19 1 114 45 115 13 0 13 5 19 1 116 12 19 2 117 5 45 118 13 0 13 2 13 10 19 2 91 12 19 2 117 5 45 119 10 0 16 101 39 16 10 0 45 120 13 7 13 0 19 2 121 51 7 43 1 43 4 10 1 5 51 1 10 1 40 -80 43 2 10 1 45 122 10 1 45 123 13 1 15 52 9 17 13 0 19 4 10 43 1 43 1 13 11 19 1 29 39 12 10 6 39 8 13 0 13 6 19 2 124 39 49 15 64 19 1 65 47 1 125 45 126 10 1 39 10 13 0 19 1 68 12 19 1 69 39 22 13 0 19 1 68 12 19 1 69 12 15 70 15 127 13 2 13 8 19 5 73 43 2 10 7 76 40 8 13 0 13 7 19 2 128 39 13 10 0 51 7 10 1 6 1 51 8 38 42 13 0 13 7 19 2 129 39 33 13 11 19 1 130 39 20 10 1 6 1 45 131 13 9 13 0 19 2 95 51 9 43 1 38 7 10 1 6 1 51 8 43 1 10 1 5 51 1 10 1 40 -338 43 2 10 5 16 132 39 10 10 5 39 6 13 8 19 1 130 39 8 13 5 19 1 133 51 5 13 8 19 1 134 39 186 77 77 15 72 10 7 16 135 12 34 138 12 19 2 139 12 19 2 36 12 46 140 46 141 46 142 13 11 19 1 134 45 45 75 45 143 38 132 10 1 4 51 0 10 2 39 5 10 2 51 3 13 0 13 4 20 1 23 51 2 10 2 76 40 14 10 2 16 144 40 8 13 2 13 4 19 2 145 76 39 40 14 146 15 147 19 0 148 73 39 12 19 0 149 16 150 12 9 1 19 2 128 12 19 0 151 12 15 152 19 5 73 14 146 19 1 153 75 51 2 10 2 39 3 10 3 39 37 14 146 15 147 19 0 148 73 39 12 19 0 149 16 150 12 9 1 19 2 128 12 19 0 151 12 15 154 19 5 73 14 146 19 1 153 10 1 5 51 1 10 1 40 -134 43 2 10 0 40 3 10 1 51 9 43 3 13 8 19 1 155 39 6 13 8 19 1 156 39 204 10 7 45 45 75 45 32 38 189 10 1 4 51 0 13 0 19 1 157 13 0 19 1 72 12 14 158 11 159 6 3 12 19 1 160 13 0 19 1 161 12 15 64 19 1 65 47 1 162 45 163 10 1 73 39 70 13 0 19 1 164 45 165 10 1 45 166 11 106 45 167 13 0 13 1 33 168 18 2 43 1 43 1 64 18 13 3 19 1 72 12 11 158 6 2 12 19 1 160 16 169 65 10 1 45 170 10 1 45 171 13 0 13 1 33 172 18 2 43 1 43 1 66 43 1 12 43 2 19 2 129 76 39 59 15 64 19 1 65 47 1 173 45 174 10 1 39 18 13 0 19 1 164 76 39 10 13 0 19 1 175 12 19 1 69 39 24 13 0 19 1 175 12 19 1 69 12 15 176 15 177 13 2 19 1 161 12 19 4 73 43 2 10 1 5 51 1 10 1 40 -191 43 2 13 8 19 1 44 45 45 75 45 46 38 48 10 1 4 51 0 13 0 13 2 19 2 91 45 142 10 0 39 23 13 0 11 50 17 178 39 8 13 1 19 1 179 38 8 13 1 13 0 19 2 180 43 1 10 1 5 51 1 10 1 40 -50 43 2 10 6 76 39 217 10 5 4 45 181 10 0 39 162 15 182 14 183 15 7 14 184 15 7 14 185 14 186 14 187 10 0 6 1 12 14 188 15 189 1 182 16 190 12 15 191 13 0 19 1 72 16 190 12 19 4 192 12 19 11 193 13 0 19 1 194 45 48 10 0 39 33 10 0 45 45 75 45 195 38 16 10 1 4 51 0 13 0 20 0 23 10 1 5 51 1 10 1 40 -18 43 2 38 1 43 1 13 0 19 1 196 73 39 60 15 157 14 183 15 7 14 197 77 14 185 14 186 14 187 10 0 6 1 12 19 9 193 9 0 14 185 14 186 14 198 14 106 14 188 15 189 1 52 16 190 12 15 199 13 0 19 1 72 16 190 12 19 4 192 12 19 7 200 38 43 10 9 45 201 15 0 14 183 15 7 14 184 15 7 14 197 15 202 14 203 14 106 19 9 204 45 205 13 1 15 7 9 12 13 0 19 4 10 43 1 43 1 43 1 38 432 10 6 16 206 39 178 15 182 14 183 15 7 14 184 15 7 14 185 14 186 14 187 13 6 13 8 19 2 33 6 1 12 14 188 15 189 1 182 16 190 12 15 207 10 6 16 190 12 19 4 192 12 19 11 193 13 6 13 8 19 2 33 12 19 1 194 45 48 10 0 39 33 10 0 45 45 75 45 195 38 16 10 1 4 51 0 13 0 20 0 23 10 1 5 51 1 10 1 40 -18 43 2 38 1 43 1 13 6 13 8 19 2 33 12 19 1 196 73 39 62 15 157 14 183 15 7 14 197 77 14 185 14 186 14 187 13 6 13 8 19 2 33 6 1 12 19 9 193 9 0 14 185 14 186 14 198 14 106 14 188 15 189 1 52 16 190 12 15 208 10 6 16 190 12 19 4 192 12 19 7 200 38 249 10 6 16 144 39 204 15 64 19 1 65 47 1 209 45 210 10 1 39 10 13 0 19 1 68 12 19 1 69 39 148 13 0 19 1 68 12 19 1 69 45 211 13 1 19 1 212 76 40 127 10 0 76 40 27 13 0 11 146 17 178 40 19 11 213 40 15 13 0 11 106 17 178 39 7 14 146 11 214 17 215 39 35 14 146 15 216 19 0 149 16 150 12 9 1 19 2 128 12 19 0 151 12 15 217 13 9 19 6 73 14 146 19 1 153 38 60 14 146 15 218 19 0 149 16 150 12 9 1 19 2 128 12 19 0 151 12 15 217 13 9 19 6 73 14 146 19 1 153 13 0 15 219 19 0 149 16 150 12 9 1 19 2 128 12 19 0 151 12 15 217 13 9 19 6 73 43 1 43 2 13 8 19 1 220 12 15 0 14 198 14 106 14 183 15 7 14 184 15 7 14 197 15 202 19 10 221 38 40 14 146 15 147 19 0 148 73 39 12 19 0 149 16 150 12 9 1 19 2 128 12 19 0 151 12 15 222 19 5 73 12 14 146 19 1 153 22 73 43 8 29) #96# #1# 89966) si::fset)) #1# 89966) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 24 12 19 2 25 1 0 73 29) #98=#A(t (26) (common-lisp-user::ppm-offset ext::location (defun common-lisp-user::ppm-offset) (#1# . 100241) ext::annotate :lambda-list (common-lisp-user::production) common-lisp-user::production common-lisp-user::procedural common-lisp-user::get-module-fct common-lisp-user::get-production common-lisp-user::p common-lisp-user::prod common-lisp-user::procedural-ppm numberp common-lisp-user::production-partial-matched-slots common-lisp-user::procedural-ppm-hook common-lisp-user::it common-lisp-user::override + :key fifth reduce * #Y(common-lisp-user::ppm-offset nil nil (24 45 7 26 15 8 19 1 9 12 13 0 19 1 10 12 46 11 46 12 10 0 39 19 10 1 39 15 13 0 19 1 13 16 14 39 6 13 1 19 1 15 73 39 70 13 0 19 1 16 45 17 10 0 39 16 13 0 13 3 13 2 19 1 15 12 20 2 23 38 2 75 43 1 45 18 10 0 16 14 39 6 10 0 73 38 26 13 1 19 1 13 12 15 19 13 2 19 1 15 12 14 20 15 21 19 4 22 12 19 2 23 43 1 43 2 29) #98# #1# 100241) si::fset)) #1# 100241) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #99=#A(t (23) (common-lisp-user::un-delay-conflict-resolution ext::location (defun common-lisp-user::un-delay-conflict-resolution) (#1# . 100802) ext::annotate :lambda-list common-lisp-user::procedural common-lisp-user::get-module-fct common-lisp-user::p common-lisp-user::procedural-delayed-resolution common-lisp-user::delete-event common-lisp-user::deleted #:g10218 #:g10219 si::structure-set common-lisp-user::conflict-resolution :module :destination :output common-lisp-user::medium common-lisp-user::schedule-event-now #Y(common-lisp-user::un-delay-conflict-resolution nil nil (26 15 6 19 1 7 45 8 10 0 39 6 13 0 19 1 9 39 57 13 0 19 1 9 12 19 1 10 45 11 10 1 45 12 75 45 13 13 1 15 6 9 12 13 0 19 4 14 43 1 43 1 10 0 39 18 15 15 14 16 15 6 14 17 15 6 14 18 15 19 19 7 20 43 1 43 1 75 73 29) #99# #1# 100802) si::fset)) #1# 100802) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 1 0 73 29) #100=#A(t (18) (common-lisp-user::pprint-instantiation ext::location (defmacro common-lisp-user::pprint-instantiation) (#1# . 101233) ext::annotate :lambda-list (common-lisp-user::production-name) #:g10221 #:g10220 #:g10222 si::dm-too-few-arguments common-lisp-user::production-name si::dm-too-many-arguments common-lisp-user::pprint-instantiation-fct quote #Y(common-lisp-user::pprint-instantiation nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 39 6 13 3 19 1 12 15 13 15 14 10 0 6 2 6 2 73 29) #100# #1# 101233) t si::fset)) #1# 101233) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 35 12 19 2 36 1 0 73 29) #101=#A(t (37) (common-lisp-user::pprint-instantiation-fct ext::location (defun common-lisp-user::pprint-instantiation-fct) (#1# . 101333) ext::annotate :lambda-list (common-lisp-user::production-name) common-lisp-user::production-name common-lisp-user::get-production common-lisp-user::p common-lisp-user::print-instantiation common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10227 #:g10226 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g10228 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #67# common-lisp-user::mp-models length > common-lisp-user::current-model "No production named ~a." format finish-output #68# #69# #Y(common-lisp-user::pprint-instantiation-fct nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 8 13 0 19 1 10 38 178 15 11 19 1 12 47 1 13 45 14 10 1 39 10 13 0 19 1 15 12 19 1 16 73 39 150 13 0 19 1 15 12 19 1 16 45 17 13 1 19 1 18 76 40 127 10 0 76 40 27 13 0 11 19 17 20 40 19 11 21 40 15 13 0 11 22 17 20 39 7 14 19 11 23 17 24 39 35 14 19 15 25 19 0 26 16 27 12 9 1 19 2 28 12 19 0 29 12 15 30 13 3 19 6 31 14 19 19 1 32 38 60 14 19 15 33 19 0 26 16 27 12 9 1 19 2 28 12 19 0 29 12 15 30 13 3 19 6 31 14 19 19 1 32 13 0 15 34 19 0 26 16 27 12 9 1 19 2 28 12 19 0 29 12 15 30 13 3 19 6 31 75 73 43 1 43 2 43 1 29) #101# #1# 101333) si::fset)) #1# 101333) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #102=#A(t (12) (common-lisp-user::print-instantiation ext::location (defun common-lisp-user::print-instantiation) (#1# . 101525) ext::annotate :lambda-list (common-lisp-user::production) common-lisp-user::production t common-lisp-user::print-production-text #Y(common-lisp-user::print-instantiation nil nil (24 45 7 26 13 0 14 8 19 2 9 29) #102# #1# 101525) si::fset)) #1# 101525) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #103=#A(t (29) (common-lisp-user::print-production ext::location (defun common-lisp-user::print-production) (#1# . 101673) ext::annotate :lambda-list (common-lisp-user::production &optional common-lisp-user::model-output) common-lisp-user::production common-lisp-user::model-output common-lisp-user::production-disabled common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10234 #:g10233 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #95# ";;; Production ~s is DISABLED" common-lisp-user::production-name format #:g10236 #:g10235 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c #97# ";;; Production ~s is DISABLED" common-lisp-user::print-production-text #Y(common-lisp-user::print-production nil nil (24 45 7 25 40 2 77 46 8 26 13 1 19 1 9 39 115 10 0 39 53 15 10 19 1 11 47 1 12 45 13 10 1 39 10 13 0 19 1 14 12 19 1 15 39 24 13 0 19 1 14 12 19 1 15 12 15 16 15 17 13 3 19 1 18 12 19 4 19 43 2 38 59 15 10 19 1 11 47 1 20 45 21 10 1 39 18 13 0 19 1 22 76 39 10 13 0 19 1 23 12 19 1 15 39 24 13 0 19 1 23 12 19 1 15 12 15 24 15 25 13 3 19 1 18 12 19 4 19 43 2 13 1 77 13 0 19 3 26 29) #103# #1# 101673) si::fset)) #1# 101673) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 44 12 19 2 45 1 0 73 29) #104=#A(t (46) (common-lisp-user::print-production-text ext::location (defun common-lisp-user::print-production-text) (#1# . 102022) ext::annotate :lambda-list (common-lisp-user::p common-lisp-user::instantiate &optional common-lisp-user::model-output) common-lisp-user::p common-lisp-user::instantiate common-lisp-user::model-output make-string-output-stream common-lisp-user::s common-lisp-user::production-bindings common-lisp-user::bindings "(P ~a~%" common-lisp-user::production-name format common-lisp-user::production-documentation common-lisp-user::it "  ~S~%" common-lisp-user::production-lhs si::%dolist-var common-lisp-user::x common-lisp-user::production-partial-matched-slots common-lisp-user::production-statement-text write-string " ==>~%" common-lisp-user::production-rhs ")" common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10242 #:g10241 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #95# "~a" get-output-stream-string #:g10244 #:g10243 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c #97# "~a" #Y(common-lisp-user::print-production-text nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 19 0 10 45 11 10 2 39 8 13 3 19 1 12 38 2 75 45 13 13 1 15 14 13 4 19 1 15 12 19 3 16 13 4 19 1 17 45 18 10 0 39 12 13 2 15 19 13 0 19 3 16 38 1 43 1 13 4 19 1 20 45 21 75 45 22 38 35 10 1 4 51 0 13 0 13 2 10 5 73 39 6 13 6 19 1 23 12 19 3 24 12 13 3 19 2 25 10 1 5 51 1 10 1 40 -37 43 2 13 1 15 26 19 2 16 13 4 19 1 27 45 21 75 45 22 38 25 10 1 4 51 0 13 0 13 2 77 19 3 24 12 13 3 19 2 25 10 1 5 51 1 10 1 40 -27 43 2 13 1 15 28 19 2 16 10 2 39 53 15 29 19 1 30 47 1 31 45 32 10 1 39 10 13 0 19 1 33 12 19 1 34 73 39 23 13 0 19 1 33 12 19 1 34 12 15 35 15 36 10 3 16 37 12 19 4 16 43 2 38 59 15 29 19 1 30 47 1 38 45 39 10 1 39 18 13 0 19 1 40 76 39 10 13 0 19 1 41 12 19 1 34 73 39 23 13 0 19 1 41 12 19 1 34 12 15 42 15 43 10 3 16 37 12 19 4 16 43 2 43 2 29) #104# #1# 102022) si::fset)) #1# 102022) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 72 12 19 2 73 1 0 73 29) #105=#A(t (74) (common-lisp-user::production-statement-text ext::location (defun common-lisp-user::production-statement-text) (#1# . 102780) ext::annotate :lambda-list (common-lisp-user::statement common-lisp-user::bindings common-lisp-user::partials) common-lisp-user::statement common-lisp-user::bindings common-lisp-user::partials make-string-output-stream common-lisp-user::production-statement-op common-lisp-user::production-statement-target common-lisp-user::production-statement-spec common-lisp-user::production-statement-definition common-lisp-user::definition common-lisp-user::spec common-lisp-user::target common-lisp-user::op common-lisp-user::s #\- "   -~a>~%" format #\? "   ?~a>~%" common-lisp-user::instantiate-query-spec common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::slot = common-lisp-user::act-r-slot-spec-modifier eq "       ~s ~s~%" common-lisp-user::act-r-slot-spec-name common-lisp-user::act-r-slot-spec-value "    ~2a ~s ~s~%" #\= #\* "   ~c~a>~%" common-lisp-user::chunk-spec-slot-spec common-lisp-user::replace-variables common-lisp-user::spec-slot-name common-lisp-user::name common-lisp-user::spec-slot-value common-lisp-user::val :test equal :key common-lisp-user::x subseq #Y(nil nil nil (24 45 48 26 13 0 9 0 9 3 19 3 49 29) #105# #1# 102780) find common-lisp-user::partial common-lisp-user::spec-slot-op "       ~s [~s, ~s, ~f]~%" fourth fifth "    ~2a ~s [~s, ~s, ~f]~%" "       ~s ~s~%" "    ~2a ~s ~s~%" "   ~c~a> ~{~s~^ ~}~%" #\@ "   @~a> ~s~%" #\! "   !~a! ~{~s~^ ~}~%" #\+ length "   +~a> ~s~%" "   +~a>~%" "       ~s ~s~%" "    ~2a ~s ~s~%" get-output-stream-string #Y(common-lisp-user::production-statement-text nil nil (24 45 7 24 45 8 24 45 9 26 19 0 10 12 13 2 19 1 11 12 13 2 19 1 12 12 13 2 19 1 13 12 13 2 19 1 14 12 46 15 46 16 46 17 46 18 46 19 10 1 42 20 12 13 0 15 21 13 2 19 3 22 38 514 42 23 103 13 0 15 24 13 2 19 3 22 13 3 13 6 19 2 25 12 19 1 26 45 27 75 45 28 38 68 10 1 4 51 0 15 29 13 0 19 1 30 17 31 39 22 13 2 15 32 13 0 19 1 33 12 13 0 19 1 34 12 19 4 22 38 26 13 2 15 35 13 0 19 1 30 12 13 0 19 1 33 12 13 0 19 1 34 12 19 5 22 10 1 5 51 1 10 1 40 -70 43 2 38 409 41 36 4 42 37 222 10 3 39 197 13 0 15 38 13 1 13 2 19 4 22 13 3 19 1 39 12 13 6 19 2 40 45 27 75 45 28 38 160 10 1 4 51 0 13 0 19 1 41 45 42 13 1 19 1 43 45 44 13 6 13 1 10 0 6 3 12 13 9 14 45 15 46 14 47 34 50 12 19 6 51 45 52 10 0 39 64 15 29 13 3 19 1 53 17 31 39 24 13 5 15 54 13 2 13 1 10 0 16 55 12 10 0 16 56 12 19 6 22 38 28 13 5 15 57 13 3 19 1 53 12 13 2 13 1 10 0 16 55 12 10 0 16 56 12 19 7 22 38 42 15 29 13 3 19 1 53 17 31 39 14 13 5 15 58 13 2 13 1 19 4 22 38 18 13 5 15 59 13 3 19 1 53 12 13 2 13 1 19 5 22 43 3 10 1 5 51 1 10 1 40 -162 43 2 38 20 13 0 15 60 13 1 13 2 13 4 13 6 19 2 40 12 19 5 22 38 182 42 61 22 13 0 15 62 13 2 10 4 4 12 13 6 19 2 40 12 19 4 22 38 158 42 63 20 13 0 15 64 13 2 13 4 13 6 19 2 40 12 19 4 22 38 136 42 65 133 10 4 16 66 12 9 1 19 2 29 39 21 13 0 15 67 13 2 13 4 13 6 19 2 40 4 12 19 4 22 38 101 13 0 15 68 13 2 19 3 22 13 3 19 1 39 12 13 6 19 2 40 45 27 75 45 28 38 68 10 1 4 51 0 15 29 13 0 19 1 53 17 31 39 22 13 2 15 69 13 0 19 1 41 12 13 0 19 1 43 12 19 4 22 38 26 13 2 15 70 13 0 19 1 53 12 13 0 19 1 41 12 13 0 19 1 43 12 19 5 22 10 1 5 51 1 10 1 40 -70 43 2 10 0 16 71 43 5 29) #105# #1# 102780) si::fset)) #1# 102780) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #106=#A(t (21) (common-lisp-user::sort-productions ext::location (defun common-lisp-user::sort-productions) (#1# . 105504) ext::annotate :lambda-list (common-lisp-user::p1 common-lisp-user::p2 common-lisp-user::best) common-lisp-user::p1 common-lisp-user::p2 common-lisp-user::best common-lisp-user::production-conflict-val common-lisp-user::p2-u common-lisp-user::p1-u = position length 1+ < > #Y(common-lisp-user::sort-productions nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 12 13 1 19 1 10 12 46 11 46 12 13 0 13 1 19 2 13 39 40 13 4 13 2 19 2 14 73 40 7 10 2 16 15 16 16 12 13 3 13 2 19 2 14 73 40 7 10 2 16 15 16 16 12 19 2 17 38 8 13 0 13 1 19 2 18 43 2 29) #106# #1# 105504) si::fset)) #1# 105504) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 53 12 19 2 54 1 0 73 29) #107=#A(t (55) (common-lisp-user::production-selected ext::location (defun common-lisp-user::production-selected) (#1# . 105807) ext::annotate :lambda-list (common-lisp-user::procedural common-lisp-user::production) common-lisp-user::procedural common-lisp-user::production common-lisp-user::procedural-lhst common-lisp-user::production-selection-code si::%dolist-var common-lisp-user::x common-lisp-user::query-buffer second third common-lisp-user::production-bindings common-lisp-user::instantiate-query-spec :time-in-ms t :module common-lisp-user::schedule-query-buffer common-lisp-user::buffer-read common-lisp-user::schedule-buffer-read common-lisp-user::buffer-search :params common-lisp-user::schedule-event-now #:g10249 #:g10250 si::structure-set common-lisp-user::production-name common-lisp-user::procedural-req-spec :output :details symbol-name :priority :max :track common-lisp-user::schedule-module-request common-lisp-user::tag common-lisp-user::event common-lisp-user::production-requested-actions-setf common-lisp-user::note-production-selection common-lisp-user::procedural-random-times common-lisp-user::productions-action-time common-lisp-user::randomize-time-ms common-lisp-user::production-fired :destination string " " concatenate common-lisp-user::low common-lisp-user::schedule-event-relative #Y(common-lisp-user::production-selected nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 111 13 0 19 1 10 45 11 75 45 12 38 93 10 1 4 51 0 10 0 4 42 13 36 10 0 16 14 12 10 0 16 15 12 13 2 19 1 16 12 19 2 17 12 9 0 14 18 14 19 14 20 15 7 19 7 21 38 42 42 22 21 10 0 16 14 12 9 0 14 18 14 19 14 20 15 7 19 6 23 38 19 42 24 16 15 24 14 20 15 7 14 25 10 0 5 12 19 5 26 10 1 5 51 1 10 1 40 -95 43 2 10 1 45 27 11 19 45 28 13 1 15 7 9 14 13 0 19 4 29 43 1 43 1 13 0 19 1 30 12 15 8 13 1 19 1 31 12 9 0 14 18 14 19 14 20 15 7 14 32 77 14 33 13 0 19 1 30 16 34 12 14 35 14 36 14 37 14 19 19 15 38 47 1 39 45 40 10 1 6 1 12 43 2 19 2 41 13 0 19 1 30 12 19 1 42 13 1 19 1 43 39 16 13 0 19 1 30 12 19 1 44 12 19 1 45 38 10 13 0 19 1 30 12 19 1 44 12 15 46 14 18 14 19 14 20 15 7 14 47 15 7 14 25 10 0 6 1 12 14 33 15 48 1 46 16 34 12 15 49 13 0 19 1 30 16 34 12 19 4 50 12 14 32 15 51 19 14 52 29) #107# #1# 105807) si::fset)) #1# 105807) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 8 12 19 2 9 15 0 15 10 15 11 19 3 12 1 0 73 29) #108=#A(t (13) (common-lisp-user::buffer-search ext::location (defun common-lisp-user::buffer-search) (#1# . 107298) ext::annotate :lambda-list (common-lisp-user::buffer-name) common-lisp-user::buffer-name #Y(common-lisp-user::buffer-search nil nil (24 45 7 26 75 73 29) #108# #1# 107298) si::fset function "dummy function to show in the trace" si::set-documentation)) #1# 107298) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 30 12 19 2 31 1 0 73 29) #109=#A(t (32) (common-lisp-user::production-fired ext::location (defun common-lisp-user::production-fired) (#1# . 107421) ext::annotate :lambda-list (common-lisp-user::procedural common-lisp-user::production) common-lisp-user::procedural common-lisp-user::production common-lisp-user::production-name common-lisp-user::production-requested-actions common-lisp-user::complete-request common-lisp-user::production-actions si::%dolist-var common-lisp-user::x common-lisp-user::learn-parameters common-lisp-user::conflict-resolution :module :priority :min :destination :output common-lisp-user::medium common-lisp-user::schedule-event-now common-lisp-user::procedural-cycle-hook common-lisp-user::hook common-lisp-user::compile-productions #:g10255 #:g10256 si::structure-set #Y(common-lisp-user::production-fired nil nil (24 45 7 24 45 8 26 13 0 19 1 9 12 19 1 10 4 12 19 1 11 13 0 19 1 12 45 13 75 45 14 38 16 10 1 4 51 0 13 0 20 0 23 10 1 5 51 1 10 1 40 -18 43 2 13 0 19 1 9 12 19 1 15 15 16 14 17 15 7 14 18 14 19 14 20 15 7 14 21 15 22 19 9 23 13 1 19 1 24 45 13 75 45 25 38 22 10 1 4 51 0 13 0 13 2 19 1 9 12 20 1 23 10 1 5 51 1 10 1 40 -24 43 2 13 0 19 1 26 10 1 45 27 75 45 28 13 1 15 7 9 14 13 0 19 4 29 43 1 43 1 29) #109# #1# 107421) si::fset)) #1# 107421) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #110=#A(t (27) (common-lisp-user::procedural-query ext::location (defun common-lisp-user::procedural-query) (#1# . 108173) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::slot common-lisp-user::value) common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::slot common-lisp-user::value common-lisp-user::busy common-lisp-user::procedural-busy common-lisp-user::free error *error-output* #58# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Unknown state query ~S to ~S buffer" format finish-output #Y(common-lisp-user::procedural-query nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 0 42 11 8 13 3 19 1 12 38 63 42 13 10 13 3 19 1 12 76 73 38 51 42 14 5 75 73 38 44 14 15 15 16 19 0 17 73 39 12 19 0 18 16 19 12 9 1 19 2 20 12 19 0 21 12 15 22 13 0 13 2 19 7 23 12 14 15 19 1 24 22 73 29) #110# #1# 108173) si::fset)) #1# 108173) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #111=#A(t (12) (common-lisp-user::procedural-request ext::location (defun common-lisp-user::procedural-request) (#1# . 108484) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::chunk-spec #Y(common-lisp-user::procedural-request nil nil (24 45 7 24 45 8 24 45 9 26 75 73 29) #111# #1# 108484) si::fset)) #1# 108484) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #112=#A(t (20) (common-lisp-user::procedural-run-check ext::location (defun common-lisp-user::procedural-run-check) (#1# . 108599) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance common-lisp-user::procedural common-lisp-user::mp-modules-events common-lisp-user::conflict-resolution :module :destination :output common-lisp-user::medium :dynamic t common-lisp-user::schedule-event-after-change #Y(common-lisp-user::procedural-run-check nil nil (24 45 7 26 15 8 19 1 9 76 73 39 22 15 10 14 11 15 8 14 12 15 8 14 13 15 14 14 15 14 16 19 9 17 29) #112# #1# 108599) si::fset)) #1# 108599) #Y(si::bytecodes nil nil (15 0 15 1 14 2 77 14 3 77 14 4 77 14 5 77 14 6 77 14 7 77 14 8 77 14 9 77 14 10 15 11 19 19 12 6 1 12 14 13 14 14 77 19 3 15 12 14 16 14 14 77 19 3 15 12 14 17 14 14 77 19 3 15 12 14 18 14 19 15 20 14 21 77 14 22 15 23 14 24 15 25 19 9 15 12 14 26 14 19 15 27 14 21 15 28 14 22 15 29 14 24 15 30 19 9 15 12 14 31 14 19 15 32 14 21 77 14 22 15 33 14 24 15 34 19 9 15 12 14 35 14 19 15 32 14 21 77 14 22 15 36 14 24 15 37 19 9 15 12 14 38 14 19 15 32 14 21 14 11 14 22 15 39 14 24 15 40 19 9 15 12 14 41 14 19 15 32 14 21 14 11 14 22 15 42 14 24 15 43 19 9 15 12 14 44 14 19 15 45 14 21 77 14 22 15 46 14 24 15 47 19 9 15 12 14 48 14 19 15 45 14 21 77 14 22 15 49 14 24 15 50 19 9 15 12 14 51 14 19 15 32 14 21 77 14 22 15 52 14 24 15 53 19 9 15 12 14 54 14 19 15 45 14 21 77 14 22 15 55 14 24 15 56 19 9 15 12 14 57 14 19 15 58 14 21 77 14 22 15 59 14 24 15 60 19 9 15 12 14 61 14 19 15 32 14 21 77 14 22 15 62 14 24 15 63 19 9 15 12 14 64 14 19 15 32 14 21 14 11 14 22 15 65 14 24 15 66 19 9 15 6 16 12 14 67 15 68 14 24 15 69 14 70 1 73 12 14 74 33 75 12 14 76 33 77 12 14 78 15 79 14 80 33 81 12 14 82 33 83 12 19 19 84 29) #113=#A(t (85) (common-lisp-user::procedural common-lisp-user::production :param-name :param-default :request-params :queries :status-fn :search :multi :copy :trackable t common-lisp-user::define-buffer-fct :er :owner common-lisp-user::define-parameter :v :md :ppm :valid-test common-lisp-user::numornil :default-value :warning "a number or nil" :documentation "Procedural partial matching" :dat numberp 0.05 "a number" "Default Action Time" :crt common-lisp-user::tornil "T or nil" "Conflict Resolution Trace" :cst "T or nil" "Conflict Set Trace" :lhst "T or nil" "Left Hand Side Trace" :rhst "T or nil" "Right Hand Side Trace" :ppm-hook common-lisp-user::fctornil "a function or nil" "Procedural partial matching utility adjustment hook" :cycle-hook "a function or nil" "Cycle hook" :vpft "T or nil" "Variable Production Firing Time" :conflict-set-hook "a function or nil" "Conflict set hook" :do-not-harvest symbolp "a symbol" "Buffers that are not strict harvested" :use-tree "T or nil" "Use a decision tree in production matching" :style-warnings "T or nil" "Show model warnings for production issues that don't prevent production definition" :version "4.0" "The procedural module handles production definition and execution" :creation common-lisp-user::x common-lisp-user::make-procedural #Y(nil nil nil (24 45 71 26 19 0 72 29) #113# #1# 108934) :query common-lisp-user::procedural-query :request common-lisp-user::procedural-request :reset (common-lisp-user::reset-procedural-module nil common-lisp-user::finalize-procedural-reset) :params common-lisp-user::procedural-params :run-start common-lisp-user::procedural-run-check common-lisp-user::define-module-fct)) #1# 108934))
