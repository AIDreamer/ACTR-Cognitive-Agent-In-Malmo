(#Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("GENERAL-PM" *modules* :test string= member "ACT-R-support:general-pm" translate-logical-pathname common-lisp-user::compile-and-load)) #1=#P"C:/Users/Son Pham/Desktop/actr7/core-modules/vision.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::default-target-width) proclaim)) #1# 49197) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 14 6 1 10 12 1 11 7 3 12 15 12 15 13 15 14 15 15 15 16 15 17 15 18 15 19 15 20 14 6 1 21 12 1 22 7 3 12 14 6 1 23 12 1 24 7 3 12 14 6 1 26 12 1 27 7 3 12 15 28 15 29 15 30 15 31 15 32 15 33 15 34 15 35 15 36 15 37 15 38 15 39 15 40 15 41 15 42 15 43 15 44 15 45 14 6 1 47 12 1 48 7 3 12 15 49 15 50 1 51 6 35 12 14 52 15 53 15 54 11 54 16 55 6 3 12 15 56 15 57 1 57 16 55 6 3 6 2 6 2 12 19 4 58 29) #2=#A(t (59) (common-lisp-user::vision-module ext::location (defclass common-lisp-user::vision-module) (#1# . 49254) ext::annotate (common-lisp-user::attn-module) :initfunction :test equalp make-hash-table #Y(nil nil nil (26 14 7 15 8 19 2 9 29) #2# #1# 49254) (:initform (make-hash-table :test 'equalp) :initargs (:visicon) :writers ((setf common-lisp-user::visicon)) :readers (common-lisp-user::visicon) :name common-lisp-user::visicon) (:initform t :initargs (:optimize-p) :writers ((setf common-lisp-user::optimize-p)) :readers (common-lisp-user::optimize-p) :name common-lisp-user::optimize-visual) (:initform 85 :initargs (:move-attn-latency) :writers ((setf common-lisp-user::move-attn-latency)) :readers (common-lisp-user::move-attn-latency) :name common-lisp-user::move-attention-latency) (:initform nil :initargs (:tracked-obj) :writers ((setf common-lisp-user::tracked-obj)) :readers (common-lisp-user::tracked-obj) :name common-lisp-user::tracked-object) (:initform nil :initargs (:tracked-obj-lastloc) :writers ((setf common-lisp-user::tracked-obj-lastloc)) :readers (common-lisp-user::tracked-obj-lastloc) :name common-lisp-user::tracked-object-last-location) (:initform nil :initargs (:tracked-obj-last-feat) :writers ((setf common-lisp-user::tracked-obj-last-feat)) :readers (common-lisp-user::tracked-obj-last-feat) :name common-lisp-user::tracked-object-last-feat) (:initform nil :initargs (:tracked-obj-last-obj) :writers ((setf common-lisp-user::tracked-obj-last-obj)) :readers (common-lisp-user::tracked-obj-last-obj) :name common-lisp-user::tracked-object-last-obj) (:initform nil :initargs (:last-scale) :writers ((setf common-lisp-user::last-scale)) :readers (common-lisp-user::last-scale) :name common-lisp-user::last-scale) (:initform nil :initargs (:moving-attention) :writers ((setf common-lisp-user::moving-attention)) :readers (common-lisp-user::moving-attention) :name common-lisp-user::moving-attention) (:initform 0 :initargs (:move-allowance) :writers ((setf common-lisp-user::move-allowance)) :readers (common-lisp-user::move-allowance) :name common-lisp-user::move-allowance) #Y(nil nil nil (26 19 0 9 29) #2# #1# 49254) (:initform (make-hash-table) :initargs (:synthd-objs) :writers ((setf common-lisp-user::synthd-objs)) :readers (common-lisp-user::synthd-objs) :name common-lisp-user::synthd-objs) #Y(nil nil nil (26 19 0 9 29) #2# #1# 49254) (:initform (make-hash-table) :initargs (:found-locs) :writers ((setf common-lisp-user::found-locs)) :readers (common-lisp-user::found-locs) :name common-lisp-user::found-locs) common-lisp-user::all-feature-sets #Y(nil nil nil (26 19 0 25 29) #2# #1# 49254) (:initform (common-lisp-user::all-feature-sets) :initargs (:feature-sets) :writers ((setf common-lisp-user::feature-sets)) :readers (common-lisp-user::feature-sets) :name common-lisp-user::feature-sets) (:initform nil :initargs (:active-cfs) :writers ((setf common-lisp-user::active-cfs)) :readers (common-lisp-user::active-cfs) :name common-lisp-user::active-cfs) (:initform 4 :initargs (:num-finst) :writers ((setf common-lisp-user::num-finst)) :readers (common-lisp-user::num-finst) :name common-lisp-user::num-finst) (:initform nil :initargs (:finst-lst) :writers ((setf common-lisp-user::finst-lst)) :readers (common-lisp-user::finst-lst) :name common-lisp-user::finst-lst) (:initform 3.0 :initargs (:finst-span) :writers ((setf common-lisp-user::finst-span)) :readers (common-lisp-user::finst-span) :name common-lisp-user::finst-span) (:initform 0.5 :initargs (:new-span) :writers ((setf common-lisp-user::new-span)) :readers (common-lisp-user::new-span) :name common-lisp-user::new-span) (:initform nil :initargs (:default-spec) :writers ((setf common-lisp-user::default-spec)) :readers (common-lisp-user::default-spec) :name common-lisp-user::default-spec) (:initform nil :writers ((setf common-lisp-user::visual-lock)) :readers (common-lisp-user::visual-lock) :name common-lisp-user::visual-lock) (:initform nil :writers ((setf common-lisp-user::last-obj)) :readers (common-lisp-user::last-obj) :name common-lisp-user::last-obj) (:initform nil :writers ((setf common-lisp-user::auto-attend)) :readers (common-lisp-user::auto-attend) :name common-lisp-user::auto-attend) (:initform t :writers ((setf common-lisp-user::test-feats)) :readers (common-lisp-user::test-feats) :name common-lisp-user::test-feats) (:initform t :writers ((setf common-lisp-user::purge-visicon)) :readers (common-lisp-user::purge-visicon) :name common-lisp-user::purge-visicon) (:initform nil :writers ((setf common-lisp-user::scene-change)) :readers (common-lisp-user::scene-change) :name common-lisp-user::scene-change) (:initform 0.25 :writers ((setf common-lisp-user::change-threshold)) :readers (common-lisp-user::change-threshold) :name common-lisp-user::change-threshold) (:initform nil :writers ((setf common-lisp-user::view-dist)) :readers (common-lisp-user::view-dist) :name common-lisp-user::view-dist) (:initform nil :writers ((setf common-lisp-user::ppi)) :readers (common-lisp-user::ppi) :name common-lisp-user::ppi) (:initform nil :writers ((setf common-lisp-user::viewing-distance)) :readers (common-lisp-user::viewing-distance) :name common-lisp-user::viewing-distance) (:initform nil :writers ((setf common-lisp-user::current-cursor)) :readers (common-lisp-user::current-cursor) :name common-lisp-user::current-cursor) (:initform nil :writers ((setf common-lisp-user::other-word-chars)) :readers (common-lisp-user::other-word-chars) :name common-lisp-user::other-word-chars) vector #Y(nil nil nil (26 9 0 9 0 19 2 46 29) #2# #1# 49254) (:initform (vector 0 0) :writers ((setf common-lisp-user::center-point)) :readers (common-lisp-user::center-point) :name common-lisp-user::center-point) (:initform nil :writers ((setf common-lisp-user::process-display-called)) :readers (common-lisp-user::process-display-called) :name common-lisp-user::process-display-called) (:initform '(common-lisp-user::screen-x common-lisp-user::screen-y common-lisp-user::distance) :writers ((setf common-lisp-user::vis-loc-slots)) :readers (common-lisp-user::vis-loc-slots) :name common-lisp-user::vis-loc-slots) (:initform nil :writers ((setf common-lisp-user::last-visual-request)) :readers (common-lisp-user::last-visual-request) :name common-lisp-user::last-visual-request) :direct-default-initargs :name :vision constantly :version-string "5.0" clos::load-defclass)) #1# 49254) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 26 12 14 27 19 6 28 29) #3=#A(t (29) (common-lisp-user::vis-loc-to-obj ext::location (defmethod common-lisp-user::vis-loc-to-obj common-lisp-user::device common-lisp-user::vis-loc) (#1# . 52128) ext::annotate (t t) (common-lisp-user::device common-lisp-user::vis-loc) common-lisp-user::device common-lisp-user::vis-loc common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::ct common-lisp-user::chunk-type-p-fct common-lisp-user::isa common-lisp-user::define-chunks-fct common-lisp-user::fill-default-vis-obj-slots *error-output* #4="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid kind slot value ~s in visual-location ~s when attempting to create a visual-object." format finish-output #Y(common-lisp-user::vis-loc-to-obj nil nil (24 45 7 24 45 8 26 13 0 15 9 19 2 10 45 11 13 0 19 1 12 39 22 15 13 10 0 6 2 6 1 12 19 1 14 4 12 13 1 19 2 15 38 44 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 0 13 1 19 7 24 12 14 16 19 1 25 22 73 43 1 29) #3# #1# 52128) t clos::install-method)) #1# 52128) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #5=#A(t (15) (common-lisp-user::convert-loc-to-object ext::location (defun common-lisp-user::convert-loc-to-object) (#1# . 52496) ext::annotate :lambda-list (common-lisp-user::loc) common-lisp-user::loc common-lisp-user::chunk-visual-object common-lisp-user::it common-lisp-user::current-device common-lisp-user::chunk-visual-feature-name common-lisp-user::vis-loc-to-obj #Y(common-lisp-user::convert-loc-to-object nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 6 10 0 73 38 4 19 0 10 12 43 1 13 0 19 1 11 12 19 2 12 29) #5# #1# 52496) si::fset)) #1# 52496) #Y(si::bytecodes nil nil (19 0 0 29) #A(t (1) (common-lisp-user::suppress-extension-warnings)) #1# 52700) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #6=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-synth-feat fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7="Function ~s already exists and is being redefined." format finish-output common-lisp-user::chunk-synth-feat-setf #8="Function ~s already exists and is being redefined." common-lisp-user::*chunk-parameters-count* #:g10706 common-lisp-user::synth-feat common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g10707 :name :index :default-value :default-function :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g10708 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g10738 #:g10739 common-lisp-user::act-r-chunk-parameter si::structure-set #:g10741 + ext::location (defun common-lisp-user::chunk-synth-feat) (#1# . 52731) ext::annotate :lambda-list #9=(common-lisp-user::chunk-name) common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10="Chunk ~s does not exist in attempt to access ~a." #Y(common-lisp-user::chunk-synth-feat nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #6# #1# 52731) si::fset (defun common-lisp-user::chunk-synth-feat-setf) (#1# . 52731) #11=(common-lisp-user::chunk-name common-lisp-user::new-value) common-lisp-user::new-value #12="Chunk ~s does not exist in attempt to set ~a." #Y(common-lisp-user::chunk-synth-feat-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #6# #1# 52731) (defsetf common-lisp-user::chunk-synth-feat) (#1# . 52731) si::do-defsetf)) #1# 52731) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #13=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-visual-new-p fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-visual-new-p-setf #8# common-lisp-user::*chunk-parameters-count* #:g10759 common-lisp-user::visual-new-p common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g10760 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g10761 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g10791 #:g10792 common-lisp-user::act-r-chunk-parameter si::structure-set #:g10794 + ext::location (defun common-lisp-user::chunk-visual-new-p) (#1# . 52783) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-visual-new-p nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #13# #1# 52783) si::fset (defun common-lisp-user::chunk-visual-new-p-setf) (#1# . 52783) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-visual-new-p-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #13# #1# 52783) (defsetf common-lisp-user::chunk-visual-new-p) (#1# . 52783) si::do-defsetf)) #1# 52783) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 15 28 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 1 28 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #14=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-visicon-entry fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-visicon-entry-setf #8# common-lisp-user::*chunk-parameters-count* #:g10812 common-lisp-user::visicon-entry common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g10813 :name :index :default-value :default-function :merge :second :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g10814 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g10844 #:g10845 common-lisp-user::act-r-chunk-parameter si::structure-set #:g10847 + ext::location (defun common-lisp-user::chunk-visicon-entry) (#1# . 52813) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-visicon-entry nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #14# #1# 52813) si::fset (defun common-lisp-user::chunk-visicon-entry-setf) (#1# . 52813) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-visicon-entry-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #14# #1# 52813) (defsetf common-lisp-user::chunk-visicon-entry) (#1# . 52813) si::do-defsetf)) #1# 52813) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 15 28 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 1 28 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #15=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-visual-feature-name fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-visual-feature-name-setf #8# common-lisp-user::*chunk-parameters-count* #:g10865 common-lisp-user::visual-feature-name common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g10866 :name :index :default-value :default-function :merge :second :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g10867 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g10897 #:g10898 common-lisp-user::act-r-chunk-parameter si::structure-set #:g10900 + ext::location (defun common-lisp-user::chunk-visual-feature-name) (#1# . 52892) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-visual-feature-name nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #15# #1# 52892) si::fset (defun common-lisp-user::chunk-visual-feature-name-setf) (#1# . 52892) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-visual-feature-name-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #15# #1# 52892) (defsetf common-lisp-user::chunk-visual-feature-name) (#1# . 52892) si::do-defsetf)) #1# 52892) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 77 14 29 77 14 30 15 1 19 16 31 45 32 10 1 39 63 13 1 19 1 33 51 2 13 1 14 18 19 2 34 52 18 13 1 14 35 19 2 34 52 35 13 1 14 36 19 2 34 52 36 10 0 45 37 13 2 19 1 33 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 38 16 8 1 45 41 14 15 13 0 19 2 42 52 15 43 1 13 0 11 18 3 52 18 75 39 10 13 0 11 35 3 52 35 38 11 75 39 8 13 0 11 35 3 52 35 75 39 8 13 0 11 36 3 52 36 15 1 15 43 15 44 15 45 19 4 46 15 1 14 47 77 15 48 19 4 46 15 1 34 60 12 19 2 61 15 13 15 43 15 62 15 63 19 4 46 15 13 14 47 77 15 64 19 4 46 15 13 34 67 12 19 2 61 15 1 15 43 15 68 15 69 19 4 46 15 1 15 13 9 1 19 3 70 1 1 73 43 3 29) #16=#A(t (71) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-visual-tstamp fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-visual-tstamp-setf #8# common-lisp-user::*chunk-parameters-count* #:g10918 common-lisp-user::visual-tstamp common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g10919 :name :index :default-value :default-function :merge :copy :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g10920 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g10950 #:g10951 common-lisp-user::act-r-chunk-parameter si::structure-set #:g10953 + ext::location (defun common-lisp-user::chunk-visual-tstamp) (#1# . 52977) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-visual-tstamp nil nil (24 45 49 26 13 0 19 1 50 45 51 10 0 39 50 13 0 19 1 52 12 13 4 19 2 53 45 54 13 0 11 55 17 56 39 22 13 1 19 1 52 12 13 5 13 3 13 2 19 2 57 12 19 3 58 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 59 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #16# #1# 52977) si::fset (defun common-lisp-user::chunk-visual-tstamp-setf) (#1# . 52977) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-visual-tstamp-setf nil nil (24 45 49 24 45 65 26 13 1 19 1 50 45 51 10 0 39 16 13 0 19 1 52 12 13 5 13 1 19 3 58 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 66 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #16# #1# 52977) (defsetf common-lisp-user::chunk-visual-tstamp) (#1# . 52977) si::do-defsetf)) #1# 52977) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 15 28 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 1 28 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #17=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-visual-object fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-visual-object-setf #8# common-lisp-user::*chunk-parameters-count* #:g10971 common-lisp-user::visual-object common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g10972 :name :index :default-value :default-function :merge :second :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g10973 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g11003 #:g11004 common-lisp-user::act-r-chunk-parameter si::structure-set #:g11006 + ext::location (defun common-lisp-user::chunk-visual-object) (#1# . 53008) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-visual-object nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #17# #1# 53008) si::fset (defun common-lisp-user::chunk-visual-object-setf) (#1# . 53008) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-visual-object-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #17# #1# 53008) (defsetf common-lisp-user::chunk-visual-object) (#1# . 53008) si::do-defsetf)) #1# 53008) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #18=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-special-visual-object fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-special-visual-object-setf #8# common-lisp-user::*chunk-parameters-count* #:g11024 common-lisp-user::special-visual-object common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g11025 :name :index :default-value :default-function :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g11026 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g11056 #:g11057 common-lisp-user::act-r-chunk-parameter si::structure-set #:g11059 + ext::location (defun common-lisp-user::chunk-special-visual-object) (#1# . 53087) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-special-visual-object nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #18# #1# 53087) si::fset (defun common-lisp-user::chunk-special-visual-object-setf) (#1# . 53087) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-special-visual-object-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #18# #1# 53087) (defsetf common-lisp-user::chunk-special-visual-object) (#1# . 53087) si::do-defsetf)) #1# 53087) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 15 28 14 29 15 30 14 31 77 14 32 15 1 19 16 33 45 34 10 1 39 63 13 1 19 1 35 51 2 13 1 14 18 19 2 36 52 18 13 1 14 37 19 2 36 52 37 13 1 14 38 19 2 36 52 38 10 0 45 39 13 2 19 1 35 45 40 13 1 15 41 9 1 13 0 19 4 42 43 1 43 1 38 16 8 1 45 43 14 15 13 0 19 2 44 52 15 43 1 13 0 11 18 3 52 18 1 30 39 10 13 0 11 37 3 52 37 38 11 75 39 8 13 0 11 37 3 52 37 1 28 39 8 13 0 11 38 3 52 38 15 1 15 45 15 46 15 47 19 4 48 15 1 14 49 77 15 50 19 4 48 15 1 34 62 12 19 2 63 15 13 15 45 15 64 15 65 19 4 48 15 13 14 49 77 15 66 19 4 48 15 13 34 69 12 19 2 63 15 1 15 45 15 70 15 71 19 4 48 15 1 15 13 9 1 19 3 72 1 1 73 43 3 29) #19=#A(t (73) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-real-visual-value fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-real-visual-value-setf #8# common-lisp-user::*chunk-parameters-count* #:g11077 common-lisp-user::real-visual-value common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g11078 :name :index :default-value :default-function :merge :second :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g11079 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g11109 #:g11110 common-lisp-user::act-r-chunk-parameter si::structure-set #:g11112 + ext::location (defun common-lisp-user::chunk-real-visual-value) (#1# . 53150) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-real-visual-value nil nil (24 45 51 26 13 0 19 1 52 45 53 10 0 39 50 13 0 19 1 54 12 13 4 19 2 55 45 56 13 0 11 57 17 58 39 22 13 1 19 1 54 12 13 5 13 3 13 2 19 2 59 12 19 3 60 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 61 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #19# #1# 53150) si::fset (defun common-lisp-user::chunk-real-visual-value-setf) (#1# . 53150) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-real-visual-value-setf nil nil (24 45 51 24 45 67 26 13 1 19 1 52 45 53 10 0 39 16 13 0 19 1 54 12 13 5 13 1 19 3 60 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 68 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #19# #1# 53150) (defsetf common-lisp-user::chunk-real-visual-value) (#1# . 53150) si::do-defsetf)) #1# 53150) #Y(si::bytecodes nil nil (11 0 76 39 89 1 1 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 10 15 1 19 6 11 14 3 19 1 12 1 13 16 2 39 39 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 14 15 13 19 6 11 14 3 19 1 12 11 15 45 16 15 17 14 18 14 19 33 20 12 19 4 21 45 22 14 23 15 17 14 24 13 1 14 25 77 14 26 77 14 27 77 14 28 15 29 14 30 77 14 31 15 1 19 16 32 45 33 10 1 39 63 13 1 19 1 34 51 2 13 1 14 18 19 2 35 52 18 13 1 14 36 19 2 35 52 36 13 1 14 37 19 2 35 52 37 10 0 45 38 13 2 19 1 34 45 39 13 1 15 40 9 1 13 0 19 4 41 43 1 43 1 38 16 8 1 45 42 14 15 13 0 19 2 43 52 15 43 1 13 0 11 18 3 52 18 1 29 39 10 13 0 11 36 3 52 36 38 11 75 39 8 13 0 11 36 3 52 36 75 39 8 13 0 11 37 3 52 37 15 1 15 44 15 45 15 46 19 4 47 15 1 14 48 77 15 49 19 4 47 15 1 34 61 12 19 2 62 15 13 15 44 15 63 15 64 19 4 47 15 13 14 48 77 15 65 19 4 47 15 13 34 68 12 19 2 62 15 1 15 44 15 69 15 70 19 4 47 15 1 15 13 9 1 19 3 71 1 1 73 43 3 29) #20=#A(t (72) (common-lisp-user::*suppress-extend-item-warning* common-lisp-user::chunk-visual-approach-width-fn fboundp *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7# format finish-output common-lisp-user::chunk-visual-approach-width-fn-setf #8# common-lisp-user::*chunk-parameters-count* #:g11130 common-lisp-user::visual-approach-width-fn common-lisp-user::*chunk-parameters-list* :key common-lisp-user::act-r-chunk-parameter-name find #:g11131 :name :index :default-value :default-function :merge :copy identity :copy-from-chunk :accessor common-lisp-user::make-act-r-chunk-parameter #:g11132 common-lisp-user::act-r-chunk-parameter-index remove common-lisp-user::*chunk-parameters-copy-list* common-lisp-user::*chunk-parameters-merge-list* #:g11162 #:g11163 common-lisp-user::act-r-chunk-parameter si::structure-set #:g11165 + ext::location (defun common-lisp-user::chunk-visual-approach-width-fn) (#1# . 53233) ext::annotate :lambda-list #9# common-lisp-user::chunk-name common-lisp-user::get-chunk common-lisp-user::c common-lisp-user::act-r-chunk-parameter-values aref common-lisp-user::v common-lisp-user::*chunk-parameter-undefined* eq common-lisp-user::chunk-parameter-default si::aset #10# #Y(common-lisp-user::chunk-visual-approach-width-fn nil nil (24 45 50 26 13 0 19 1 51 45 52 10 0 39 50 13 0 19 1 53 12 13 4 19 2 54 45 55 13 0 11 56 17 57 39 22 13 1 19 1 53 12 13 5 13 3 13 2 19 2 58 12 19 3 59 38 4 10 0 73 43 1 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 60 13 1 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #20# #1# 53233) si::fset (defun common-lisp-user::chunk-visual-approach-width-fn-setf) (#1# . 53233) #11# common-lisp-user::new-value #12# #Y(common-lisp-user::chunk-visual-approach-width-fn-setf nil nil (24 45 50 24 45 66 26 13 1 19 1 51 45 52 10 0 39 16 13 0 19 1 53 12 13 5 13 1 19 3 59 38 44 14 3 15 4 19 0 5 73 39 12 19 0 6 16 7 12 9 1 19 2 8 12 19 0 9 12 15 67 13 2 15 1 19 7 11 12 14 3 19 1 12 22 73 43 1 29) #20# #1# 53233) (defsetf common-lisp-user::chunk-visual-approach-width-fn) (#1# . 53233) si::do-defsetf)) #1# 53233) #Y(si::bytecodes nil nil (19 0 0 29) #A(t (1) (common-lisp-user::unsuppress-extension-warnings)) #1# 53299) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #21=#A(t (21) (common-lisp-user::hash-visual-chunk-contents ext::location (defun common-lisp-user::hash-visual-chunk-contents) (#1# . 53332) ext::annotate :lambda-list (common-lisp-user::chunk) common-lisp-user::chunk common-lisp-user::res t common-lisp-user::chunk-filled-slots-list-fct si::%dolist-var common-lisp-user::slot common-lisp-user::value eq common-lisp-user::chunk-real-visual-value common-lisp-user::it common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::true-chunk-name-fct #Y(common-lisp-user::hash-visual-chunk-contents nil nil (24 45 7 26 75 45 8 13 1 14 9 19 2 10 45 11 75 45 12 38 56 10 1 4 51 0 13 0 13 0 1 13 17 14 39 6 13 3 19 1 15 45 16 10 0 39 5 10 0 38 12 13 4 13 1 19 2 17 12 19 1 18 43 1 3 12 10 2 3 51 2 10 1 5 51 1 10 1 40 -58 75 51 0 10 2 73 43 2 43 1 29) #21# #1# 53332) si::fset)) #1# 53332) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #22=#A(t (16) (common-lisp-user::valid-vis-loc-chunk ext::location (defun common-lisp-user::valid-vis-loc-chunk) (#1# . 53680) ext::annotate :lambda-list (common-lisp-user::chunk common-lisp-user::vision-mod) common-lisp-user::chunk common-lisp-user::vision-mod common-lisp-user::vis-loc-slots common-lisp-user::slots common-lisp-user::chunk-p-fct common-lisp-user::fast-chunk-slot-value-fct second #Y(common-lisp-user::valid-vis-loc-chunk nil nil (24 45 7 24 45 8 26 13 0 19 1 9 45 10 13 2 19 1 11 73 39 23 13 2 10 0 4 12 19 2 12 73 39 11 13 2 10 0 16 13 12 19 2 12 43 1 29) #22# #1# 53680) si::fset)) #1# 53680) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #23=#A(t (14) (common-lisp-user::clear-process-display-called ext::location (defmethod common-lisp-user::clear-process-display-called (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 54112) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g11193 #:g11194 (setf common-lisp-user::process-display-called) #Y(common-lisp-user::clear-process-display-called nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 29) #23# #1# 54112) t clos::install-method)) #1# 54112) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #24=#A(t (15) (common-lisp-user::record-vis-loc-slots ext::location (defmethod common-lisp-user::record-vis-loc-slots (common-lisp-user::vis-m common-lisp-user::vision-module) common-lisp-user::slot-list) (#1# . 54226) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-m common-lisp-user::slot-list) common-lisp-user::vis-m common-lisp-user::slot-list #:g11201 #:g11202 (setf common-lisp-user::vis-loc-slots) #Y(common-lisp-user::record-vis-loc-slots nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 13 0 13 1 33 11 18 2 43 1 43 1 29) #24# #1# 54226) t clos::install-method)) #1# 54226) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 136 12 14 39 14 137 15 138 19 8 139 29) #25=#A(t (140) (common-lisp-user::process-display ext::location (defmethod common-lisp-user::process-display (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::vis-mod common-lisp-user::vision-module) &optional #26=(common-lisp-user::clear nil)) (#1# . 54335) ext::annotate (common-lisp-user::device-interface common-lisp-user::vision-module) (common-lisp-user::devin common-lisp-user::vis-mod &optional #26#) common-lisp-user::devin common-lisp-user::vis-mod common-lisp-user::clear common-lisp-user::visicon hash-table-count common-lisp-user::d common-lisp-user::n common-lisp-user::o common-lisp-user::tempicon common-lisp-user::feature-list common-lisp-user::device *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Cannot process display--no device is installed." format finish-output common-lisp-user::process-display-called common-lisp-user::printing-module common-lisp-user::get-module-fct #:g11242 #:g11241 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g11243 common-lisp-user::printing-module-model-warnings eq common-lisp-user::*one-stream-hack* t *standard-output* eql #27="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" "Proc-display should not be called more than once at the same ACT-R time." #28="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #29="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::clear-process-display-called :module :vision :destination :priority :min :output :maintenance common-lisp-user::schedule-event-now #:g11244 #:g11245 (setf common-lisp-user::process-display-called) common-lisp-user::locks zerop #:g11248 #:g11246 common-lisp-user::pending-procs #:g11247 (setf common-lisp-user::pending-procs) common-lisp-user::last-processed-device #:g11249 #:g11250 (setf common-lisp-user::currently-attended) #:g11251 #:g11252 (setf common-lisp-user::current-marker) #:g11253 #:g11254 (setf common-lisp-user::last-processed-device) common-lisp-user::build-vis-locs-for common-lisp-user::flatten common-lisp-user::with-cursor-p common-lisp-user::cursor-to-vis-loc common-lisp-user::it #:g11256 #:g11257 (setf common-lisp-user::current-cursor) si::%dolist-var common-lisp-user::x common-lisp-user::valid-vis-loc-chunk common-lisp-user::vis-loc-slots third common-lisp-user::fast-chunk-slot-value-fct numberp common-lisp-user::view-dist common-lisp-user::set-chunk-slot-value-fct common-lisp-user::size common-lisp-user::compute-vis-loc-size common-lisp-user::test-feats common-lisp-user::hash-visual-chunk-contents common-lisp-user::chunk-visicon-entry-setf common-lisp-user::chunk-visual-feature-name-setf "Invalid visicon item ~s found when processing the display.  Must be a chunk with ~s and ~s values." second remove common-lisp-user::purge-visicon common-lisp-user::key common-lisp-user::value common-lisp-user::chunk-p-fct common-lisp-user::purge-chunk-fct #Y(nil nil nil (24 45 102 24 45 103 26 13 0 19 1 104 73 39 6 13 0 19 1 105 29) #25# #1# 54335) maphash clrhash #:g11272 #:g11273 (setf common-lisp-user::finst-lst) common-lisp-user::val :test equalp find #:g11275 + remhash #Y(nil nil nil (24 45 102 24 45 112 26 13 1 13 3 14 113 15 114 19 4 115 76 73 39 37 8 1 45 116 13 7 13 0 19 2 117 51 7 43 1 13 9 19 1 101 39 6 13 0 19 1 105 13 1 13 9 19 1 10 17 118 29) #25# #1# 54335) - common-lisp-user::vl common-lisp-user::enter-into-visicon #Y(nil nil nil (24 45 121 26 13 0 13 8 19 2 122 29) #25# #1# 54335) mapcar common-lisp-user::tracked-obj-last-feat common-lisp-user::update-tracking-mth 1.0 / * common-lisp-user::change-val #:g11277 common-lisp-user::mp-time-ms #:g11278 (setf common-lisp-user::scene-change) common-lisp-user::visicon-update #Y(common-lisp-user::process-display nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 57 0 60 862 77 77 13 2 19 1 10 16 11 12 9 0 9 0 46 12 46 13 46 14 46 15 46 16 13 8 19 1 17 76 39 41 14 18 15 19 19 0 20 73 39 12 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 25 19 5 26 14 18 19 1 27 75 73 36 5 13 7 19 1 28 39 171 15 29 19 1 30 47 1 31 45 32 10 1 39 10 13 0 19 1 33 12 19 1 34 39 142 13 0 19 1 33 12 19 1 34 45 35 13 1 19 1 36 76 40 121 10 0 76 40 27 13 0 11 18 17 37 40 19 11 38 40 15 13 0 11 39 17 37 39 7 14 18 11 40 17 41 39 33 14 18 15 42 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 43 19 5 26 14 18 19 1 27 38 56 14 18 15 44 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 43 19 5 26 14 18 19 1 27 13 0 15 45 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 43 19 5 26 43 1 43 2 38 25 15 46 14 47 14 48 14 49 14 48 14 50 14 51 14 52 77 14 53 14 39 19 11 54 10 7 45 55 11 39 45 56 13 0 13 1 33 57 18 2 43 1 43 1 13 8 19 1 58 16 59 76 39 33 10 6 45 60 10 9 45 61 13 1 13 0 19 1 62 3 45 63 13 0 13 1 33 64 18 2 43 3 75 73 36 5 13 8 19 1 65 39 15 13 8 19 1 65 12 13 8 19 1 17 17 37 76 39 39 10 7 45 66 75 45 67 13 0 13 1 33 68 18 2 43 1 43 1 10 7 45 69 75 45 70 13 0 13 1 33 71 18 2 43 1 43 1 10 8 45 72 13 9 19 1 17 45 73 13 0 13 1 33 74 18 2 43 1 43 1 13 8 19 1 17 12 13 7 19 2 75 12 19 1 76 51 0 13 8 19 1 77 39 47 13 8 19 1 17 12 19 1 78 45 79 10 0 39 30 10 8 45 80 10 1 45 81 13 0 13 1 33 82 18 2 43 1 43 1 13 0 10 1 3 51 1 38 1 43 1 10 0 45 83 75 45 84 38 176 10 1 4 51 0 13 0 13 9 19 2 85 39 95 13 0 13 9 19 1 86 16 87 12 19 2 88 16 89 76 39 20 13 0 13 9 19 1 86 16 87 12 13 9 19 1 90 12 19 3 91 13 0 15 92 19 2 88 16 89 76 39 8 13 0 13 9 19 2 93 13 0 13 9 19 1 94 39 8 13 0 19 1 95 38 4 10 0 73 12 19 2 96 12 10 3 3 51 3 13 0 13 0 19 2 97 38 63 14 18 15 19 19 0 20 73 39 12 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 98 13 0 13 9 19 1 86 4 12 13 9 19 1 86 16 99 12 19 8 26 14 18 19 1 27 13 0 13 2 19 2 100 51 2 10 1 5 51 1 10 1 40 -178 43 2 10 6 39 48 10 2 51 4 13 7 19 1 101 39 11 34 106 12 13 7 19 1 10 17 107 13 7 19 1 10 16 108 10 7 45 109 75 45 110 13 0 13 1 33 111 18 2 43 1 43 1 10 6 76 39 11 34 119 12 13 7 19 1 10 17 107 10 1 16 22 12 13 4 13 2 19 1 120 12 19 3 117 51 3 34 123 12 13 0 19 2 124 13 7 19 1 125 39 8 13 7 14 39 19 2 126 13 2 13 3 19 2 117 16 59 39 5 8 0 38 26 15 127 13 4 13 3 19 2 117 12 13 2 13 3 19 2 117 12 19 2 128 12 19 2 129 45 130 10 8 45 131 13 1 19 0 132 3 45 133 13 0 13 1 33 134 18 2 43 1 43 1 43 1 13 7 19 1 135 43 5 63 29) #25# #1# 54335) :documentation "Build a new visicon and initiate any buffer stuffing that may result" clos::install-method)) #1# 54335) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 20 12 14 21 19 6 22 29) #30=#A(t (23) (common-lisp-user::visicon-chunks ext::location (defmethod common-lisp-user::visicon-chunks (common-lisp-user::vis-mod common-lisp-user::vision-module) &optional common-lisp-user::sorted) (#1# . 59327) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod &optional common-lisp-user::sorted) common-lisp-user::vis-mod common-lisp-user::sorted values common-lisp-user::key common-lisp-user::val #Y(nil nil nil (24 45 10 24 45 11 26 13 0 10 2 3 51 2 73 29) #30# #1# 59327) common-lisp-user::visicon maphash common-lisp-user::x common-lisp-user::y common-lisp-user::loc-sort #Y(nil nil nil (24 45 15 24 45 16 26 13 1 13 0 13 4 19 3 17 29) #30# #1# 59327) sort #Y(common-lisp-user::visicon-chunks nil nil (24 45 7 25 40 2 77 46 8 26 75 45 9 34 12 12 13 2 19 1 13 17 14 10 1 39 11 13 0 34 18 12 19 2 19 38 4 10 0 73 43 1 29) #30# #1# 59327) t clos::install-method)) #1# 59327) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 19 2 24 1 0 73 29) #31=#A(t (25) (common-lisp-user::loc-sort ext::location (defun common-lisp-user::loc-sort) (#1# . 59646) ext::annotate :lambda-list (common-lisp-user::i1 common-lisp-user::i2 common-lisp-user::vis-mod) common-lisp-user::i1 common-lisp-user::i2 common-lisp-user::vis-mod common-lisp-user::vis-loc-slots common-lisp-user::slots common-lisp-user::chunk-slot-value-fct common-lisp-user::x1 common-lisp-user::x2 second common-lisp-user::y1 common-lisp-user::y2 numberp < = symbol-name string< #Y(common-lisp-user::loc-sort nil nil (24 45 7 24 45 8 24 45 9 26 13 0 19 1 10 45 11 13 3 10 0 4 12 19 2 12 45 13 13 3 10 1 4 12 19 2 12 45 14 13 5 10 2 16 15 12 19 2 12 45 16 13 5 10 3 16 15 12 19 2 12 45 17 10 3 16 18 73 39 84 10 2 16 18 73 39 77 10 1 16 18 73 39 70 10 0 16 18 73 39 63 13 3 13 2 19 2 19 73 40 53 13 3 13 2 19 2 20 39 8 13 1 13 0 19 2 19 73 40 34 13 3 13 2 19 2 20 73 39 24 13 1 13 0 19 2 20 73 39 14 10 7 16 21 12 10 6 16 21 12 19 2 22 43 5 29) #31# #1# 59646) si::fset)) #1# 59646) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 56 12 14 57 19 6 58 29) #32=#A(t (59) (common-lisp-user::update-cursor-feat ext::location (defmethod common-lisp-user::update-cursor-feat (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 60169) ext::annotate (common-lisp-user::device-interface common-lisp-user::vision-module) (common-lisp-user::devin common-lisp-user::vis-mod) common-lisp-user::devin common-lisp-user::vis-mod common-lisp-user::with-cursor-p common-lisp-user::device common-lisp-user::get-mouse-coordinates common-lisp-user::current-cursor common-lisp-user::cur-crsr common-lisp-user::new-pos common-lisp-user::xy-loc common-lisp-user::vpt= common-lisp-user::remove-finst common-lisp-user::chunk-visicon-entry common-lisp-user::visicon gethash common-lisp-user::entry common-lisp-user::purge-visicon common-lisp-user::purge-chunk-fct remhash common-lisp-user::cursor-to-vis-loc common-lisp-user::it common-lisp-user::valid-vis-loc-chunk common-lisp-user::vis-loc-slots third common-lisp-user::d-slot #:g11305 #:g11306 (setf common-lisp-user::current-cursor) common-lisp-user::chunk-slot-value-fct numberp common-lisp-user::view-dist common-lisp-user::set-chunk-slot-value-fct common-lisp-user::size common-lisp-user::compute-vis-loc-size common-lisp-user::test-feats common-lisp-user::hash-visual-chunk-contents common-lisp-user::chunk-visicon-entry-setf common-lisp-user::chunk-visual-feature-name-setf common-lisp-user::enter-into-visicon common-lisp-user::visicon-update *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid cursor ~s found when updating the cursor feature." format finish-output #Y(common-lisp-user::update-cursor-feat nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 6 13 1 19 1 10 73 39 298 13 1 19 1 10 12 19 1 11 12 13 0 19 1 12 12 46 13 46 14 10 1 39 15 13 0 13 1 13 2 19 2 15 12 19 2 16 76 39 59 13 2 13 1 19 2 17 13 1 19 1 18 12 13 2 19 1 19 12 19 2 20 45 21 10 0 39 26 13 3 19 1 22 39 6 13 0 19 1 23 13 2 19 1 18 12 13 3 19 1 19 17 24 43 1 75 51 1 10 1 76 73 39 192 13 3 19 1 10 12 19 1 25 45 26 10 0 39 173 13 0 13 3 19 2 27 39 121 13 3 19 1 28 16 29 45 30 10 4 45 31 10 2 45 32 13 0 13 1 33 33 18 2 43 1 43 1 13 1 13 0 19 2 34 16 35 76 39 14 13 1 13 0 13 4 19 1 36 12 19 3 37 13 1 15 38 19 2 34 16 35 76 39 8 13 1 13 4 19 2 39 13 1 13 4 19 1 40 39 8 13 1 19 1 41 38 4 10 1 73 12 19 2 42 13 1 13 1 19 2 43 13 1 13 4 19 2 44 13 4 77 19 2 45 43 1 38 42 14 46 15 47 19 0 48 73 39 12 19 0 49 16 50 12 9 1 19 2 51 12 19 0 52 12 15 53 13 0 19 6 54 12 14 46 19 1 55 22 73 38 3 75 73 43 1 43 2 29) #32# #1# 60169) t clos::install-method)) #1# 60169) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #33=#A(t (16) (common-lisp-user::xy-loc ext::location (defun common-lisp-user::xy-loc) (#1# . 62356) ext::annotate :lambda-list (common-lisp-user::chunk common-lisp-user::vis-mod) common-lisp-user::chunk common-lisp-user::vis-mod common-lisp-user::vis-loc-slots common-lisp-user::slots common-lisp-user::fast-chunk-slot-value-fct second vector #Y(common-lisp-user::xy-loc nil nil (24 45 7 24 45 8 26 13 0 19 1 9 45 10 13 2 10 0 4 12 19 2 11 12 13 2 10 0 16 12 12 19 2 11 12 19 2 13 43 1 29) #33# #1# 62356) si::fset)) #1# 62356) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 1 0 73 29) #34=#A(t (17) (common-lisp-user::xyz-loc ext::location (defun common-lisp-user::xyz-loc) (#1# . 62561) ext::annotate :lambda-list (common-lisp-user::chunk common-lisp-user::vis-mod) common-lisp-user::chunk common-lisp-user::vis-mod common-lisp-user::vis-loc-slots common-lisp-user::slots common-lisp-user::fast-chunk-slot-value-fct second third vector #Y(common-lisp-user::xyz-loc nil nil (24 45 7 24 45 8 26 13 0 19 1 9 45 10 13 2 10 0 4 12 19 2 11 12 13 2 10 0 16 12 12 19 2 11 12 13 2 10 0 16 13 12 19 2 11 12 19 3 14 43 1 29) #34# #1# 62561) si::fset)) #1# 62561) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::visicon-update ext::location (defgeneric common-lisp-user::visicon-update) (#1# . 62828) ext::annotate :lambda-list (common-lisp-user::vis-mod &optional count) :delete-methods t :documentation "To be called after every time the visicon changes." ensure-generic-function)) #1# 62828) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 8 19 6 17 29) #35=#A(t (18) (common-lisp-user::visicon-update ext::location (defmethod common-lisp-user::visicon-update (common-lisp-user::vis-mod common-lisp-user::vision-module) &optional #36=(count t)) (#1# . 62955) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod &optional #36#) common-lisp-user::vis-mod t count common-lisp-user::update-new common-lisp-user::check-finsts common-lisp-user::update-attended-loc common-lisp-user::stuff-visloc-buffer common-lisp-user::visicon hash-table-count #Y(common-lisp-user::visicon-update nil nil (24 45 7 25 40 3 14 8 46 9 26 13 1 19 1 10 13 1 19 1 11 13 1 19 1 12 13 1 19 1 13 10 0 73 39 8 13 1 19 1 14 16 15 29) #35# #1# 62955) clos::install-method)) #1# 62955) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::update-attended-loc ext::location (defgeneric common-lisp-user::update-attended-loc) (#1# . 63197) ext::annotate :lambda-list (common-lisp-user::vis-mod) :delete-methods t :documentation "If the attended location needs an update, update." ensure-generic-function)) #1# 63197) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 44 12 14 32 19 6 45 29) #37=#A(t (46) (common-lisp-user::update-attended-loc ext::location (defmethod common-lisp-user::update-attended-loc (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 63314) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::tracked-obj-last-feat common-lisp-user::moving-attention common-lisp-user::busy common-lisp-user::exec-s eq common-lisp-user::currently-attended common-lisp-user::visicon gethash common-lisp-user::current-marker common-lisp-user::xyz-loc common-lisp-user::within-move :exec common-lisp-user::change-state :params :module :vision :output :priority :max common-lisp-user::schedule-event-now common-lisp-user::move-attn-latency common-lisp-user::randomize-time-ms common-lisp-user::encoding-complete :time-in-ms t :destination common-lisp-user::last-scale (:requested nil) :details string "Encoding-complete " symbol-name " " concatenate common-lisp-user::medium common-lisp-user::schedule-event-relative #Y(common-lisp-user::update-attended-loc nil nil (24 45 7 26 57 0 60 205 13 1 19 1 8 40 17 13 1 19 1 9 40 10 15 10 13 1 19 1 11 17 12 39 5 75 73 36 0 13 1 19 1 13 39 17 13 1 19 1 13 12 13 1 19 1 14 12 19 2 15 76 40 33 13 1 19 1 16 39 26 13 1 19 1 13 76 39 18 13 1 13 1 19 1 16 12 13 1 19 2 17 12 19 2 18 73 39 115 13 1 14 19 15 10 19 3 20 15 20 14 21 13 1 14 19 1 10 6 3 12 14 22 14 23 14 24 77 14 25 14 26 19 9 27 13 1 19 1 28 12 19 1 29 12 15 30 14 31 14 32 14 33 14 23 14 22 14 23 14 21 13 1 19 1 16 12 13 1 19 1 34 12 1 35 7 3 12 14 36 15 37 15 38 13 1 19 1 16 16 39 12 15 40 13 1 19 1 34 16 39 12 19 5 41 12 14 24 15 42 19 14 43 63 29) #37# #1# 63314) clos::install-method)) #1# 63314) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 62 12 14 34 19 6 63 29) #38=#A(t (64) (common-lisp-user::stuff-visloc-buffer ext::location (defmethod common-lisp-user::stuff-visloc-buffer (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 64812) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::visual-location common-lisp-user::buffer-read common-lisp-user::old common-lisp-user::overstuff-loc common-lisp-user::chunk-copied-from-fct common-lisp-user::unmodified-copy common-lisp-user::x (common-lisp-user::buffer common-lisp-user::unrequested) common-lisp-user::query-buffer common-lisp-user::current-device-interface common-lisp-user::locks zerop common-lisp-user::tracked-obj-last-feat common-lisp-user::default-spec common-lisp-user::find-current-locs-with-spec common-lisp-user::it common-lisp-user::chunk-visual-tstamp common-lisp-user::objs-max-val string< :key symbol-name sort common-lisp-user::random-item common-lisp-user::chunk common-lisp-user::equal-chunks-fct :time-in-ms t :module :vision :requested :priority common-lisp-user::schedule-overwrite-buffer-chunk common-lisp-user::schedule-set-buffer-chunk common-lisp-user::lock-device common-lisp-user::unlock-device :destination :device :output :maintenance common-lisp-user::schedule-event-now common-lisp-user::unstuff-loc numberp common-lisp-user::new-span common-lisp-user::delay common-lisp-user::unstuff-event common-lisp-user::delete-event #:g11317 common-lisp-user::unstuff-buffer :params :precondition common-lisp-user::check-unstuff-buffer common-lisp-user::schedule-event-relative #:g11318 (setf common-lisp-user::unstuff-event) #Y(common-lisp-user::stuff-visloc-buffer nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 76 40 31 13 1 19 1 11 39 24 13 0 19 1 12 47 1 13 45 14 10 1 43 2 39 8 15 8 15 15 19 2 16 39 18 19 0 17 12 19 1 18 16 19 39 7 13 1 19 1 20 76 73 39 255 13 1 13 1 19 1 21 12 19 2 22 45 23 10 0 39 234 13 0 15 24 19 2 25 12 15 26 14 27 15 28 19 4 29 12 19 1 30 45 31 10 2 39 8 13 2 13 0 19 2 32 76 73 39 192 10 2 39 27 15 8 13 0 9 0 14 33 14 34 14 35 14 36 14 37 77 14 38 9 10 19 11 39 38 25 15 8 13 0 9 0 14 33 14 34 14 35 14 36 14 37 77 14 38 9 10 19 11 40 19 0 17 12 19 1 41 15 42 14 35 14 36 14 43 14 44 14 38 9 9 14 45 77 14 46 14 34 19 11 47 13 3 19 1 48 73 39 99 13 3 19 1 48 16 49 39 8 13 3 19 1 48 38 6 13 3 19 1 50 45 51 13 4 19 1 52 45 23 10 0 39 8 13 0 19 1 53 38 1 43 1 10 4 45 54 13 1 15 55 14 46 14 34 14 56 15 8 10 2 6 2 12 14 43 14 36 14 45 77 14 33 14 34 14 57 15 58 19 14 59 45 60 13 0 13 1 33 61 18 2 43 1 43 1 43 1 43 1 38 3 75 73 43 1 43 1 29) #38# #1# 64812) clos::install-method)) #1# 64812) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 15 0 15 27 15 28 19 3 29 1 0 73 29) #39=#A(t (30) (common-lisp-user::test-attended ext::location (defun common-lisp-user::test-attended) (#1# . 67018) ext::annotate :lambda-list (common-lisp-user::vm common-lisp-user::attended-spec common-lisp-user::chunk) common-lisp-user::vm common-lisp-user::attended-spec common-lisp-user::chunk common-lisp-user::chunk-visicon-entry common-lisp-user::visicon-key common-lisp-user::visicon gethash common-lisp-user::it common-lisp-user::visicon-value third common-lisp-user::value common-lisp-user::result common-lisp-user::feat-attended common-lisp-user::marker common-lisp-user::new eq t - #Y(common-lisp-user::test-attended nil nil (24 45 7 24 45 8 24 45 9 26 13 0 19 1 10 45 11 10 0 39 12 13 0 13 3 19 1 12 12 19 2 13 45 14 10 0 39 5 10 0 38 3 10 2 43 1 45 15 10 3 16 16 45 17 75 45 18 13 2 13 6 19 2 19 45 20 13 2 1 21 17 22 39 11 13 0 1 21 17 22 51 1 38 31 10 2 76 39 18 13 0 1 21 17 22 40 6 13 0 75 17 22 51 1 38 9 13 0 11 23 17 22 51 1 10 6 4 12 1 24 17 22 39 7 10 1 76 73 38 4 10 1 73 43 5 29) #39# #1# 67018) si::fset function "Assume it's a visual-location chunk, but could be either
   the key or value from the visicon or it could be an unrelated location chunk" si::set-documentation)) #1# 67018) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #40=#A(t (16) (common-lisp-user::matching-attended-chunks ext::location (defun common-lisp-user::matching-attended-chunks) (#1# . 67947) ext::annotate :lambda-list (common-lisp-user::vm common-lisp-user::attended-spec common-lisp-user::chunks) common-lisp-user::vm common-lisp-user::attended-spec common-lisp-user::chunks common-lisp-user::x common-lisp-user::test-attended #Y(nil nil nil (24 45 10 26 13 3 13 2 13 0 19 3 11 29) #40# #1# 67947) remove-if-not #Y(common-lisp-user::matching-attended-chunks nil nil (24 45 7 24 45 8 24 45 9 26 34 12 12 13 0 19 2 13 29) #40# #1# 67947) si::fset)) #1# 67947) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #41=#A(t (30) (common-lisp-user::set-visual-center-point ext::location (defun common-lisp-user::set-visual-center-point) (#1# . 68080) ext::annotate :lambda-list (common-lisp-user::x common-lisp-user::y) common-lisp-user::x common-lisp-user::y :vision common-lisp-user::get-module-fct common-lisp-user::it numberp #:g11327 vector #:g11328 (setf common-lisp-user::center-point) *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "X and Y values must be numbers for set-visual-center-point." format finish-output "No vision module available so cannot set center point." #Y(common-lisp-user::set-visual-center-point nil nil (24 45 7 24 45 8 26 15 9 19 1 10 45 11 10 0 39 81 10 2 16 12 39 5 10 1 16 12 39 28 10 0 45 13 13 3 13 2 19 2 14 45 15 13 0 13 1 33 16 18 2 43 1 43 1 38 40 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 19 5 25 12 14 17 19 1 26 22 73 38 40 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 27 19 5 25 12 14 17 19 1 26 22 73 43 1 29) #41# #1# 68080) si::fset)) #1# 68080) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #42=#A(t (14) (common-lisp-user::2-points->angle ext::location (defun common-lisp-user::2-points->angle) (#1# . 68400) ext::annotate :lambda-list (common-lisp-user::center common-lisp-user::point) common-lisp-user::center common-lisp-user::point svref - atan #Y(common-lisp-user::2-points->angle nil nil (24 45 7 24 45 8 26 13 0 8 1 17 9 12 13 1 8 1 17 9 12 19 2 10 12 13 0 8 0 17 9 12 13 1 8 0 17 9 12 19 2 10 12 19 2 11 29) #42# #1# 68400) si::fset)) #1# 68400) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 17 12 19 2 18 1 0 73 29) #43=#A(t (19) (common-lisp-user::angle-between ext::location (defun common-lisp-user::angle-between) (#1# . 68850) ext::annotate :lambda-list (common-lisp-user::p1 common-lisp-user::p2 common-lisp-user::center) common-lisp-user::p1 common-lisp-user::p2 common-lisp-user::center common-lisp-user::2-points->angle - common-lisp-user::a minusp pi * + #Y(common-lisp-user::angle-between nil nil (24 45 7 24 45 8 24 45 9 26 13 0 13 2 19 2 10 12 13 0 13 1 19 2 10 12 19 2 11 45 12 10 0 16 13 39 16 9 2 14 14 19 2 15 12 13 0 19 2 16 38 4 10 0 73 43 1 29) #43# #1# 68850) si::fset)) #1# 68850) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 138 12 14 51 14 139 15 140 19 8 141 29) #44=#A(t (142) (common-lisp-user::find-current-locs-with-spec ext::location (defmethod common-lisp-user::find-current-locs-with-spec (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::spec) (#1# . 69015) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::spec) common-lisp-user::vis-mod common-lisp-user::spec :attended common-lisp-user::chunk-spec-slot-spec common-lisp-user::attended keywordp :key common-lisp-user::spec-slot-name remove-if common-lisp-user::slots common-lisp-user::current-marker common-lisp-user::current common-lisp-user::chunk-filled-slots-list-fct common-lisp-user::current-slots :nearest common-lisp-user::spec-slot-value common-lisp-user::nearest common-lisp-user::min-max-tests si::%dolist-var common-lisp-user::x eq find common-lisp-user::value common-lisp-user::chunk-real-visual-value common-lisp-user::set-spec-slot-value common-lisp-user::chunk-slot-value-fct *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Current visual-location does not have a slot named ~S so it is ignored in the request." format finish-output remove "There is no currently attended location.  So, request specifying ~S as current is being ignored." common-lisp-user::lowest common-lisp-user::highest #:g11462 nconc common-lisp-user::update-new common-lisp-user::check-finsts t common-lisp-user::visicon-chunks common-lisp-user::matching-attended-chunks common-lisp-user::vis-loc-slots common-lisp-user::coord-slots common-lisp-user::changed common-lisp-user::possible-chunks common-lisp-user::check common-lisp-user::fast-set-chunk-slot-value-fct common-lisp-user::slot-specs-to-chunk-spec :chunks :variable-char #\& common-lisp-user::find-matching-chunks common-lisp-user::matching-chunks common-lisp-user::spec-slot-op common-lisp-user::test common-lisp-user::slot common-lisp-user::op common-lisp-user::y common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::cur-val numberp :fail "Cannot apply ~S constraint because not all chunks have a numerical value." < common-lisp-user::define-chunk-spec-fct (common-lisp-user::current-x common-lisp-user::current-y common-lisp-user::current-distance) common-lisp-user::it common-lisp-user::current-x common-lisp-user::current-y second common-lisp-user::current-distance third common-lisp-user::printing-module common-lisp-user::get-module-fct #:g11473 #:g11472 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g11474 common-lisp-user::printing-module-model-warnings common-lisp-user::*one-stream-hack* *standard-output* eql #27# "No location has yet been attended so current is assumed to be at 0,0,~d." common-lisp-user::view-dist #28# #29# common-lisp-user::current-val - abs #Y(nil nil nil (24 45 26 26 13 1 13 0 10 7 42 80 7 10 5 4 73 38 21 42 81 7 10 5 16 82 38 12 42 83 7 10 5 16 84 38 3 75 73 12 19 2 32 12 19 2 102 16 103 29) #44# #1# 69015) common-lisp-user::objs-min-val (common-lisp-user::clockwise common-lisp-user::counterclockwise) :center common-lisp-user::center-spec common-lisp-user::chunk-p-fct common-lisp-user::center-point common-lisp-user::valid-vis-loc-chunk common-lisp-user::xy-loc common-lisp-user::screen-pos common-lisp-user::center #:g11477 #:g11476 #:g11478 "No location has yet been attended so current is assumed to be at 0,0." vector common-lisp-user::current-point common-lisp-user::clockwise common-lisp-user::angle-between #Y(nil nil nil (24 45 26 26 13 1 13 0 13 15 19 2 112 12 13 2 19 3 122 29) #44# #1# 69015) common-lisp-user::objs-max-val #Y(nil nil nil (24 45 26 26 13 1 13 0 13 15 19 2 112 12 13 2 19 3 122 29) #44# #1# 69015) common-lisp-user::xyz-loc #:g11481 #:g11480 #:g11482 "No location has yet been attended so current is assumed to be at 0,0,~d." common-lisp-user::nearest-coords common-lisp-user::dist #Y(nil nil nil (24 45 26 26 13 0 13 13 19 2 126 12 13 1 19 2 132 29) #44# #1# 69015) #Y(nil nil nil (24 45 26 26 13 0 13 13 19 2 126 12 13 1 19 2 132 29) #44# #1# 69015) "Nearest test in a visual-location request must be current, current-x, current-y, clockwise, counterclockwise, or a chunk with ~s and ~s coordinates." "Ignoring nearest request for ~S." common-lisp-user::restore #Y(common-lisp-user::find-current-locs-with-spec nil nil (24 45 7 24 45 8 26 13 0 14 9 19 2 10 4 45 11 15 12 13 1 19 1 10 12 14 13 15 14 19 4 15 45 16 13 3 19 1 17 45 18 10 0 39 6 13 0 19 1 19 45 20 13 4 14 21 19 2 10 4 12 19 1 22 45 23 75 45 24 10 3 39 155 10 4 45 25 75 45 26 38 138 10 1 4 51 0 13 0 19 1 22 12 1 18 17 27 39 116 13 0 19 1 14 12 13 4 19 2 28 39 52 13 0 19 1 14 12 1 29 17 27 39 6 13 5 19 1 30 39 14 13 0 13 5 19 1 30 12 19 2 31 38 18 13 0 13 5 13 0 19 1 14 12 19 2 32 12 19 2 31 38 52 14 33 15 34 19 0 35 73 39 12 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 40 13 0 19 1 14 12 19 6 41 14 33 19 1 42 13 0 13 6 19 2 43 51 6 10 1 5 51 1 10 1 40 -140 43 2 38 89 10 4 45 25 75 45 26 38 74 10 1 4 51 0 13 0 19 1 22 12 1 18 17 27 39 52 14 33 15 34 19 0 35 73 39 12 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 44 13 0 19 1 14 12 19 6 41 14 33 19 1 42 13 0 13 6 19 2 43 51 6 10 1 5 51 1 10 1 40 -76 43 2 10 4 45 25 75 45 26 38 61 10 1 4 51 0 13 0 19 1 22 12 1 45 17 27 40 11 13 0 19 1 22 12 1 46 17 27 39 27 10 0 6 1 45 47 13 3 13 0 19 2 48 51 3 43 1 13 0 13 6 19 2 43 51 6 10 1 5 51 1 10 1 40 -63 43 2 10 5 39 11 13 7 19 1 49 13 7 19 1 50 10 5 39 18 13 7 13 5 13 7 14 51 19 2 52 12 19 3 53 38 8 13 7 14 51 19 2 52 12 77 13 7 19 1 54 12 46 55 46 56 46 57 10 0 45 25 75 45 58 38 47 10 1 4 51 0 13 0 19 1 30 39 30 13 0 13 0 15 29 19 2 32 3 12 10 3 3 51 3 13 0 15 29 13 0 19 1 30 12 19 3 59 10 1 5 51 1 10 1 40 -49 43 2 13 7 19 1 60 12 14 61 13 0 14 62 15 63 19 5 64 45 65 10 4 45 25 75 45 26 38 207 10 1 4 51 0 77 13 0 19 1 66 12 13 0 19 1 14 12 13 0 19 1 22 12 46 67 46 68 46 69 46 29 58 60 134 10 7 45 25 75 45 70 38 118 10 1 4 51 0 13 0 13 5 19 2 71 45 72 10 0 16 73 76 39 47 11 74 51 4 14 33 15 34 19 0 35 73 39 12 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 75 13 8 19 6 41 14 33 19 1 42 75 73 36 3 10 4 76 40 33 13 7 1 45 17 27 39 8 13 0 13 4 19 2 76 40 16 13 7 1 46 17 27 39 8 13 0 13 4 19 2 38 39 5 10 0 51 4 43 1 10 1 5 51 1 10 1 40 -120 43 2 63 13 0 11 74 17 27 76 39 23 13 1 13 2 10 0 6 3 12 19 1 77 12 14 61 13 6 19 3 64 51 6 43 4 10 1 5 51 1 10 1 40 -209 43 2 10 5 39 3 10 0 39 1032 13 5 15 78 19 2 28 39 279 10 7 45 79 10 0 39 40 13 0 10 6 42 80 7 10 4 4 73 38 21 42 81 7 10 4 16 82 38 12 42 83 7 10 4 16 84 38 3 75 73 12 19 2 32 38 214 15 85 19 1 86 47 1 87 45 88 10 1 39 10 13 0 19 1 89 12 19 1 90 39 160 13 0 19 1 89 12 19 1 90 45 91 13 1 19 1 92 76 40 139 10 0 76 40 27 13 0 11 33 17 27 40 19 11 93 40 15 13 0 11 51 17 27 39 7 14 33 11 94 17 95 39 39 14 33 15 96 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 97 13 15 19 1 98 12 19 6 41 14 33 19 1 42 38 68 14 33 15 99 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 97 13 15 19 1 98 12 19 6 41 14 33 19 1 42 13 0 15 100 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 97 13 15 19 1 98 12 19 6 41 43 1 43 2 10 6 42 80 5 8 0 38 19 42 81 5 8 0 38 12 42 83 8 13 12 19 1 98 38 2 75 43 1 45 101 13 1 34 104 12 19 2 105 51 1 43 1 38 745 13 5 15 106 19 2 28 39 330 13 10 14 107 19 2 10 4 12 19 1 22 45 108 10 0 76 40 7 13 0 19 1 109 76 39 8 13 12 19 1 110 38 63 13 0 13 12 19 2 111 39 10 13 0 13 12 19 2 112 38 45 13 0 15 113 19 2 32 39 14 13 0 15 113 19 2 32 12 13 12 19 2 111 39 16 13 0 15 113 19 2 32 12 13 12 19 2 112 38 6 13 12 19 1 110 45 114 13 13 19 1 17 45 79 10 0 39 10 13 0 13 14 19 2 112 38 176 15 85 19 1 86 47 1 115 45 116 10 1 39 10 13 0 19 1 89 12 19 1 90 39 142 13 0 19 1 89 12 19 1 90 45 117 13 1 19 1 92 76 40 121 10 0 76 40 27 13 0 11 33 17 27 40 19 11 93 40 15 13 0 11 51 17 27 39 7 14 33 11 94 17 95 39 33 14 33 15 96 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 118 19 5 41 14 33 19 1 42 38 56 14 33 15 99 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 118 19 5 41 14 33 19 1 42 13 0 15 100 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 118 19 5 41 43 1 43 2 9 0 9 0 19 2 119 43 1 45 120 13 8 1 121 17 27 39 11 13 3 34 123 12 19 2 124 38 9 13 3 34 125 12 19 2 105 51 3 43 3 38 407 13 5 1 18 17 27 39 238 13 11 19 1 17 45 79 10 0 39 10 13 0 13 12 19 2 126 38 200 15 85 19 1 86 47 1 127 45 128 10 1 39 10 13 0 19 1 89 12 19 1 90 39 160 13 0 19 1 89 12 19 1 90 45 129 13 1 19 1 92 76 40 139 10 0 76 40 27 13 0 11 33 17 27 40 19 11 93 40 15 13 0 11 51 17 27 39 7 14 33 11 94 17 95 39 39 14 33 15 96 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 130 13 15 19 1 98 12 19 6 41 14 33 19 1 42 38 68 14 33 15 99 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 130 13 15 19 1 98 12 19 6 41 14 33 19 1 42 13 0 15 100 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 130 13 15 19 1 98 12 19 6 41 43 1 43 2 9 0 9 0 13 12 19 1 98 12 19 3 119 43 1 45 131 13 1 34 133 12 19 2 105 51 1 43 1 38 162 13 5 13 11 19 2 111 39 70 13 5 10 3 16 84 12 19 2 32 16 73 39 10 13 5 13 11 19 2 126 38 31 13 5 10 3 4 12 19 2 32 12 13 5 10 3 16 82 12 19 2 32 12 13 11 19 1 98 12 19 3 119 45 131 13 1 34 134 12 19 2 105 51 1 43 1 38 84 14 33 15 34 19 0 35 73 39 12 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 135 10 3 4 12 10 3 16 82 12 19 7 41 14 33 19 1 42 14 33 15 34 19 0 35 73 39 12 19 0 36 16 37 12 9 1 19 2 38 12 19 0 39 12 15 136 13 5 19 6 41 14 33 19 1 42 10 2 45 25 75 45 137 38 24 10 1 4 51 0 10 0 4 12 15 29 10 0 5 12 19 3 59 10 1 5 51 1 10 1 40 -26 43 2 10 0 73 43 1 43 3 43 6 29) #44# #1# 69015) :documentation "Assume that it's a valid visual-location chunk-spec with at most 1
   attended slot specification one nearest spec and one center spec" clos::install-method)) #1# 69015) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #45=#A(t (29) (common-lisp-user::enter-into-visicon ext::location (defun common-lisp-user::enter-into-visicon) (#1# . 78824) ext::annotate :lambda-list (common-lisp-user::vis-loc common-lisp-user::vis-mod) common-lisp-user::vis-loc common-lisp-user::vis-mod common-lisp-user::chunk-visicon-entry common-lisp-user::visicon gethash common-lisp-user::existing common-lisp-user::chunk-visual-tstamp common-lisp-user::mp-time-ms common-lisp-user::tstamp common-lisp-user::chunk-visual-new-p common-lisp-user::new common-lisp-user::copy-chunk-fct common-lisp-user::entry common-lisp-user::purge-visicon common-lisp-user::current-marker eq common-lisp-user::purge-chunk-fct si::hash-set common-lisp-user::chunk-visual-tstamp-setf common-lisp-user::chunk-visual-new-p-setf #Y(common-lisp-user::enter-into-visicon nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 1 10 12 19 2 11 45 12 10 0 39 8 13 0 19 1 13 38 4 19 0 14 45 15 10 1 39 8 13 1 19 1 16 38 3 1 17 45 17 13 4 19 1 18 45 19 10 3 39 25 13 4 19 1 20 39 18 13 3 13 4 19 1 21 17 22 76 39 6 13 3 19 1 23 13 5 19 1 9 12 13 4 19 1 10 12 13 0 19 3 24 13 0 13 2 19 2 25 13 0 13 1 19 2 26 10 0 73 43 4 29) #45# #1# 78824) si::fset)) #1# 78824) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #46=#A(t (13) (common-lisp-user::tstamp-elapsed ext::location (defun common-lisp-user::tstamp-elapsed) (#1# . 79870) ext::annotate :lambda-list (common-lisp-user::vis-loc) common-lisp-user::vis-loc common-lisp-user::mp-time-ms common-lisp-user::chunk-visual-tstamp - #Y(common-lisp-user::tstamp-elapsed nil nil (24 45 7 26 19 0 8 12 13 0 19 1 9 12 19 2 10 29) #46# #1# 79870) si::fset)) #1# 79870) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 1 0 73 29) #47=#A(t (18) (common-lisp-user::checknew ext::location (defun common-lisp-user::checknew) (#1# . 80063) ext::annotate :lambda-list (common-lisp-user::vis-loc common-lisp-user::vis-mod) common-lisp-user::vis-loc common-lisp-user::vis-mod common-lisp-user::chunk-visual-new-p common-lisp-user::new eq common-lisp-user::tstamp-elapsed common-lisp-user::new-span > common-lisp-user::chunk-visual-new-p-setf #Y(common-lisp-user::checknew nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 1 10 17 11 39 16 13 1 19 1 12 12 13 0 19 1 13 12 19 2 14 39 7 13 1 77 19 2 15 10 1 73 29) #47# #1# 80063) si::fset)) #1# 80063) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #48=#A(t (16) (common-lisp-user::update-new ext::location (defmethod common-lisp-user::update-new (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 80268) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::vl common-lisp-user::checknew #Y(nil nil nil (24 45 8 26 13 0 13 1 19 2 9 29) #48# #1# 80268) common-lisp-user::visicon-chunks mapc #Y(common-lisp-user::update-new nil nil (24 45 7 26 34 10 12 13 0 19 1 11 12 19 2 12 29) #48# #1# 80268) t clos::install-method)) #1# 80268) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 77 19 4 6 29) #A(t (7) (common-lisp-user::finst ext::location (defclass common-lisp-user::finst) (#1# . 80388) ext::annotate ((:initform nil :initargs (:id) :writers ((setf common-lisp-user::id)) :readers (common-lisp-user::id) :name common-lisp-user::id) (:initform #49=0.0 :initargs (:tstamp) :writers ((setf common-lisp-user::tstamp)) :readers (common-lisp-user::tstamp) :name common-lisp-user::tstamp) (:initform nil :initargs (:synthed-from) :writers ((setf common-lisp-user::synthed-from)) :readers (common-lisp-user::synthed-from) :name common-lisp-user::synthed-from)) clos::load-defclass)) #1# 80388) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::check-finsts ext::location (defgeneric common-lisp-user::check-finsts) (#1# . 80630) ext::annotate :lambda-list (common-lisp-user::vis-mod) :delete-methods t :documentation "Update finsts against what's on the display." ensure-generic-function)) #1# 80630) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 27 12 14 28 19 6 29 29) #50=#A(t (30) (common-lisp-user::check-finsts ext::location (defmethod common-lisp-user::check-finsts (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 80734) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g11509 common-lisp-user::f common-lisp-user::synthed-from common-lisp-user::id common-lisp-user::visicon gethash common-lisp-user::x #Y(nil nil nil (24 45 14 26 13 0 13 3 19 1 12 12 19 2 13 29) #50# #1# 80734) some common-lisp-user::mp-time-ms common-lisp-user::tstamp - common-lisp-user::finst-span > #Y(nil nil nil (24 45 9 26 13 0 19 1 10 76 39 17 13 0 19 1 11 12 13 2 19 1 12 12 19 2 13 76 73 40 47 13 0 19 1 10 39 14 34 15 12 13 0 19 1 10 12 19 2 16 76 73 40 24 19 0 17 12 13 0 19 1 18 12 19 2 19 12 13 2 19 1 20 12 19 2 21 29) #50# #1# 80734) common-lisp-user::finst-lst delete-if #:g11510 (setf common-lisp-user::finst-lst) #Y(common-lisp-user::check-finsts nil nil (24 45 7 26 10 0 45 8 34 22 12 13 1 19 1 23 12 19 2 24 45 25 13 0 13 1 33 26 18 2 43 1 43 1 29) #50# #1# 80734) t clos::install-method)) #1# 80734) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::feat-attended ext::location (defgeneric common-lisp-user::feat-attended) (#1# . 81240) ext::annotate :lambda-list (common-lisp-user::feat common-lisp-user::vis-mod) :delete-methods t :documentation "Return the attended status of a visicon feature object." ensure-generic-function)) #1# 81240) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 29 12 14 23 19 6 30 29) #51=#A(t (31) (common-lisp-user::feat-attended ext::location (defmethod common-lisp-user::feat-attended common-lisp-user::loc common-lisp-user::vis-mod) (#1# . 81362) ext::annotate (t t) (common-lisp-user::loc common-lisp-user::vis-mod) common-lisp-user::loc common-lisp-user::vis-mod common-lisp-user::chunk-visicon-entry common-lisp-user::finst-lst :key common-lisp-user::x common-lisp-user::id common-lisp-user::synthed-from #Y(nil nil nil (24 45 12 26 13 0 19 1 13 12 13 0 19 1 14 3 73 29) #51# #1# 81362) :test common-lisp-user::item list equal member #Y(nil nil nil (24 45 17 24 45 18 26 13 1 13 0 14 16 15 19 19 4 20 29) #51# #1# 81362) find t common-lisp-user::visicon gethash common-lisp-user::chunk-visual-new-p common-lisp-user::new eq #Y(common-lisp-user::feat-attended nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 1 10 12 14 11 34 15 12 14 16 34 21 12 19 6 22 39 6 11 23 73 38 38 13 1 19 1 9 12 13 0 19 1 24 12 19 2 25 73 39 20 13 1 19 1 26 12 1 27 17 28 39 6 1 27 73 38 3 75 73 29) #51# #1# 81362) clos::install-method)) #1# 81362) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 67 12 19 2 68 1 0 73 29) #52=#A(t (69) (common-lisp-user::add-finst ext::location (defun common-lisp-user::add-finst) (#1# . 81717) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc-or-obj) common-lisp-user::vis-mod common-lisp-user::loc-or-obj common-lisp-user::chunk-visicon-entry common-lisp-user::feature common-lisp-user::visicon gethash common-lisp-user::current common-lisp-user::finst-lst :key common-lisp-user::id :test equal find common-lisp-user::it #:g11527 common-lisp-user::mp-time-ms #:g11528 (setf common-lisp-user::tstamp) common-lisp-user::finst :id :tstamp :synthed-from common-lisp-user::chunk-synth-feat make-instance #:g11531 #:g11529 #:g11530 (setf common-lisp-user::finst-lst) si::%dolist-var common-lisp-user::x common-lisp-user::chunk-visual-new-p-setf length common-lisp-user::num-finst > common-lisp-user::sort-finsts #:g11538 #:g11539 (setf common-lisp-user::finst-lst) common-lisp-user::printing-module common-lisp-user::get-module-fct #:g11541 #:g11540 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g11542 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #27# common-lisp-user::mp-models common-lisp-user::current-model "~S does not name an object or feature in the current visicon. No finst created." format finish-output #28# #29# #Y(common-lisp-user::add-finst nil nil (24 45 7 24 45 8 26 13 0 19 1 9 45 10 10 0 39 12 13 0 13 2 19 1 11 12 19 2 12 45 13 10 0 39 221 13 1 13 3 19 1 14 12 14 15 15 16 14 17 15 18 19 6 19 45 20 10 0 39 24 10 0 45 21 19 0 22 45 23 13 0 13 1 33 24 18 2 43 1 43 1 38 50 15 25 14 26 13 2 14 27 19 0 22 12 14 28 13 3 19 1 29 12 19 7 30 45 31 10 5 45 32 13 1 13 0 19 1 14 3 45 33 13 0 13 1 33 34 18 2 43 3 43 1 13 2 19 1 29 45 20 10 0 39 44 10 0 45 35 75 45 36 38 27 10 1 4 51 0 13 0 13 6 19 1 11 12 19 2 12 12 77 19 2 37 10 1 5 51 1 10 1 40 -29 43 2 38 7 13 1 77 19 2 37 43 1 13 3 19 1 14 16 38 12 13 3 19 1 39 12 19 2 40 73 39 38 13 3 19 1 41 10 3 45 42 13 0 19 1 14 45 43 10 0 4 12 10 0 5 51 0 13 0 13 1 33 44 18 2 22 73 43 2 38 178 15 45 19 1 46 47 1 47 45 48 10 1 39 10 13 0 19 1 49 12 19 1 50 73 39 150 13 0 19 1 49 12 19 1 50 45 51 13 1 19 1 52 76 40 127 10 0 76 40 27 13 0 11 53 17 54 40 19 11 55 40 15 13 0 11 56 17 54 39 7 14 53 11 57 17 58 39 35 14 53 15 59 19 0 60 16 38 12 9 1 19 2 40 12 19 0 61 12 15 62 13 5 19 6 63 14 53 19 1 64 38 60 14 53 15 65 19 0 60 16 38 12 9 1 19 2 40 12 19 0 61 12 15 62 13 5 19 6 63 14 53 19 1 64 13 0 15 66 19 0 60 16 38 12 9 1 19 2 40 12 19 0 61 12 15 62 13 5 19 6 63 75 73 43 1 43 2 43 2 29) #52# #1# 81717) si::fset)) #1# 81717) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #53=#A(t (30) (common-lisp-user::remove-finst ext::location (defun common-lisp-user::remove-finst) (#1# . 82733) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc-or-obj) common-lisp-user::vis-mod common-lisp-user::loc-or-obj common-lisp-user::chunk-visicon-entry common-lisp-user::name #:g11547 common-lisp-user::finst-lst :key common-lisp-user::id :test equal remove #:g11548 (setf common-lisp-user::finst-lst) #:g11549 common-lisp-user::x common-lisp-user::synthed-from find #Y(nil nil nil (24 45 21 26 13 2 13 0 19 1 22 12 14 15 15 16 19 4 23 29) #53# #1# 82733) remove-if #:g11550 (setf common-lisp-user::finst-lst) #Y(common-lisp-user::remove-finst nil nil (24 45 7 24 45 8 26 13 0 19 1 9 45 10 10 2 45 11 13 1 13 3 19 1 12 12 14 13 15 14 14 15 15 16 19 6 17 45 18 13 0 13 1 33 19 18 2 43 1 43 1 10 2 45 20 34 24 12 13 3 19 1 12 12 19 2 25 45 26 13 0 13 1 33 27 18 2 43 1 43 1 43 1 29) #53# #1# 82733) si::fset)) #1# 82733) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::assign-finst ext::location (defgeneric common-lisp-user::assign-finst) (#1# . 83032) ext::annotate :lambda-list (common-lisp-user::vis-mod &key common-lisp-user::object common-lisp-user::location) :delete-methods t :documentation "Assign a finst to an object or location." ensure-generic-function)) #1# 83032) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 22 12 14 23 19 6 24 29) #54=#A(t (25) (common-lisp-user::assign-finst ext::location (defmethod common-lisp-user::assign-finst (common-lisp-user::vm common-lisp-user::vision-module) &key common-lisp-user::object common-lisp-user::location) (#1# . 83153) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vm &key common-lisp-user::object common-lisp-user::location) common-lisp-user::vm (t :location :object) common-lisp-user::object common-lisp-user::location *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "ASSIGN-FINST called without a valid object or location" format finish-output common-lisp-user::add-finst #Y(common-lisp-user::assign-finst nil nil (24 45 7 28 8 22 40 2 77 46 9 22 40 2 77 46 10 10 1 76 39 4 10 0 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 18 19 5 19 12 14 11 19 1 20 22 73 38 19 13 2 10 1 39 6 10 1 73 38 4 10 0 73 12 19 2 21 29) #54# #1# 83153) t clos::install-method)) #1# 83153) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::sort-finsts ext::location (defgeneric common-lisp-user::sort-finsts) (#1# . 83391) ext::annotate :lambda-list (common-lisp-user::vis-mod) :delete-methods t :documentation "Sort finsts according to time stamp." ensure-generic-function)) #1# 83391) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #55=#A(t (19) (common-lisp-user::sort-finsts ext::location (defmethod common-lisp-user::sort-finsts (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 83493) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g11557 common-lisp-user::finst-lst < :key common-lisp-user::tstamp sort #:g11558 (setf common-lisp-user::finst-lst) #Y(common-lisp-user::sort-finsts nil nil (24 45 7 26 10 0 45 8 13 1 19 1 9 12 15 10 14 11 15 12 19 4 13 45 14 13 0 13 1 33 15 18 2 43 1 43 1 29) #55# #1# 83493) t clos::install-method)) #1# 83493) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::object-present-p ext::location (defgeneric common-lisp-user::object-present-p) (#1# . 83616) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::obj-id) :delete-methods t :documentation "Returns NIL if the object ID passed to it is no longer in the icon." ensure-generic-function)) #1# 83616) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 17 12 14 18 19 6 19 29) #56=#A(t (20) (common-lisp-user::object-present-p ext::location (defmethod common-lisp-user::object-present-p (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::obj-id) (#1# . 83980) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::obj-id) common-lisp-user::vis-mod common-lisp-user::obj-id common-lisp-user::chunk-synth-feat common-lisp-user::it common-lisp-user::x common-lisp-user::chunk-visicon-entry common-lisp-user::visicon gethash #Y(nil nil nil (24 45 11 26 13 0 19 1 12 12 13 3 19 1 13 12 19 2 14 29) #56# #1# 83980) every #Y(common-lisp-user::object-present-p nil nil (24 45 7 24 45 8 26 13 0 19 1 9 45 10 10 0 39 11 34 15 12 13 0 19 2 16 38 16 13 1 19 1 12 12 13 2 19 1 13 12 19 2 14 43 1 29) #56# #1# 83980) t clos::install-method)) #1# 83980) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::within-move ext::location (defgeneric common-lisp-user::within-move) (#1# . 84297) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::xyz-loc) :delete-methods t :documentation "Return a list of icon feature within the move allowance of loc." ensure-generic-function)) #1# 84297) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 28 12 14 29 19 6 30 29) #57=#A(t (31) (common-lisp-user::within-move ext::location (defmethod common-lisp-user::within-move (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::xyz-loc) (#1# . 85270) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::xyz-loc) common-lisp-user::vis-mod common-lisp-user::xyz-loc common-lisp-user::vis-loc-slots common-lisp-user::coord-slots common-lisp-user::accum common-lisp-user::key common-lisp-user::value common-lisp-user::move-allowance = svref common-lisp-user::fast-chunk-slot-value-fct second third > common-lisp-user::xy-loc common-lisp-user::dist common-lisp-user::pm-pixels-to-angle >= #Y(nil nil nil (24 45 12 24 45 13 26 13 5 19 1 14 12 9 0 19 2 15 39 67 13 4 8 0 17 16 12 13 0 10 3 4 12 19 2 17 12 19 2 15 39 45 13 4 8 1 17 16 12 13 0 10 3 16 18 12 19 2 17 12 19 2 15 39 22 13 4 8 2 17 16 12 13 0 10 3 16 19 12 19 2 17 12 19 2 15 40 48 13 5 19 1 14 12 9 0 19 2 20 39 35 13 5 19 1 14 12 13 0 13 5 19 2 21 12 13 4 19 2 22 12 13 4 8 2 17 16 12 19 2 23 12 19 2 24 73 39 9 13 0 10 2 3 51 2 73 29) #57# #1# 85270) common-lisp-user::visicon maphash #Y(common-lisp-user::within-move nil nil (24 45 7 24 45 8 26 77 13 1 19 1 9 12 46 10 46 11 34 25 12 13 3 19 1 26 17 27 10 0 73 43 2 29) #57# #1# 85270) t clos::install-method)) #1# 85270) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 23 12 14 24 19 6 25 29) #58=#A(t (26) (common-lisp-user::feat-match-xyz ext::location (defmethod common-lisp-user::feat-match-xyz common-lisp-user::feat-list common-lisp-user::xyz-loc common-lisp-user::vis-mod) (#1# . 86110) ext::annotate (t t t) (common-lisp-user::feat-list common-lisp-user::xyz-loc common-lisp-user::vis-mod) common-lisp-user::feat-list common-lisp-user::xyz-loc common-lisp-user::vis-mod svref common-lisp-user::vis-loc-slots common-lisp-user::coord-slots common-lisp-user::z common-lisp-user::y common-lisp-user::x common-lisp-user::outlis si::%dolist-var common-lisp-user::chunk common-lisp-user::fast-chunk-slot-value-fct = second third #Y(common-lisp-user::feat-match-xyz nil nil (24 45 7 24 45 8 24 45 9 26 77 13 1 8 0 17 10 12 13 1 8 1 17 10 12 13 1 8 2 17 10 12 13 0 19 1 11 12 46 12 46 13 46 14 46 15 46 16 10 7 45 17 75 45 18 38 71 10 1 4 51 0 13 3 13 0 10 6 4 12 19 2 19 12 19 2 20 39 35 13 4 13 0 10 6 16 21 12 19 2 19 12 19 2 20 39 17 13 5 13 0 10 6 16 22 12 19 2 19 12 19 2 20 39 8 13 0 10 2 3 51 2 10 1 5 51 1 10 1 40 -73 43 2 10 0 73 43 5 29) #58# #1# 86110) t clos::install-method)) #1# 86110) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::encoding-complete ext::location (defgeneric common-lisp-user::encoding-complete) (#1# . 86615) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc-dmo common-lisp-user::scale &key common-lisp-user::requested) :delete-methods t :documentation "When MOVE-ATTENTION completes, focus on a place with this." ensure-generic-function)) #1# 86615) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 50 12 14 11 19 6 51 29) #59=#A(t (52) (common-lisp-user::encoding-complete ext::location (defmethod common-lisp-user::encoding-complete (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::loc common-lisp-user::scale &key #60=(common-lisp-user::requested t)) (#1# . 87232) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::scale &key #60#) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::scale (t :requested) t common-lisp-user::requested #:g11595 #:g11596 (setf common-lisp-user::moving-attention) :exec common-lisp-user::free :proc common-lisp-user::change-state #:g11597 #:g11598 (setf common-lisp-user::current-marker) common-lisp-user::last-visual-request common-lisp-user::complete-request common-lisp-user::get-obj-at-location common-lisp-user::return-obj common-lisp-user::chunk-visicon-entry common-lisp-user::set-attended :requested common-lisp-user::attend-to-object common-lisp-user::clear-attended #:g11599 #:g11600 (setf common-lisp-user::last-obj) common-lisp-user::visual :ignore-if-full common-lisp-user::set-buffer-failure #:g11601 #:g11602 (setf common-lisp-user::attend-failure) common-lisp-user::no-visual-object-found :maintenance :module :vision :output common-lisp-user::medium :details "No visual-object found" common-lisp-user::schedule-event-now #Y(common-lisp-user::encoding-complete nil nil (24 45 7 24 45 8 24 45 9 28 10 22 40 3 14 11 46 12 10 3 45 13 75 45 14 13 0 13 1 33 15 18 2 43 1 43 1 13 3 14 16 15 17 14 18 15 17 19 5 19 10 3 45 20 10 3 45 21 13 0 13 1 33 22 18 2 43 1 43 1 13 3 19 1 23 12 19 1 24 13 3 13 2 13 1 19 3 25 45 26 10 0 39 28 13 4 13 0 19 1 27 12 19 2 28 13 4 13 0 14 29 13 1 19 4 30 10 0 73 38 81 13 4 19 1 31 10 4 45 32 75 45 33 13 0 13 1 33 34 18 2 43 1 43 1 15 35 14 36 14 11 14 29 13 1 19 5 37 10 4 45 38 11 11 45 39 13 0 13 1 33 40 18 2 43 1 43 1 15 41 14 42 14 11 14 43 14 44 14 45 15 46 14 47 15 48 19 9 49 75 73 43 1 29) #59# #1# 87232) clos::install-method)) #1# 87232) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 15 0 15 24 15 25 19 3 26 1 0 73 29) #61=#A(t (27) (common-lisp-user::icon-entry ext::location (defun common-lisp-user::icon-entry) (#1# . 88143) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::visual-object) common-lisp-user::vis-mod common-lisp-user::visual-object common-lisp-user::screen-pos common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::loc-name common-lisp-user::chunk-visicon-entry common-lisp-user::original common-lisp-user::visicon gethash common-lisp-user::chunk-p-fct common-lisp-user::chunk-name-to-chunk-spec :chunks common-lisp-user::visicon-chunks common-lisp-user::find-matching-chunks common-lisp-user::it #Y(common-lisp-user::icon-entry nil nil (24 45 7 24 45 8 26 13 0 15 9 19 2 10 45 11 13 0 19 1 12 45 13 13 0 13 3 19 1 14 12 19 2 15 39 6 10 0 73 38 86 13 0 19 1 16 39 41 13 0 19 1 17 12 14 18 13 3 19 1 19 12 19 3 20 4 45 21 10 0 39 8 13 0 19 1 12 38 6 13 3 19 1 12 43 1 38 39 13 1 19 1 17 12 14 18 13 3 19 1 19 12 19 3 20 4 45 21 10 0 39 8 13 0 19 1 12 38 6 13 3 19 1 12 43 1 43 2 29) #61# #1# 88143) si::fset function "Given a visual object chunk return the visicon key of the location which it came from
   or the one that's in the visicon that best matches it now, or if there isn't one 
   which matches the 'original' then just return the one associated with the object now" si::set-documentation)) #1# 88143) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 7 12 19 2 8 1 0 73 29) #62=#A(t (9) (common-lisp-user::no-visual-object-found ext::location (defun common-lisp-user::no-visual-object-found) (#1# . 89130) ext::annotate :lambda-list "Dummy function to indicate failure to encode - someone may want to do something with this later" #Y(common-lisp-user::no-visual-object-found nil nil (26 1 6 73 29) #62# #1# 89130) si::fset)) #1# 89130) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 35 12 14 10 19 6 36 29) #63=#A(t (37) (common-lisp-user::attend-to-object ext::location (defmethod common-lisp-user::attend-to-object (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::obj &key #64=(common-lisp-user::requested t)) (#1# . 89268) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::obj &key #64#) common-lisp-user::vis-mod common-lisp-user::obj (t :requested) t common-lisp-user::requested common-lisp-user::visual :time-in-ms :module :vision :priority :requested common-lisp-user::schedule-set-buffer-chunk #:g11615 #:g11616 (setf common-lisp-user::last-obj) common-lisp-user::icon-entry common-lisp-user::finst-lst :key common-lisp-user::id :test equal member common-lisp-user::it #:g11617 common-lisp-user::mp-time-ms #:g11618 (setf common-lisp-user::tstamp) common-lisp-user::add-finst #Y(common-lisp-user::attend-to-object nil nil (24 45 7 24 45 8 28 9 22 40 3 14 10 46 11 15 12 13 1 9 0 14 13 14 10 14 14 14 15 14 16 9 10 14 17 13 0 19 11 18 10 2 45 19 10 2 45 20 13 0 13 1 33 21 18 2 43 1 43 1 13 2 13 1 19 2 22 12 13 2 19 1 23 12 14 24 15 25 14 26 15 27 19 6 28 45 29 10 0 39 25 10 0 4 45 30 19 0 31 45 32 13 0 13 1 33 33 18 2 43 1 43 1 38 8 13 3 13 2 19 2 34 43 1 29) #63# #1# 89268) clos::install-method)) #1# 89268) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-obj-at-location ext::location (defgeneric common-lisp-user::get-obj-at-location) (#1# . 89864) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::scale) :delete-methods t :documentation "Given a location and a scale, return a chunk representing what's there." ensure-generic-function)) #1# 89864) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 21 12 14 22 19 6 23 29) #65=#A(t (24) (common-lisp-user::get-obj-at-location ext::location (defmethod common-lisp-user::get-obj-at-location (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::loc common-lisp-user::scale) (#1# . 90013) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::scale) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::scale common-lisp-user::xyz-loc common-lisp-user::phrase eq common-lisp-user::get-phrase-at common-lisp-user::word common-lisp-user::optimize-p common-lisp-user::get-word-at-noopt common-lisp-user::within-move common-lisp-user::feat-lis common-lisp-user::text-feats common-lisp-user::featlis-to-focus #Y(common-lisp-user::get-obj-at-location nil nil (24 45 7 24 45 8 24 45 9 26 13 1 13 2 19 2 10 45 10 13 1 1 11 17 12 39 10 13 3 13 2 19 2 13 38 66 13 1 1 14 17 12 39 7 13 3 19 1 15 76 39 10 13 3 13 2 19 2 16 38 41 13 3 13 0 19 2 17 45 18 13 2 1 14 17 12 39 8 13 0 19 1 19 51 0 10 0 73 39 10 13 4 13 3 13 0 19 3 20 43 1 43 1 29) #65# #1# 90013) t clos::install-method)) #1# 90013) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 15 0 15 17 15 18 19 3 19 1 0 73 29) #66=#A(t (20) (common-lisp-user::text-feats ext::location (defun common-lisp-user::text-feats) (#1# . 90553) ext::annotate :lambda-list (common-lisp-user::feat-lst) common-lisp-user::feat-lst common-lisp-user::f common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::text eq #Y(nil nil nil (24 45 8 26 13 0 15 9 19 2 10 12 1 11 17 12 76 73 29) #66# #1# 90553) remove-if #Y(common-lisp-user::text-feats nil nil (24 45 7 26 34 13 12 13 0 19 2 14 29) #66# #1# 90553) si::fset function "Given a list, return only those features which are TEXT features." si::set-documentation)) #1# 90553) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::featlis-to-focus ext::location (defgeneric common-lisp-user::featlis-to-focus) (#1# . 90738) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::feat-lis) :delete-methods t :documentation "Given the source location and a list of features, return the DMO that should be the focus." ensure-generic-function)) #1# 90738) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 25 12 14 26 19 6 27 29) #67=#A(t (28) (common-lisp-user::featlis-to-focus ext::location (defmethod common-lisp-user::featlis-to-focus (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::loc common-lisp-user::feat-lis) (#1# . 90942) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::feat-lis) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::feat-lis common-lisp-user::chunk-visicon-entry common-lisp-user::visicon gethash common-lisp-user::it common-lisp-user::chunk-p-fct common-lisp-user::find-best-feature common-lisp-user::best-feature common-lisp-user::xyz-loc common-lisp-user::feat-match-xyz common-lisp-user::featlis-to-chunks common-lisp-user::dmo-lis common-lisp-user::determine-focus-dmo common-lisp-user::return-chunk common-lisp-user::screen-pos common-lisp-user::set-chunk-slot-value-fct #Y(common-lisp-user::featlis-to-focus nil nil (24 45 7 24 45 8 24 45 9 26 13 2 13 0 13 1 19 1 10 12 13 2 19 1 11 12 19 2 12 45 13 10 0 39 18 13 0 19 1 14 39 6 10 0 73 38 4 10 2 73 38 4 10 2 73 12 43 1 19 3 15 45 16 13 3 13 1 13 0 13 3 19 2 17 12 13 3 19 3 18 12 19 2 19 45 20 13 4 13 0 13 1 19 3 21 45 22 10 0 39 10 13 0 15 23 13 4 19 3 24 10 0 73 43 3 29) #67# #1# 90942) t clos::install-method)) #1# 90942) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::determine-focus-dmo ext::location (defgeneric common-lisp-user::determine-focus-dmo) (#1# . 91839) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::dmo-lst common-lisp-user::feat) :delete-methods t :documentation "Determine which DMO corresponds to <feat>, which should be the 'best' feature." ensure-generic-function)) #1# 91839) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 27 12 14 28 19 6 29 29) #68=#A(t (30) (common-lisp-user::determine-focus-dmo ext::location (defmethod common-lisp-user::determine-focus-dmo (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::dmo-lis list) common-lisp-user::feat) (#1# . 92274) ext::annotate (common-lisp-user::vision-module list t) (common-lisp-user::vis-mod common-lisp-user::dmo-lis common-lisp-user::feat) common-lisp-user::vis-mod common-lisp-user::dmo-lis common-lisp-user::feat length = common-lisp-user::chunk-visicon-entry :key :test equal member common-lisp-user::it *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Multiple matching chunks found for attention shift.  This should not happen.  Please report the warning to Dan." format finish-output #Y(common-lisp-user::determine-focus-dmo nil nil (24 45 7 24 45 8 24 45 9 26 57 0 60 92 9 1 10 2 16 10 12 19 2 11 39 7 10 2 4 73 36 0 13 1 19 1 12 12 13 2 14 13 15 12 14 14 15 15 19 6 16 45 17 10 0 39 7 10 0 4 73 38 40 14 18 15 19 19 0 20 73 39 12 19 0 21 16 10 12 9 1 19 2 22 12 19 0 23 12 15 24 19 5 25 12 14 18 19 1 26 22 73 43 1 63 29) #68# #1# 92274) t clos::install-method)) #1# 92274) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::featlis-to-chunks ext::location (defgeneric common-lisp-user::featlis-to-chunks) (#1# . 92685) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::feat-lis) :delete-methods t :documentation "Given a list of features, make a chunk for each." ensure-generic-function)) #1# 92685) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 33 12 14 34 19 6 35 29) #69=#A(t (36) (common-lisp-user::featlis-to-chunks ext::location (defmethod common-lisp-user::featlis-to-chunks (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::feat-lis list)) (#1# . 93084) ext::annotate (common-lisp-user::vision-module list) (common-lisp-user::vis-mod common-lisp-user::feat-lis) common-lisp-user::vis-mod common-lisp-user::feat-lis common-lisp-user::chunk-lis common-lisp-user::primitive-feats si::%dolist-var common-lisp-user::feat common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::char-primitive eq common-lisp-user::convert-loc-to-object common-lisp-user::obj common-lisp-user::chunk-p-fct common-lisp-user::chunk-visicon-entry common-lisp-user::chunk-visicon-entry-setf *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "vis-loc-to-obj returned ~S which is not a chunk." format finish-output common-lisp-user::synthesize-letter #Y(common-lisp-user::featlis-to-chunks nil nil (24 45 7 24 45 8 26 77 77 46 9 46 10 10 2 45 11 75 45 12 38 108 10 1 4 51 0 13 0 15 13 19 2 14 12 1 15 17 16 39 10 13 0 10 2 3 51 2 38 75 13 0 19 1 17 45 18 13 0 19 1 19 39 21 13 0 13 1 19 1 20 12 19 2 21 13 0 10 4 3 51 4 38 39 14 22 15 23 19 0 24 73 39 12 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 0 19 6 30 14 22 19 1 31 43 1 10 1 5 51 1 10 1 40 -110 43 2 10 0 39 14 13 3 13 0 19 2 32 12 10 1 3 51 1 10 1 73 43 2 29) #69# #1# 93084) t clos::install-method)) #1# 93084) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-word-at-noopt ext::location (defgeneric common-lisp-user::get-word-at-noopt) (#1# . 93838) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc-dmo) :delete-methods t :documentation "Synthesize a word at the given location and synch it with the location." ensure-generic-function)) #1# 93838) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 20 19 6 21 29) #70=#A(t (22) (common-lisp-user::get-word-at-noopt ext::location (defmethod common-lisp-user::get-word-at-noopt (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::loc symbol)) (#1# . 94372) ext::annotate (common-lisp-user::vision-module symbol) (common-lisp-user::vis-mod common-lisp-user::loc) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::xyz-loc common-lisp-user::adjoining-led-locs common-lisp-user::xmax common-lisp-user::xmin common-lisp-user::locs - common-lisp-user::synthesize-word common-lisp-user::rtn-chunk common-lisp-user::screen-pos common-lisp-user::set-chunk-slot-value-fct #Y(common-lisp-user::get-word-at-noopt nil nil (24 45 7 24 45 8 26 13 0 13 1 19 2 9 45 9 13 2 13 0 19 2 10 47 2 11 47 1 12 45 13 10 0 73 39 44 13 5 13 0 13 2 13 1 19 2 14 12 13 3 19 4 15 45 16 10 0 73 39 18 13 0 15 17 13 5 19 3 18 13 0 13 2 13 3 72 3 43 1 43 3 43 1 29) #70# #1# 94372) t clos::install-method)) #1# 94372) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 18 12 14 19 19 6 20 29) #71=#A(t (21) (common-lisp-user::get-word-at-noopt ext::location (defmethod common-lisp-user::get-word-at-noopt (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::loc vector)) (#1# . 94796) ext::annotate (common-lisp-user::vision-module vector) (common-lisp-user::vis-mod common-lisp-user::loc) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::adjoining-led-locs common-lisp-user::xmax common-lisp-user::xmin common-lisp-user::locs - common-lisp-user::synthesize-word common-lisp-user::rtn-chunk common-lisp-user::screen-pos common-lisp-user::set-chunk-slot-value-fct #Y(common-lisp-user::get-word-at-noopt nil nil (24 45 7 24 45 8 26 13 1 13 0 19 2 9 47 2 10 47 1 11 45 12 10 0 73 39 44 13 4 13 0 13 2 13 1 19 2 13 12 13 3 19 4 14 45 15 10 0 73 39 18 13 0 15 16 13 4 19 3 17 13 0 13 2 13 3 72 3 43 1 43 3 29) #71# #1# 94796) t clos::install-method)) #1# 94796) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-word-dmos-noopt ext::location (defgeneric common-lisp-user::get-word-dmos-noopt) (#1# . 95160) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::x-lst common-lisp-user::y common-lisp-user::z) :delete-methods t :documentation "Return a list of DMOs representing words at the given xlocs, with optimizing off." ensure-generic-function)) #1# 95160) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 23 12 14 24 19 6 25 29) #72=#A(t (26) (common-lisp-user::get-word-dmos-noopt ext::location (defmethod common-lisp-user::get-word-dmos-noopt (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::x-ls list) common-lisp-user::y common-lisp-user::z) (#1# . 95674) ext::annotate (common-lisp-user::vision-module list t t) (common-lisp-user::vis-mod common-lisp-user::x-ls common-lisp-user::y common-lisp-user::z) common-lisp-user::vis-mod common-lisp-user::x-ls common-lisp-user::y common-lisp-user::z common-lisp-user::curr-x common-lisp-user::rtn-dmos si::%dolist-var common-lisp-user::x > vector common-lisp-user::get-word-at-noopt max min common-lisp-user::word nreverse remove #Y(common-lisp-user::get-word-dmos-noopt nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 77 9 -1 46 11 46 12 10 4 45 13 75 45 14 38 56 10 1 4 51 0 13 0 13 3 19 2 15 39 37 13 7 13 0 13 5 13 4 19 3 16 12 19 2 17 47 2 18 47 1 19 45 20 13 0 10 5 3 51 5 10 2 51 6 43 3 10 1 5 51 1 10 1 40 -58 75 51 0 77 10 2 16 21 12 19 2 22 43 2 43 2 29) #72# #1# 95674) t clos::install-method)) #1# 95674) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-word-dmos-opt ext::location (defgeneric common-lisp-user::get-word-dmos-opt) (#1# . 96084) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::x-lst common-lisp-user::y common-lisp-user::z) :delete-methods t :documentation "Return a list of DMOs representing words at the given xlocs, with optimizing on." ensure-generic-function)) #1# 96084) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 22 12 14 23 19 6 24 29) #73=#A(t (25) (common-lisp-user::get-word-dmos-opt ext::location (defmethod common-lisp-user::get-word-dmos-opt (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::x-ls list) common-lisp-user::y common-lisp-user::z) (#1# . 96466) ext::annotate (common-lisp-user::vision-module list t t) (common-lisp-user::vis-mod common-lisp-user::x-ls common-lisp-user::y common-lisp-user::z) common-lisp-user::vis-mod common-lisp-user::x-ls common-lisp-user::y common-lisp-user::z common-lisp-user::accum si::%dolist-var common-lisp-user::x common-lisp-user::visicon-chunks vector common-lisp-user::feat-match-xyz common-lisp-user::text-feats common-lisp-user::feat common-lisp-user::featlis-to-chunks append nreverse #Y(common-lisp-user::get-word-dmos-opt nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 75 45 11 10 3 45 12 75 45 13 38 77 10 1 4 51 0 13 6 19 1 14 12 13 0 13 4 13 3 19 3 15 12 13 6 19 3 16 12 19 1 17 45 12 75 45 18 38 29 10 1 4 51 0 13 8 10 0 6 1 12 19 2 19 12 13 4 19 2 20 51 4 10 1 5 51 1 10 1 40 -31 43 2 10 1 5 51 1 10 1 40 -79 75 51 0 10 2 16 21 43 2 43 1 29) #73# #1# 96466) t clos::install-method)) #1# 96466) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::synthesize-letter ext::location (defgeneric common-lisp-user::synthesize-letter) (#1# . 96770) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::feats) :delete-methods t :documentation "Build a DMO representing a letter from a list of LED features." ensure-generic-function)) #1# 96770) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 39 12 14 40 19 6 41 29) #74=#A(t (42) (common-lisp-user::synthesize-letter ext::location (defmethod common-lisp-user::synthesize-letter (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::feats list)) (#1# . 97274) ext::annotate (common-lisp-user::vision-module list) (common-lisp-user::vis-mod common-lisp-user::feats) common-lisp-user::vis-mod common-lisp-user::feats common-lisp-user::base-feat common-lisp-user::active-cfs common-lisp-user::x common-lisp-user::value common-lisp-user::chunk-slot-value-fct #Y(nil nil nil (24 45 11 26 13 0 15 12 19 2 13 29) #74# #1# 97274) mapcar common-lisp-user::prob-best-character common-lisp-user::letter common-lisp-user::return-chunk common-lisp-user::color #Y(nil nil nil (24 45 11 26 13 0 15 19 19 2 13 29) #74# #1# 97274) common-lisp-user::colors count #Y(nil nil nil (24 45 11 26 13 0 13 0 13 1 19 2 22 3 73 29) #74# #1# 97274) remove-duplicates > :key cdr sort caar common-lisp-user::isa common-lisp-user::text common-lisp-user::define-chunks-fct common-lisp-user::chunk-visual-feature-name-setf common-lisp-user::chunk-visicon-entry common-lisp-user::chunk-visicon-entry-setf #Y(nil nil nil (24 45 11 26 13 0 19 1 34 6 1 73 29) #74# #1# 97274) mapcan common-lisp-user::chunk-synth-feat-setf #Y(common-lisp-user::synthesize-letter nil nil (24 45 7 24 45 8 26 10 0 4 45 9 13 2 19 1 10 12 34 14 12 13 1 19 2 15 12 19 2 16 45 17 75 45 18 34 20 12 13 3 19 2 15 45 21 34 23 12 13 0 19 1 24 12 19 2 15 12 15 25 14 26 15 27 19 4 28 16 29 45 19 15 30 15 31 15 12 13 3 15 19 10 0 6 6 6 1 12 19 1 32 4 51 2 13 2 13 4 19 2 33 13 2 13 4 19 1 34 12 19 2 35 13 2 34 36 12 13 5 19 2 37 12 19 2 38 10 2 73 43 5 29) #74# #1# 97274) t clos::install-method)) #1# 97274) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::synthesize-word ext::location (defgeneric common-lisp-user::synthesize-word) (#1# . 98108) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc-lis common-lisp-user::width common-lisp-user::center) :delete-methods t :documentation "Build a DMO representing a word from a location." ensure-generic-function)) #1# 98108) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 50 12 14 51 19 6 52 29) #75=#A(t (53) (common-lisp-user::synthesize-word ext::location (defmethod common-lisp-user::synthesize-word (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::loc-lis list) (common-lisp-user::width number) (common-lisp-user::center vector)) (#1# . 98481) ext::annotate (common-lisp-user::vision-module list number vector) (common-lisp-user::vis-mod common-lisp-user::loc-lis common-lisp-user::width common-lisp-user::center) common-lisp-user::vis-mod common-lisp-user::loc-lis common-lisp-user::width common-lisp-user::center common-lisp-user::used-feats common-lisp-user::letter-chunks common-lisp-user::return-chunk si::%dolist-var common-lisp-user::xloc common-lisp-user::visicon-chunks common-lisp-user::feat-match-xyz common-lisp-user::feats common-lisp-user::synthesize-letter common-lisp-user::letter-chunk common-lisp-user::value common-lisp-user::chunk-slot-value-fct stringp append common-lisp-user::x common-lisp-user::color #Y(nil nil nil (24 45 25 26 13 0 15 26 19 2 22 29) #75# #1# 98481) mapcar common-lisp-user::colors count #Y(nil nil nil (24 45 25 26 13 0 13 0 13 1 19 2 30 3 73 29) #75# #1# 98481) remove-duplicates > :key cdr sort caar nreverse common-lisp-user::isa common-lisp-user::text #Y(nil nil nil (24 45 25 26 13 0 15 21 19 2 22 29) #75# #1# 98481) common-lisp-user::word-accum common-lisp-user::define-chunks-fct common-lisp-user::chunk-visicon-entry common-lisp-user::chunk-visicon-entry-setf common-lisp-user::chunk-visual-feature-name-setf #Y(nil nil nil (24 45 25 26 13 0 19 1 44 6 1 73 29) #75# #1# 98481) mapcan common-lisp-user::chunk-synth-feat-setf #Y(common-lisp-user::synthesize-word nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 77 77 77 46 11 46 12 46 13 10 5 45 14 75 45 15 38 64 10 1 4 51 0 13 8 19 1 16 12 13 0 13 8 19 3 17 45 18 13 9 13 0 19 2 19 45 20 13 0 15 21 19 2 22 16 23 39 17 13 0 10 5 3 51 5 13 1 13 6 19 2 24 51 6 43 2 10 1 5 51 1 10 1 40 -66 43 2 10 1 73 39 117 34 27 12 13 1 19 2 28 45 29 34 31 12 13 0 19 1 32 12 19 2 28 12 15 33 14 34 15 35 19 4 36 16 37 45 26 10 3 16 38 51 3 15 39 15 40 15 26 13 0 15 21 34 41 12 13 3 19 2 28 12 19 1 42 6 6 6 1 12 19 1 43 4 51 2 13 2 10 4 4 12 19 1 44 12 19 2 45 13 2 10 4 4 12 19 2 46 13 2 34 47 12 13 4 19 2 48 12 19 2 49 10 2 73 43 2 43 3 29) #75# #1# 98481) t clos::install-method)) #1# 98481) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 15 0 15 15 15 16 19 3 17 1 0 73 29) #76=#A(t (18) (common-lisp-user::word-accum ext::location (defun common-lisp-user::word-accum) (#1# . 99961) ext::annotate :lambda-list (common-lisp-user::lis) common-lisp-user::lis common-lisp-user::accum si::%dolist-var common-lisp-user::item common-lisp-user::mkstr string-downcase #Y(common-lisp-user::word-accum nil nil (24 45 7 26 10 0 4 45 8 10 1 5 45 9 75 45 10 38 20 10 1 4 51 0 13 2 13 0 19 2 11 51 2 10 1 5 51 1 10 1 40 -22 75 51 0 13 2 19 1 12 43 2 43 1 29) #76# #1# 99961) si::fset function "Accumulate a list of letters into a word, and downcase it." si::set-documentation)) #1# 99961) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 21 12 14 22 19 6 23 29) #77=#A(t (24) (common-lisp-user::get-phrase-at ext::location (defmethod common-lisp-user::get-phrase-at (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::loc symbol)) (#1# . 100174) ext::annotate (common-lisp-user::vision-module symbol) (common-lisp-user::vis-mod common-lisp-user::loc) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::vis-loc-slots second common-lisp-user::xy-loc svref common-lisp-user::define-chunk-spec-fct :chunks common-lisp-user::visicon-chunks common-lisp-user::find-matching-chunks common-lisp-user::it common-lisp-user::synthesize-phrase #Y(common-lisp-user::get-phrase-at nil nil (24 45 7 24 45 8 26 15 9 15 10 13 1 19 1 11 16 12 12 13 0 13 1 19 2 13 12 8 1 17 14 6 4 12 19 1 15 12 14 16 13 1 19 1 17 12 19 3 18 45 19 10 0 39 12 13 2 13 0 13 1 19 3 20 38 3 75 73 43 1 29) #77# #1# 100174) t clos::install-method)) #1# 100174) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::synthesize-phrase ext::location (defgeneric common-lisp-user::synthesize-phrase) (#1# . 100686) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::feature-locs common-lisp-user::loc) :delete-methods t :documentation "Build a DMO representing a phrase." ensure-generic-function)) #1# 100686) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 63 12 14 64 19 6 65 29) #78=#A(t (66) (common-lisp-user::synthesize-phrase ext::location (defmethod common-lisp-user::synthesize-phrase (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::feature-locs list) (common-lisp-user::loc symbol)) (#1# . 100803) ext::annotate (common-lisp-user::vision-module list symbol) (common-lisp-user::vis-mod common-lisp-user::feature-locs common-lisp-user::loc) common-lisp-user::vis-mod common-lisp-user::feature-locs common-lisp-user::loc common-lisp-user::xyz-loc common-lisp-user::vis-loc-slots common-lisp-user::x-slot common-lisp-user::x common-lisp-user::chunk-slot-value-fct #Y(nil nil nil (24 45 13 26 13 0 13 1 19 2 14 29) #78# #1# 100803) mapcar common-lisp-user::x-locs common-lisp-user::word-chunks common-lisp-user::words common-lisp-user::colors common-lisp-user::return-chunk remove-duplicates < sort common-lisp-user::optimize-p svref common-lisp-user::get-word-dmos-opt common-lisp-user::get-word-dmos-noopt common-lisp-user::value #Y(nil nil nil (24 45 13 26 13 0 15 29 19 2 14 29) #78# #1# 100803) si::%dolist-var common-lisp-user::w common-lisp-user::color common-lisp-user::c assoc common-lisp-user::it #:g11843 #:g11845 + #:g11844 rplacd #:g11847 nconc common-lisp-user::isa common-lisp-user::phrase! common-lisp-user::phrase-accum common-lisp-user::objects #Y(nil nil nil (24 45 13 26 13 0 15 33 19 2 14 29) #78# #1# 100803) max cdr apply rassoc common-lisp-user::screen-pos common-lisp-user::define-chunks-fct common-lisp-user::chunk-visicon-entry common-lisp-user::chunk-visicon-entry-setf common-lisp-user::chunk-visual-feature-name-setf #Y(nil nil nil (24 45 13 26 13 0 19 1 55 6 1 73 29) #78# #1# 100803) mapcan common-lisp-user::chunk-synth-feat #Y(nil nil nil (24 45 13 26 13 0 19 1 60 29) #78# #1# 100803) common-lisp-user::chunk-synth-feat-setf #Y(common-lisp-user::synthesize-phrase nil nil (24 45 7 24 45 8 24 45 9 26 13 0 13 2 19 2 10 45 10 13 3 19 1 11 4 45 12 34 15 12 13 3 19 2 16 45 17 75 45 18 75 45 19 75 45 20 75 45 21 13 4 19 1 22 12 15 23 19 2 24 51 4 13 9 19 1 25 39 26 13 9 13 4 13 6 8 1 17 26 12 13 6 8 2 17 26 12 19 4 27 51 3 38 24 13 9 13 4 13 6 8 1 17 26 12 13 6 8 2 17 26 12 19 4 28 51 3 10 3 73 39 234 34 30 12 13 3 19 2 16 51 2 10 3 45 31 75 45 32 38 88 10 1 4 51 0 13 0 15 33 19 2 14 45 34 13 0 13 4 19 2 35 45 36 10 0 39 32 10 0 45 37 8 1 45 38 10 1 5 12 13 0 19 2 39 45 40 13 2 10 0 17 41 10 0 43 3 38 21 13 1 8 1 3 6 1 45 42 13 6 13 0 19 2 43 51 6 43 1 43 1 43 1 10 1 5 51 1 10 1 40 -90 43 2 15 44 15 45 15 29 13 2 19 1 46 12 15 47 13 3 15 20 34 48 12 13 3 19 2 16 12 15 19 13 2 15 33 15 49 15 50 13 1 19 2 16 12 19 2 51 12 13 1 19 2 52 4 12 15 53 10 7 6 14 6 1 12 19 1 54 4 51 0 13 0 13 7 19 1 55 12 19 2 56 13 0 13 7 19 2 57 13 0 13 9 19 1 25 39 11 34 58 12 13 3 19 2 59 38 9 34 61 12 13 3 19 2 59 12 19 2 62 10 0 73 43 7 29) #78# #1# 100803) t clos::install-method)) #1# 100803) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 15 0 15 15 15 16 19 3 17 1 0 73 29) #79=#A(t (18) (common-lisp-user::phrase-accum ext::location (defun common-lisp-user::phrase-accum) (#1# . 102645) ext::annotate :lambda-list (common-lisp-user::lis) common-lisp-user::lis common-lisp-user::accum si::%dolist-var common-lisp-user::item " " common-lisp-user::mkstr #Y(common-lisp-user::phrase-accum nil nil (24 45 7 26 10 0 4 45 8 10 1 5 45 9 75 45 10 38 22 10 1 4 51 0 13 2 15 11 13 0 19 3 12 51 2 10 1 5 51 1 10 1 40 -24 75 51 0 10 2 73 43 2 43 1 29) #79# #1# 102645) si::fset function "Accumulate a list of words into a phrase." si::set-documentation)) #1# 102645) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::adjoining-led-locs ext::location (defgeneric common-lisp-user::adjoining-led-locs) (#1# . 102828) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::loc) :delete-methods t :documentation "Return a list of locations adjoining <loc>, as well as the max and min x locs." ensure-generic-function)) #1# 102828) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 35 12 14 36 19 6 37 29) #80=#A(t (38) (common-lisp-user::adjoining-led-locs ext::location (defmethod common-lisp-user::adjoining-led-locs (common-lisp-user::vis-mod common-lisp-user::vision-module) (common-lisp-user::loc vector)) (#1# . 103706) ext::annotate (common-lisp-user::vision-module vector) (common-lisp-user::vis-mod common-lisp-user::loc) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::visicon-chunks common-lisp-user::feat-match-xyz common-lisp-user::vis-loc-slots second common-lisp-user::y-slot common-lisp-user::feat common-lisp-user::feat-ls #:g11884 common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::char-primitive eq common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::define-chunk-spec-fct :chunks common-lisp-user::find-matching-chunks common-lisp-user::left common-lisp-user::left-adjoining-led-locs common-lisp-user::xmin common-lisp-user::lowlocs common-lisp-user::right common-lisp-user::right-adjoining-led-locs common-lisp-user::xmax common-lisp-user::hilocs append #Y(common-lisp-user::adjoining-led-locs nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 13 1 19 3 10 12 77 13 1 19 1 11 16 12 12 46 13 46 14 46 15 38 41 10 0 45 16 10 0 4 12 10 0 5 51 0 10 0 51 1 22 43 1 51 1 13 1 15 17 19 2 18 12 1 19 17 20 76 39 4 75 51 1 10 1 76 39 3 10 0 76 39 -49 10 1 73 39 99 15 21 15 22 13 2 13 1 13 2 19 2 18 6 4 12 19 1 23 12 14 24 13 4 19 1 9 12 19 3 25 51 0 13 0 13 4 13 1 15 26 19 2 18 12 77 19 4 27 47 1 28 45 29 13 2 13 6 13 3 15 30 19 2 18 12 77 19 4 31 47 1 32 45 33 13 2 10 7 6 1 12 13 0 19 3 34 12 13 3 13 1 72 3 43 2 43 2 43 3 29) #80# #1# 103706) t clos::install-method)) #1# 103706) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::right-adjoining-led-locs ext::location (defgeneric common-lisp-user::right-adjoining-led-locs) (#1# . 104664) ext::annotate :lambda-list (common-lisp-user::feat-ls common-lisp-user::vis-mod common-lisp-user::x common-lisp-user::accum) :delete-methods t :documentation "Return a list of all the right-adjoining locs with led features and the min x." ensure-generic-function)) #1# 104664) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 25 12 14 26 19 6 27 29) #81=#A(t (28) (common-lisp-user::right-adjoining-led-locs ext::location (defmethod common-lisp-user::right-adjoining-led-locs (common-lisp-user::feat-ls list) (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::x common-lisp-user::accum) (#1# . 105009) ext::annotate (list common-lisp-user::vision-module t t) (common-lisp-user::feat-ls common-lisp-user::vis-mod common-lisp-user::x common-lisp-user::accum) common-lisp-user::feat-ls common-lisp-user::vis-mod common-lisp-user::x common-lisp-user::accum si::%dolist-var common-lisp-user::feat common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::char-primitive eq 1.5 common-lisp-user::left - abs > common-lisp-user::right common-lisp-user::xyz-loc append #Y(common-lisp-user::right-adjoining-led-locs nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 57 0 60 103 10 4 45 11 75 45 12 38 81 10 1 4 51 0 13 0 15 13 19 2 14 12 1 15 17 16 39 57 15 17 13 0 15 18 19 2 14 12 13 4 19 2 19 16 20 12 19 2 21 39 34 13 6 13 5 13 0 15 22 19 2 14 12 13 3 13 0 13 5 19 2 23 6 1 12 19 2 24 12 19 4 0 36 2 10 1 5 51 1 10 1 40 -83 43 2 13 1 13 2 72 2 63 29) #81# #1# 105009) t clos::install-method)) #1# 105009) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::left-adjoining-led-locs ext::location (defgeneric common-lisp-user::left-adjoining-led-locs) (#1# . 105490) ext::annotate :lambda-list (common-lisp-user::feat-ls common-lisp-user::vis-mod common-lisp-user::x common-lisp-user::accum) :delete-methods t :documentation "Return a list of all the left-adjoining locs with led features and the max x." ensure-generic-function)) #1# 105490) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 25 12 14 26 19 6 27 29) #82=#A(t (28) (common-lisp-user::left-adjoining-led-locs ext::location (defmethod common-lisp-user::left-adjoining-led-locs (common-lisp-user::feat-ls list) (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::x common-lisp-user::accum) (#1# . 105831) ext::annotate (list common-lisp-user::vision-module t t) (common-lisp-user::feat-ls common-lisp-user::vis-mod common-lisp-user::x common-lisp-user::accum) common-lisp-user::feat-ls common-lisp-user::vis-mod common-lisp-user::x common-lisp-user::accum si::%dolist-var common-lisp-user::feat common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::char-primitive eq 1.5 common-lisp-user::right - abs > common-lisp-user::left common-lisp-user::xyz-loc append #Y(common-lisp-user::left-adjoining-led-locs nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 57 0 60 103 10 4 45 11 75 45 12 38 81 10 1 4 51 0 13 0 15 13 19 2 14 12 1 15 17 16 39 57 15 17 13 0 15 18 19 2 14 12 13 4 19 2 19 16 20 12 19 2 21 39 34 13 6 13 5 13 0 15 22 19 2 14 12 13 0 13 5 19 2 23 6 1 12 13 3 19 2 24 12 19 4 0 36 2 10 1 5 51 1 10 1 40 -83 43 2 13 1 13 2 72 2 63 29) #82# #1# 105831) t clos::install-method)) #1# 105831) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::find-best-feature ext::location (defgeneric common-lisp-user::find-best-feature) (#1# . 106308) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::feat-lst common-lisp-user::fs) :delete-methods t :documentation "Given a list of features and a visicon entry or visual-loc, return the 'best' feature." ensure-generic-function)) #1# 106308) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 37 12 14 38 19 6 39 29) #83=#A(t (40) (common-lisp-user::find-best-feature ext::location (defmethod common-lisp-user::find-best-feature common-lisp-user::vis-mod (common-lisp-user::feat-lis list) common-lisp-user::entry) (#1# . 106822) ext::annotate (t list t) (common-lisp-user::vis-mod common-lisp-user::feat-lis common-lisp-user::entry) common-lisp-user::vis-mod common-lisp-user::feat-lis common-lisp-user::entry find common-lisp-user::it common-lisp-user::found-locs gethash :chunks :variable-char #\& common-lisp-user::find-matching-chunks common-lisp-user::vis-loc-slots common-lisp-user::positions common-lisp-user::spec common-lisp-user::chunk-filled-slots-list-fct si::%dolist-var common-lisp-user::s common-lisp-user::fast-chunk-slot-value-fct common-lisp-user::x common-lisp-user::c common-lisp-user::chunk-slot-value-fct common-lisp-user::chunk-slot-equal #:g11910 + #Y(nil nil nil (24 45 25 26 8 0 45 26 10 2 45 22 75 45 23 38 45 10 1 4 51 0 10 0 5 12 13 3 10 0 4 12 19 2 27 12 19 2 28 39 16 8 1 45 29 13 3 13 0 19 2 30 51 3 43 1 10 1 5 51 1 10 1 40 -47 75 51 0 10 2 73 43 2 43 1 29) #83# #1# 106822) common-lisp-user::objs-max-val common-lisp-user::matches common-lisp-user::xyz-loc common-lisp-user::nearest-feat common-lisp-user::random-item #Y(common-lisp-user::find-best-feature nil nil (24 45 7 24 45 8 24 45 9 26 13 0 13 1 19 2 10 45 11 10 0 39 6 10 0 73 38 158 13 1 13 3 19 1 12 12 19 2 13 45 11 10 0 39 16 13 0 14 14 13 3 14 15 15 16 19 5 17 38 76 77 13 4 19 1 18 12 46 19 46 20 13 4 19 1 21 45 22 75 45 23 38 37 10 1 4 51 0 13 0 13 3 19 2 10 76 39 17 13 0 13 6 13 0 19 2 24 3 12 10 2 3 51 2 10 1 5 51 1 10 1 40 -39 43 2 13 5 34 31 12 19 2 32 43 2 43 1 45 33 10 0 39 22 13 4 13 0 13 2 13 4 19 2 34 12 19 3 35 12 19 1 36 38 20 13 4 13 3 13 2 13 4 19 2 34 12 19 3 35 12 19 1 36 43 1 43 1 29) #83# #1# 106822) t clos::install-method)) #1# 106822) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 15 0 15 24 15 25 19 3 26 1 0 73 29) #84=#A(t (27) (common-lisp-user::nearest-feat ext::location (defun common-lisp-user::nearest-feat) (#1# . 108016) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::feat-list common-lisp-user::xyz-loc) common-lisp-user::vis-mod common-lisp-user::feat-list common-lisp-user::xyz-loc vectorp common-lisp-user::x common-lisp-user::chunk-visicon-entry common-lisp-user::visicon gethash common-lisp-user::it #Y(nil nil nil (24 45 11 26 13 0 19 1 12 12 13 3 19 1 13 12 19 2 14 45 15 10 0 39 8 10 0 6 1 73 38 3 75 73 43 1 29) #84# #1# 108016) mapcan common-lisp-user::feat-chunks common-lisp-user::dist #Y(nil nil nil (24 45 11 26 13 0 13 4 19 2 9 12 13 2 19 2 19 29) #84# #1# 108016) common-lisp-user::objs-min-val #Y(common-lisp-user::nearest-feat nil nil (24 45 7 24 45 8 24 45 9 26 10 0 16 10 76 39 10 13 0 13 2 19 2 9 51 0 10 1 73 39 21 34 16 12 13 1 19 2 17 45 18 13 0 34 20 12 19 2 21 43 1 29) #84# #1# 108016) si::fset function "Returns list of features nearest to a given location" si::set-documentation)) #1# 108016) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::start-tracking ext::location (defgeneric common-lisp-user::start-tracking) (#1# . 108440) ext::annotate :lambda-list (common-lisp-user::vis-mod) :delete-methods t :documentation "Begin tracking currently attended object" ensure-generic-function)) #1# 108440) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 48 12 14 49 19 6 50 29) #85=#A(t (51) (common-lisp-user::start-tracking ext::location (defmethod common-lisp-user::start-tracking (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 110887) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::currently-attended *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Request to track object but nothing is currently being attended." format finish-output :exec common-lisp-user::busy common-lisp-user::change-state #:g11943 common-lisp-user::visicon gethash common-lisp-user::chunk-visual-object #:g11944 (setf common-lisp-user::tracked-obj) #:g11945 #:g11946 (setf common-lisp-user::tracked-obj-lastloc) common-lisp-user::visual common-lisp-user::buffer-read common-lisp-user::vis-obj common-lisp-user::chunk-copied-from-fct common-lisp-user::last-obj eq #:g11947 #:g11948 (setf common-lisp-user::tracked-obj-last-obj) #:g11949 #:g11950 (setf common-lisp-user::tracked-obj-last-obj) #:g11951 #:g11952 (setf common-lisp-user::tracked-obj-last-feat) common-lisp-user::update-tracking-mth common-lisp-user::tracked-obj #Y(common-lisp-user::start-tracking nil nil (24 45 7 26 13 0 19 1 8 76 39 42 14 9 15 10 19 0 11 73 39 12 19 0 12 16 13 12 9 1 19 2 14 12 19 0 15 12 15 16 19 5 17 12 14 9 19 1 18 22 73 38 168 13 0 14 19 15 20 19 3 21 10 0 45 22 13 1 19 1 8 12 13 1 19 1 23 12 19 2 24 12 19 1 25 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 0 45 28 75 45 29 13 0 13 1 33 30 18 2 43 1 43 1 15 31 19 1 32 45 33 10 0 39 14 13 0 19 1 34 12 13 1 19 1 35 17 36 39 23 10 1 45 37 10 1 45 38 13 0 13 1 33 39 18 2 43 1 43 1 38 20 10 1 45 40 75 45 41 13 0 13 1 33 42 18 2 43 1 43 1 43 1 10 0 45 43 13 1 19 1 8 45 44 13 0 13 1 33 45 18 2 43 1 43 1 13 0 19 1 46 13 0 19 1 47 29) #85# #1# 110887) t clos::install-method)) #1# 110887) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 21 12 14 22 19 6 23 29) #86=#A(t (24) (common-lisp-user::update-tracking-loc-chunk ext::location (defmethod common-lisp-user::update-tracking-loc-chunk (common-lisp-user::vis-mod common-lisp-user::vision-module) &optional #87=(common-lisp-user::modify nil)) (#1# . 111875) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod &optional #87#) common-lisp-user::vis-mod common-lisp-user::modify common-lisp-user::visual-location common-lisp-user::buffer-read common-lisp-user::vis-loc #:g11965 #:g11966 (setf common-lisp-user::tracked-obj-lastloc) #:g11967 #:g11968 (setf common-lisp-user::current-marker) common-lisp-user::visual common-lisp-user::screen-pos common-lisp-user::mod-buffer-chunk #Y(common-lisp-user::update-tracking-loc-chunk nil nil (24 45 7 25 40 2 77 46 8 26 15 9 19 1 10 45 11 10 2 45 12 10 1 45 13 13 0 13 1 33 14 18 2 43 1 43 1 10 2 45 15 10 1 45 16 13 0 13 1 33 17 18 2 43 1 43 1 10 1 73 39 13 15 18 15 19 10 0 6 2 12 19 2 20 43 1 29) #86# #1# 111875) t clos::install-method)) #1# 111875) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #88=#A(t (16) (common-lisp-user::update-tracking-obj-chunk ext::location (defmethod common-lisp-user::update-tracking-obj-chunk (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 112593) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g11975 common-lisp-user::visual common-lisp-user::buffer-read #:g11976 (setf common-lisp-user::tracked-obj-last-obj) #Y(common-lisp-user::update-tracking-obj-chunk nil nil (24 45 7 26 10 0 45 8 15 9 19 1 10 45 11 13 0 13 1 33 12 18 2 43 1 43 1 29) #88# #1# 112593) t clos::install-method)) #1# 112593) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::update-tracking-mth ext::location (defgeneric common-lisp-user::update-tracking-mth) (#1# . 112817) ext::annotate :lambda-list (common-lisp-user::vis-mod &optional common-lisp-user::from-proc-display) :delete-methods t :documentation "Update the state of a tracked object" ensure-generic-function)) #1# 112817) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 119 12 14 11 19 6 120 29) #89=#A(t (121) (common-lisp-user::update-tracking-mth ext::location (defmethod common-lisp-user::update-tracking-mth (common-lisp-user::vis-mod common-lisp-user::vision-module) &optional common-lisp-user::from-proc-display) (#1# . 112949) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod &optional common-lisp-user::from-proc-display) common-lisp-user::vis-mod common-lisp-user::from-proc-display common-lisp-user::visual :time-in-ms t :module :vision :output common-lisp-user::high :priority common-lisp-user::schedule-clear-buffer :exec common-lisp-user::free :proc common-lisp-user::change-state common-lisp-user::clear-attended #:g12019 #:g12020 (setf common-lisp-user::current-marker) :ignore-if-full common-lisp-user::set-buffer-failure #:g12021 #:g12022 (setf common-lisp-user::attend-failure) #:g12023 #:g12024 (setf common-lisp-user::tracked-obj) #:g12025 #:g12026 (setf common-lisp-user::tracked-obj-last-feat) #:g12027 #:g12028 (setf common-lisp-user::last-obj) #Y(common-lisp-user::tracking-failed nil nil (26 15 9 9 0 14 10 14 11 14 12 14 13 14 14 15 15 14 16 9 13 19 10 17 13 2 14 18 15 19 14 20 15 19 19 5 21 13 2 19 1 22 10 2 45 23 75 45 24 13 0 13 1 33 25 18 2 43 1 43 1 15 9 14 26 14 11 19 3 27 10 2 45 28 11 11 45 29 13 0 13 1 33 30 18 2 43 1 43 1 10 2 45 31 75 45 32 13 0 13 1 33 33 18 2 43 1 43 1 10 2 45 34 75 45 35 13 0 13 1 33 36 18 2 43 1 43 1 10 2 45 37 75 45 38 13 0 13 1 33 39 18 2 43 1 43 1 75 73 36 0 29) #89# #1# 112949) common-lisp-user::current-device-interface common-lisp-user::devin common-lisp-user::locks zerop #:g12029 :tracking common-lisp-user::pending-procs #:g12030 (setf common-lisp-user::pending-procs) common-lisp-user::tracked-obj common-lisp-user::visicon-chunks :key common-lisp-user::chunk-visual-object find common-lisp-user::f common-lisp-user::chunk-visicon-entry common-lisp-user::tracked-obj-last-feat common-lisp-user::visicon gethash common-lisp-user::new-feat common-lisp-user::new-loc common-lisp-user::tracked-obj-lastloc common-lisp-user::old-loc common-lisp-user::tracked-obj-last-obj common-lisp-user::old-obj common-lisp-user::visual-location common-lisp-user::buffer-read common-lisp-user::vis-loc-chunk common-lisp-user::vis-obj-chunk #:g12031 #:g12032 (setf common-lisp-user::tracked-obj-last-feat) #:g12033 #:g12034 (setf common-lisp-user::current-marker) common-lisp-user::convert-loc-to-object common-lisp-user::new-obj #:g12035 #:g12036 (setf common-lisp-user::currently-attended) #:g12037 #:g12038 (setf common-lisp-user::last-obj) :requested common-lisp-user::schedule-set-buffer-chunk common-lisp-user::lock-device common-lisp-user::unlock-device :destination :device :maintenance common-lisp-user::schedule-event-now #Y(common-lisp-user::set-vis-loc nil nil (26 15 66 13 5 9 0 14 10 14 11 14 12 14 13 14 14 15 15 14 84 77 14 16 9 15 19 13 85 10 10 73 39 32 19 0 41 12 19 1 86 15 87 14 12 14 13 14 88 14 89 14 16 9 14 14 14 77 14 90 14 11 19 11 91 29) #89# #1# 112949) common-lisp-user::chunk-difference-to-chunk-spec common-lisp-user::schedule-mod-buffer-chunk #Y(common-lisp-user::mod-vis-loc nil nil (26 15 66 13 5 15 66 19 1 67 12 19 2 93 12 9 0 14 10 14 11 14 12 14 13 14 14 15 15 14 16 9 15 19 11 94 29) #89# #1# 112949) #Y(common-lisp-user::set-vis-obj nil nil (26 15 9 13 0 9 0 14 10 14 11 14 12 14 13 14 14 15 15 14 84 77 14 16 9 14 19 13 85 29) #89# #1# 112949) #Y(common-lisp-user::mod-vis-obj nil nil (26 15 9 13 0 15 9 19 1 67 12 19 2 93 12 9 0 14 10 14 11 14 12 14 13 14 14 15 15 14 16 9 14 19 11 94 29) #89# #1# 112949) mod common-lisp-user::update-tracking-loc-chunk :params #Y(common-lisp-user::update-loc nil nil (24 45 98 26 15 99 14 12 14 13 14 88 14 13 14 100 10 0 39 8 11 11 6 1 73 38 3 75 73 12 14 16 9 13 14 14 77 19 11 91 29) #89# #1# 112949) common-lisp-user::update-tracking-obj-chunk #Y(common-lisp-user::update-obj nil nil (26 15 102 14 12 14 13 14 88 14 13 14 100 77 14 16 9 12 14 14 77 19 11 91 29) #89# #1# 112949) common-lisp-user::finst-lst common-lisp-user::id :test equal member common-lisp-user::it #:g12039 common-lisp-user::mp-time-ms #:g12040 (setf common-lisp-user::tstamp) common-lisp-user::add-finst eq common-lisp-user::screen-pos common-lisp-user::chunk-slot-value-fct common-lisp-user::set-chunk-slot-value-fct #Y(common-lisp-user::update-tracking-mth nil nil (24 45 7 25 40 2 77 46 8 26 57 0 60 575 30 1 40 19 0 41 45 42 13 0 19 1 43 16 44 76 39 29 10 0 45 45 14 46 13 0 19 1 47 3 45 48 13 0 13 1 33 49 18 2 43 2 75 73 36 2 10 3 39 66 13 4 19 1 50 39 35 13 4 19 1 50 12 13 4 19 1 51 12 14 52 15 53 19 4 54 45 55 10 0 39 6 13 0 19 1 56 43 1 38 23 13 4 19 1 57 12 13 4 19 1 58 12 19 2 59 39 6 13 4 19 1 57 38 6 13 4 19 1 57 45 60 10 0 39 12 13 0 13 5 19 1 58 12 19 2 59 45 61 13 6 19 1 62 45 63 13 7 19 1 64 45 65 15 66 19 1 67 45 68 15 9 19 1 67 45 69 10 4 76 39 5 32 7 18 0 10 10 45 70 10 6 45 71 13 0 13 1 33 72 18 2 43 1 43 1 10 10 45 73 10 5 45 74 13 0 13 1 33 75 18 2 43 1 43 1 13 4 19 1 76 45 77 10 0 76 39 5 32 8 18 0 10 11 45 78 10 7 45 79 13 0 13 1 33 80 18 2 43 1 43 1 10 11 45 81 10 1 45 82 13 0 13 1 33 83 18 2 43 1 43 1 30 6 92 95 96 97 101 103 13 12 13 17 19 1 104 12 14 52 15 105 14 106 15 107 19 6 108 45 109 10 0 39 25 10 0 4 45 110 19 0 111 45 112 13 0 13 1 33 113 18 2 43 1 43 1 38 8 13 18 13 12 19 2 114 43 1 10 8 76 39 4 10 7 76 39 21 32 5 18 0 32 3 18 0 14 11 32 1 18 1 32 0 18 0 38 194 10 8 76 39 7 13 7 10 9 17 115 39 17 32 5 18 0 32 2 18 0 14 11 32 1 18 1 38 165 10 8 76 39 12 32 5 18 0 77 32 1 18 1 38 149 13 8 10 10 17 115 39 4 10 7 76 39 21 32 4 18 0 32 3 18 0 14 11 32 1 18 1 32 0 18 0 38 116 13 8 10 10 17 115 39 7 13 7 10 9 17 115 39 17 32 4 18 0 32 2 18 0 14 11 32 1 18 1 38 84 13 8 10 10 17 115 39 7 32 4 18 0 38 70 10 7 76 39 30 13 6 15 116 19 2 117 76 39 10 13 6 15 116 13 11 19 3 118 32 3 18 0 32 0 18 0 38 36 13 7 10 9 17 115 39 26 13 6 15 116 19 2 117 76 39 10 13 6 15 116 13 11 19 3 118 32 2 18 0 38 3 11 11 43 6 43 1 43 6 43 1 75 73 43 1 63 29) #89# #1# 112949) clos::install-method)) #1# 112949) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::remove-tracking ext::location (defgeneric common-lisp-user::remove-tracking) (#1# . 121269) ext::annotate :lambda-list (common-lisp-user::vis-mod) :delete-methods t :documentation "Clears out all the tracking stuff" ensure-generic-function)) #1# 121269) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 23 12 14 24 19 6 25 29) #90=#A(t (26) (common-lisp-user::remove-tracking ext::location (defmethod common-lisp-user::remove-tracking (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 121585) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g12065 #:g12066 (setf common-lisp-user::tracked-obj-last-feat) #:g12067 #:g12068 (setf common-lisp-user::tracked-obj-lastloc) #:g12069 #:g12070 (setf common-lisp-user::tracked-obj-last-obj) #:g12071 #:g12072 (setf common-lisp-user::tracked-obj) :exec common-lisp-user::free common-lisp-user::change-state #Y(common-lisp-user::remove-tracking nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 10 0 45 11 75 45 12 13 0 13 1 33 13 18 2 43 1 43 1 10 0 45 14 75 45 15 13 0 13 1 33 16 18 2 43 1 43 1 10 0 45 17 75 45 18 13 0 13 1 33 19 18 2 43 1 43 1 13 0 14 20 15 21 19 3 22 29) #90# #1# 121585) t clos::install-method)) #1# 121585) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 16 12 19 2 17 15 0 15 18 15 19 19 3 20 1 0 73 29) #91=#A(t (21) (common-lisp-user::update-tracking ext::location (defun common-lisp-user::update-tracking) (#1# . 121844) ext::annotate :lambda-list *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Update-tracking has been depricated.  All updates must be done through proc-display or the add/delete/update actions." format finish-output #Y(common-lisp-user::update-tracking nil nil (26 14 6 15 7 19 0 8 73 39 12 19 0 9 16 10 12 9 1 19 2 11 12 19 0 12 12 15 13 19 5 14 12 14 6 19 1 15 22 73 29) #91# #1# 121844) si::fset function "Call the Vision Module's tracking update method." si::set-documentation)) #1# 121844) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #92=#A(t (11) (common-lisp-user::unlock-tracking ext::location (defun common-lisp-user::unlock-tracking) (#1# . 122193) ext::annotate :lambda-list :vision common-lisp-user::get-module-fct common-lisp-user::update-tracking-mth #Y(common-lisp-user::unlock-tracking nil nil (26 15 6 19 1 7 12 19 1 8 29) #92# #1# 122193) si::fset)) #1# 122193) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::set-cfs-mth ext::location (defgeneric common-lisp-user::set-cfs-mth) (#1# . 122472) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::kwrd) :delete-methods t :documentation "Set the current character feature set." ensure-generic-function)) #1# 122472) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 38 12 14 25 19 6 39 29) #93=#A(t (40) (common-lisp-user::set-cfs-mth ext::location (defmethod common-lisp-user::set-cfs-mth (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::kwrd) (#1# . 122697) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::kwrd) common-lisp-user::vis-mod common-lisp-user::kwrd common-lisp-user::get-cfs-mth common-lisp-user::it #:g12088 #:g12089 (setf common-lisp-user::active-cfs) common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12091 #:g12090 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g12092 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #27# common-lisp-user::mp-models length > common-lisp-user::current-model "Feature set ~S is unknown" format finish-output #28# #29# #Y(common-lisp-user::set-cfs-mth nil nil (24 45 7 24 45 8 26 13 1 13 0 19 2 9 45 10 10 0 39 24 10 2 45 11 10 1 4 45 12 13 0 13 1 33 13 18 2 43 1 43 1 38 178 15 14 19 1 15 47 1 16 45 17 10 1 39 10 13 0 19 1 18 12 19 1 19 73 39 150 13 0 19 1 18 12 19 1 19 45 20 13 1 19 1 21 76 40 127 10 0 76 40 27 13 0 11 22 17 23 40 19 11 24 40 15 13 0 11 25 17 23 39 7 14 22 11 26 17 27 39 35 14 22 15 28 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 33 13 4 19 6 34 14 22 19 1 35 38 60 14 22 15 36 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 33 13 4 19 6 34 14 22 19 1 35 13 0 15 37 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 33 13 4 19 6 34 75 73 43 1 43 2 43 1 29) #93# #1# 122697) clos::install-method)) #1# 122697) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-cfs-mth ext::location (defgeneric common-lisp-user::get-cfs-mth) (#1# . 122890) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::kwrd) :delete-methods t :documentation "Given a keyword, find a character feature set." ensure-generic-function)) #1# 122890) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #94=#A(t (16) (common-lisp-user::get-cfs-mth ext::location (defmethod common-lisp-user::get-cfs-mth (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::kwrd) (#1# . 123000) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::kwrd) common-lisp-user::vis-mod common-lisp-user::kwrd common-lisp-user::feature-sets :key common-lisp-user::name member #Y(common-lisp-user::get-cfs-mth nil nil (24 45 7 24 45 8 26 13 0 13 1 19 1 9 12 14 10 15 11 19 4 12 29) #94# #1# 123000) t clos::install-method)) #1# 123000) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 22 12 14 23 19 6 24 29) #95=#A(t (25) (common-lisp-user::clear ext::location (defmethod common-lisp-user::clear :after (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 123106) ext::annotate (:after) (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::remove-tracking #:g12117 #:g12118 (setf common-lisp-user::last-obj) #:g12119 #:g12120 (setf common-lisp-user::loc-failure) #:g12121 #:g12122 (setf common-lisp-user::attend-failure) #:g12123 #:g12124 (setf common-lisp-user::scene-change) #Y(common-lisp-user::clear nil nil (24 45 8 26 13 0 19 1 9 10 0 45 10 75 45 11 13 0 13 1 33 12 18 2 43 1 43 1 10 0 45 13 75 45 14 13 0 13 1 33 15 18 2 43 1 43 1 10 0 45 16 75 45 17 13 0 13 1 33 18 18 2 43 1 43 1 10 0 45 19 75 45 20 13 0 13 1 33 21 18 2 43 1 43 1 29) #95# #1# 123106) t clos::install-method)) #1# 123106) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::find-location ext::location (defgeneric common-lisp-user::find-location) (#1# . 123397) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::chunk-spec) :delete-methods t :documentation "Given a set of constraints, build a DMO for that screen location if one matches." ensure-generic-function)) #1# 123397) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 47 12 14 21 19 6 48 29) #96=#A(t (49) (common-lisp-user::find-location ext::location (defmethod common-lisp-user::find-location (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::chunk-spec) (#1# . 124320) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vis-mod common-lisp-user::chunk-spec) common-lisp-user::vis-mod common-lisp-user::chunk-spec common-lisp-user::find-current-locs-with-spec common-lisp-user::it common-lisp-user::chunk-visual-tstamp common-lisp-user::objs-max-val common-lisp-user::random-item common-lisp-user::construct-location common-lisp-user::loc #:g12137 #:g12138 (setf common-lisp-user::loc-failure) common-lisp-user::visual-location :time-in-ms t :module :vision :priority common-lisp-user::schedule-set-buffer-chunk common-lisp-user::current-device-interface common-lisp-user::lock-device common-lisp-user::unlock-device :destination :device :output :maintenance common-lisp-user::schedule-event-now common-lisp-user::set-buffer-failure #:g12139 #:g12140 (setf common-lisp-user::loc-failure) common-lisp-user::find-loc-failure common-lisp-user::low common-lisp-user::auto-attend common-lisp-user::visual-auto-attend :details string "automatically attending " symbol-name concatenate #Y(common-lisp-user::find-location nil nil (24 45 7 24 45 8 26 13 1 13 0 19 2 9 45 10 10 0 39 22 13 2 13 0 15 11 19 2 12 12 19 1 13 12 13 1 19 3 14 38 2 75 43 1 45 15 10 0 39 74 10 2 45 16 75 45 17 13 0 13 1 33 18 18 2 43 1 43 1 15 19 13 0 9 0 14 20 14 21 14 22 14 23 14 24 9 10 19 9 25 19 0 26 12 19 1 27 15 28 14 22 14 23 14 29 14 30 14 24 9 9 14 31 77 14 32 14 21 19 11 33 38 39 15 19 19 1 34 10 2 45 35 11 21 45 36 13 0 13 1 33 37 18 2 43 1 43 1 15 38 14 22 14 23 14 31 15 39 19 5 33 10 0 39 6 13 2 19 1 40 39 33 15 41 14 29 14 23 14 31 14 21 14 22 14 23 14 42 15 43 15 44 10 0 16 45 12 19 3 46 12 19 9 33 10 0 73 43 1 29) #96# #1# 124320) clos::install-method)) #1# 124320) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 56 12 14 17 19 6 57 29) #97=#A(t (58) (common-lisp-user::visual-auto-attend ext::location (defmethod common-lisp-user::visual-auto-attend (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#1# . 125502) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::visual-location common-lisp-user::buffer-read common-lisp-user::it :exec common-lisp-user::busy :proc common-lisp-user::change-state common-lisp-user::move-attention :time-in-ms t :params :location :destination :vision :output common-lisp-user::medium :module :details string "Move-attention " symbol-name concatenate :priority common-lisp-user::schedule-event-relative common-lisp-user::free common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12151 #:g12150 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g12152 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* *standard-output* eql #27# common-lisp-user::mp-models length > common-lisp-user::current-model "Auto-attend failed because visual-location buffer was empty." format finish-output #28# #29# #Y(common-lisp-user::visual-auto-attend nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 106 13 1 14 11 15 12 14 13 15 12 19 5 14 9 50 15 15 14 16 14 17 14 18 14 19 10 0 6 2 12 14 20 14 21 14 22 15 23 14 24 14 21 14 25 15 26 15 27 10 0 16 28 12 19 3 29 12 14 30 9 0 19 16 31 9 50 15 14 14 16 14 17 14 18 14 11 15 32 14 13 1 32 6 4 12 14 20 14 21 14 22 77 14 24 14 21 14 30 9 1 19 14 31 38 172 15 33 19 1 34 47 1 35 45 36 10 1 39 10 13 0 19 1 37 12 19 1 38 73 39 144 13 0 19 1 37 12 19 1 38 45 39 13 1 19 1 40 76 40 121 10 0 76 40 27 13 0 11 41 17 42 40 19 11 43 40 15 13 0 11 17 17 42 39 7 14 41 11 44 17 45 39 33 14 41 15 46 19 0 47 16 48 12 9 1 19 2 49 12 19 0 50 12 15 51 19 5 52 14 41 19 1 53 38 56 14 41 15 54 19 0 47 16 48 12 9 1 19 2 49 12 19 0 50 12 15 51 19 5 52 14 41 19 1 53 13 0 15 55 19 0 47 16 48 12 9 1 19 2 49 12 19 0 50 12 15 51 19 5 52 75 73 43 1 43 2 43 1 29) #97# #1# 125502) clos::install-method)) #1# 125502) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 7 12 19 2 8 1 0 73 29) #98=#A(t (9) (common-lisp-user::find-loc-failure ext::location (defun common-lisp-user::find-loc-failure) (#1# . 126912) ext::annotate :lambda-list "Dummy event function to signal a find-location failure in the trace" #Y(common-lisp-user::find-loc-failure nil nil (26 1 6 73 29) #98# #1# 126912) si::fset)) #1# 126912) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::construct-location ext::location (defgeneric common-lisp-user::construct-location) (#1# . 127017) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::feat common-lisp-user::spec) :delete-methods t :documentation "Find or build a DMO based on a feature and the spec used to generate that feature." ensure-generic-function)) #1# 127017) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #99=#A(t (16) (common-lisp-user::construct-location ext::location (defmethod common-lisp-user::construct-location (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::loc common-lisp-user::spec) (#1# . 127177) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::spec) common-lisp-user::vis-mod common-lisp-user::loc common-lisp-user::spec common-lisp-user::chunk-visicon-entry common-lisp-user::found-locs si::hash-set #Y(common-lisp-user::construct-location nil nil (24 45 7 24 45 8 24 45 9 26 13 1 19 1 10 12 13 2 19 1 11 12 13 0 19 3 12 10 1 73 29) #99# #1# 127177) t clos::install-method)) #1# 127177) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::move-attention ext::location (defgeneric common-lisp-user::move-attention) (#1# . 127375) ext::annotate :lambda-list (common-lisp-user::vis-mod &key common-lisp-user::location common-lisp-user::scale) :delete-methods t :documentation "Shift attention to a particular location at a particular scale." ensure-generic-function)) #1# 127375) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 75 12 14 27 19 6 76 29) #100=#A(t (77) (common-lisp-user::move-attention ext::location (defmethod common-lisp-user::move-attention (common-lisp-user::vis-mod common-lisp-user::vision-module) &key common-lisp-user::location common-lisp-user::scale) (#1# . 127882) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod &key common-lisp-user::location common-lisp-user::scale) common-lisp-user::vis-mod (t :scale :location) common-lisp-user::location common-lisp-user::scale common-lisp-user::exec-s common-lisp-user::busy eq common-lisp-user::tracked-obj-last-feat common-lisp-user::last-visual-request common-lisp-user::complete-request common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12199 #:g12198 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g12200 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* t *standard-output* eql #27# common-lisp-user::mp-models length > common-lisp-user::current-model "Attention shift requested at ~S while one was already in progress." common-lisp-user::mp-time format finish-output #28# #29# common-lisp-user::remove-tracking #:g12201 #:g12202 (setf common-lisp-user::moving-attention) common-lisp-user::clear-attended #:g12203 #:g12204 (setf common-lisp-user::last-scale) #:g12205 #:g12206 (setf common-lisp-user::attend-failure) common-lisp-user::move-attn-latency common-lisp-user::randomize-time-ms common-lisp-user::encoding-complete :time-in-ms :destination :vision :module :params :output common-lisp-user::medium :details string "Encoding-complete " symbol-name " " concatenate common-lisp-user::schedule-event-relative #:g12207 #:g12208 (setf common-lisp-user::current-marker) :exec :proc common-lisp-user::change-state #Y(common-lisp-user::move-attention nil nil (24 45 7 28 8 22 40 2 77 46 9 22 40 2 77 46 10 13 2 19 1 11 12 1 12 17 13 39 7 13 2 19 1 14 76 39 195 13 2 19 1 15 12 19 1 16 15 17 19 1 18 47 1 19 45 20 10 1 39 10 13 0 19 1 21 12 19 1 22 73 39 156 13 0 19 1 21 12 19 1 22 45 23 13 1 19 1 24 76 40 133 10 0 76 40 27 13 0 11 25 17 13 40 19 11 26 40 15 13 0 11 27 17 13 39 7 14 25 11 28 17 29 39 37 14 25 15 30 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 19 0 36 12 19 6 37 14 25 19 1 38 38 64 14 25 15 39 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 19 0 36 12 19 6 37 14 25 19 1 38 13 0 15 40 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 19 0 36 12 19 6 37 75 73 43 1 43 2 38 172 13 2 19 1 14 39 6 13 2 19 1 41 10 2 45 42 11 27 45 43 13 0 13 1 33 44 18 2 43 1 43 1 13 2 19 1 45 10 2 45 46 10 1 45 47 13 0 13 1 33 48 18 2 43 1 43 1 10 2 45 49 75 45 50 13 0 13 1 33 51 18 2 43 1 43 1 13 2 19 1 52 12 19 1 53 12 15 54 14 55 14 27 14 56 14 57 14 58 14 57 14 59 13 1 10 0 6 2 12 14 60 15 61 14 62 15 63 15 64 10 1 16 65 12 15 66 10 0 16 65 12 19 5 67 12 19 14 68 10 2 45 69 10 2 45 70 13 0 13 1 33 71 18 2 43 1 43 1 13 2 14 72 15 12 14 73 15 12 19 5 74 29) #100# #1# 127882) clos::install-method)) #1# 127882) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #101=#A(t (12) (common-lisp-user::create-vision-module ext::location (defun common-lisp-user::create-vision-module) (#1# . 129006) ext::annotate :lambda-list (common-lisp-user::model-name) common-lisp-user::model-name common-lisp-user::vision-module make-instance #Y(common-lisp-user::create-vision-module nil nil (24 45 7 26 15 8 19 1 9 29) #101# #1# 129006) si::fset)) #1# 129006) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 87 12 19 2 88 1 0 73 29) #102=#A(t (89) (common-lisp-user::reset-vision-module ext::location (defun common-lisp-user::reset-vision-module) (#1# . 129185) ext::annotate :lambda-list (common-lisp-user::vis-mod) common-lisp-user::vis-mod common-lisp-user::reset-pm-module common-lisp-user::visicon clrhash common-lisp-user::found-locs #:g12235 #:g12236 (setf common-lisp-user::current-cursor) common-lisp-user::remove-tracking #:g12237 #:g12238 (setf common-lisp-user::last-scale) :rm-orig common-lisp-user::set-cfs-mth #:g12239 common-lisp-user::synthd-objs #:g12240 (setf common-lisp-user::synthd-objs) #:g12241 #:g12242 (setf common-lisp-user::finst-lst) #:g12243 #:g12244 (setf common-lisp-user::scene-change) #:g12245 #:g12246 (setf common-lisp-user::last-obj) #:g12247 #:g12248 (setf common-lisp-user::loc-failure) #:g12249 #:g12250 (setf common-lisp-user::attend-failure) #:g12251 #:g12252 (setf common-lisp-user::other-word-chars) #:g12253 vector #:g12254 (setf common-lisp-user::center-point) #:g12255 #:g12256 (setf common-lisp-user::process-display-called) #:g12257 #:g12258 (setf common-lisp-user::last-visual-request) (common-lisp-user::visual-object common-lisp-user::screen-pos common-lisp-user::value common-lisp-user::status common-lisp-user::color common-lisp-user::height common-lisp-user::width) common-lisp-user::chunk-type-fct ((common-lisp-user::text (:include common-lisp-user::visual-object)) (common-lisp-user::text t)) ((common-lisp-user::empty-space (:include common-lisp-user::visual-object)) (common-lisp-user::empty-space t)) ((common-lisp-user::oval (:include common-lisp-user::visual-object)) (common-lisp-user::oval t)) ((common-lisp-user::cursor (:include common-lisp-user::visual-object)) (common-lisp-user::cursor t)) ((common-lisp-user::line (:include common-lisp-user::visual-object)) (common-lisp-user::line t) common-lisp-user::end1-x common-lisp-user::end1-y common-lisp-user::end2-x common-lisp-user::end2-y) ((common-lisp-user::phrase! (:include common-lisp-user::visual-object)) (common-lisp-user::phrase! t) common-lisp-user::objects common-lisp-user::words common-lisp-user::colors) (common-lisp-user::visual-location common-lisp-user::screen-x common-lisp-user::screen-y common-lisp-user::distance common-lisp-user::kind common-lisp-user::color common-lisp-user::value common-lisp-user::height common-lisp-user::width common-lisp-user::size) ((common-lisp-user::set-visloc-default (:include common-lisp-user::visual-location)) (common-lisp-user::set-visloc-default t) type) ((common-lisp-user::char-primitive (:include common-lisp-user::visual-location)) (common-lisp-user::kind common-lisp-user::char-primitive) common-lisp-user::left common-lisp-user::right) (common-lisp-user::color common-lisp-user::color) (common-lisp-user::vision-command common-lisp-user::cmd) ((common-lisp-user::move-attention (:include common-lisp-user::vision-command)) (common-lisp-user::cmd common-lisp-user::move-attention) common-lisp-user::screen-pos common-lisp-user::scale) ((common-lisp-user::start-tracking (:include common-lisp-user::vision-command)) (common-lisp-user::cmd common-lisp-user::start-tracking)) ((common-lisp-user::assign-finst (:include common-lisp-user::vision-command)) (common-lisp-user::cmd common-lisp-user::assign-finst) common-lisp-user::object common-lisp-user::location) ((common-lisp-user::clear-scene-change (:include common-lisp-user::vision-command)) (common-lisp-user::cmd common-lisp-user::clear-scene-change)) ((common-lisp-user::clear-all-finsts (:include common-lisp-user::vision-command)) (common-lisp-user::cmd common-lisp-user::clear-all-finsts)) (common-lisp-user::lowest common-lisp-user::highest common-lisp-user::current common-lisp-user::current-x common-lisp-user::current-distance common-lisp-user::current-y common-lisp-user::clockwise common-lisp-user::counterclockwise common-lisp-user::external common-lisp-user::internal common-lisp-user::text common-lisp-user::box common-lisp-user::line common-lisp-user::oval common-lisp-user::char-primitive common-lisp-user::new common-lisp-user::find-location) si::%dolist-var common-lisp-user::chunk common-lisp-user::chunk-p-fct common-lisp-user::name common-lisp-user::define-chunks-fct common-lisp-user::make-chunk-immutable (common-lisp-user::black common-lisp-user::red common-lisp-user::blue common-lisp-user::green common-lisp-user::white common-lisp-user::magenta common-lisp-user::yellow common-lisp-user::cyan common-lisp-user::dark-green common-lisp-user::dark-red common-lisp-user::dark-cyan common-lisp-user::dark-blue common-lisp-user::dark-magenta common-lisp-user::dark-yellow common-lisp-user::light-gray common-lisp-user::dark-gray common-lisp-user::gray common-lisp-user::pink common-lisp-user::light-blue common-lisp-user::purple common-lisp-user::brown) common-lisp-user::color (common-lisp-user::move-attention common-lisp-user::assign-finst common-lisp-user::start-tracking common-lisp-user::clear-scene-change common-lisp-user::set-visloc-default common-lisp-user::clear-all-finsts) common-lisp-user::isa #:g12259 (common-lisp-user::screen-x common-lisp-user::lowest :attended common-lisp-user::new) common-lisp-user::define-chunk-spec-fct #:g12260 (setf common-lisp-user::default-spec) #Y(common-lisp-user::reset-vision-module nil nil (24 45 7 26 13 0 19 1 8 13 0 19 1 9 16 10 13 0 19 1 11 16 10 10 0 45 12 75 45 13 13 0 13 1 33 14 18 2 43 1 43 1 13 0 19 1 15 10 0 45 16 75 45 17 13 0 13 1 33 18 18 2 43 1 43 1 13 0 14 19 19 2 20 10 0 45 21 13 1 19 1 22 16 10 45 23 13 0 13 1 33 24 18 2 43 1 43 1 10 0 45 25 75 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 0 45 28 75 45 29 13 0 13 1 33 30 18 2 43 1 43 1 10 0 45 31 75 45 32 13 0 13 1 33 33 18 2 43 1 43 1 10 0 45 34 75 45 35 13 0 13 1 33 36 18 2 43 1 43 1 10 0 45 37 75 45 38 13 0 13 1 33 39 18 2 43 1 43 1 10 0 45 40 75 45 41 13 0 13 1 33 42 18 2 43 1 43 1 10 0 45 43 9 0 9 0 19 2 44 45 45 13 0 13 1 33 46 18 2 43 1 43 1 10 0 45 47 75 45 48 13 0 13 1 33 49 18 2 43 1 43 1 10 0 45 50 75 45 51 13 0 13 1 33 52 18 2 43 1 43 1 15 53 19 1 54 15 55 19 1 54 15 56 19 1 54 15 57 19 1 54 15 58 19 1 54 15 59 19 1 54 15 60 19 1 54 15 61 19 1 54 15 62 19 1 54 15 63 19 1 54 15 64 19 1 54 15 65 19 1 54 15 66 19 1 54 15 67 19 1 54 15 68 19 1 54 15 69 19 1 54 15 70 19 1 54 1 71 45 72 75 45 73 38 38 10 1 4 51 0 13 0 19 1 74 76 39 20 13 0 15 75 10 0 6 3 6 1 12 19 1 76 13 0 19 1 77 10 1 5 51 1 10 1 40 -40 43 2 1 78 45 72 75 45 73 38 38 10 1 4 51 0 13 0 19 1 74 76 39 20 13 0 15 79 10 0 6 3 6 1 12 19 1 76 13 0 19 1 77 10 1 5 51 1 10 1 40 -40 43 2 1 80 45 72 75 45 73 38 38 10 1 4 51 0 13 0 19 1 74 76 39 20 13 0 15 81 10 0 6 3 6 1 12 19 1 76 13 0 19 1 77 10 1 5 51 1 10 1 40 -40 43 2 10 0 45 82 15 83 19 1 84 45 85 13 0 13 1 33 86 18 2 43 1 43 1 29) #102# #1# 129185) si::fset)) #1# 129185) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #103=#A(t (13) (common-lisp-user::clear-scene-change ext::location (defun common-lisp-user::clear-scene-change) (#1# . 132222) ext::annotate :lambda-list (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g12263 #:g12264 (setf common-lisp-user::scene-change) #Y(common-lisp-user::clear-scene-change nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 29) #103# #1# 132222) si::fset)) #1# 132222) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #104=#A(t (13) (common-lisp-user::clear-all-finsts ext::location (defun common-lisp-user::clear-all-finsts) (#1# . 132296) ext::annotate :lambda-list (common-lisp-user::vis-mod) common-lisp-user::vis-mod #:g12267 #:g12268 (setf common-lisp-user::finst-lst) #Y(common-lisp-user::clear-all-finsts nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 29) #104# #1# 132296) si::fset)) #1# 132296) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 54 12 19 2 55 1 0 73 29) #105=#A(t (56) (common-lisp-user::query-vision-module ext::location (defun common-lisp-user::query-vision-module) (#1# . 132365) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value) common-lisp-user::vis-mod common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value common-lisp-user::visual common-lisp-user::state eq error common-lisp-user::attend-failure common-lisp-user::scene-change numberp common-lisp-user::change-threshold >= common-lisp-user::mp-time-ms common-lisp-user::new-span + <= common-lisp-user::change-detect common-lisp-user::scene-change-value common-lisp-user::generic-state-query common-lisp-user::visual-location common-lisp-user::busy common-lisp-user::free t common-lisp-user::loc-failure *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid query made of the visual-location buffer with slot ~S and value ~S" format finish-output common-lisp-user::attended common-lisp-user::buffer-read common-lisp-user::vis-loc-chunk common-lisp-user::chunk-visicon-entry common-lisp-user::old-loc common-lisp-user::chunk-p-fct common-lisp-user::loc common-lisp-user::update-new common-lisp-user::check-finsts = :attended common-lisp-user::test-attended #Y(common-lisp-user::query-vision-module nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 2 42 11 160 13 1 1 12 17 13 39 7 13 0 1 14 17 13 39 8 13 3 19 1 15 38 135 13 1 1 16 17 13 39 76 13 3 19 1 16 4 16 17 39 43 13 3 19 1 16 4 12 13 3 19 1 18 12 19 2 19 39 25 19 0 20 12 13 3 19 1 16 5 12 13 3 19 1 21 12 19 2 22 12 19 2 23 45 24 10 0 39 3 10 1 73 40 9 10 0 40 3 10 1 76 73 43 1 38 52 13 1 1 25 17 13 39 33 10 0 16 17 73 39 24 13 3 19 1 16 4 16 17 73 39 13 13 3 19 1 16 4 12 13 0 19 2 19 38 12 13 3 13 2 13 1 13 0 19 4 26 38 156 42 27 151 10 1 42 12 73 10 0 42 28 5 75 73 38 62 42 29 6 11 30 73 38 54 42 14 8 13 3 19 1 31 38 44 14 32 15 33 19 0 34 73 39 12 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 13 1 13 0 19 7 40 12 14 32 19 1 41 22 73 38 72 42 42 67 15 27 19 1 43 45 44 10 0 73 39 51 13 0 19 1 45 45 46 13 0 19 1 47 39 5 10 0 38 3 10 1 45 48 13 6 19 1 49 13 6 19 1 50 13 6 15 51 14 52 10 3 6 3 12 13 0 19 3 53 43 2 43 1 38 3 75 73 38 3 75 73 29) #105# #1# 132365) si::fset)) #1# 132365) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 16 19 6 20 29) #106=#A(t (21) (common-lisp-user::warn-vision ext::location (defmethod common-lisp-user::warn-vision (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 133942) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::vis-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::visual eq common-lisp-user::visual-lock common-lisp-user::current-device-interface common-lisp-user::lock-device #:g12275 t #:g12276 (setf common-lisp-user::visual-lock) #Y(common-lisp-user::warn-vision nil nil (24 45 7 24 45 8 24 45 9 26 13 1 1 10 17 11 39 7 13 2 19 1 12 76 73 39 28 19 0 13 12 19 1 14 10 2 45 15 11 16 45 17 13 0 13 1 33 18 18 2 43 1 43 1 29) #106# #1# 133942) clos::install-method)) #1# 133942) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #107=#A(t (19) (common-lisp-user::pm-module-last-cmd-name ext::location (defmethod common-lisp-user::pm-module-last-cmd-name (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 134211) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::vis-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::visual-location common-lisp-user::set-visloc-default common-lisp-user::chunk-spec-slot-spec common-lisp-user::find-location common-lisp-user::visual :bad-command #Y(common-lisp-user::pm-module-last-cmd-name nil nil (24 45 7 24 45 8 24 45 9 26 10 1 42 10 20 13 0 15 11 19 2 12 39 6 1 11 73 38 4 1 13 73 38 11 42 14 6 11 15 73 38 3 75 73 29) #107# #1# 134211) t clos::install-method)) #1# 134211) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 126 12 14 24 19 6 127 29) #108=#A(t (128) (common-lisp-user::pm-module-request ext::location (defmethod common-lisp-user::pm-module-request (common-lisp-user::vis-mod common-lisp-user::vision-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 134601) ext::annotate (common-lisp-user::vision-module t t) (common-lisp-user::vis-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::vis-mod common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::visual common-lisp-user::visual-lock #:g12328 #:g12329 (setf common-lisp-user::visual-lock) common-lisp-user::unlock-device :module :vision :destination :device :priority :min :output :maintenance t common-lisp-user::schedule-event-now common-lisp-user::test-for-clear-request common-lisp-user::clear common-lisp-user::low common-lisp-user::cmd common-lisp-user::chunk-spec-slot-spec length = #:g12330 #:g12331 (setf common-lisp-user::last-visual-request) common-lisp-user::spec-slot-value common-lisp-user::clear-all-finsts common-lisp-user::complete-request common-lisp-user::clear-scene-change common-lisp-user::start-tracking common-lisp-user::medium common-lisp-user::assign-finst common-lisp-user::object common-lisp-user::slot-in-chunk-spec-p common-lisp-user::verify-single-explicit-value common-lisp-user::location :params :object :location *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "An object or location is required for an assign-finst request" format finish-output common-lisp-user::move-attention common-lisp-user::screen-pos common-lisp-user::scale common-lisp-user::sp common-lisp-user::valid-vis-loc-chunk :scale :details string "Move-attention " symbol-name " " concatenate "screen-pos value ~s in a move-attention request was not a valid chunk" "Invalid command ~a sent to the visual buffer" "Invalid request sent to the visual buffer~%~a" common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12333 #:g12332 make-string-output-stream common-lisp-user::printing-module-v common-lisp-user::printing-module-c #:g12335 #:g12334 #:g12336 #:g12337 :stream common-lisp-user::make-act-r-output #:g12338 (setf common-lisp-user::printing-module-v) #:g12339 #:g12340 (setf common-lisp-user::printing-module-c) common-lisp-user::pprint-chunk-spec #:g12341 #:g12342 (setf common-lisp-user::printing-module-v) #:g12343 #:g12344 (setf common-lisp-user::printing-module-c) get-output-stream-string close common-lisp-user::visual-location :attended ":attended specification only allowed once in a visual-location request." :nearest ":nearest specification only allowed once in a visual-location request." :center ":center specification only allowed once in a visual-location request." common-lisp-user::set-visloc-default common-lisp-user::specs common-lisp-user::spec type common-lisp-user::type-specs common-lisp-user::type-spec "set-visloc-default slot can only be specified once in a visual-location request." common-lisp-user::spec-slot-op eq "set-visloc-default slot must use the = test in a visual-location request." "type slot can only be specified once in a set-visloc-default request." "type slot must use the = test in a set-visloc-default request." common-lisp-user::chunk-type-p-fct "type slot must specify a valid chunk-type in a set-visloc-default request." common-lisp-user::set-visloc-default-request "Set-visloc-default" common-lisp-user::find-location "Find-location" #Y(common-lisp-user::pm-module-request nil nil (24 45 7 24 45 8 24 45 9 26 10 1 42 10 754 13 2 19 1 11 39 44 10 2 45 12 75 45 13 13 0 13 1 33 14 18 2 43 1 43 1 15 15 14 16 14 17 14 18 14 19 14 20 14 21 14 22 77 14 23 14 24 19 11 25 13 0 19 1 26 39 20 15 27 14 16 14 17 14 18 14 17 14 22 15 28 19 7 25 38 676 13 0 15 29 19 2 30 16 31 12 9 1 19 2 32 39 462 10 2 45 33 10 1 45 34 13 0 13 1 33 35 18 2 43 1 43 1 13 0 15 29 19 2 30 4 12 19 1 36 45 29 10 0 42 37 25 13 1 19 1 38 15 37 14 16 14 17 14 18 14 17 14 22 15 28 19 7 25 38 395 42 39 25 13 1 19 1 38 15 39 14 16 14 17 14 18 14 17 14 22 15 28 19 7 25 38 368 42 40 25 13 1 19 1 38 15 40 14 18 14 17 14 16 14 17 14 22 15 41 19 7 25 38 341 42 42 141 13 1 19 1 38 13 1 15 43 19 2 44 39 14 13 1 15 43 14 17 15 42 19 4 45 38 3 75 73 12 13 1 15 46 19 2 44 39 14 13 1 15 46 14 17 15 42 19 4 45 38 3 75 73 12 46 46 46 43 10 0 40 3 10 1 39 31 15 42 14 47 13 5 14 48 13 0 14 49 10 1 6 5 12 14 16 14 17 14 22 15 41 19 7 25 38 40 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 56 19 5 57 12 14 50 19 1 58 22 73 43 2 38 198 42 59 149 13 1 15 60 14 17 15 59 19 4 45 12 13 1 15 61 19 2 44 39 14 13 1 15 61 14 17 15 59 19 4 45 38 3 75 73 12 46 61 46 62 13 0 13 5 19 2 63 39 49 15 59 14 47 13 5 14 64 13 1 14 49 10 0 6 5 12 14 65 15 66 15 67 10 0 16 68 12 15 69 10 1 16 68 12 19 5 70 12 14 16 14 17 19 7 25 38 47 13 3 19 1 38 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 71 13 0 19 6 57 12 14 50 19 1 58 22 73 43 2 38 47 13 1 19 1 38 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 72 13 0 19 6 57 12 14 50 19 1 58 22 73 43 1 38 198 13 0 19 1 38 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 73 15 74 19 1 75 47 1 76 45 77 10 1 73 39 136 19 0 78 12 13 0 19 1 79 12 13 0 19 1 80 12 46 81 46 82 46 83 10 3 45 84 14 85 13 1 19 2 86 45 87 13 0 13 1 33 88 18 2 43 1 43 1 10 3 45 89 14 85 13 1 19 2 86 45 90 13 0 13 1 33 91 18 2 43 1 43 1 64 7 13 5 19 1 92 65 10 3 45 93 10 2 45 94 13 0 13 1 33 95 18 2 43 1 43 1 10 3 45 96 10 3 45 97 13 0 13 1 33 98 18 2 43 1 43 1 66 10 0 16 99 12 13 0 19 1 100 22 73 43 3 12 43 2 19 6 57 12 14 50 19 1 58 22 73 38 556 42 101 551 13 0 14 102 19 2 30 16 31 12 9 1 19 2 54 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 103 19 5 57 12 14 50 19 1 58 22 73 38 491 13 0 14 104 19 2 30 16 31 12 9 1 19 2 54 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 105 19 5 57 12 14 50 19 1 58 22 73 38 433 13 0 14 106 19 2 30 16 31 12 9 1 19 2 54 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 107 19 5 57 12 14 50 19 1 58 22 73 38 375 13 0 15 108 19 2 30 39 338 13 0 15 108 19 2 30 45 109 10 0 4 45 110 13 2 15 111 19 2 30 45 112 10 0 4 45 113 10 3 16 31 12 9 1 19 2 54 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 114 19 5 57 12 14 50 19 1 58 22 73 38 253 15 32 13 2 19 1 115 17 116 76 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 117 19 5 57 12 14 50 19 1 58 22 73 38 200 10 1 16 31 12 9 1 19 2 54 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 118 19 5 57 12 14 50 19 1 58 22 73 38 147 10 0 39 11 15 32 13 0 19 1 115 17 116 76 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 119 19 5 57 12 14 50 19 1 58 22 73 38 90 10 0 39 11 13 0 19 1 36 12 19 1 120 76 39 42 14 50 15 51 19 0 52 73 39 12 19 0 53 16 31 12 9 1 19 2 54 12 19 0 55 12 15 121 19 5 57 12 14 50 19 1 58 22 73 38 33 15 122 14 16 14 17 14 18 14 17 14 65 15 123 14 22 15 41 14 20 9 9 14 47 10 4 6 1 12 19 13 25 43 4 38 29 15 124 14 16 14 17 14 18 14 17 14 65 15 125 14 22 15 41 14 47 10 0 6 1 12 19 11 25 38 3 75 73 29) #108# #1# 134601) clos::install-method)) #1# 134601) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 93 12 19 2 94 1 0 73 29) #109=#A(t (95) (common-lisp-user::params-vision-module ext::location (defun common-lisp-user::params-vision-module) (#1# . 141231) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::param) common-lisp-user::vis-mod common-lisp-user::param consp :optimize-visual #:g12377 #:g12378 (setf common-lisp-user::optimize-p) :viewing-distance #:g12379 #:g12380 (setf common-lisp-user::viewing-distance) common-lisp-user::viewing-distance numberp common-lisp-user::ppi #:g12381 * round #:g12382 (setf common-lisp-user::view-dist) :pixels-per-inch #:g12383 #:g12384 (setf common-lisp-user::ppi) #:g12385 #:g12386 (setf common-lisp-user::view-dist) :visual-attention-latency #:g12387 common-lisp-user::sgp common-lisp-user::safe-seconds->ms #:g12388 (setf common-lisp-user::move-attn-latency) :scene-change-threshold #:g12389 #:g12390 (setf common-lisp-user::change-threshold) :visual-finst-span #:g12391 #:g12392 (setf common-lisp-user::finst-span) common-lisp-user::check-finsts :visual-movement-tolerance #:g12393 #:g12394 (setf common-lisp-user::move-allowance) :visual-num-finsts #:g12395 #:g12396 (setf common-lisp-user::num-finst) :visual-onset-span #:g12397 #:g12398 (setf common-lisp-user::new-span) :auto-attend #:g12399 #:g12400 (setf common-lisp-user::auto-attend) :test-feats #:g12401 #:g12402 (setf common-lisp-user::test-feats) :delete-visicon-chunks #:g12403 #:g12404 (setf common-lisp-user::purge-visicon) :unstuff-visual-location #:g12405 #:g12406 (setf common-lisp-user::unstuff-loc) :overstuff-visual-location #:g12407 #:g12408 (setf common-lisp-user::overstuff-loc) common-lisp-user::optimize-p common-lisp-user::change-threshold common-lisp-user::move-attn-latency common-lisp-user::ms->seconds common-lisp-user::finst-span common-lisp-user::move-allowance common-lisp-user::num-finst common-lisp-user::new-span common-lisp-user::auto-attend common-lisp-user::test-feats common-lisp-user::purge-visicon common-lisp-user::unstuff-loc common-lisp-user::overstuff-loc #Y(common-lisp-user::params-vision-module nil nil (24 45 7 24 45 8 26 10 0 16 9 39 550 10 0 4 42 10 24 10 1 45 11 10 1 5 45 12 13 0 13 1 33 13 18 2 43 1 43 1 38 519 42 14 80 10 1 45 15 10 1 5 45 16 13 0 13 1 33 17 18 2 43 1 43 1 13 1 19 1 18 16 19 39 8 13 1 19 1 20 16 19 73 39 38 10 1 45 21 13 2 19 1 18 12 13 2 19 1 20 12 19 2 22 12 19 1 23 45 24 13 0 13 1 33 25 18 2 43 1 43 1 38 437 42 26 80 10 1 45 27 10 1 5 45 28 13 0 13 1 33 29 18 2 43 1 43 1 13 1 19 1 18 16 19 39 8 13 1 19 1 20 16 19 73 39 38 10 1 45 30 13 2 19 1 18 12 13 2 19 1 20 12 19 2 22 12 19 1 23 45 31 13 0 13 1 33 32 18 2 43 1 43 1 38 355 42 33 34 10 1 45 34 10 1 5 12 15 35 19 2 36 45 37 13 0 13 1 33 38 18 2 43 1 43 1 10 0 5 73 38 319 42 39 24 10 1 45 40 10 1 5 45 41 13 0 13 1 33 42 18 2 43 1 43 1 38 293 42 43 39 10 1 45 44 10 1 5 12 15 35 19 2 36 45 45 13 0 13 1 33 46 18 2 43 1 43 1 13 1 19 1 47 10 0 5 73 38 252 42 48 24 10 1 45 49 10 1 5 45 50 13 0 13 1 33 51 18 2 43 1 43 1 38 226 42 52 33 10 1 45 53 10 1 5 45 54 13 0 13 1 33 55 18 2 43 1 43 1 13 1 19 1 47 10 0 5 73 38 191 42 56 34 10 1 45 57 10 1 5 12 15 35 19 2 36 45 58 13 0 13 1 33 59 18 2 43 1 43 1 10 0 5 73 38 155 42 60 24 10 1 45 61 10 1 5 45 62 13 0 13 1 33 63 18 2 43 1 43 1 38 129 42 64 24 10 1 45 65 10 1 5 45 66 13 0 13 1 33 67 18 2 43 1 43 1 38 103 42 68 24 10 1 45 69 10 1 5 45 70 13 0 13 1 33 71 18 2 43 1 43 1 38 77 42 72 46 10 1 45 73 10 1 5 16 19 39 12 10 1 5 12 15 35 19 2 36 38 4 10 1 5 45 74 13 0 13 1 33 75 18 2 43 1 43 1 10 0 5 73 38 29 42 76 24 10 1 45 77 10 1 5 45 78 13 0 13 1 33 79 18 2 43 1 43 1 38 3 75 73 38 157 10 0 42 10 8 13 1 19 1 80 38 145 42 39 8 13 1 19 1 81 38 135 42 33 12 13 1 19 1 82 12 19 1 83 38 121 42 43 12 13 1 19 1 84 12 19 1 83 38 107 42 48 8 13 1 19 1 85 38 97 42 52 8 13 1 19 1 86 38 87 42 56 12 13 1 19 1 87 12 19 1 83 38 73 42 60 8 13 1 19 1 88 38 63 42 64 8 13 1 19 1 89 38 53 42 68 8 13 1 19 1 90 38 43 42 72 28 13 1 19 1 91 16 19 39 12 13 1 19 1 91 12 19 1 83 38 6 13 1 19 1 91 38 13 42 76 8 13 1 19 1 92 38 3 75 73 29) #109# #1# 141231) si::fset)) #1# 141231) #Y(si::bytecodes nil nil (14 0 15 1 14 2 14 3 14 4 11 5 6 3 12 14 6 15 7 14 8 1 29 12 19 7 30 12 15 31 14 6 15 32 14 8 1 43 12 14 44 14 45 19 7 30 6 2 12 14 46 14 47 1 53 12 14 54 15 55 14 56 15 57 14 58 15 59 19 9 60 12 14 61 14 47 15 62 14 54 14 45 14 56 15 63 14 58 15 64 19 9 60 12 14 65 14 47 15 66 14 54 15 67 14 56 15 68 14 58 15 69 19 9 60 12 14 70 14 47 15 66 14 54 15 71 14 56 15 72 14 58 15 73 19 9 60 12 14 74 14 47 15 66 14 54 15 75 14 56 15 76 14 58 15 77 19 9 60 12 14 78 14 47 15 79 14 54 9 4 14 56 15 80 14 58 15 81 19 9 60 12 14 82 14 47 15 66 14 54 15 75 14 56 15 83 14 58 15 84 19 9 60 12 14 85 14 47 15 62 14 54 77 14 56 15 86 14 58 15 87 19 9 60 12 14 88 14 47 15 62 14 54 14 45 14 56 15 89 14 58 15 90 19 9 60 12 14 91 14 47 15 62 14 54 14 45 14 56 15 92 14 58 15 93 19 9 60 12 14 94 14 47 1 95 12 14 54 14 45 14 56 15 96 14 58 15 97 19 9 60 12 14 98 14 47 15 62 14 54 77 14 56 15 99 14 58 15 100 19 9 60 12 14 101 14 102 77 19 3 60 12 14 103 14 102 77 19 3 60 6 14 12 14 104 15 105 14 58 15 106 14 107 15 108 14 109 15 110 14 111 15 112 14 113 15 114 14 115 15 116 14 56 15 117 19 19 118 29) #110=#A(t (119) (:vision common-lisp-user::visual-location :request-params :attended :nearest :center :queries (common-lisp-user::attended) :status-fn common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12410 #:g12409 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #111="~&~@?~%" "  attended new          : ~S" (common-lisp-user::attended common-lisp-user::new) common-lisp-user::query-buffer format #:g12412 #:g12411 "  attended nil          : ~S" (common-lisp-user::attended nil) #:g12414 #:g12413 "  attended t            : ~S" (common-lisp-user::attended t) #Y(nil nil nil (26 15 9 19 1 10 47 1 11 45 12 10 1 39 18 13 0 19 1 13 76 39 10 13 0 19 1 14 12 19 1 15 39 26 13 0 19 1 14 12 19 1 15 12 15 16 15 17 15 1 15 18 19 2 19 12 19 4 20 43 2 15 9 19 1 10 47 1 21 45 22 10 1 39 18 13 0 19 1 13 76 39 10 13 0 19 1 14 12 19 1 15 39 26 13 0 19 1 14 12 19 1 15 12 15 16 15 23 15 1 15 24 19 2 19 12 19 4 20 43 2 15 9 19 1 10 47 1 25 45 26 10 1 39 18 13 0 19 1 13 76 39 10 13 0 19 1 14 12 19 1 15 73 39 26 13 0 19 1 14 12 19 1 15 12 15 16 15 27 15 1 15 28 19 2 19 12 19 4 20 43 2 29) #110# #1# 144005) common-lisp-user::define-buffer-fct common-lisp-user::visual (common-lisp-user::scene-change-value common-lisp-user::scene-change common-lisp-user::modality common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor common-lisp-user::last-command) common-lisp-user::v common-lisp-user::print-module-status #:g12416 #:g12415 "  scene-change          : ~S" (common-lisp-user::scene-change t) #:g12418 #:g12417 "  scene-change-value    : ~S" common-lisp-user::scene-change #Y(nil nil nil (26 15 0 19 1 10 45 33 13 0 19 1 34 15 9 19 1 10 47 1 35 45 36 10 1 39 18 13 0 19 1 13 76 39 10 13 0 19 1 14 12 19 1 15 39 26 13 0 19 1 14 12 19 1 15 12 15 16 15 37 15 31 15 38 19 2 19 12 19 4 20 43 2 15 9 19 1 10 47 1 39 45 40 10 1 39 18 13 0 19 1 13 76 39 10 13 0 19 1 14 12 19 1 15 73 39 25 13 0 19 1 14 12 19 1 15 12 15 16 15 41 13 2 19 1 42 4 12 19 4 20 43 2 43 1 29) #110# #1# 144005) :trackable t :scene-change-threshold :valid-test common-lisp-user::x numberp #49# 1.0 <= #Y(nil nil nil (24 45 48 26 10 0 16 49 73 39 10 15 50 13 0 15 51 19 3 52 29) #110# #1# 144005) :default-value 0.25 :warning "a number in the range [0.0,1.0]" :documentation "Proportion of visicon which must change to signal a scene change" common-lisp-user::define-parameter :optimize-visual common-lisp-user::tornil "T or NIL" "If set to nil the default devices process text into sub-letter features" :visual-attention-latency common-lisp-user::nonneg 0.085 "a non-negative number" "Time for a shift of visual attention" :visual-finst-span 3.0 "a non-negative number" "Lifespan of a visual finst" :visual-movement-tolerance 0.5 "a non-negative number" "How far something can move while still being seen as the same object." :visual-num-finsts common-lisp-user::posnum "a positive number" "Number of visual finsts." :visual-onset-span "a non-negative number" "Lifespan of new visual objects being marked as NEW" :auto-attend "T or NIL" "Whether visual-location requests automatically generate an attention shift" :test-feats "T or NIL" "Whether proc-display should use the features to compare items instead of just the chunk names" :delete-visicon-chunks "T or NIL" "Whether proc-display should delete and unintern the name of old chunks that were in the visicon" :unstuff-visual-location #Y(nil nil nil (24 45 48 26 13 0 19 1 62 73 40 5 10 0 16 49 29) #110# #1# 144005) "T, NIL, or a number" "Whether chunks stuffed into the visual-location buffer should be automatically cleared by the module if unused" :overstuff-visual-location "T or NIL" "Whether a chunk previously stuffed into the visual-location buffer can be overwritten by a new chunk to be stuffed" :viewing-distance :owner :pixels-per-inch :version "5.0" "A module to provide a model with a visual attention system" :creation common-lisp-user::create-vision-module :reset common-lisp-user::reset-vision-module :query common-lisp-user::query-vision-module :request common-lisp-user::pm-module-request :params common-lisp-user::params-vision-module common-lisp-user::warn-vision common-lisp-user::define-module-fct)) #1# 144005) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::build-string-feats ext::location (defgeneric common-lisp-user::build-string-feats) (#1# . 148202) ext::annotate :lambda-list (common-lisp-user::vis-mod &key common-lisp-user::text common-lisp-user::start-x common-lisp-user::y-pos common-lisp-user::width-fct common-lisp-user::height common-lisp-user::obj common-lisp-user::line-height common-lisp-user::x-fct) :delete-methods t :documentation "Build a list of visual-locations representing a string with the given geometry." ensure-generic-function)) #1# 148202) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 75 12 14 76 19 6 77 29) #112=#A(t (78) (common-lisp-user::build-string-feats ext::location (defmethod common-lisp-user::build-string-feats (common-lisp-user::vis-mod common-lisp-user::vision-module) &key common-lisp-user::text common-lisp-user::start-x common-lisp-user::y-pos common-lisp-user::width-fct common-lisp-user::height common-lisp-user::obj #113=(common-lisp-user::line-height 0) common-lisp-user::x-fct) (#1# . 149407) ext::annotate (common-lisp-user::vision-module) (common-lisp-user::vis-mod &key common-lisp-user::text common-lisp-user::start-x common-lisp-user::y-pos common-lisp-user::width-fct common-lisp-user::height common-lisp-user::obj #113# common-lisp-user::x-fct) common-lisp-user::vis-mod (t :x-fct :line-height :obj :height :width-fct :y-pos :start-x :text) common-lisp-user::text common-lisp-user::start-x common-lisp-user::y-pos common-lisp-user::width-fct common-lisp-user::height common-lisp-user::obj common-lisp-user::line-height common-lisp-user::x-fct "NIL passed to BUILD-STRING-FEATS." error "" equal common-lisp-user::f-accum " " common-lisp-user::spc-wdth common-lisp-user::vis-loc-slots common-lisp-user::coord-slots common-lisp-user::x-slot second common-lisp-user::y-slot common-lisp-user::string-to-lines si::%dolist-var common-lisp-user::line functionp symbolp fboundp common-lisp-user::x numberp common-lisp-user::curr-width common-lisp-user::curr-x common-lisp-user::optimize-p common-lisp-user::chop-string common-lisp-user::word stringp common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::value common-lisp-user::kind common-lisp-user::width round + common-lisp-user::define-chunks-fct common-lisp-user::vl string-downcase common-lisp-user::chunk-real-visual-value-setf * #:g12640 char length si::%dotimes-var common-lisp-user::idx 1+ subseq alphanumericp char-upcase - common-lisp-user::char-to-features graphic-char-p #\  char-equal common-lisp-user::mkstr #:g12656 < #:g12658 common-lisp-user::flatten nreverse #Y(common-lisp-user::build-string-feats nil nil (24 45 7 28 8 22 40 2 77 46 9 22 40 2 77 46 10 22 40 2 77 46 11 22 40 2 77 46 12 22 40 2 77 46 13 22 40 2 77 46 14 22 40 3 9 0 46 15 22 40 2 77 46 16 10 7 39 19 10 6 39 15 10 5 39 11 10 4 39 7 10 3 39 3 10 1 76 39 6 15 17 19 1 18 13 7 1 19 17 20 76 73 39 511 75 45 21 13 5 15 22 20 1 23 45 23 13 10 19 1 24 45 25 10 0 4 45 26 10 1 16 27 45 28 13 12 19 1 29 45 30 75 45 31 38 451 10 1 4 51 0 10 7 16 32 40 11 10 7 16 33 39 5 10 7 16 34 39 32 13 7 13 0 13 13 13 9 20 3 23 45 35 10 0 16 36 39 6 10 0 73 38 4 10 14 73 43 1 38 4 10 13 73 12 77 46 37 46 38 13 17 19 1 39 39 148 13 17 13 2 19 2 40 45 30 75 45 41 38 126 10 1 4 51 0 10 0 16 42 39 80 13 15 13 0 20 1 23 51 3 15 43 15 44 13 6 13 16 15 13 13 14 15 45 15 9 15 46 15 9 15 47 13 3 13 7 13 2 13 3 9 2 19 2 48 12 19 2 49 6 14 6 1 12 19 1 50 4 45 51 13 0 10 11 3 51 11 13 0 13 1 19 1 52 12 19 2 53 43 1 10 0 16 42 39 5 10 3 38 8 13 0 13 9 19 2 54 45 55 13 3 13 0 19 2 49 51 3 43 1 10 1 5 51 1 10 1 40 -128 43 2 38 212 75 45 56 10 3 16 57 45 58 8 0 45 59 38 184 13 5 10 0 17 56 51 2 13 16 13 5 13 0 10 0 16 60 12 19 3 61 12 20 1 23 51 4 10 2 16 62 39 41 13 20 10 2 16 63 12 13 3 13 3 13 4 19 2 49 12 9 1 19 2 64 12 13 17 13 15 13 14 19 7 65 12 10 11 3 51 11 38 89 10 2 16 66 39 9 13 2 15 67 19 2 68 76 39 73 15 43 15 44 13 7 13 17 15 13 13 15 15 45 15 9 15 46 15 9 15 47 13 4 13 8 13 3 13 4 9 2 19 2 48 12 19 2 49 6 14 6 1 12 19 1 50 4 45 51 13 0 10 12 3 51 12 13 0 13 3 19 1 69 12 19 2 53 43 1 38 1 10 4 45 70 13 4 13 0 19 2 49 51 4 43 1 10 0 16 60 51 0 13 0 13 1 19 2 71 40 -191 43 2 43 1 10 10 45 72 13 15 13 0 19 2 49 51 15 43 1 43 2 10 1 5 51 1 10 1 40 -453 75 51 0 13 6 19 1 73 16 74 43 2 43 5 29) #112# #1# 149407) t clos::install-method)) #1# 149407) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::char-to-features ext::location (defgeneric common-lisp-user::char-to-features) (#1# . 152456) ext::annotate :lambda-list (common-lisp-user::vis-mod char common-lisp-user::left common-lisp-user::right common-lisp-user::y common-lisp-user::height common-lisp-user::obj) :delete-methods t :documentation "Returns a list of basic visual-location chunks for a characer" ensure-generic-function)) #1# 152456) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 41 12 14 42 19 6 43 29) #114=#A(t (44) (common-lisp-user::char-to-features ext::location (defmethod common-lisp-user::char-to-features (common-lisp-user::vis-mod common-lisp-user::vision-module) (char character) (common-lisp-user::left number) (common-lisp-user::right number) (common-lisp-user::y number) (common-lisp-user::height number) common-lisp-user::obj) (#1# . 152880) ext::annotate (common-lisp-user::vision-module character number number number number t) (common-lisp-user::vis-mod char common-lisp-user::left common-lisp-user::right common-lisp-user::y common-lisp-user::height common-lisp-user::obj) common-lisp-user::vis-mod char common-lisp-user::left common-lisp-user::right common-lisp-user::y common-lisp-user::height common-lisp-user::obj - round + common-lisp-user::xpos 1+ common-lisp-user::width common-lisp-user::active-cfs common-lisp-user::getfeats common-lisp-user::get-icon-feats pairlis common-lisp-user::features common-lisp-user::accum common-lisp-user::vis-loc-slots common-lisp-user::coord-slots common-lisp-user::x-slot second common-lisp-user::y-slot si::%dolist-var common-lisp-user::feats symbolp common-lisp-user::chunk-p-fct common-lisp-user::define-chunks-fct common-lisp-user::isa common-lisp-user::char-primitive common-lisp-user::value common-lisp-user::vl common-lisp-user::chunk-real-visual-value-setf #Y(common-lisp-user::char-to-features nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 24 45 12 24 45 13 26 13 4 13 3 13 4 19 2 14 12 9 2 19 2 15 12 19 2 16 45 17 13 4 13 5 19 2 14 16 18 45 19 13 8 19 1 20 12 13 7 19 2 21 12 13 8 19 1 20 12 13 7 19 2 22 12 19 2 23 45 24 75 45 25 13 10 19 1 26 45 27 10 0 4 45 28 10 1 16 29 45 30 10 4 45 31 75 45 32 38 130 10 1 4 51 0 10 0 4 16 33 39 9 10 0 4 12 19 1 34 76 39 12 10 0 4 6 1 6 1 12 19 1 35 10 0 5 16 33 39 9 10 0 5 12 19 1 34 76 39 12 10 0 5 6 1 6 1 12 19 1 35 15 36 15 37 13 2 13 11 15 12 13 10 15 38 10 0 5 12 15 19 13 7 13 3 13 8 15 9 13 13 15 10 10 12 6 16 6 1 12 19 1 35 4 45 39 13 0 10 6 3 51 6 13 0 10 1 4 12 19 2 40 43 1 10 1 5 51 1 10 1 40 -132 75 51 0 10 5 73 43 2 43 7 29) #114# #1# 152880) t clos::install-method)) #1# 152880) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 41 12 19 2 42 1 0 73 29) #115=#A(t (43) (common-lisp-user::chop-string ext::location (defun common-lisp-user::chop-string) (#1# . 154095) ext::annotate :lambda-list (common-lisp-user::vis-mod common-lisp-user::str) common-lisp-user::vis-mod common-lisp-user::str "" string= char common-lisp-user::char->state common-lisp-user::oldstate common-lisp-user::state common-lisp-user::chr "" common-lisp-user::wrd common-lisp-user::cnt common-lisp-user::accum length si::%dotimes-var common-lisp-user::i :word eq :misc common-lisp-user::mkstr :space "" 1+ #:g12734 + < "" nreverse numberp #:g12738 #:g12740 - #:g12739 rplaca #Y(common-lisp-user::chop-string nil nil (24 45 7 24 45 8 26 13 0 15 9 19 2 10 76 73 39 302 13 1 13 0 8 0 17 11 12 19 2 12 45 13 75 45 14 75 45 15 1 16 45 17 8 0 45 18 75 45 19 10 6 16 20 45 21 8 0 45 22 38 184 13 8 10 0 17 11 51 5 13 9 13 5 19 2 12 51 6 13 6 11 23 17 24 39 7 13 7 11 23 17 24 40 15 13 6 11 25 17 24 39 7 13 7 11 25 17 24 39 16 13 4 13 5 19 2 26 51 4 8 0 51 3 38 110 13 7 11 23 17 24 40 7 13 7 11 25 17 24 39 8 13 7 10 6 17 24 76 39 32 13 4 10 2 3 51 2 13 6 11 27 17 24 76 39 10 13 5 19 1 26 51 4 38 5 1 28 51 4 38 54 13 7 11 27 17 24 39 8 13 6 10 7 17 24 76 39 22 10 3 16 29 12 10 2 3 51 2 13 4 13 5 19 2 26 51 4 38 16 8 1 45 30 13 4 13 0 19 2 31 51 4 43 1 10 6 51 7 10 0 16 29 51 0 13 0 13 1 19 2 32 40 -191 43 2 13 2 15 33 19 2 10 76 39 8 13 2 10 0 3 51 0 10 0 16 34 51 0 10 0 4 16 35 39 30 10 0 45 36 8 1 45 37 10 1 4 12 13 0 19 2 38 45 39 13 2 10 0 17 40 10 0 43 3 10 0 73 43 6 29) #115# #1# 154095) si::fset)) #1# 154095) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 30 12 19 2 31 1 0 73 29) #116=#A(t (32) (common-lisp-user::add-word-characters ext::location (defun common-lisp-user::add-word-characters) (#1# . 155601) ext::annotate :lambda-list (&rest common-lisp-user::chars) common-lisp-user::chars :vision common-lisp-user::get-module-fct common-lisp-user::vis-mod si::%dolist-var common-lisp-user::x characterp #:g12752 #:g12750 common-lisp-user::other-word-chars adjoin #:g12751 (setf common-lisp-user::other-word-chars) *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No vision module available could not add new word characters." format finish-output #Y(common-lisp-user::add-word-characters nil nil (27 45 7 15 8 19 1 9 45 10 10 0 39 73 10 1 45 11 75 45 12 38 48 10 1 4 51 0 10 0 16 13 39 32 10 0 45 14 10 3 45 15 13 1 13 0 19 1 16 12 19 2 17 45 18 13 0 13 1 33 19 18 2 43 3 10 1 5 51 1 10 1 40 -50 75 51 0 13 2 19 1 16 43 2 38 40 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 27 19 5 28 12 14 20 19 1 29 22 73 43 1 29) #116# #1# 155601) si::fset)) #1# 155601) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 15 0 15 18 15 19 19 3 20 1 0 73 29) #117=#A(t (21) (common-lisp-user::char->state ext::location (defun common-lisp-user::char->state) (#1# . 155925) ext::annotate :lambda-list (common-lisp-user::vis-mod char) common-lisp-user::vis-mod char alphanumericp common-lisp-user::other-word-chars find :word common-lisp-user::whitespace-p :space :misc #Y(common-lisp-user::char->state nil nil (24 45 7 24 45 8 26 10 0 16 9 40 12 13 0 13 1 19 1 10 12 19 2 11 39 6 11 12 73 38 16 13 0 19 1 13 39 6 11 14 73 38 4 11 15 73 29) #117# #1# 155925) si::fset function "Given a character, return :WORD, :SPACE, or :MISC" si::set-documentation)) #1# 155925) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 15 0 15 13 15 14 19 3 15 1 0 73 29) #118=#A(t (16) (common-lisp-user::whitespace-p ext::location (defun common-lisp-user::whitespace-p) (#1# . 156181) ext::annotate :lambda-list (char) char graphic-char-p #\  eq #Y(common-lisp-user::whitespace-p nil nil (24 45 7 26 10 0 16 8 76 73 40 7 13 0 1 9 17 10 29) #118# #1# 156181) si::fset function "Returns T if <char> is a whitespace character (non-printing or space)" si::set-documentation)) #1# 156181) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #119=#A(t (30) (common-lisp-user::fill-default-vis-obj-slots ext::location (defun common-lisp-user::fill-default-vis-obj-slots) (#1# . 156372) ext::annotate :lambda-list (common-lisp-user::vis-obj common-lisp-user::vis-loc) common-lisp-user::vis-obj common-lisp-user::vis-loc common-lisp-user::chunk-p-fct common-lisp-user::height common-lisp-user::chunk-slot-value-fct common-lisp-user::width common-lisp-user::color common-lisp-user::value common-lisp-user::chunk-real-visual-value common-lisp-user::it common-lisp-user::mod-chunk-fct *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid chunk passed to fill-default-vis-obj-slots ~S not updated using ~s." format finish-output #Y(common-lisp-user::fill-default-vis-obj-slots nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 6 13 0 19 1 9 39 67 13 1 15 10 13 0 15 10 19 2 11 12 15 12 13 0 15 12 19 2 11 12 15 13 13 0 15 13 19 2 11 12 15 14 13 0 19 1 15 45 16 10 0 39 5 10 0 38 8 13 1 15 14 19 2 11 43 1 6 8 12 19 2 17 38 44 14 18 15 19 19 0 20 73 39 12 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 25 13 1 13 0 19 7 26 12 14 18 19 1 27 22 73 29) #119# #1# 156372) si::fset)) #1# 156372) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #120=#A(t (16) (common-lisp-user::compute-vis-loc-size ext::location (defun common-lisp-user::compute-vis-loc-size) (#1# . 157095) ext::annotate :lambda-list (common-lisp-user::vis-loc common-lisp-user::vis-m) common-lisp-user::vis-loc common-lisp-user::vis-m common-lisp-user::size common-lisp-user::simple-size common-lisp-user::it 1.0 common-lisp-user::set-chunk-slot-value-fct #Y(common-lisp-user::compute-vis-loc-size nil nil (24 45 7 24 45 8 26 13 1 15 9 13 1 13 0 19 2 10 45 11 10 0 39 6 10 0 73 38 4 1 12 73 12 43 1 19 3 13 29) #120# #1# 157095) si::fset)) #1# 157095) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #121=#A(t (24) (common-lisp-user::simple-size ext::location (defun common-lisp-user::simple-size) (#1# . 157319) ext::annotate :lambda-list (common-lisp-user::vis-loc common-lisp-user::vis-m) common-lisp-user::vis-loc common-lisp-user::vis-m common-lisp-user::width common-lisp-user::chunk-slot-value-fct common-lisp-user::height common-lisp-user::vis-loc-slots third common-lisp-user::d common-lisp-user::h common-lisp-user::w numberp 0.01 common-lisp-user::pm-pixels-to-angle * round #Y(common-lisp-user::simple-size nil nil (24 45 7 24 45 8 26 13 1 15 9 19 2 10 12 13 1 15 11 19 2 10 12 13 1 13 0 19 1 12 16 13 12 19 2 10 12 46 14 46 15 46 16 10 0 16 17 39 11 10 1 16 17 39 5 10 2 16 17 73 39 32 15 18 13 0 13 2 19 2 19 12 13 1 13 2 19 2 19 12 19 2 20 12 15 18 19 2 21 12 19 2 20 43 3 29) #121# #1# 157319) si::fset)) #1# 157319) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 37 12 19 2 38 1 0 73 29) #122=#A(t (39) (common-lisp-user::approach-width ext::location (defun common-lisp-user::approach-width) (#1# . 157714) ext::annotate :lambda-list (common-lisp-user::vis-loc common-lisp-user::theta common-lisp-user::vis-m) common-lisp-user::vis-loc common-lisp-user::theta common-lisp-user::vis-m common-lisp-user::chunk-visual-approach-width-fn common-lisp-user::it common-lisp-user::width common-lisp-user::chunk-slot-value-fct common-lisp-user::x common-lisp-user::height common-lisp-user::y common-lisp-user::vis-loc-slots third common-lisp-user::z numberp atan abs common-lisp-user::ret-width common-lisp-user::critical-theta pi / > - = <= cos common-lisp-user::pm-pixels-to-angle :motor common-lisp-user::get-module-fct common-lisp-user::default-target-width 1.0 #Y(common-lisp-user::approach-width nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 12 13 0 13 3 13 2 20 2 23 38 211 13 3 15 12 19 2 13 45 14 13 4 15 15 19 2 13 45 16 13 5 13 3 19 1 17 16 18 12 19 2 13 45 19 10 2 16 20 39 5 10 1 16 20 39 141 13 1 13 2 19 2 21 12 10 5 16 22 12 77 46 23 46 8 46 24 13 1 14 25 9 2 19 2 26 12 19 2 27 39 10 14 25 13 1 19 2 28 51 1 13 1 9 0 19 2 29 39 5 10 5 38 62 13 1 14 25 9 2 19 2 26 12 19 2 29 39 5 10 4 38 43 13 1 13 0 19 2 30 39 13 13 5 10 1 16 31 12 19 2 26 38 22 13 4 14 25 9 2 19 2 26 12 13 1 19 2 28 16 31 12 19 2 26 51 2 13 2 10 3 16 20 73 39 4 10 3 73 12 19 2 32 43 3 38 24 15 33 19 1 34 45 11 10 0 39 8 13 0 19 1 35 38 4 1 36 73 43 1 43 3 43 1 29) #122# #1# 157714) si::fset)) #1# 157714) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #123=#A(t (15) (common-lisp-user::add-visicon-item ext::location (defun common-lisp-user::add-visicon-item) (#1# . 159108) ext::annotate :lambda-list (common-lisp-user::obj &optional (common-lisp-user::update t)) common-lisp-user::obj t common-lisp-user::update :vision common-lisp-user::get-module-fct common-lisp-user::add-screen-object #Y(common-lisp-user::add-visicon-item nil nil (24 45 7 25 40 3 14 8 46 9 26 13 1 15 10 19 1 11 12 13 0 19 3 12 29) #123# #1# 159108) si::fset)) #1# 159108) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #124=#A(t (15) (common-lisp-user::delete-visicon-item ext::location (defun common-lisp-user::delete-visicon-item) (#1# . 159289) ext::annotate :lambda-list (common-lisp-user::obj &optional (common-lisp-user::update t)) common-lisp-user::obj t common-lisp-user::update :vision common-lisp-user::get-module-fct common-lisp-user::delete-screen-object #Y(common-lisp-user::delete-visicon-item nil nil (24 45 7 25 40 3 14 8 46 9 26 13 1 15 10 19 1 11 12 13 0 19 3 12 29) #124# #1# 159289) si::fset)) #1# 159289) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 53 12 19 2 54 1 0 73 29) #125=#A(t (55) (common-lisp-user::update-visicon-item ext::location (defun common-lisp-user::update-visicon-item) (#1# . 159402) ext::annotate :lambda-list (common-lisp-user::obj &optional (common-lisp-user::update t) &key common-lisp-user::same-chunks common-lisp-user::chunks) common-lisp-user::obj t common-lisp-user::update (nil :chunks :same-chunks) common-lisp-user::same-chunks common-lisp-user::chunks :vision common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::delete-screen-object common-lisp-user::add-screen-object common-lisp-user::build-vis-locs-for common-lisp-user::flatten atom si::%dolist-var common-lisp-user::x common-lisp-user::chunk-special-visual-object eq common-lisp-user::chunk-visicon-entry common-lisp-user::visicon gethash common-lisp-user::old common-lisp-user::test-feats common-lisp-user::hash-visual-chunk-contents common-lisp-user::chunk-visicon-entry-setf common-lisp-user::copy-chunk-fct common-lisp-user::entry si::hash-set common-lisp-user::chunk-visual-tstamp common-lisp-user::chunk-visual-tstamp-setf common-lisp-user::chunk-visual-new-p common-lisp-user::chunk-visual-new-p-setf common-lisp-user::purge-visicon common-lisp-user::purge-chunk-fct *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk ~s is not currently in the visicon.  No update made." format finish-output "Chunk ~s is not a feature of the object ~s.  No update made." common-lisp-user::visicon-update #Y(common-lisp-user::update-visicon-item nil nil (24 45 7 25 40 3 14 8 46 9 28 10 22 40 2 77 46 11 22 40 2 77 46 12 15 13 19 1 14 45 15 10 2 40 3 10 1 76 39 20 13 4 13 0 77 19 3 16 13 4 13 0 13 3 19 3 17 38 269 10 1 76 39 16 13 4 13 0 19 2 18 12 19 1 19 51 1 38 13 10 1 16 20 39 7 10 1 6 1 51 1 10 1 45 21 75 45 22 38 211 10 1 4 51 0 13 0 19 1 23 12 10 6 17 24 39 149 13 0 19 1 25 12 13 2 19 1 26 12 19 2 27 45 28 10 0 39 86 13 1 13 3 19 1 29 39 8 13 1 19 1 30 38 4 10 1 73 12 19 2 31 13 1 19 1 32 45 33 13 2 19 1 25 12 13 4 19 1 26 12 13 0 19 3 34 13 0 13 1 19 1 35 12 19 2 36 13 0 13 1 19 1 37 12 19 2 38 13 4 19 1 39 39 6 13 1 19 1 40 43 1 38 39 14 41 15 42 19 0 43 73 39 12 19 0 44 16 45 12 9 1 19 2 46 12 19 0 47 12 15 48 13 1 19 6 49 14 41 19 1 50 43 1 38 41 14 41 15 42 19 0 43 73 39 12 19 0 44 16 45 12 9 1 19 2 46 12 19 0 47 12 15 51 13 0 13 6 19 7 49 14 41 19 1 50 10 1 5 51 1 10 1 40 -213 43 2 10 3 73 39 7 13 0 77 19 2 52 43 1 29) #125# #1# 159402) si::fset)) #1# 159402) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 61 12 14 9 19 6 62 29) #126=#A(t (63) (common-lisp-user::add-screen-object ext::location (defmethod common-lisp-user::add-screen-object common-lisp-user::obj (common-lisp-user::vm common-lisp-user::vision-module) &optional #127=(common-lisp-user::update t)) (#1# . 162568) ext::annotate (t common-lisp-user::vision-module) (common-lisp-user::obj common-lisp-user::vm &optional #127#) common-lisp-user::obj common-lisp-user::vm t common-lisp-user::update common-lisp-user::build-vis-locs-for common-lisp-user::flatten common-lisp-user::vfeats si::%dolist-var common-lisp-user::x common-lisp-user::valid-vis-loc-chunk common-lisp-user::vis-loc-slots third common-lisp-user::chunk-slot-value-fct numberp common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12872 #:g12871 common-lisp-user::printing-module-suppress-cmds #:g12873 #:g12874 #:g12875 (setf common-lisp-user::printing-module-suppress-cmds) (:viewing-distance) common-lisp-user::sgp-fct #:g12876 #:g12877 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::set-chunk-slot-value-fct common-lisp-user::size common-lisp-user::compute-vis-loc-size *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid visicon item ~s found when processing the display.  Must be a chunk with ~s and ~s slots." second format finish-output remove common-lisp-user::vl common-lisp-user::test-feats common-lisp-user::hash-visual-chunk-contents common-lisp-user::chunk-visicon-entry-setf common-lisp-user::chunk-visual-feature-name-setf #Y(nil nil nil (24 45 50 26 13 0 13 3 19 1 51 39 8 13 0 19 1 52 38 4 10 0 73 12 19 2 53 13 0 13 0 19 2 54 29) #126# #1# 162568) mapcar common-lisp-user::chunk-special-visual-object-setf common-lisp-user::enter-into-visicon #Y(nil nil nil (24 45 50 26 13 0 13 4 19 2 57 13 0 13 3 19 2 58 29) #126# #1# 162568) common-lisp-user::visicon-update #Y(common-lisp-user::add-screen-object nil nil (24 45 7 24 45 8 25 40 3 14 9 46 10 26 13 2 13 1 19 2 11 12 19 1 12 45 13 10 0 45 14 75 45 15 38 212 10 1 4 51 0 13 0 13 4 19 2 16 39 131 13 0 13 4 19 1 17 16 18 12 19 2 19 16 20 76 39 92 13 0 13 4 19 1 17 16 18 12 15 21 19 1 22 47 1 23 45 24 10 1 73 39 61 13 0 19 1 25 45 26 10 1 45 27 11 9 45 28 13 0 13 1 33 29 18 2 43 1 43 1 64 9 15 30 19 1 31 4 73 65 10 1 45 32 10 1 45 33 13 0 13 1 33 34 18 2 43 1 43 1 66 43 1 12 43 2 19 3 35 13 0 15 36 19 2 19 16 20 76 39 8 13 0 13 4 19 2 37 38 63 14 38 15 39 19 0 40 73 39 12 19 0 41 16 42 12 9 1 19 2 43 12 19 0 44 12 15 45 13 0 13 4 19 1 17 4 12 13 4 19 1 17 16 46 12 19 8 47 14 38 19 1 48 13 0 13 2 19 2 49 51 2 10 1 5 51 1 10 1 40 -214 43 2 34 55 12 13 0 19 2 56 34 59 12 13 0 19 2 56 10 1 73 39 7 13 2 77 19 2 60 43 1 29) #126# #1# 162568) clos::install-method)) #1# 162568) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 23 12 14 9 19 6 24 29) #128=#A(t (25) (common-lisp-user::delete-screen-object ext::location (defmethod common-lisp-user::delete-screen-object common-lisp-user::obj (common-lisp-user::vm common-lisp-user::vision-module) &optional #129=(common-lisp-user::update t)) (#1# . 163861) ext::annotate (t common-lisp-user::vision-module) (common-lisp-user::obj common-lisp-user::vm &optional #129#) common-lisp-user::obj common-lisp-user::vm t common-lisp-user::update common-lisp-user::key common-lisp-user::val common-lisp-user::chunk-special-visual-object eq common-lisp-user::visicon remhash common-lisp-user::purge-visicon common-lisp-user::chunk-p-fct common-lisp-user::purge-chunk-fct #Y(nil nil nil (24 45 11 24 45 12 26 13 4 13 0 19 1 13 17 14 73 39 30 13 1 13 3 19 1 15 17 16 13 3 19 1 17 39 6 13 0 19 1 18 73 39 6 13 0 19 1 19 29) #128# #1# 163861) maphash common-lisp-user::visicon-update #Y(common-lisp-user::delete-screen-object nil nil (24 45 7 24 45 8 25 40 3 14 9 46 10 26 34 20 12 13 1 19 1 15 17 21 10 0 73 39 7 13 1 77 19 2 22 29) #128# #1# 163861) clos::install-method)) #1# 163861) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 15 0 15 30 15 31 19 3 32 1 0 73 29) #130=#A(t (33) (common-lisp-user::set-char-feature-set ext::location (defun common-lisp-user::set-char-feature-set) (#1# . 164249) ext::annotate :lambda-list (common-lisp-user::setname) common-lisp-user::setname common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No current meta-process.  Cannot set a char feature set." format finish-output common-lisp-user::meta-p-current-model "No current model.  Cannot set a char feature set." :vision common-lisp-user::get-module-fct common-lisp-user::it common-lisp-user::set-cfs-mth t "No vision module found.  Cannot set a char feature set." #Y(common-lisp-user::set-char-feature-set nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 124 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 71 15 22 19 1 23 45 24 10 0 39 19 13 0 13 1 19 2 25 39 6 11 26 73 38 3 75 73 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 27 19 5 18 12 14 10 19 1 19 22 73 43 1 29) #130# #1# 164249) si::fset function "Sets the feature set used to represent characters when optimizing is off. <setname> should be a keyword." si::set-documentation)) #1# 164249) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 27 12 14 28 14 29 15 30 19 8 31 29) #131=#A(t (32) (common-lisp-user::set-visloc-default-request ext::location (defmethod common-lisp-user::set-visloc-default-request (common-lisp-user::vm common-lisp-user::vision-module) common-lisp-user::spec) (#1# . 164787) ext::annotate (common-lisp-user::vision-module t) (common-lisp-user::vm common-lisp-user::spec) common-lisp-user::vm common-lisp-user::spec common-lisp-user::set-visloc-default type common-lisp-user::chunk-spec-slot-spec :key common-lisp-user::spec-slot-name remove common-lisp-user::spec-slot-value common-lisp-user::slot-specs #:g12891 common-lisp-user::isa common-lisp-user::flatten append common-lisp-user::define-chunk-spec-fct #:g12892 (setf common-lisp-user::default-spec) common-lisp-user::update-new common-lisp-user::check-finsts common-lisp-user::stuff-visloc-buffer #Y(common-lisp-user::set-visloc-default-request nil nil (24 45 7 24 45 8 26 15 9 15 10 13 0 19 1 11 12 14 12 15 13 19 4 14 12 14 12 15 13 19 4 14 12 13 0 15 10 19 2 11 4 12 19 1 15 12 46 10 46 16 10 3 45 17 10 2 39 19 15 18 10 2 6 2 12 13 1 19 1 19 12 19 2 20 38 6 13 1 19 1 19 12 19 1 21 45 22 13 0 13 1 33 23 18 2 43 1 43 1 43 2 13 1 19 1 24 13 1 19 1 25 13 1 19 1 26 29) #131# #1# 164787) t :documentation "Assumes all the checking has been done already for validity" clos::install-method)) #1# 164787) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 15 0 15 16 15 17 19 3 18 1 0 73 29) #132=#A(t (19) (common-lisp-user::set-visloc-default ext::location (defmacro common-lisp-user::set-visloc-default) (#1# . 165397) ext::annotate :lambda-list (&rest common-lisp-user::params) #:g12894 #:g12893 #:g12895 common-lisp-user::params common-lisp-user::set-visloc-default-fct quote #Y(common-lisp-user::set-visloc-default nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #132# #1# 165397) t si::fset function "Macro to set the default specification for visual location buffer stuffing." si::set-documentation)) #1# 165397) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 39 12 19 2 40 15 0 15 41 15 42 19 3 43 1 0 73 29) #133=#A(t (44) (common-lisp-user::set-visloc-default-fct ext::location (defun common-lisp-user::set-visloc-default-fct) (#1# . 165560) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No current meta-process.  Cannot set visloc defaults." format finish-output common-lisp-user::meta-p-current-model "No current model.  Cannot set visloc defaults." :vision common-lisp-user::get-module-fct common-lisp-user::define-chunk-spec-fct common-lisp-user::chunk-spec :attended common-lisp-user::chunk-spec-slot-spec ":attended specification only allowed once in set-visloc-default." "Visloc defaults not changed." :nearest ":nearest specification only allowed once in set-visloc-default." "Visloc defaults not changed." #:g12898 #:g12899 (setf common-lisp-user::default-spec) t "Invalid chunk specification.  Default not changed." "No vision module found.  Cannot set visloc defaults." #Y(common-lisp-user::set-visloc-default-fct nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 370 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 317 15 22 19 1 23 39 271 13 0 19 1 24 45 25 10 0 39 217 13 0 14 26 19 2 27 16 14 12 9 1 19 2 15 39 78 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 28 19 5 18 14 10 19 1 19 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 29 19 5 18 12 14 10 19 1 19 22 73 38 121 13 0 14 30 19 2 27 16 14 12 9 1 19 2 15 39 78 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 31 19 5 18 14 10 19 1 19 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 32 19 5 18 12 14 10 19 1 19 22 73 38 27 15 22 19 1 23 45 33 10 1 45 34 13 0 13 1 33 35 18 2 43 1 43 1 11 36 73 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 37 19 5 18 12 14 10 19 1 19 22 73 43 1 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 38 19 5 18 12 14 10 19 1 19 22 73 29) #133# #1# 165560) si::fset function "Function to set the default specification for visual location buffer stuffing." si::set-documentation)) #1# 165560) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 29 12 19 2 30 15 0 15 31 15 32 19 3 33 1 0 73 29) #134=#A(t (34) (common-lisp-user::print-visicon ext::location (defun common-lisp-user::print-visicon) (#1# . 166742) ext::annotate :lambda-list :vision common-lisp-user::get-module-fct common-lisp-user::it common-lisp-user::update-new common-lisp-user::check-finsts common-lisp-user::printing-module #:g12905 #:g12904 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #111# "Loc        Att   Kind           Value             Color           ID" format #:g12907 #:g12906 "---------  ---   -------------  ----------------  --------------  -------------" common-lisp-user::x common-lisp-user::print-icon-feature #Y(nil nil nil (24 45 23 26 13 0 13 1 19 2 24 29) #134# #1# 166742) t common-lisp-user::visicon-chunks mapcar #Y(common-lisp-user::print-visicon nil nil (26 15 6 19 1 7 45 8 10 0 39 133 13 0 19 1 9 13 0 19 1 10 15 11 19 1 7 47 1 12 45 13 10 1 39 18 13 0 19 1 14 76 39 10 13 0 19 1 15 12 19 1 16 39 18 13 0 19 1 15 12 19 1 16 12 15 17 15 18 19 3 19 43 2 15 11 19 1 7 47 1 20 45 21 10 1 39 18 13 0 19 1 14 76 39 10 13 0 19 1 15 12 19 1 16 39 18 13 0 19 1 15 12 19 1 16 12 15 17 15 22 19 3 19 43 2 34 25 12 13 0 14 26 19 2 27 12 19 2 28 75 73 38 3 75 73 43 1 29) #134# #1# 166742) si::fset function "Print the Vision Module's visicon. For debugging." si::set-documentation)) #1# 166742) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 33 12 19 2 34 1 0 73 29) #135=#A(t (35) (common-lisp-user::print-icon-feature ext::location (defun common-lisp-user::print-icon-feature) (#1# . 167252) ext::annotate :lambda-list (common-lisp-user::chunk common-lisp-user::vis-mod) common-lisp-user::chunk common-lisp-user::vis-mod *print-pretty* common-lisp-user::vis-loc-slots common-lisp-user::coord-slots common-lisp-user::x-slot second common-lisp-user::y-slot common-lisp-user::printing-module common-lisp-user::get-module-fct #:g12911 #:g12910 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #111# "(~3D ~3D)~11T~A~17T~A~32T~S~50T~A~66T~A" common-lisp-user::chunk-slot-value-fct :vision common-lisp-user::feat-attended common-lisp-user::kind common-lisp-user::chunk-real-visual-value common-lisp-user::value common-lisp-user::color common-lisp-user::chunk-visual-feature-name format #Y(common-lisp-user::print-icon-feature nil nil (24 45 7 24 45 8 26 75 48 9 13 0 19 1 10 45 11 10 0 4 45 12 10 1 16 13 45 14 15 15 19 1 16 47 1 17 45 18 10 1 39 18 13 0 19 1 19 76 39 10 13 0 19 1 20 12 19 1 21 73 39 91 13 0 19 1 20 12 19 1 21 12 15 22 15 23 13 6 13 3 19 2 24 12 13 6 13 2 19 2 24 12 13 6 15 25 19 1 16 12 19 2 26 12 13 6 15 27 19 2 24 12 13 6 19 1 28 76 39 10 13 6 15 29 19 2 24 38 6 13 6 19 1 28 12 13 6 15 30 19 2 24 12 13 6 19 1 31 12 19 10 32 43 2 43 3 44 1 29) #135# #1# 167252) si::fset)) #1# 167252) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 15 0 15 36 15 37 19 3 38 1 0 73 29) #136=#A(t (39) (common-lisp-user::attend-visual-coordinates ext::location (defun common-lisp-user::attend-visual-coordinates) (#1# . 168039) ext::annotate :lambda-list (common-lisp-user::x common-lisp-user::y &optional common-lisp-user::distance) common-lisp-user::x common-lisp-user::y common-lisp-user::distance :vision common-lisp-user::get-module-fct common-lisp-user::it #:g12914 common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::vis-loc-slots second third numberp common-lisp-user::view-dist common-lisp-user::define-chunks-fct #:g12915 (setf common-lisp-user::current-marker) *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No vision module found.  Cannot set visual coordinates." format finish-output #Y(common-lisp-user::attend-visual-coordinates nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 15 10 19 1 11 45 12 10 0 39 76 10 0 45 13 15 14 15 15 13 1 19 1 16 4 12 13 4 13 1 19 1 16 16 17 12 13 3 13 1 19 1 16 16 18 12 10 2 16 19 39 5 10 2 38 6 13 1 19 1 20 6 8 6 1 12 19 1 21 4 45 22 13 0 13 1 33 23 18 2 43 1 43 1 38 40 14 24 15 25 19 0 26 73 39 12 19 0 27 16 28 12 9 1 19 2 29 12 19 0 30 12 15 31 19 5 32 12 14 24 19 1 33 22 73 43 1 29) #136# #1# 168039) si::fset function "Tells the Vision Module to start with attention at a certain location." si::set-documentation)) #1# 168039) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 41 12 19 2 42 1 0 73 29) #137=#A(t (43) (common-lisp-user::remove-visual-finsts ext::location (defun common-lisp-user::remove-visual-finsts) (#1# . 168640) ext::annotate :lambda-list (&key (common-lisp-user::set-new nil) (common-lisp-user::restuff nil)) (nil :restuff :set-new) common-lisp-user::set-new common-lisp-user::restuff :vision common-lisp-user::get-module-fct common-lisp-user::vis-m #:g12924 #:g12925 (setf common-lisp-user::finst-lst) common-lisp-user::key common-lisp-user::value common-lisp-user::mp-time-ms common-lisp-user::chunk-visual-tstamp-setf common-lisp-user::new common-lisp-user::chunk-visual-new-p-setf #Y(nil nil nil (24 45 16 24 45 17 26 13 0 19 0 18 12 19 2 19 13 0 15 20 19 2 21 29) #137# #1# 168640) common-lisp-user::visicon maphash common-lisp-user::chunk-visual-tstamp common-lisp-user::new-span - <= #Y(nil nil nil (24 45 16 24 45 17 26 13 0 19 0 18 12 13 0 19 1 25 12 13 2 19 1 26 12 19 3 27 12 19 1 28 39 6 1 20 73 38 3 75 73 12 19 2 21 29) #137# #1# 168640) common-lisp-user::stuff-visloc-buffer *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No vision module found.  Cannot remove the visual finsts." format finish-output #Y(common-lisp-user::remove-visual-finsts nil nil (28 7 22 40 2 77 46 8 22 40 2 77 46 9 15 10 19 1 11 45 12 10 0 39 59 10 0 45 13 75 45 14 13 0 13 1 33 15 18 2 43 1 43 1 10 2 39 13 34 22 12 13 0 19 1 23 17 24 38 11 34 29 12 13 0 19 1 23 17 24 10 1 39 6 13 0 19 1 30 75 73 38 40 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 38 19 5 39 12 14 31 19 1 40 22 73 43 1 29) #137# #1# 168640) si::fset)) #1# 168640))
