(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 14 5 1 7 12 1 8 7 3 12 15 9 15 10 15 11 15 12 14 5 1 15 12 1 16 7 3 12 15 17 15 18 15 19 14 5 1 22 12 1 23 7 3 6 10 12 77 19 4 24 29) #1=#A(t (25) (common-lisp-user::virtual-view ext::location (defclass common-lisp-user::virtual-view) (#2=#P"C:/Users/Son Pham/Desktop/actr7/devices/virtual/device.lisp" . 0) ext::annotate :initfunction make-hash-table #Y(nil nil nil (26 19 0 6 29) #1# #2# 0) (:initform (make-hash-table) :initargs (:subviews) :writers ((setf common-lisp-user::view-subviews)) :readers (common-lisp-user::view-subviews) :name common-lisp-user::view-subviews) (:initargs (:x-pos) :initform nil :writers ((setf common-lisp-user::x-pos)) :readers (common-lisp-user::x-pos) :name common-lisp-user::x-pos) (:initargs (:y-pos) :initform nil :writers ((setf common-lisp-user::y-pos)) :readers (common-lisp-user::y-pos) :name common-lisp-user::y-pos) (:initargs (:width) :initform nil :writers ((setf common-lisp-user::width)) :readers (common-lisp-user::width) :name common-lisp-user::width) (:initargs (:height) :initform nil :writers ((setf common-lisp-user::height)) :readers (common-lisp-user::height) :name common-lisp-user::height) #3="VV" common-lisp-user::new-name-fct #Y(nil nil nil (26 15 13 19 1 14 29) #1# #2# 0) (:initform (common-lisp-user::new-name-fct #3#) :initargs (:id) :writers ((setf common-lisp-user::id)) :readers (common-lisp-user::id) :name common-lisp-user::id) (:initargs (:handles-click-p) :initform t :writers ((setf common-lisp-user::handles-click-p)) :readers (common-lisp-user::handles-click-p) :name common-lisp-user::handles-click-p) (:initform nil :writers ((setf common-lisp-user::view-container)) :readers (common-lisp-user::view-container) :name common-lisp-user::view-container) (:initform 'common-lisp-user::black :initargs (:color) :writers ((setf common-lisp-user::color)) :readers (common-lisp-user::color) :name common-lisp-user::color) :test equal #Y(nil nil nil (26 14 20 15 21 19 2 6 29) #1# #2# 0) (:initform (make-hash-table :test 'equal) :writers ((setf common-lisp-user::loc-chunks)) :readers (common-lisp-user::loc-chunks) :name common-lisp-user::loc-chunks) clos::load-defclass)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::subviews ext::location (defgeneric common-lisp-user::subviews) (#2# . 9928) ext::annotate :lambda-list (common-lisp-user::view &optional common-lisp-user::subview-type) :delete-methods t :documentation "Returns a list of subviews of <view>." ensure-generic-function)) #2# 9928) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #4=#A(t (18) (common-lisp-user::subviews ext::location (defmethod common-lisp-user::subviews (common-lisp-user::vv common-lisp-user::virtual-view) &optional common-lisp-user::subview-type) (#2# . 10067) ext::annotate (common-lisp-user::virtual-view) (common-lisp-user::vv &optional common-lisp-user::subview-type) common-lisp-user::vv common-lisp-user::subview-type common-lisp-user::accum common-lisp-user::x common-lisp-user::y #Y(nil nil nil (24 45 10 24 45 11 26 13 0 10 2 3 51 2 73 29) #4# #2# 10067) common-lisp-user::view-subviews maphash #Y(common-lisp-user::subviews nil nil (24 45 7 25 40 2 77 46 8 26 75 45 9 34 12 12 13 2 19 1 13 17 14 10 0 73 43 1 29) #4# #2# 10067) t clos::install-method)) #2# 10067) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::set-view-position ext::location (defgeneric common-lisp-user::set-view-position) (#2# . 10309) ext::annotate :lambda-list (common-lisp-user::view common-lisp-user::x &optional common-lisp-user::y) :delete-methods t :documentation "Sets the position of <view> to the supplied location." ensure-generic-function)) #2# 10309) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #5=#A(t (19) (common-lisp-user::set-view-position ext::location (defmethod common-lisp-user::set-view-position (common-lisp-user::vv common-lisp-user::virtual-view) common-lisp-user::x &optional common-lisp-user::y) (#2# . 10465) ext::annotate (common-lisp-user::virtual-view t) (common-lisp-user::vv common-lisp-user::x &optional common-lisp-user::y) common-lisp-user::vv common-lisp-user::x common-lisp-user::y #:g16354 #:g16355 (setf common-lisp-user::x-pos) #:g16356 #:g16357 (setf common-lisp-user::y-pos) #Y(common-lisp-user::set-view-position nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 10 2 45 10 10 2 45 11 13 0 13 1 33 12 18 2 43 1 43 1 10 0 73 39 21 10 2 45 13 10 1 45 14 13 0 13 1 33 15 18 2 43 1 43 1 29) #5# #2# 10465) t clos::install-method)) #2# 10465) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::set-view-size ext::location (defgeneric common-lisp-user::set-view-size) (#2# . 10587) ext::annotate :lambda-list (common-lisp-user::view common-lisp-user::x &optional common-lisp-user::y) :delete-methods t :documentation "Set the size of <view> to the provided dimensions." ensure-generic-function)) #2# 10587) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #6=#A(t (19) (common-lisp-user::set-view-size ext::location (defmethod common-lisp-user::set-view-size (common-lisp-user::vv common-lisp-user::virtual-view) common-lisp-user::x &optional common-lisp-user::y) (#2# . 10737) ext::annotate (common-lisp-user::virtual-view t) (common-lisp-user::vv common-lisp-user::x &optional common-lisp-user::y) common-lisp-user::vv common-lisp-user::x common-lisp-user::y #:g16370 #:g16371 (setf common-lisp-user::width) #:g16372 #:g16373 (setf common-lisp-user::height) #Y(common-lisp-user::set-view-size nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 10 2 45 10 10 2 45 11 13 0 13 1 33 12 18 2 43 1 43 1 10 0 73 39 21 10 2 45 13 10 1 45 14 13 0 13 1 33 15 18 2 43 1 43 1 29) #6# #2# 10737) t clos::install-method)) #2# 10737) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::view-size ext::location (defgeneric common-lisp-user::view-size) (#2# . 10856) ext::annotate :lambda-list (common-lisp-user::view) :delete-methods t :documentation "Return the size of <view> as #(x y)." ensure-generic-function)) #2# 10856) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #7=#A(t (14) (common-lisp-user::view-size ext::location (defmethod common-lisp-user::view-size (common-lisp-user::vv common-lisp-user::virtual-view)) (#2# . 10974) ext::annotate (common-lisp-user::virtual-view) (common-lisp-user::vv) common-lisp-user::vv common-lisp-user::width common-lisp-user::height vector #Y(common-lisp-user::view-size nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 19 2 10 29) #7# #2# 10974) t clos::install-method)) #2# 10974) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::view-position ext::location (defgeneric common-lisp-user::view-position) (#2# . 11051) ext::annotate :lambda-list (common-lisp-user::view) :delete-methods t :documentation "Return the top left position of <view> in its container as #(x y)." ensure-generic-function)) #2# 11051) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #8=#A(t (14) (common-lisp-user::view-position ext::location (defmethod common-lisp-user::view-position (common-lisp-user::vv common-lisp-user::virtual-view)) (#2# . 11203) ext::annotate (common-lisp-user::virtual-view) (common-lisp-user::vv) common-lisp-user::vv common-lisp-user::x-pos common-lisp-user::y-pos vector #Y(common-lisp-user::view-position nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 19 2 10 29) #8# #2# 11203) t clos::install-method)) #2# 11203) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #9=#A(t (18) (common-lisp-user::view-loc ext::location (defmethod common-lisp-user::view-loc (common-lisp-user::vv common-lisp-user::virtual-view)) (#2# . 11283) ext::annotate (common-lisp-user::virtual-view) (common-lisp-user::vv) common-lisp-user::vv common-lisp-user::x-pos common-lisp-user::width round + common-lisp-user::y-pos common-lisp-user::height vector #Y(common-lisp-user::view-loc nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 9 2 19 2 10 12 19 2 11 12 13 0 19 1 12 12 13 0 19 1 13 12 9 2 19 2 10 12 19 2 11 12 19 2 14 29) #9# #2# 11283) t clos::install-method)) #2# 11283) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::add-subviews ext::location (defgeneric common-lisp-user::add-subviews) (#2# . 11420) ext::annotate :lambda-list (common-lisp-user::view &rest common-lisp-user::subviews) :delete-methods t :documentation "Add subviews to <view>." ensure-generic-function)) #2# 11420) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 17 12 14 18 19 6 19 29) #10=#A(t (20) (common-lisp-user::add-subviews ext::location (defmethod common-lisp-user::add-subviews (common-lisp-user::vv common-lisp-user::virtual-view) &rest common-lisp-user::subviews) (#2# . 11543) ext::annotate (common-lisp-user::virtual-view) (common-lisp-user::vv &rest common-lisp-user::subviews) common-lisp-user::vv common-lisp-user::subviews si::%dolist-var common-lisp-user::sub common-lisp-user::id common-lisp-user::view-subviews si::hash-set #:g16412 #:g16413 (setf common-lisp-user::view-container) #Y(common-lisp-user::add-subviews nil nil (24 45 7 27 45 8 10 0 45 9 75 45 10 38 48 10 1 4 51 0 13 0 19 1 11 12 13 3 19 1 12 12 13 0 19 3 13 10 0 45 14 10 4 45 15 13 0 13 1 33 16 18 2 43 1 43 1 10 1 5 51 1 10 1 40 -50 75 73 43 2 29) #10# #2# 11543) t clos::install-method)) #2# 11543) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 63 12 19 2 64 1 0 73 29) #11=#A(t (65) (common-lisp-user::purge-loc-chunks ext::location (defun common-lisp-user::purge-loc-chunks) (#2# . 11718) ext::annotate :lambda-list (common-lisp-user::table) common-lisp-user::table common-lisp-user::key common-lisp-user::value common-lisp-user::meta-process-names find #:g16436 common-lisp-user::*meta-processes* common-lisp-user::mps-table gethash #:g16434 common-lisp-user::mps-current #:g16435 #:g16437 #:g16438 common-lisp-user::meta-processes si::structure-set common-lisp-user::mp-models #:g16439 #:g16441 common-lisp-user::valid-model-name common-lisp-user::meta-p-current-model #:g16440 #:g16442 common-lisp-user::meta-p-models #:g16443 common-lisp-user::meta-process #:g16444 #:g16446 common-lisp-user::meta-p-cannot-define-model + #:g16445 common-lisp-user::purge-chunk-fct common-lisp-user::chunk-p-fct remove-if-not mapcar #:g16447 #:g16448 #:g16449 #:g16451 - #:g16450 *error-output* #12="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct length > common-lisp-user::current-model "~S does not name a model in the current meta-process" format finish-output "No actions taken in with-model because there is no current meta-process" #:g16452 #:g16453 "No actions taken in with-meta-process-eval because ~S does not name a meta-process" #Y(nil nil nil (24 45 8 24 45 9 26 10 1 4 12 19 0 10 12 19 2 11 73 39 433 10 1 4 45 12 13 0 14 13 19 1 14 12 19 2 15 45 16 10 0 39 368 14 13 19 1 17 45 18 11 13 45 19 10 2 45 20 13 1 15 21 9 2 13 0 19 4 22 43 1 43 1 64 308 10 4 5 12 19 0 23 12 19 2 11 73 39 293 14 13 19 1 17 45 24 10 0 39 241 10 5 5 45 25 13 0 19 1 26 39 184 14 13 19 1 17 39 10 14 13 19 1 17 12 19 1 27 45 28 14 13 19 1 17 45 29 13 2 13 3 19 1 30 12 19 2 15 45 31 13 1 15 32 9 5 13 0 19 4 22 43 1 43 1 14 13 19 1 17 45 33 8 1 45 34 13 1 19 1 35 12 13 0 19 2 36 45 37 13 2 15 32 9 29 13 0 19 4 22 43 3 64 50 64 20 10 6 73 39 14 15 38 15 39 13 6 19 2 40 12 19 2 41 65 14 13 19 1 17 45 42 10 1 45 43 13 1 15 32 9 5 13 0 19 4 22 43 1 43 1 66 65 14 13 19 1 17 45 44 8 1 45 45 13 1 19 1 35 12 13 0 19 2 46 45 47 13 2 15 32 9 29 13 0 19 4 22 43 3 66 43 1 38 42 14 48 15 49 19 0 50 73 39 12 19 0 23 16 51 12 9 1 19 2 52 12 19 0 53 12 15 54 13 0 19 6 55 12 14 48 19 1 56 22 73 43 1 38 40 14 48 15 49 19 0 50 73 39 12 19 0 23 16 51 12 9 1 19 2 52 12 19 0 53 12 15 57 19 5 55 12 14 48 19 1 56 22 73 43 1 65 11 13 45 58 10 1 45 59 13 1 15 21 9 2 13 0 19 4 22 43 1 43 1 66 43 1 38 42 14 48 15 49 19 0 50 73 39 12 19 0 23 16 51 12 9 1 19 2 52 12 19 0 53 12 15 60 13 1 19 6 55 12 14 48 19 1 56 22 73 43 2 29) #11# #2# 11718) maphash #Y(common-lisp-user::purge-loc-chunks nil nil (24 45 7 26 34 61 12 10 0 17 62 29) #11# #2# 11718) si::fset)) #2# 11718) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::remove-subviews ext::location (defgeneric common-lisp-user::remove-subviews) (#2# . 12129) ext::annotate :lambda-list (common-lisp-user::view &rest common-lisp-user::subviews) :delete-methods t :documentation "Remove subviews from <view>." ensure-generic-function)) #2# 12129) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 30 12 14 31 19 6 32 29) #13=#A(t (33) (common-lisp-user::remove-subviews ext::location (defmethod common-lisp-user::remove-subviews (common-lisp-user::vv common-lisp-user::virtual-view) &rest common-lisp-user::subviews) (#2# . 12260) ext::annotate (common-lisp-user::virtual-view) (common-lisp-user::vv &rest common-lisp-user::subviews) common-lisp-user::vv common-lisp-user::subviews si::%dolist-var common-lisp-user::sub common-lisp-user::id common-lisp-user::view-subviews gethash remhash #:g16468 #:g16469 (setf common-lisp-user::view-container) common-lisp-user::loc-chunks common-lisp-user::purge-loc-chunks *error-output* #12# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Item ~s is not in window ~s so it can't be removed from it" format finish-output #Y(common-lisp-user::remove-subviews nil nil (24 45 7 27 45 8 10 0 45 9 75 45 10 38 111 10 1 4 51 0 13 0 19 1 11 12 13 3 19 1 12 12 19 2 13 39 44 13 0 19 1 11 12 13 3 19 1 12 17 14 10 0 45 15 75 45 16 13 0 13 1 33 17 18 2 43 1 43 1 13 0 19 1 18 12 19 1 19 38 41 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 27 13 0 13 3 19 7 28 14 20 19 1 29 10 1 5 51 1 10 1 40 -113 75 73 43 2 29) #13# #2# 12260) t clos::install-method)) #2# 12260) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::point-in-vv-p ext::location (defgeneric common-lisp-user::point-in-vv-p) (#2# . 12820) ext::annotate :lambda-list (common-lisp-user::vview common-lisp-user::point) :delete-methods t :documentation "Determine if the supplied point is inside the supplied view." ensure-generic-function)) #2# 12820) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 20 19 6 21 29) #14=#A(t (22) (common-lisp-user::point-in-vv-p ext::location (defmethod common-lisp-user::point-in-vv-p (common-lisp-user::vv common-lisp-user::virtual-view) common-lisp-user::point) (#2# . 12946) ext::annotate (common-lisp-user::virtual-view t) (common-lisp-user::vv common-lisp-user::point) common-lisp-user::vv common-lisp-user::point svref common-lisp-user::y common-lisp-user::x common-lisp-user::x-pos >= common-lisp-user::y-pos common-lisp-user::width + <= common-lisp-user::height #Y(common-lisp-user::point-in-vv-p nil nil (24 45 7 24 45 8 26 13 0 8 0 17 9 12 13 0 8 1 17 9 12 46 10 46 11 13 0 13 3 19 1 12 12 19 2 13 73 39 60 13 1 13 3 19 1 14 12 19 2 13 73 39 46 13 0 13 3 19 1 12 12 13 3 19 1 15 12 19 2 16 12 19 2 17 73 39 22 13 1 13 3 19 1 14 12 13 3 19 1 18 12 19 2 16 12 19 2 17 43 2 29) #14# #2# 12946) t clos::install-method)) #2# 12946) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::vv-click-event-handler ext::location (defgeneric common-lisp-user::vv-click-event-handler) (#2# . 13187) ext::annotate :lambda-list (common-lisp-user::vview common-lisp-user::point) :delete-methods t :documentation "Handle a click in <vview> at point <point>." ensure-generic-function)) #2# 13187) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #15=#A(t (12) (common-lisp-user::vv-click-event-handler ext::location (defmethod common-lisp-user::vv-click-event-handler (common-lisp-user::vv common-lisp-user::virtual-view) common-lisp-user::point) (#2# . 13305) ext::annotate (common-lisp-user::virtual-view t) (common-lisp-user::vv common-lisp-user::point) common-lisp-user::vv common-lisp-user::point #Y(common-lisp-user::vv-click-event-handler nil nil (24 45 7 24 45 8 26 75 73 29) #15# #2# 13305) t clos::install-method)) #2# 13305) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 14 7 15 8 9 0 8 0 16 9 6 3 12 15 10 9 0 8 0 16 9 6 3 12 15 11 15 12 1 15 6 3 6 3 6 2 12 19 4 16 29) #16=#A(t (17) (common-lisp-user::virtual-window ext::location (defclass common-lisp-user::virtual-window) (#2# . 13400) ext::annotate (common-lisp-user::virtual-view) ((:initform "Virtual Window" :initargs (:window-title) :writers ((setf common-lisp-user::window-title)) :readers (common-lisp-user::window-title) :name common-lisp-user::window-title) (:initform t :initargs (:outstrm) :writers ((setf common-lisp-user::outstrm)) :readers (common-lisp-user::outstrm) :name common-lisp-user::outstrm) (:initargs (:cursor-pos) :initform #A(t (2) (0 0)) :writers ((setf common-lisp-user::cursor-pos)) :readers (common-lisp-user::cursor-pos) :name common-lisp-user::cursor-pos) (:initargs (:cursor-shape) :initform 'common-lisp-user::pointer :writers ((setf common-lisp-user::cursor-shape)) :readers (common-lisp-user::cursor-shape) :name common-lisp-user::cursor-shape)) :direct-default-initargs :x-pos constantly :y-pos :id (common-lisp-user::new-name-fct #17="VW") #17# common-lisp-user::new-name-fct #Y(nil nil nil (26 15 13 19 1 14 29) #16# #2# 13400) clos::load-defclass)) #2# 13400) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #18=#A(t (12) (common-lisp-user::get-mouse-coordinates ext::location (defmethod common-lisp-user::get-mouse-coordinates (common-lisp-user::vw common-lisp-user::virtual-window)) (#2# . 13995) ext::annotate (common-lisp-user::virtual-window) (common-lisp-user::vw) common-lisp-user::vw common-lisp-user::cursor-pos #Y(common-lisp-user::get-mouse-coordinates nil nil (24 45 7 26 13 0 19 1 8 29) #18# #2# 13995) t clos::install-method)) #2# 13995) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 17 12 19 2 18 1 0 73 29) #19=#A(t (19) (common-lisp-user::subview-sort ext::location (defun common-lisp-user::subview-sort) (#2# . 14071) ext::annotate :lambda-list (common-lisp-user::i1 common-lisp-user::i2) common-lisp-user::i1 common-lisp-user::i2 common-lisp-user::x-pos numberp common-lisp-user::y-pos < = type-of symbol-name string< #Y(common-lisp-user::subview-sort nil nil (24 45 7 24 45 8 26 13 1 19 1 9 16 10 73 39 137 13 0 19 1 9 16 10 73 39 127 13 1 19 1 11 16 10 73 39 117 13 0 19 1 11 16 10 73 39 107 13 1 19 1 9 12 13 0 19 1 9 12 19 2 12 73 40 89 13 1 19 1 9 12 13 0 19 1 9 12 19 2 13 39 16 13 1 19 1 11 12 13 0 19 1 11 12 19 2 12 73 40 54 13 1 19 1 9 12 13 0 19 1 9 12 19 2 13 73 39 36 13 1 19 1 11 12 13 0 19 1 11 12 19 2 13 73 39 18 10 1 16 14 16 15 12 10 0 16 14 16 15 12 19 2 16 29) #19# #2# 14071) si::fset)) #2# 14071) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 18 12 14 19 19 6 20 29) #20=#A(t (21) (common-lisp-user::build-vis-locs-for ext::location (defmethod common-lisp-user::build-vis-locs-for (common-lisp-user::vw common-lisp-user::virtual-window) (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#2# . 14495) ext::annotate (common-lisp-user::virtual-window common-lisp-user::vision-module) (common-lisp-user::vw common-lisp-user::vis-mod) common-lisp-user::vw common-lisp-user::vis-mod common-lisp-user::obj #Y(nil nil nil (24 45 9 26 13 0 13 1 19 2 0 29) #20# #2# 14495) common-lisp-user::current-device-interface common-lisp-user::stable-names common-lisp-user::subviews common-lisp-user::subview-sort sort mapcar common-lisp-user::flatten #Y(common-lisp-user::build-vis-locs-for nil nil (24 45 7 24 45 8 26 34 10 12 19 0 11 12 19 1 12 39 15 13 1 19 1 13 12 33 14 12 19 2 15 38 6 13 1 19 1 13 12 19 2 16 12 19 1 17 29) #20# #2# 14495) t clos::install-method)) #2# 14495) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 29 12 14 30 19 6 31 29) #21=#A(t (32) (common-lisp-user::cursor-to-vis-loc ext::location (defmethod common-lisp-user::cursor-to-vis-loc (common-lisp-user::vw common-lisp-user::virtual-window)) (#2# . 14786) ext::annotate (common-lisp-user::virtual-window) (common-lisp-user::vw) common-lisp-user::vw common-lisp-user::cursor-pos common-lisp-user::point-in-vv-p common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::current-model common-lisp-user::loc-chunks gethash common-lisp-user::c common-lisp-user::chunk-p-fct common-lisp-user::screen-x svref common-lisp-user::screen-y common-lisp-user::value common-lisp-user::cursor-shape common-lisp-user::mod-chunk-fct common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::kind common-lisp-user::cursor common-lisp-user::define-chunks-fct si::hash-set #Y(common-lisp-user::cursor-to-vis-loc nil nil (24 45 7 26 13 0 13 0 19 1 8 12 19 2 9 73 39 152 14 10 19 1 11 12 19 0 12 3 12 13 0 19 1 13 12 19 2 14 4 45 15 10 0 39 6 13 0 19 1 16 39 44 13 0 15 17 13 1 19 1 8 12 8 0 17 18 12 15 19 13 1 19 1 8 12 8 1 17 18 12 15 20 13 1 19 1 21 6 6 12 19 2 22 38 73 14 10 19 1 11 12 19 0 12 3 12 13 1 19 1 13 12 15 23 15 24 15 25 15 26 15 17 13 1 19 1 8 12 8 0 17 18 12 15 19 13 1 19 1 8 12 8 1 17 18 12 15 20 13 1 19 1 21 6 10 6 1 12 19 1 27 12 19 3 28 4 73 43 1 29) #21# #2# 14786) t clos::install-method)) #2# 14786) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #22=#A(t (18) (common-lisp-user::vis-loc-to-obj ext::location (defmethod common-lisp-user::vis-loc-to-obj (common-lisp-user::device common-lisp-user::virtual-window) common-lisp-user::loc) (#2# . 15487) ext::annotate (common-lisp-user::virtual-window t) (common-lisp-user::device common-lisp-user::loc) common-lisp-user::device common-lisp-user::loc common-lisp-user::kind common-lisp-user::chunk-slot-value-fct common-lisp-user::cursor ((common-lisp-user::isa common-lisp-user::cursor)) common-lisp-user::define-chunks-fct common-lisp-user::fill-default-vis-obj-slots #Y(common-lisp-user::vis-loc-to-obj nil nil (24 45 7 24 45 8 26 13 0 15 9 19 2 10 42 11 15 15 12 19 1 13 4 12 13 0 19 2 14 38 3 75 73 29) #22# #2# 15487) t clos::install-method)) #2# 15487) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #23=#A(t (14) (common-lisp-user::device-move-cursor-to ext::location (defmethod common-lisp-user::device-move-cursor-to (common-lisp-user::vw common-lisp-user::virtual-window) (common-lisp-user::xyloc list)) (#2# . 15675) ext::annotate (common-lisp-user::virtual-window list) (common-lisp-user::vw common-lisp-user::xyloc) common-lisp-user::vw common-lisp-user::xyloc vector coerce #Y(common-lisp-user::device-move-cursor-to nil nil (24 45 7 24 45 8 26 13 1 13 0 1 9 17 10 12 19 2 0 29) #23# #2# 15675) t clos::install-method)) #2# 15675) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #24=#A(t (18) (common-lisp-user::device-move-cursor-to ext::location (defmethod common-lisp-user::device-move-cursor-to (common-lisp-user::vw common-lisp-user::virtual-window) (common-lisp-user::loc vector)) (#2# . 15801) ext::annotate (common-lisp-user::virtual-window vector) (common-lisp-user::vw common-lisp-user::loc) common-lisp-user::vw common-lisp-user::loc #:g16488 #:g16489 (setf common-lisp-user::cursor-pos) common-lisp-user::current-device-interface common-lisp-user::with-cursor-p common-lisp-user::proc-display #Y(common-lisp-user::device-move-cursor-to nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 13 0 13 1 33 11 18 2 43 1 43 1 19 0 12 12 19 1 13 73 39 4 19 0 14 29) #24# #2# 15801) t clos::install-method)) #2# 15801) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #25=#A(t (15) (common-lisp-user::device-handle-keypress ext::location (defmethod common-lisp-user::device-handle-keypress (common-lisp-user::vw common-lisp-user::virtual-window) common-lisp-user::key) (#2# . 15974) ext::annotate (common-lisp-user::virtual-window t) (common-lisp-user::vw common-lisp-user::key) common-lisp-user::vw common-lisp-user::key "got key ~S at time ~S" common-lisp-user::mp-time common-lisp-user::vw-output #Y(common-lisp-user::device-handle-keypress nil nil (24 45 7 24 45 8 26 13 1 15 9 13 0 19 0 10 12 19 4 11 29) #25# #2# 15974) t clos::install-method)) #2# 15974) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #26=#A(t (15) (common-lisp-user::device-speak-string ext::location (defmethod common-lisp-user::device-speak-string (common-lisp-user::vw common-lisp-user::virtual-window) string) (#2# . 16132) ext::annotate (common-lisp-user::virtual-window t) (common-lisp-user::vw string) common-lisp-user::vw string "heard speech '~A' at time ~S" common-lisp-user::mp-time common-lisp-user::vw-output #Y(common-lisp-user::device-speak-string nil nil (24 45 7 24 45 8 26 13 1 15 9 13 0 19 0 10 12 19 4 11 29) #26# #2# 16132) t clos::install-method)) #2# 16132) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 15 19 6 20 29) #27=#A(t (21) (common-lisp-user::device-handle-click ext::location (defmethod common-lisp-user::device-handle-click (common-lisp-user::vw common-lisp-user::virtual-window)) (#2# . 16265) ext::annotate (common-lisp-user::virtual-window) (common-lisp-user::vw) common-lisp-user::vw common-lisp-user::subviews si::%dolist-var common-lisp-user::sub common-lisp-user::handles-click-p common-lisp-user::cursor-pos common-lisp-user::point-in-vv-p common-lisp-user::vv-click-event-handler t "was clicked at time ~S" common-lisp-user::mp-time common-lisp-user::vw-output #Y(common-lisp-user::device-handle-click nil nil (24 45 7 26 57 0 60 77 13 1 19 1 8 45 9 75 45 10 38 47 10 1 4 51 0 13 0 19 1 11 39 12 13 0 13 3 19 1 12 12 19 2 13 39 17 13 0 13 3 19 1 12 12 19 2 14 11 15 73 36 2 10 1 5 51 1 10 1 40 -49 43 2 13 1 15 16 19 0 17 12 19 3 18 63 29) #27# #2# 16265) clos::install-method)) #2# 16265) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::vw-output ext::location (defgeneric common-lisp-user::vw-output) (#2# . 16625) ext::annotate :lambda-list (common-lisp-user::vwind common-lisp-user::base &rest common-lisp-user::args) :delete-methods t :documentation "Print some output to a virtual window." ensure-generic-function)) #2# 16625) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 33 12 14 17 19 6 34 29) #28=#A(t (35) (common-lisp-user::vw-output ext::location (defmethod common-lisp-user::vw-output (common-lisp-user::vw common-lisp-user::virtual-window) (common-lisp-user::base string) &rest common-lisp-user::args) (#2# . 16736) ext::annotate (common-lisp-user::virtual-window string) (common-lisp-user::vw common-lisp-user::base &rest common-lisp-user::args) common-lisp-user::vw common-lisp-user::base common-lisp-user::args common-lisp-user::printing-module common-lisp-user::get-module-fct #:g16518 #:g16517 common-lisp-user::printing-module-suppress-cmds #:g16519 #:g16520 t #:g16521 (setf common-lisp-user::printing-module-suppress-cmds) (:vwt) common-lisp-user::sgp-fct #:g16522 #:g16523 (setf common-lisp-user::printing-module-suppress-cmds) #:g16525 #:g16524 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream "~&~@?~%" "~&~%<< Window ~S ~? >>~%" common-lisp-user::window-title format #Y(common-lisp-user::vw-output nil nil (24 45 7 24 45 8 27 45 9 15 10 19 1 11 47 1 12 45 13 10 1 39 59 13 0 19 1 14 45 15 10 1 45 16 11 17 45 18 13 0 13 1 33 19 18 2 43 1 43 1 64 7 15 20 19 1 21 65 10 1 45 22 10 1 45 23 13 0 13 1 33 24 18 2 43 1 43 1 66 43 1 43 2 4 73 39 56 15 10 19 1 11 47 1 25 45 26 10 1 39 10 13 0 19 1 27 12 19 1 28 73 39 28 13 0 19 1 27 12 19 1 28 12 15 29 15 30 13 4 19 1 31 12 13 3 13 2 19 6 32 43 2 29) #28# #2# 16736) clos::install-method)) #2# 16736) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::view-window ext::location (defgeneric common-lisp-user::view-window) (#2# . 17035) ext::annotate :lambda-list (common-lisp-user::view) :delete-methods t :documentation "Returns the window associated with <view> (if any), or <view> if <view> is a window." ensure-generic-function)) #2# 17035) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 8 12 14 9 19 6 10 29) #29=#A(t (11) (common-lisp-user::view-window ext::location (defmethod common-lisp-user::view-window (common-lisp-user::vw common-lisp-user::virtual-window)) (#2# . 17204) ext::annotate (common-lisp-user::virtual-window) (common-lisp-user::vw) common-lisp-user::vw #Y(common-lisp-user::view-window nil nil (24 45 7 26 10 0 73 29) #29# #2# 17204) t clos::install-method)) #2# 17204) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::window-close ext::location (defgeneric common-lisp-user::window-close) (#2# . 17256) ext::annotate :lambda-list (common-lisp-user::wind) :delete-methods t :documentation "Closes a window." ensure-generic-function)) #2# 17256) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 8 12 14 9 19 6 10 29) #30=#A(t (11) (common-lisp-user::window-close ext::location (defmethod common-lisp-user::window-close (common-lisp-user::vw common-lisp-user::virtual-window)) (#2# . 17357) ext::annotate (common-lisp-user::virtual-window) (common-lisp-user::vw) common-lisp-user::vw #Y(common-lisp-user::window-close nil nil (24 45 7 26 75 73 29) #30# #2# 17357) t clos::install-method)) #2# 17357) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::window-select ext::location (defgeneric common-lisp-user::window-select) (#2# . 17487) ext::annotate :lambda-list (common-lisp-user::wind) :delete-methods t :documentation "Brings <wind> to the front." ensure-generic-function)) #2# 17487) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 8 12 14 9 19 6 10 29) #31=#A(t (11) (common-lisp-user::window-select ext::location (defmethod common-lisp-user::window-select (common-lisp-user::vw common-lisp-user::virtual-window)) (#2# . 17599) ext::annotate (common-lisp-user::virtual-window) (common-lisp-user::vw) common-lisp-user::vw #Y(common-lisp-user::window-select nil nil (24 45 7 26 75 73 29) #31# #2# 17599) t clos::install-method)) #2# 17599) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::set-window-title ext::location (defgeneric common-lisp-user::set-window-title) (#2# . 17712) ext::annotate :lambda-list (common-lisp-user::wind common-lisp-user::new-title) :delete-methods t :documentation "Set the title of <wind> to <new-title>." ensure-generic-function)) #2# 17712) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #32=#A(t (15) (common-lisp-user::set-window-title ext::location (defmethod common-lisp-user::set-window-title (common-lisp-user::window common-lisp-user::virtual-window) (common-lisp-user::new-title string)) (#2# . 17850) ext::annotate (common-lisp-user::virtual-window string) (common-lisp-user::window common-lisp-user::new-title) common-lisp-user::window common-lisp-user::new-title #:g16532 #:g16533 (setf common-lisp-user::window-title) #Y(common-lisp-user::set-window-title nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 13 0 13 1 33 11 18 2 43 1 43 1 29) #32# #2# 17850) t clos::install-method)) #2# 17850) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 15 8 14 9 1 14 12 1 15 7 3 6 4 12 14 16 15 17 9 18 8 18 16 18 6 3 12 15 19 9 60 8 60 16 18 6 3 12 15 20 77 75 16 18 6 3 6 3 6 2 12 19 4 21 29) #33=#A(t (22) (common-lisp-user::virtual-dialog-item ext::location (defclass common-lisp-user::virtual-dialog-item) (#2# . 17966) ext::annotate (common-lisp-user::virtual-view) (:initargs (:dialog-item-text) :initform "Untitled" :writers ((setf common-lisp-user::dialog-item-text)) :readers (common-lisp-user::dialog-item-text) :name common-lisp-user::text) (:initform nil :initargs (:action) :writers ((setf common-lisp-user::action-function)) :readers (common-lisp-user::action-function) :name common-lisp-user::action-function) (:initform 10 :initargs (:text-height) :writers ((setf common-lisp-user::text-height)) :readers (common-lisp-user::text-height) :name common-lisp-user::text-height) :initfunction common-lisp-user::str length * #Y(nil nil nil (24 45 10 26 9 7 10 0 16 11 12 19 2 12 29) #33# #2# 17966) #Y(nil nil nil (26 34 13 73 29) #33# #2# 17966) (:initform #'(lambda (common-lisp-user::str) (* 7 (length common-lisp-user::str))) :initargs (:str-width-fct) :writers ((setf common-lisp-user::str-width-fct)) :readers (common-lisp-user::str-width-fct) :name common-lisp-user::str-width-fct) :direct-default-initargs :height constantly :width :subviews clos::load-defclass)) #2# 17966) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::set-dialog-item-text ext::location (defgeneric common-lisp-user::set-dialog-item-text) (#2# . 18638) ext::annotate :lambda-list (common-lisp-user::dialog-item common-lisp-user::text) :delete-methods t :documentation "Set the text associated with <dialog-item> to <text>." ensure-generic-function)) #2# 18638) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #34=#A(t (15) (common-lisp-user::set-dialog-item-text ext::location (defmethod common-lisp-user::set-dialog-item-text (common-lisp-user::vdi common-lisp-user::virtual-dialog-item) (common-lisp-user::text string)) (#2# . 18796) ext::annotate (common-lisp-user::virtual-dialog-item string) (common-lisp-user::vdi common-lisp-user::text) common-lisp-user::vdi common-lisp-user::text #:g16540 #:g16541 (setf common-lisp-user::dialog-item-text) #Y(common-lisp-user::set-dialog-item-text nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 13 0 13 1 33 11 18 2 43 1 43 1 29) #34# #2# 18796) t clos::install-method)) #2# 18796) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #35=#A(t (12) (common-lisp-user::subviews ext::location (defmethod common-lisp-user::subviews (common-lisp-user::vdi common-lisp-user::virtual-dialog-item) &optional common-lisp-user::subview-type) (#2# . 18909) ext::annotate (common-lisp-user::virtual-dialog-item) (common-lisp-user::vdi &optional common-lisp-user::subview-type) common-lisp-user::vdi common-lisp-user::subview-type #Y(common-lisp-user::subviews nil nil (24 45 7 25 40 2 77 46 8 26 75 73 29) #35# #2# 18909) t clos::install-method)) #2# 18909) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #36=#A(t (15) (common-lisp-user::view-window ext::location (defmethod common-lisp-user::view-window (common-lisp-user::vdi common-lisp-user::virtual-dialog-item)) (#2# . 19030) ext::annotate (common-lisp-user::virtual-dialog-item) (common-lisp-user::vdi) common-lisp-user::vdi common-lisp-user::view-container common-lisp-user::vc common-lisp-user::virtual-window typep #Y(common-lisp-user::view-window nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 76 39 5 75 73 38 20 13 0 15 10 19 2 11 39 6 10 0 73 38 6 13 0 19 1 0 43 1 29) #36# #2# 19030) t clos::install-method)) #2# 19030) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 77 14 6 15 7 15 8 1 11 6 3 12 15 12 77 75 16 13 6 3 6 2 6 2 12 19 4 14 29) #37=#A(t (15) (common-lisp-user::static-text-vdi ext::location (defclass common-lisp-user::static-text-vdi) (#2# . 19223) ext::annotate (common-lisp-user::virtual-dialog-item) :direct-default-initargs :id (common-lisp-user::new-name-fct #38="TEXT-VDI") #38# common-lisp-user::new-name-fct #Y(nil nil nil (26 15 9 19 1 10 29) #37# #2# 19223) :handles-click-p constantly clos::load-defclass)) #2# 19223) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 57 12 14 58 19 6 59 29) #39=#A(t (60) (common-lisp-user::build-vis-locs-for ext::location (defmethod common-lisp-user::build-vis-locs-for (common-lisp-user::self common-lisp-user::static-text-vdi) (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#2# . 19365) ext::annotate (common-lisp-user::static-text-vdi common-lisp-user::vision-module) (common-lisp-user::self common-lisp-user::vis-mod) common-lisp-user::self common-lisp-user::vis-mod common-lisp-user::text-height 0.8 round + max common-lisp-user::line-height :text common-lisp-user::dialog-item-text :start-x common-lisp-user::x-pos 1+ :y-pos common-lisp-user::y-pos :width-fct common-lisp-user::str-width-fct :height :obj :line-height common-lisp-user::build-string-feats common-lisp-user::feats common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::current-model common-lisp-user::loc-chunks gethash common-lisp-user::c length > common-lisp-user::f common-lisp-user::chunk-p-fct common-lisp-user::purge-chunk-fct #Y(nil nil nil (24 45 37 26 13 0 19 1 38 73 39 6 13 0 19 1 39 29) #39# #2# 19365) mapcar si::hash-set common-lisp-user::color common-lisp-user::set-chunk-slot-value-fct common-lisp-user::chunk-visual-object-setf #Y(nil nil nil (24 45 37 26 13 0 15 43 13 5 19 1 43 12 19 3 44 13 0 13 5 19 2 45 10 0 73 29) #39# #2# 19365) = common-lisp-user::x common-lisp-user::chunk-slot-value-fct #Y(nil nil nil (24 45 48 26 13 0 10 2 4 12 13 0 19 2 49 6 2 73 29) #39# #2# 19365) common-lisp-user::chunk-filled-slots-list-fct mapcan common-lisp-user::mod-chunk-fct common-lisp-user::chunk-real-visual-value common-lisp-user::chunk-real-visual-value-setf #Y(nil nil nil (24 45 37 26 13 0 19 1 38 73 39 6 13 0 19 1 39 29) #39# #2# 19365) #Y(common-lisp-user::build-vis-locs-for nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 15 10 19 2 11 12 13 1 19 1 9 12 9 1 19 2 12 12 19 2 13 45 14 13 1 14 15 13 2 19 1 16 12 14 17 13 2 19 1 18 16 19 12 14 20 13 2 19 1 21 12 13 0 9 2 19 2 11 12 19 2 12 12 14 22 13 2 19 1 23 12 14 24 13 2 19 1 9 12 14 25 13 2 14 26 13 0 19 15 27 45 28 14 29 19 1 30 12 19 0 31 3 12 13 3 19 1 32 12 19 2 33 45 34 10 1 73 39 248 10 1 16 35 12 9 1 19 2 36 39 41 34 40 12 13 0 19 2 41 14 29 19 1 30 12 19 0 31 3 12 13 4 19 1 32 12 13 1 19 3 42 34 46 12 13 1 19 2 41 38 196 10 0 39 146 10 0 16 35 12 9 1 19 2 47 39 8 10 0 4 12 19 1 38 39 69 10 0 4 51 0 13 0 34 50 12 13 0 19 1 51 12 19 2 52 12 19 2 53 13 0 10 1 4 12 19 1 54 12 19 2 55 13 0 15 43 13 4 19 1 43 12 19 3 44 13 0 13 4 19 2 45 10 1 4 12 19 1 39 10 0 73 38 55 34 56 12 13 0 19 2 41 10 1 4 12 15 43 13 4 19 1 43 12 19 3 44 10 1 4 12 13 4 19 2 45 14 29 19 1 30 12 19 0 31 3 12 13 4 19 1 32 12 13 1 19 3 42 38 47 10 1 4 12 15 43 13 4 19 1 43 12 19 3 44 10 1 4 12 13 4 19 2 45 14 29 19 1 30 12 19 0 31 3 12 13 4 19 1 32 12 13 1 19 3 42 43 3 29) #39# #2# 19365) t clos::install-method)) #2# 19365) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 77 14 6 15 7 15 8 1 11 6 3 12 15 12 15 13 1 15 6 3 6 2 6 2 12 19 4 16 29) #40=#A(t (17) (common-lisp-user::button-vdi ext::location (defclass common-lisp-user::button-vdi) (#2# . 22010) ext::annotate (common-lisp-user::virtual-dialog-item) :direct-default-initargs :id (common-lisp-user::new-name-fct #41="BUTTON-VDI") #41# common-lisp-user::new-name-fct #Y(nil nil nil (26 15 9 19 1 10 29) #40# #2# 22010) :action #'common-lisp-user::default-button-action common-lisp-user::default-button-action #Y(nil nil nil (26 33 14 73 29) #40# #2# 22010) clos::load-defclass)) #2# 22010) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #42=#A(t (16) (common-lisp-user::vv-click-event-handler ext::location (defmethod common-lisp-user::vv-click-event-handler (common-lisp-user::btn common-lisp-user::button-vdi) common-lisp-user::where) (#2# . 22168) ext::annotate (common-lisp-user::button-vdi t) (common-lisp-user::btn common-lisp-user::where) common-lisp-user::btn common-lisp-user::where common-lisp-user::action-function functionp symbolp fboundp #Y(common-lisp-user::vv-click-event-handler nil nil (24 45 7 24 45 8 26 13 1 19 1 9 16 10 40 17 13 1 19 1 9 16 11 39 8 13 1 19 1 9 16 12 73 39 12 13 1 19 1 9 12 13 1 20 1 23 29) #42# #2# 22168) t clos::install-method)) #2# 22168) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 8 19 6 14 29) #43=#A(t (15) (common-lisp-user::default-button-action ext::location (defmethod common-lisp-user::default-button-action (common-lisp-user::btn common-lisp-user::button-vdi)) (#2# . 22427) ext::annotate (common-lisp-user::button-vdi) (common-lisp-user::btn) common-lisp-user::btn t "~%Button '~S' clicked at time ~S." common-lisp-user::dialog-item-text common-lisp-user::mp-time format #Y(common-lisp-user::default-button-action nil nil (24 45 7 26 14 8 15 9 13 0 19 1 10 12 19 0 11 12 19 4 12 29) #43# #2# 22427) clos::install-method)) #2# 22427) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 91 12 14 92 19 6 93 29) #44=#A(t (94) (common-lisp-user::build-vis-locs-for ext::location (defmethod common-lisp-user::build-vis-locs-for (common-lisp-user::self common-lisp-user::button-vdi) (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#2# . 22575) ext::annotate (common-lisp-user::button-vdi common-lisp-user::vision-module) (common-lisp-user::self common-lisp-user::vis-mod) common-lisp-user::self common-lisp-user::vis-mod common-lisp-user::text-height 0.8 round + max common-lisp-user::line-height #\Newline common-lisp-user::dialog-item-text count 1+ common-lisp-user::lines :text :start-x common-lisp-user::view-loc svref :x-fct string common-lisp-user::startx common-lisp-user::obj common-lisp-user::str-width-fct - #Y(nil nil nil (24 45 25 24 45 26 24 45 27 26 13 1 13 0 19 1 28 12 13 2 20 1 23 12 9 2 19 2 11 12 19 2 29 29) #44# #2# 22575) :y-pos 1/2 1- * :width-fct :height :obj :line-height common-lisp-user::build-string-feats common-lisp-user::text-feats common-lisp-user::feats common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::current-model common-lisp-user::loc-chunks gethash common-lisp-user::c length > common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::screen-x common-lisp-user::screen-y common-lisp-user::width common-lisp-user::height common-lisp-user::kind common-lisp-user::oval common-lisp-user::value common-lisp-user::color common-lisp-user::define-chunks-fct append common-lisp-user::f common-lisp-user::chunk-p-fct common-lisp-user::purge-chunk-fct #Y(nil nil nil (24 45 62 26 13 0 19 1 63 73 39 6 13 0 19 1 64 29) #44# #2# 22575) mapcar si::hash-set = common-lisp-user::mod-chunk-fct second common-lisp-user::x common-lisp-user::chunk-slot-value-fct #Y(nil nil nil (24 45 71 26 13 0 10 3 4 12 13 0 19 2 72 6 2 73 29) #44# #2# 22575) common-lisp-user::chunk-filled-slots-list-fct mapcan common-lisp-user::chunk-real-visual-value common-lisp-user::chunk-real-visual-value-setf #Y(nil nil nil (24 45 62 26 13 0 19 1 63 73 39 6 13 0 19 1 64 29) #44# #2# 22575) #Y(nil nil nil (24 45 62 26 13 0 19 1 63 73 39 6 13 0 19 1 64 29) #44# #2# 22575) subseq common-lisp-user::y common-lisp-user::approach-width #Y(nil nil nil (24 45 71 24 45 81 26 10 3 4 12 13 0 13 7 19 3 82 29) #44# #2# 22575) common-lisp-user::fun common-lisp-user::chunk-visual-approach-width-fn-setf common-lisp-user::black common-lisp-user::set-chunk-slot-value-fct #Y(nil nil nil (24 45 62 26 13 0 13 1 19 2 85 13 0 15 59 15 86 19 3 87 29) #44# #2# 22575) common-lisp-user::chunk-visual-object-setf #Y(nil nil nil (24 45 62 26 13 0 13 7 19 2 89 10 0 73 29) #44# #2# 22575) #Y(common-lisp-user::build-vis-locs-for nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 15 10 19 2 11 12 13 1 19 1 9 12 9 1 19 2 12 12 19 2 13 45 14 15 15 13 2 19 1 16 12 19 2 17 16 18 45 19 13 2 14 20 13 3 19 1 16 12 14 21 13 3 19 1 22 12 8 0 17 23 12 14 24 34 30 12 14 31 13 3 19 1 22 12 8 1 17 23 12 15 32 13 1 10 0 16 33 12 19 3 34 12 19 2 29 12 19 1 11 12 14 35 13 3 19 1 28 12 14 36 13 3 19 1 9 12 14 37 13 3 14 38 13 1 19 17 39 45 40 75 45 41 14 42 19 1 43 12 19 0 44 3 12 13 5 19 1 45 12 19 2 46 45 47 10 2 16 48 12 9 1 19 2 49 39 110 15 50 15 51 15 52 13 6 19 1 22 12 8 0 17 23 12 15 53 13 6 19 1 22 12 8 1 17 23 12 15 54 13 6 19 1 54 12 15 55 13 6 19 1 55 12 15 56 15 57 15 58 15 57 15 59 13 6 19 1 59 6 16 6 1 12 19 1 60 12 13 2 19 2 61 51 1 34 65 12 13 0 19 2 66 14 42 19 1 43 12 19 0 44 3 12 13 6 19 1 45 12 13 1 19 3 67 38 444 10 2 16 48 12 9 1 19 2 68 39 233 10 0 16 48 12 9 2 19 2 68 39 113 10 0 4 12 15 52 13 6 19 1 22 12 8 0 17 23 12 15 53 13 6 19 1 22 12 8 1 17 23 12 15 54 13 6 19 1 54 12 15 55 13 6 19 1 55 12 15 59 13 6 19 1 59 6 10 12 19 2 69 10 0 16 70 12 34 73 12 10 0 16 70 12 19 1 74 12 19 2 75 12 19 2 69 10 0 16 70 12 10 2 4 12 19 1 76 12 19 2 77 10 0 51 1 10 2 4 12 19 1 64 38 107 34 78 12 13 0 19 2 66 14 42 19 1 43 12 19 0 44 3 12 13 6 19 1 45 12 15 50 15 51 15 52 13 6 19 1 22 12 8 0 17 23 12 15 53 13 6 19 1 22 12 8 1 17 23 12 15 54 13 6 19 1 54 12 15 55 13 6 19 1 55 12 15 56 15 57 15 58 15 57 15 59 13 6 19 1 59 6 16 6 1 12 19 1 60 12 13 2 19 2 61 12 19 3 67 51 1 38 200 10 0 39 104 10 0 4 12 15 52 13 6 19 1 22 12 8 0 17 23 12 15 53 13 6 19 1 22 12 8 1 17 23 12 15 54 13 6 19 1 54 12 15 55 13 6 19 1 55 12 15 59 13 6 19 1 59 6 10 12 19 2 69 34 79 12 10 0 5 12 19 2 66 14 42 19 1 43 12 19 0 44 3 12 13 6 19 1 45 12 13 0 9 0 9 1 19 3 80 12 19 3 67 51 1 38 93 14 42 19 1 43 12 19 0 44 3 12 13 6 19 1 45 12 15 50 15 51 15 52 13 6 19 1 22 12 8 0 17 23 12 15 53 13 6 19 1 22 12 8 1 17 23 12 15 54 13 6 19 1 54 12 15 55 13 6 19 1 55 12 15 56 15 57 15 58 15 57 15 59 13 6 19 1 59 6 16 6 1 12 19 1 60 12 19 3 67 51 1 34 83 45 84 34 88 12 10 2 5 12 19 2 66 43 1 34 90 12 13 1 19 2 66 43 5 29) #44# #2# 22575) t clos::install-method)) #2# 22575) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 77 77 19 4 6 29) #A(t (7) (common-lisp-user::v-liner ext::location (defclass common-lisp-user::v-liner) (#2# . 28672) ext::annotate (common-lisp-user::virtual-view) clos::load-defclass)) #2# 28672) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 14 11 15 12 19 8 13 29) #45=#A(t (14) (common-lisp-user::point-in-vv-p ext::location (defmethod common-lisp-user::point-in-vv-p (common-lisp-user::self common-lisp-user::v-liner) common-lisp-user::where) (#2# . 28760) ext::annotate (common-lisp-user::v-liner t) (common-lisp-user::self common-lisp-user::where) common-lisp-user::self common-lisp-user::where #Y(common-lisp-user::point-in-vv-p nil nil (24 45 7 24 45 8 26 75 73 29) #45# #2# 28760) t :documentation "Method needed by R/PM so that if the mouse is clicked on the view it
   doesn't get handled by this view, and is passed on to the next" clos::install-method)) #2# 28760) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 38 12 14 39 14 40 15 41 19 8 42 29) #46=#A(t (43) (common-lisp-user::build-vis-locs-for ext::location (defmethod common-lisp-user::build-vis-locs-for (common-lisp-user::lnr common-lisp-user::v-liner) (common-lisp-user::vis-mod common-lisp-user::vision-module)) (#2# . 28983) ext::annotate (common-lisp-user::v-liner common-lisp-user::vision-module) (common-lisp-user::lnr common-lisp-user::vis-mod) common-lisp-user::lnr common-lisp-user::vis-mod common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::current-model common-lisp-user::loc-chunks gethash common-lisp-user::c common-lisp-user::chunk-p-fct common-lisp-user::color common-lisp-user::screen-x common-lisp-user::x-pos common-lisp-user::width + / floor common-lisp-user::screen-y common-lisp-user::y-pos common-lisp-user::height - abs common-lisp-user::mod-chunk-fct common-lisp-user::isa common-lisp-user::visual-location common-lisp-user::value common-lisp-user::line common-lisp-user::kind common-lisp-user::define-chunks-fct si::hash-set common-lisp-user::f common-lisp-user::chunk-visual-object-setf #Y(common-lisp-user::build-vis-locs-for nil nil (24 45 7 24 45 8 26 14 9 19 1 10 12 19 0 11 3 12 13 1 19 1 12 12 19 2 13 45 14 10 0 39 8 10 0 4 12 19 1 15 39 119 10 0 4 12 15 16 13 2 19 1 16 12 15 17 13 2 19 1 18 12 13 2 19 1 19 12 19 2 20 12 9 2 19 2 21 12 19 1 22 12 15 23 13 2 19 1 24 12 13 2 19 1 25 12 19 2 20 12 9 2 19 2 21 12 19 1 22 12 15 19 13 2 19 1 18 12 13 2 19 1 19 12 19 2 26 16 27 12 15 25 13 2 19 1 24 12 13 2 19 1 25 12 19 2 26 16 27 6 10 12 19 2 28 10 0 4 38 146 14 9 19 1 10 12 19 0 11 3 12 13 2 19 1 12 12 15 29 15 30 15 16 13 2 19 1 16 12 15 31 15 32 15 33 15 32 15 17 13 2 19 1 18 12 13 2 19 1 19 12 19 2 20 12 9 2 19 2 21 12 19 1 22 12 15 23 13 2 19 1 24 12 13 2 19 1 25 12 19 2 20 12 9 2 19 2 21 12 19 1 22 12 15 19 13 2 19 1 18 12 13 2 19 1 19 12 19 2 26 16 27 12 15 25 13 2 19 1 24 12 13 2 19 1 25 12 19 2 26 16 27 6 16 6 1 12 19 1 34 12 19 3 35 4 45 36 13 0 13 3 19 2 37 10 0 73 43 2 29) #46# #2# 28983) t :documentation "Convert the view to a feature to be placed into the visual icon" clos::install-method)) #2# 28983) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 23 12 14 24 19 6 25 29) #47=#A(t (26) (common-lisp-user::vis-loc-to-obj ext::location (defmethod common-lisp-user::vis-loc-to-obj (common-lisp-user::lnr common-lisp-user::v-liner) common-lisp-user::loc) (#2# . 30562) ext::annotate (common-lisp-user::v-liner t) (common-lisp-user::lnr common-lisp-user::loc) common-lisp-user::lnr common-lisp-user::loc common-lisp-user::isa common-lisp-user::line common-lisp-user::value common-lisp-user::chunk-slot-value-fct common-lisp-user::color common-lisp-user::height common-lisp-user::width common-lisp-user::end1-x common-lisp-user::x-pos common-lisp-user::end1-y common-lisp-user::y-pos common-lisp-user::end2-x common-lisp-user::end2-y common-lisp-user::define-chunks-fct #Y(common-lisp-user::vis-loc-to-obj nil nil (24 45 7 24 45 8 26 15 9 15 10 15 11 13 0 15 11 19 2 12 12 15 13 13 0 15 13 19 2 12 12 15 14 13 0 15 14 19 2 12 12 15 15 13 0 15 15 19 2 12 12 15 16 13 1 19 1 17 12 15 18 13 1 19 1 19 12 15 20 13 1 19 1 15 12 15 21 13 1 19 1 14 6 18 6 1 12 19 1 22 4 73 29) #47# #2# 30562) t clos::install-method)) #2# 30562) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 94 12 14 95 14 96 15 97 19 8 98 29) #48=#A(t (99) (common-lisp-user::populate-loc-to-key-array ext::location (defmethod common-lisp-user::populate-loc-to-key-array (common-lisp-user::ar array)) (#2# . 31182) ext::annotate (array) (common-lisp-user::ar) common-lisp-user::ar common-lisp-user::esc si::aset common-lisp-user::f1 common-lisp-user::f2 common-lisp-user::f3 common-lisp-user::f4 common-lisp-user::f5 common-lisp-user::f6 common-lisp-user::f7 common-lisp-user::f8 common-lisp-user::f9 common-lisp-user::f10 common-lisp-user::f11 common-lisp-user::f12 common-lisp-user::print-screen common-lisp-user::scroll-lock common-lisp-user::pause #\Tab #\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9 #\0 #\- #\= delete si::help common-lisp-user::home common-lisp-user::pageup common-lisp-user::clear #\/ #\* #\q #\w #\e #\r #\t #\y #\u #\i #\o #\p #\[ #\] #\\ common-lisp-user::del common-lisp-user::end common-lisp-user::page common-lisp-user::caps-lock #\a #\s #\d #\f #\g #\h #\j #\k #\l #\; #\' #\Newline #\+ common-lisp-user::shift #\z #\x #\c #\v #\b #\n #\m #\, #\. common-lisp-user::uparrow common-lisp-user::enter common-lisp-user::control common-lisp-user::option common-lisp-user::command #\  common-lisp-user::backarrow common-lisp-user::downarrow common-lisp-user::forwardarrow #Y(common-lisp-user::populate-loc-to-key-array nil nil (24 45 7 26 13 0 9 0 9 0 15 8 19 4 9 13 0 9 2 9 0 15 10 19 4 9 13 0 9 3 9 0 15 11 19 4 9 13 0 9 4 9 0 15 12 19 4 9 13 0 9 5 9 0 15 13 19 4 9 13 0 9 7 9 0 15 14 19 4 9 13 0 9 8 9 0 15 15 19 4 9 13 0 9 9 9 0 15 16 19 4 9 13 0 9 10 9 0 15 17 19 4 9 13 0 9 12 9 0 15 18 19 4 9 13 0 9 13 9 0 15 19 19 4 9 13 0 9 14 9 0 15 20 19 4 9 13 0 9 15 9 0 15 21 19 4 9 13 0 9 17 9 0 15 22 19 4 9 13 0 9 18 9 0 15 23 19 4 9 13 0 9 19 9 0 15 24 19 4 9 13 0 9 0 9 2 15 25 19 4 9 13 0 9 1 9 2 15 26 19 4 9 13 0 9 2 9 2 15 27 19 4 9 13 0 9 3 9 2 15 28 19 4 9 13 0 9 4 9 2 15 29 19 4 9 13 0 9 5 9 2 15 30 19 4 9 13 0 9 6 9 2 15 31 19 4 9 13 0 9 7 9 2 15 32 19 4 9 13 0 9 8 9 2 15 33 19 4 9 13 0 9 9 9 2 15 34 19 4 9 13 0 9 10 9 2 15 35 19 4 9 13 0 9 11 9 2 15 36 19 4 9 13 0 9 12 9 2 15 37 19 4 9 13 0 9 13 9 2 15 38 19 4 9 13 0 9 15 9 2 15 39 19 4 9 13 0 9 16 9 2 15 40 19 4 9 13 0 9 17 9 2 15 41 19 4 9 13 0 9 19 9 2 15 42 19 4 9 13 0 9 20 9 2 15 37 19 4 9 13 0 9 21 9 2 15 43 19 4 9 13 0 9 22 9 2 15 44 19 4 9 13 0 9 0 9 3 15 25 19 4 9 13 0 9 1 9 3 15 45 19 4 9 13 0 9 2 9 3 15 46 19 4 9 13 0 9 3 9 3 15 47 19 4 9 13 0 9 4 9 3 15 48 19 4 9 13 0 9 5 9 3 15 49 19 4 9 13 0 9 6 9 3 15 50 19 4 9 13 0 9 7 9 3 15 51 19 4 9 13 0 9 8 9 3 15 52 19 4 9 13 0 9 9 9 3 15 53 19 4 9 13 0 9 10 9 3 15 54 19 4 9 13 0 9 11 9 3 15 55 19 4 9 13 0 9 12 9 3 15 56 19 4 9 13 0 9 13 9 3 15 57 19 4 9 13 0 9 15 9 3 15 58 19 4 9 13 0 9 16 9 3 15 59 19 4 9 13 0 9 17 9 3 15 60 19 4 9 13 0 9 19 9 3 15 32 19 4 9 13 0 9 20 9 3 15 33 19 4 9 13 0 9 21 9 3 15 34 19 4 9 13 0 9 22 9 3 15 36 19 4 9 13 0 9 0 9 4 15 61 19 4 9 13 0 9 1 9 4 15 62 19 4 9 13 0 9 2 9 4 15 63 19 4 9 13 0 9 3 9 4 15 64 19 4 9 13 0 9 4 9 4 15 65 19 4 9 13 0 9 5 9 4 15 66 19 4 9 13 0 9 6 9 4 15 67 19 4 9 13 0 9 7 9 4 15 68 19 4 9 13 0 9 8 9 4 15 69 19 4 9 13 0 9 9 9 4 15 70 19 4 9 13 0 9 10 9 4 15 71 19 4 9 13 0 9 11 9 4 15 72 19 4 9 13 0 9 12 9 4 15 73 19 4 9 13 0 9 13 9 4 15 73 19 4 9 13 0 9 19 9 4 15 29 19 4 9 13 0 9 20 9 4 15 30 19 4 9 13 0 9 21 9 4 15 31 19 4 9 13 0 9 22 9 4 15 74 19 4 9 13 0 9 0 9 5 15 75 19 4 9 13 0 9 1 9 5 15 76 19 4 9 13 0 9 2 9 5 15 77 19 4 9 13 0 9 3 9 5 15 78 19 4 9 13 0 9 4 9 5 15 79 19 4 9 13 0 9 5 9 5 15 80 19 4 9 13 0 9 6 9 5 15 81 19 4 9 13 0 9 7 9 5 15 82 19 4 9 13 0 9 8 9 5 15 83 19 4 9 13 0 9 9 9 5 15 84 19 4 9 13 0 9 10 9 5 15 43 19 4 9 13 0 9 11 9 5 15 75 19 4 9 13 0 9 12 9 5 15 75 19 4 9 13 0 9 16 9 5 15 85 19 4 9 13 0 9 19 9 5 15 26 19 4 9 13 0 9 20 9 5 15 27 19 4 9 13 0 9 21 9 5 15 28 19 4 9 13 0 9 22 9 5 15 86 19 4 9 13 0 9 0 9 6 15 87 19 4 9 13 0 9 1 9 6 15 88 19 4 9 13 0 9 2 9 6 15 89 19 4 9 13 0 9 3 9 6 15 90 19 4 9 13 0 9 4 9 6 15 90 19 4 9 13 0 9 5 9 6 15 90 19 4 9 13 0 9 6 9 6 15 90 19 4 9 13 0 9 7 9 6 15 90 19 4 9 13 0 9 8 9 6 15 90 19 4 9 13 0 9 9 9 6 15 90 19 4 9 13 0 9 10 9 6 15 90 19 4 9 13 0 9 11 9 6 15 89 19 4 9 13 0 9 12 9 6 15 88 19 4 9 13 0 9 13 9 6 15 87 19 4 9 13 0 9 15 9 6 15 91 19 4 9 13 0 9 16 9 6 15 92 19 4 9 13 0 9 17 9 6 15 93 19 4 9 13 0 9 19 9 6 15 35 19 4 9 13 0 9 20 9 6 15 35 19 4 9 13 0 9 21 9 6 15 84 19 4 9 13 0 9 22 9 6 15 86 19 4 9 10 0 73 29) #48# #2# 31182) t :documentation "Sets all the keys in the array that need to be set" clos::install-method)) #2# 31182))
