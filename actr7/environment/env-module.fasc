(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::update-handler) proclaim)) #1=#P"C:/Users/Son Pham/Desktop/actr7/environment/env-module.lisp" 0) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 5 77 77 15 6 19 15 7 15 8 15 9 15 10 15 11 19 4 12 15 13 15 9 15 14 15 15 19 4 12 15 13 14 16 77 15 17 19 4 12 15 0 19 1 28 78 24 15 13 1 26 12 19 2 27 1 0 73 29) #2=#A(t (29) (common-lisp-user::environment-module common-lisp-user::env-mod- (common-lisp-user::esc common-lisp-user::model-name common-lisp-user::conflict-set common-lisp-user::last-dm-request common-lisp-user::last-dm-set) ((common-lisp-user::esc nil t nil 0 nil) (common-lisp-user::model-name nil t nil 1 nil) (common-lisp-user::conflict-set nil t nil 2 nil) (common-lisp-user::last-dm-request nil t nil 3 nil) (common-lisp-user::last-dm-set nil t nil 4 nil)) common-lisp-user::copy-environment-module (common-lisp-user::make-environment-module) common-lisp-user::environment-module-p si::define-structure #3=(common-lisp-user::environment-module (:conc-name common-lisp-user::env-mod-)) ext::location (defstruct #3#) (#1# . 5120) ext::annotate common-lisp-user::make-environment-module (defun common-lisp-user::make-environment-module) (#1# . 5120) :lambda-list (&key #4=#:esc #5=#:model-name #6=#:conflict-set #7=#:last-dm-request #8=#:last-dm-set) (nil :last-dm-set :last-dm-request :conflict-set :model-name :esc) #4# #5# #6# #7# #8# 0 si::make-structure #Y(common-lisp-user::make-environment-module nil nil (28 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 15 24 13 4 13 3 13 2 13 1 13 0 19 6 25 29) #2# #1# 5120) si::fset find-class)) #1# 5120) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #9=#A(t (30) (common-lisp-user::create-environment-module ext::location (defun common-lisp-user::create-environment-module) (#1# . 5243) ext::annotate :lambda-list (common-lisp-user::model-name) common-lisp-user::model-name common-lisp-user::*environment-control* common-lisp-user::environment-control-connections common-lisp-user::meta-process-names length > *error-output* "~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models common-lisp-user::current-model "Environment will not work correctly when there are multiple meta-processes!" format finish-output :model-name common-lisp-user::make-environment-module common-lisp-user::module common-lisp-user::add-pre-hook-if-needed common-lisp-user::add-post-hook-if-needed common-lisp-user::create common-lisp-user::call-all-environment-hooks #Y(common-lisp-user::create-environment-module nil nil (24 45 7 26 14 8 19 1 9 39 12 19 0 10 16 11 12 9 1 19 2 12 39 37 14 13 15 14 19 0 15 73 39 12 19 0 16 16 11 12 9 1 19 2 12 12 19 0 17 12 15 18 19 5 19 14 13 19 1 20 14 21 13 0 19 2 22 45 23 14 8 19 1 9 39 14 19 0 24 19 0 25 15 26 13 1 19 2 27 10 0 73 43 1 29) #9# #1# 5243) si::fset)) #1# 5243) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 24 12 19 2 25 1 0 73 29) #10=#A(t (26) (common-lisp-user::reset-environment-module ext::location (defun common-lisp-user::reset-environment-module) (#1# . 5761) ext::annotate :lambda-list (common-lisp-user::env-mod) common-lisp-user::env-mod #:g20480 #:g20481 common-lisp-user::environment-module si::structure-set #:g20482 #:g20483 #:g20484 #:g20485 common-lisp-user::*environment-control* common-lisp-user::environment-control-connections common-lisp-user::add-pre-hook-if-needed common-lisp-user::add-post-hook-if-needed (:conflict-set-hook common-lisp-user::env-cs-hook :retrieval-request-hook common-lisp-user::env-rr-hook :retrieval-set-hook common-lisp-user::env-rs-hook) common-lisp-user::sgp-fct common-lisp-user::reset common-lisp-user::call-all-environment-hooks #Y(common-lisp-user::reset-environment-module nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 2 13 0 19 4 11 43 1 43 1 10 0 45 12 75 45 13 13 1 15 10 9 3 13 0 19 4 11 43 1 43 1 10 0 45 14 75 45 15 13 1 15 10 9 4 13 0 19 4 11 43 1 43 1 14 16 19 1 17 73 39 17 19 0 18 19 0 19 15 20 19 1 21 15 22 19 1 23 29) #10# #1# 5761) si::fset)) #1# 5761) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #11=#A(t (24) (common-lisp-user::env-cs-hook ext::location (defun common-lisp-user::env-cs-hook) (#1# . 6265) ext::annotate :lambda-list (common-lisp-user::cs) common-lisp-user::cs :environment common-lisp-user::get-module-fct common-lisp-user::env-mod common-lisp-user::*environment-control* common-lisp-user::environment-control-connections #:g20488 copy-list #:g20489 common-lisp-user::environment-module si::structure-set common-lisp-user::conflict-nil common-lisp-user::call-model-environment-hooks common-lisp-user::conflict common-lisp-user::call-model-environment-hooks-with-return #Y(common-lisp-user::env-cs-hook nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 6 14 11 19 1 12 73 39 40 10 0 45 13 10 2 16 14 45 15 13 1 15 16 9 2 13 0 19 4 17 43 1 43 1 15 18 13 1 19 2 19 15 20 13 1 19 2 21 43 1 29) #11# #1# 6265) si::fset)) #1# 6265) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 1 0 73 29) #12=#A(t (17) (common-lisp-user::env-rr-hook ext::location (defun common-lisp-user::env-rr-hook) (#1# . 6723) ext::annotate :lambda-list (common-lisp-user::request) common-lisp-user::request :environment common-lisp-user::get-module-fct common-lisp-user::env-mod #:g20492 #:g20493 common-lisp-user::environment-module si::structure-set #Y(common-lisp-user::env-rr-hook nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 45 11 10 2 45 12 13 1 15 13 9 3 13 0 19 4 14 43 1 43 1 43 1 75 73 29) #12# #1# 6723) si::fset)) #1# 6723) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #13=#A(t (20) (common-lisp-user::env-rs-hook ext::location (defun common-lisp-user::env-rs-hook) (#1# . 6860) ext::annotate :lambda-list (common-lisp-user::ret-set) common-lisp-user::ret-set :environment common-lisp-user::get-module-fct common-lisp-user::env-mod common-lisp-user::*environment-control* common-lisp-user::environment-control-connections #:g20496 copy-list #:g20497 common-lisp-user::environment-module si::structure-set #Y(common-lisp-user::env-rs-hook nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 6 14 11 19 1 12 39 26 10 0 45 13 10 2 16 14 45 15 13 1 15 16 9 4 13 0 19 4 17 43 1 43 1 43 1 75 73 29) #13# #1# 6860) si::fset)) #1# 6860) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #14=#A(t (14) (common-lisp-user::delete-environment-module ext::location (defun common-lisp-user::delete-environment-module) (#1# . 7087) ext::annotate :lambda-list (common-lisp-user::env-mod) common-lisp-user::env-mod common-lisp-user::delete-pre-hook-if-necessary common-lisp-user::delete-post-hook-if-necessary delete common-lisp-user::call-model-environment-hooks #Y(common-lisp-user::delete-environment-module nil nil (24 45 7 26 19 0 8 19 0 9 15 10 77 19 2 11 29) #14# #1# 7087) si::fset)) #1# 7087) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #15=#A(t (15) (common-lisp-user::environment-params ext::location (defun common-lisp-user::environment-params) (#1# . 7279) ext::annotate :lambda-list (common-lisp-user::env-mod common-lisp-user::param) common-lisp-user::env-mod common-lisp-user::param #:g20500 #:g20501 common-lisp-user::environment-module si::structure-set #Y(common-lisp-user::environment-params nil nil (24 45 7 24 45 8 26 10 1 73 39 25 10 1 45 9 10 1 5 45 10 13 1 15 11 9 0 13 0 19 4 12 43 1 43 1 29) #15# #1# 7279) si::fset)) #1# 7279) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #16=#A(t (15) (common-lisp-user::update-environment-run-start-hooks ext::location (defun common-lisp-user::update-environment-run-start-hooks) (#1# . 7386) ext::annotate :lambda-list (common-lisp-user::env-mod) common-lisp-user::env-mod common-lisp-user::*environment-control* common-lisp-user::environment-control-connections common-lisp-user::run-start :start common-lisp-user::call-model-environment-hooks #Y(common-lisp-user::update-environment-run-start-hooks nil nil (24 45 7 26 14 8 19 1 9 73 39 8 15 10 14 11 19 2 12 29) #16# #1# 7386) si::fset)) #1# 7386) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #17=#A(t (15) (common-lisp-user::update-environment-run-end-hooks ext::location (defun common-lisp-user::update-environment-run-end-hooks) (#1# . 7587) ext::annotate :lambda-list (common-lisp-user::env-mod) common-lisp-user::env-mod common-lisp-user::*environment-control* common-lisp-user::environment-control-connections common-lisp-user::run-end :end common-lisp-user::call-model-environment-hooks #Y(common-lisp-user::update-environment-run-end-hooks nil nil (24 45 7 26 14 8 19 1 9 73 39 8 15 10 14 11 19 2 12 29) #17# #1# 7587) si::fset)) #1# 7587) #Y(si::bytecodes nil nil (14 0 77 14 1 14 2 77 19 3 3 6 1 12 14 4 15 5 14 6 15 7 14 8 15 9 14 10 15 11 14 12 15 13 14 14 15 15 14 16 15 17 14 18 15 19 19 19 20 29) #A(t (21) (:environment :esc :owner common-lisp-user::define-parameter :params common-lisp-user::environment-params :creation common-lisp-user::create-environment-module :reset (nil common-lisp-user::reset-environment-module) :version "3.0" :run-start common-lisp-user::update-environment-run-start-hooks :run-end common-lisp-user::update-environment-run-end-hooks :documentation "A module to handle the environment connection if opened" :delete common-lisp-user::delete-environment-module common-lisp-user::define-module-fct)) #1# 7782))
