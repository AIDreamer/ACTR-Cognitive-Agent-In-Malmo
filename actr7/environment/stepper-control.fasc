(#Y(si::bytecodes nil nil (15 0 14 1 14 2 33 3 12 19 4 4 76 73 39 10 15 5 19 1 6 12 19 1 7 29) #A(t (8) ("UNI-FILES" *modules* :test string= member "ACT-R-support:uni-files" translate-logical-pathname common-lisp-user::compile-and-load)) #1=#P"C:/Users/Son Pham/Desktop/actr7/environment/stepper-control.lisp" 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 32 12 19 2 33 1 0 73 29) #2=#A(t (34) (common-lisp-user::init-stepper ext::location (defun common-lisp-user::init-stepper) (#1# . 5541) ext::annotate :lambda-list common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper #:g21040 t #:g21041 common-lisp-user::environment-control si::structure-set common-lisp-user::stepper-control-handlers clrhash #:g21042 #:g21043 common-lisp-user::stepper-control #:g21044 #:g21045 #:g21046 :production #:g21047 #:g21048 #:g21049 #:g21050 #:g21051 #:g21052 #:g21053 #:g21054 #:g21055 #Y(common-lisp-user::init-stepper nil nil (26 14 6 19 1 7 45 8 11 6 45 9 11 10 45 11 13 1 15 12 9 6 13 0 19 4 13 43 1 43 1 13 0 19 1 14 16 15 10 0 45 16 11 10 45 17 13 1 15 18 9 2 13 0 19 4 13 43 1 43 1 10 0 45 19 75 45 20 13 1 15 18 9 4 13 0 19 4 13 43 1 43 1 10 0 45 21 11 22 45 23 13 1 15 18 9 5 13 0 19 4 13 43 1 43 1 10 0 45 24 75 45 25 13 1 15 18 9 6 13 0 19 4 13 43 1 43 1 10 0 45 26 75 45 27 13 1 15 18 9 7 13 0 19 4 13 43 1 43 1 10 0 45 28 75 45 29 13 1 15 18 9 1 13 0 19 4 13 43 1 43 1 10 0 45 30 75 45 31 13 1 15 18 9 0 13 0 19 4 13 43 1 43 1 8 1 73 43 1 29) #2# #1# 5541) si::fset)) #1# 5541) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #3=#A(t (20) (common-lisp-user::remove-stepper ext::location (defun common-lisp-user::remove-stepper) (#1# . 6328) ext::annotate :lambda-list common-lisp-user::*environment-control* #:g21062 #:g21063 common-lisp-user::environment-control si::structure-set common-lisp-user::environment-control-stepper common-lisp-user::stepper #:g21064 #:g21065 common-lisp-user::stepper-control #:g21066 #:g21067 #Y(common-lisp-user::remove-stepper nil nil (26 11 6 45 7 75 45 8 13 1 15 9 9 6 13 0 19 4 10 43 1 43 1 14 6 19 1 11 45 12 10 0 45 13 75 45 14 13 1 15 15 9 2 13 0 19 4 10 43 1 43 1 10 0 45 16 75 45 17 13 1 15 15 9 4 13 0 19 4 10 43 1 43 1 8 1 73 43 1 29) #3# #1# 6328) si::fset)) #1# 6328) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #4=#A(t (20) (common-lisp-user::set-stepper-skip-time ext::location (defun common-lisp-user::set-stepper-skip-time) (#1# . 6609) ext::annotate :lambda-list (common-lisp-user::vals) common-lisp-user::vals common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper #:g21072 #:g21073 common-lisp-user::stepper-control si::structure-set #:g21074 second #:g21075 #Y(common-lisp-user::set-stepper-skip-time nil nil (24 45 7 26 14 8 19 1 9 45 10 10 0 45 11 10 2 4 45 12 13 1 15 13 9 0 13 0 19 4 14 43 1 43 1 10 0 45 15 10 2 16 16 45 17 13 1 15 13 9 1 13 0 19 4 14 43 1 43 1 43 1 29) #4# #1# 6609) si::fset)) #1# 6609) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 93 12 19 2 94 1 0 73 29) #5=#A(t (95) (common-lisp-user::stepper-test ext::location (defun common-lisp-user::stepper-test) (#1# . 6843) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper common-lisp-user::stepper-control-skip-type common-lisp-user::production common-lisp-user::stepper-control-skip-val symbolp common-lisp-user::model common-lisp-user::*meta-processes* common-lisp-user::mps-current #:g21101 #:g21103 common-lisp-user::valid-model-name common-lisp-user::meta-p-current-model #:g21102 #:g21104 common-lisp-user::meta-p-models gethash #:g21105 common-lisp-user::meta-process si::structure-set #:g21106 #:g21108 common-lisp-user::meta-p-cannot-define-model + #:g21107 common-lisp-user::all-productions find #:g21109 #:g21110 #:g21111 #:g21113 - #:g21112 *error-output* #6="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model #7="~S does not name a model in the current meta-process" format finish-output #8="No actions taken in with-model because there is no current meta-process" #Y(nil nil nil (24 45 15 26 14 16 19 1 17 45 18 10 0 39 235 10 1 45 19 13 0 19 1 20 39 179 14 16 19 1 17 39 10 14 16 19 1 17 12 19 1 21 45 22 14 16 19 1 17 45 23 13 2 13 3 19 1 24 12 19 2 25 45 26 13 1 15 27 9 5 13 0 19 4 28 43 1 43 1 14 16 19 1 17 45 29 8 1 45 30 13 1 19 1 31 12 13 0 19 2 32 45 33 13 2 15 27 9 29 13 0 19 4 28 43 3 64 45 64 15 13 4 19 1 13 12 19 0 34 12 19 2 35 65 14 16 19 1 17 45 36 10 1 45 37 13 1 15 27 9 5 13 0 19 4 28 43 1 43 1 66 65 14 16 19 1 17 45 38 8 1 45 39 13 1 19 1 31 12 13 0 19 2 40 45 41 13 2 15 27 9 29 13 0 19 4 28 43 3 66 43 1 38 42 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 49 13 0 19 6 50 12 14 42 19 1 51 22 73 43 1 38 40 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 52 19 5 50 12 14 42 19 1 51 22 73 43 1 29) #5# #1# 6843) notany "Run Until Production requires a valid production name value." "Normal stepping is being used instead." t common-lisp-user::evt-action common-lisp-user::production-selected eq common-lisp-user::production-fired common-lisp-user::evt-params common-lisp-user::production-name #:g21114 #:g21115 common-lisp-user::stepper-control #:g21116 #:g21117 time numberp "Run Until Time requires a number (time in seconds) as the value." "Normal stepping is being used instead." common-lisp-user::evt-mstime common-lisp-user::seconds->ms >= #:g21118 #:g21119 #:g21120 #:g21121 common-lisp-user::module string common-lisp-user::all-module-names mapcar :test string-equal "Run Until Module requires a valid module name." "Normal stepping is being used instead." common-lisp-user::evt-module #:g21122 #:g21123 #:g21124 #:g21125 #Y(common-lisp-user::stepper-test nil nil (24 45 7 26 14 8 19 1 9 45 10 13 0 19 1 11 42 12 197 13 0 19 1 13 16 14 76 40 11 34 53 12 19 0 45 12 19 2 54 39 78 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 55 19 5 50 14 42 19 1 51 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 56 19 5 50 14 42 19 1 51 11 57 73 38 96 13 1 19 1 58 12 1 59 17 60 40 11 13 1 19 1 58 12 1 61 17 60 39 19 13 0 19 1 13 12 13 1 19 1 62 4 12 19 1 63 17 60 39 50 10 0 45 64 75 45 65 13 1 15 66 9 1 13 0 19 4 28 43 1 43 1 10 0 45 67 75 45 68 13 1 15 66 9 0 13 0 19 4 28 43 1 43 1 11 57 73 38 3 75 73 38 352 42 69 162 13 0 19 1 13 16 70 76 39 78 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 71 19 5 50 14 42 19 1 51 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 72 19 5 50 14 42 19 1 51 11 57 73 38 73 13 1 19 1 73 12 13 0 19 1 13 12 19 1 74 12 19 2 75 39 50 10 0 45 76 75 45 77 13 1 15 66 9 1 13 0 19 4 28 43 1 43 1 10 0 45 78 75 45 79 13 1 15 66 9 0 13 0 19 4 28 43 1 43 1 11 57 73 38 3 75 73 38 188 42 80 182 13 0 19 1 13 16 81 12 33 81 12 19 0 82 12 19 2 83 12 14 84 33 85 12 19 4 35 76 39 78 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 86 19 5 50 14 42 19 1 51 14 42 15 43 19 0 44 73 39 12 19 0 45 16 46 12 9 1 19 2 47 12 19 0 48 12 15 87 19 5 50 14 42 19 1 51 11 57 73 38 73 13 0 19 1 13 16 81 12 13 1 19 1 88 16 81 12 19 2 85 39 50 10 0 45 89 75 45 90 13 1 15 66 9 1 13 0 19 4 28 43 1 43 1 10 0 45 91 75 45 92 13 1 15 66 9 0 13 0 19 4 28 43 1 43 1 11 57 73 38 3 75 73 38 4 11 57 73 43 1 29) #5# #1# 6843) si::fset)) #1# 6843) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 59 12 19 2 60 1 0 73 29) #9=#A(t (61) (common-lisp-user::model-trace-enabled ext::location (defun common-lisp-user::model-trace-enabled) (#1# . 9056) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event common-lisp-user::*meta-processes* common-lisp-user::mps-current #:g21146 common-lisp-user::evt-model common-lisp-user::mp-models #:g21148 common-lisp-user::valid-model-name common-lisp-user::meta-p-current-model #:g21147 #:g21149 common-lisp-user::meta-p-models gethash #:g21150 common-lisp-user::meta-process si::structure-set #:g21151 #:g21153 common-lisp-user::meta-p-cannot-define-model + #:g21152 common-lisp-user::printing-module common-lisp-user::get-module-fct #:g21155 #:g21154 common-lisp-user::printing-module-suppress-cmds #:g21156 #:g21157 t #:g21158 (setf common-lisp-user::printing-module-suppress-cmds) (:v) common-lisp-user::sgp-fct #:g21159 #:g21160 (setf common-lisp-user::printing-module-suppress-cmds) #:g21161 #:g21162 #:g21163 #:g21165 - #:g21164 *error-output* #6# common-lisp-user::current-mp-fct length > common-lisp-user::current-model #7# format finish-output #8# #Y(common-lisp-user::model-trace-enabled nil nil (24 45 7 26 14 8 19 1 9 45 10 10 0 39 314 13 1 19 1 11 39 8 13 1 19 1 11 38 5 19 0 12 4 45 13 13 0 19 1 14 39 242 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 15 45 16 14 8 19 1 9 45 17 13 2 13 3 19 1 18 12 19 2 19 45 20 13 1 15 21 9 5 13 0 19 4 22 43 1 43 1 14 8 19 1 9 45 23 8 1 45 24 13 1 19 1 25 12 13 0 19 2 26 45 27 13 2 15 21 9 29 13 0 19 4 22 43 3 64 108 64 78 15 28 19 1 29 47 1 30 45 31 10 1 39 59 13 0 19 1 32 45 33 10 1 45 34 11 35 45 36 13 0 13 1 33 37 18 2 43 1 43 1 64 7 15 38 19 1 39 65 10 1 45 40 10 1 45 41 13 0 13 1 33 42 18 2 43 1 43 1 66 43 1 43 2 4 73 65 14 8 19 1 9 45 43 10 1 45 44 13 1 15 21 9 5 13 0 19 4 22 43 1 43 1 66 65 14 8 19 1 9 45 45 8 1 45 46 13 1 19 1 25 12 13 0 19 2 47 45 48 13 2 15 21 9 29 13 0 19 4 22 43 3 66 43 1 38 42 14 49 15 50 19 0 51 73 39 12 19 0 12 16 52 12 9 1 19 2 53 12 19 0 54 12 15 55 13 0 19 6 56 12 14 49 19 1 57 22 73 43 1 38 40 14 49 15 50 19 0 51 73 39 12 19 0 12 16 52 12 9 1 19 2 53 12 19 0 54 12 15 58 19 5 56 12 14 49 19 1 57 22 73 43 1 29) #9# #1# 9056) si::fset)) #1# 9056) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 38 12 19 2 39 1 0 73 29) #10=#A(t (40) (common-lisp-user::stepper-step ext::location (defun common-lisp-user::stepper-step) (#1# . 9263) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper common-lisp-user::act-r-event-p common-lisp-user::event-displayed-p common-lisp-user::model-trace-enabled common-lisp-user::stepper-control-mode :tutor eq common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected common-lisp-user::stepper-test #:g21172 #:g21173 common-lisp-user::stepper-control si::structure-set #:g21174 #:g21175 common-lisp-user::stepper-control-handlers common-lisp-user::hash-table-keys si::%dolist-var common-lisp-user::x common-lisp-user::update-handler common-lisp-user::uni-process-system-events common-lisp-user::stepper-control-wait #:g21176 t #:g21177 #Y(common-lisp-user::stepper-step nil nil (24 45 7 26 14 8 19 1 9 45 10 10 1 39 63 13 1 19 1 11 39 56 13 1 19 1 12 39 6 13 1 19 1 13 40 35 13 0 19 1 14 12 11 15 17 16 39 23 13 1 19 1 17 12 1 18 17 16 39 11 13 1 19 1 19 12 1 20 17 16 39 6 13 1 19 1 21 73 39 159 10 0 45 22 10 2 45 23 13 1 15 24 9 4 13 0 19 4 25 43 1 43 1 10 0 45 26 75 45 27 13 1 15 24 9 6 13 0 19 4 25 43 1 43 1 13 0 19 1 28 12 19 1 29 45 30 75 45 31 38 18 10 1 4 51 0 13 0 13 3 19 2 32 10 1 5 51 1 10 1 40 -20 43 2 38 4 19 0 33 13 0 19 1 34 76 39 -10 13 0 19 1 28 12 19 1 29 45 30 75 45 31 38 17 10 1 4 51 0 13 0 77 19 2 32 10 1 5 51 1 10 1 40 -19 43 2 10 0 45 35 11 36 45 37 13 1 15 24 9 2 13 0 19 4 25 43 1 43 1 43 1 29) #10# #1# 9263) si::fset)) #1# 9263) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #11=#A(t (20) (common-lisp-user::add-handler-to-stepper ext::location (defun common-lisp-user::add-handler-to-stepper) (#1# . 10245) ext::annotate :lambda-list (common-lisp-user::handler) common-lisp-user::handler common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper type-of common-lisp-user::environment-handler subtypep common-lisp-user::stepper-control-handlers gethash t si::hash-set #Y(common-lisp-user::add-handler-to-stepper nil nil (24 45 7 26 14 8 19 1 9 45 10 10 1 16 11 12 15 12 19 2 13 39 28 13 1 13 0 19 1 14 12 19 2 15 76 39 14 13 1 13 0 19 1 14 12 14 16 19 3 17 43 1 75 73 29) #11# #1# 10245) si::fset)) #1# 10245) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #12=#A(t (16) (common-lisp-user::stepper-step-button ext::location (defun common-lisp-user::stepper-step-button) (#1# . 10565) ext::annotate :lambda-list (common-lisp-user::x) common-lisp-user::x common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper #:g21186 #:g21187 common-lisp-user::stepper-control si::structure-set #Y(common-lisp-user::stepper-step-button nil nil (24 45 7 26 10 0 76 73 39 26 14 8 19 1 9 45 10 75 45 11 13 1 15 12 9 2 13 0 19 4 13 43 1 43 1 29) #12# #1# 10565) si::fset)) #1# 10565) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #13=#A(t (21) (common-lisp-user::stepper-stop-button ext::location (defun common-lisp-user::stepper-stop-button) (#1# . 10701) ext::annotate :lambda-list (common-lisp-user::x) common-lisp-user::x :priority :max :details "Stopped by the stepper" common-lisp-user::schedule-break-relative common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper #:g21190 #:g21191 common-lisp-user::stepper-control si::structure-set #Y(common-lisp-user::stepper-stop-button nil nil (24 45 7 26 9 0 14 8 14 9 14 10 15 11 19 5 12 10 0 76 73 39 26 14 13 19 1 14 45 15 75 45 16 13 1 15 17 9 2 13 0 19 4 18 43 1 43 1 29) #13# #1# 10701) si::fset)) #1# 10701) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 1 0 73 29) #14=#A(t (18) (common-lisp-user::next-event-display ext::location (defun common-lisp-user::next-event-display) (#1# . 10917) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event type-of common-lisp-user::environment-handler subtypep common-lisp-user::add-handler-to-stepper " " common-lisp-user::act-r-event-p common-lisp-user::format-event " " #Y(common-lisp-user::next-event-display nil nil (24 45 7 26 10 0 16 8 12 15 9 19 2 10 39 11 13 0 19 1 11 1 12 73 38 18 13 0 19 1 13 39 8 13 0 19 1 14 38 4 1 15 73 29) #14# #1# 10917) si::fset)) #1# 10917) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #15=#A(t (30) (common-lisp-user::stepper-list-name ext::location (defun common-lisp-user::stepper-list-name) (#1# . 11143) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event type-of common-lisp-user::environment-handler subtypep common-lisp-user::add-handler-to-stepper " " common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected "Possible Productions" common-lisp-user::production-fired "Production" " " common-lisp-user::declarative common-lisp-user::retrieved-chunk "Possible Chunks" " " " " " " #Y(common-lisp-user::stepper-list-name nil nil (24 45 7 26 10 0 16 8 12 15 9 19 2 10 39 11 13 0 19 1 11 1 12 73 38 71 13 0 19 1 13 39 61 13 0 19 1 14 42 15 27 13 0 19 1 16 42 17 6 1 18 73 38 12 42 19 6 1 20 73 38 4 1 21 73 38 25 42 22 19 13 0 19 1 16 42 23 6 1 24 73 38 4 1 25 73 38 4 1 26 73 38 4 1 27 73 29) #15# #1# 11143) si::fset)) #1# 11143) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 50 12 19 2 51 1 0 73 29) #16=#A(t (52) (common-lisp-user::stepper-list-values ext::location (defun common-lisp-user::stepper-list-values) (#1# . 11747) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event type-of common-lisp-user::environment-handler subtypep common-lisp-user::add-handler-to-stepper common-lisp-user::act-r-event-p common-lisp-user::current-model :environment common-lisp-user::get-module-fct common-lisp-user::env common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected common-lisp-user::env-mod-conflict-set common-lisp-user::production-fired subseq common-lisp-user::declarative common-lisp-user::retrieved-chunk common-lisp-user::env-mod-esc common-lisp-user::env-mod-last-dm-set copy-list common-lisp-user::c > :key common-lisp-user::x common-lisp-user::printing-module #:g21200 #:g21199 common-lisp-user::printing-module-suppress-cmds #:g21201 #:g21202 t #:g21203 (setf common-lisp-user::printing-module-suppress-cmds) :last-retrieval-activation common-lisp-user::sdp-fct caar #:g21204 #:g21205 (setf common-lisp-user::printing-module-suppress-cmds) #Y(nil nil nil (24 45 32 26 15 33 19 1 15 47 1 34 45 35 10 1 73 39 66 13 0 19 1 36 45 37 10 1 45 38 11 39 45 40 13 0 13 1 33 41 18 2 43 1 43 1 64 14 13 3 11 42 6 2 12 19 1 43 16 44 65 10 1 45 45 10 1 45 46 13 0 13 1 33 47 18 2 43 1 43 1 66 43 1 43 2 29) #16# #1# 11747) sort #Y(common-lisp-user::stepper-list-values nil nil (24 45 7 26 10 0 16 8 12 15 9 19 2 10 39 10 13 0 19 1 11 75 73 38 136 13 0 19 1 12 39 4 19 0 13 39 122 15 14 19 1 15 45 16 13 1 19 1 17 42 18 38 13 1 19 1 19 42 20 8 13 0 19 1 21 38 21 42 22 16 13 0 19 1 21 12 9 0 9 1 19 3 23 38 3 75 73 38 66 42 24 61 13 1 19 1 19 42 25 49 13 0 19 1 26 39 35 13 0 19 1 27 16 28 45 29 10 0 4 12 10 0 5 12 33 30 12 14 31 34 48 12 19 4 49 3 73 43 1 38 6 13 0 19 1 27 38 3 75 73 38 3 75 73 43 1 38 3 75 73 29) #16# #1# 11747) si::fset)) #1# 11747) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #17=#A(t (31) (common-lisp-user::stepper-prod_frame-name ext::location (defun common-lisp-user::stepper-prod_frame-name) (#1# . 12874) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event type-of common-lisp-user::environment-handler subtypep common-lisp-user::add-handler-to-stepper " " common-lisp-user::act-r-event-p common-lisp-user::current-model common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected "Production" common-lisp-user::production-fired "Production" " " common-lisp-user::declarative common-lisp-user::retrieved-chunk "Chunk" " " " " " " #Y(common-lisp-user::stepper-prod_frame-name nil nil (24 45 7 26 10 0 16 8 12 15 9 19 2 10 39 11 13 0 19 1 11 1 12 73 38 76 13 0 19 1 13 39 4 19 0 14 39 61 13 0 19 1 15 42 16 27 13 0 19 1 17 42 18 6 1 19 73 38 12 42 20 6 1 21 73 38 4 1 22 73 38 25 42 23 19 13 0 19 1 17 42 24 6 1 25 73 38 4 1 26 73 38 4 1 27 73 38 4 1 28 73 29) #17# #1# 12874) si::fset)) #1# 12874) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #18=#A(t (29) (common-lisp-user::stepper-instan-production ext::location (defun common-lisp-user::stepper-instan-production) (#1# . 13487) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper common-lisp-user::stepper-control-current-event common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected common-lisp-user::stepper-control-mode :production eq :tutor common-lisp-user::pp-fct common-lisp-user::pprint-instantiation-fct common-lisp-user::production-fired common-lisp-user::declarative common-lisp-user::retrieved-chunk common-lisp-user::dm-fct #Y(common-lisp-user::stepper-instan-production nil nil (24 45 7 26 14 8 19 1 9 45 10 10 1 73 39 126 13 0 19 1 11 12 19 1 12 39 113 13 0 19 1 11 12 19 1 13 42 14 68 13 0 19 1 11 12 19 1 15 42 16 42 13 0 19 1 17 12 11 18 17 19 40 11 13 0 19 1 17 12 11 20 17 19 39 11 10 1 6 1 12 19 1 21 38 6 13 1 19 1 22 38 13 42 23 8 13 1 19 1 22 38 3 75 73 38 32 42 24 27 13 0 19 1 11 12 19 1 15 42 25 11 10 1 6 1 12 19 1 26 38 3 75 73 38 3 75 73 38 3 75 73 43 1 29) #18# #1# 13487) si::fset)) #1# 13487) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 33 12 19 2 34 1 0 73 29) #19=#A(t (35) (common-lisp-user::stepper-parameter-frame-name ext::location (defun common-lisp-user::stepper-parameter-frame-name) (#1# . 14548) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event common-lisp-user::current-model :environment common-lisp-user::get-module-fct common-lisp-user::env-mod-esc type-of common-lisp-user::environment-handler subtypep common-lisp-user::add-handler-to-stepper " " common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected "Production Parameters" common-lisp-user::production-fired "Production Parameters" " " common-lisp-user::declarative common-lisp-user::retrieved-chunk "Chunk Parameters" " " " " " " " " #Y(common-lisp-user::stepper-parameter-frame-name nil nil (24 45 7 26 19 0 8 39 10 15 9 19 1 10 12 19 1 11 39 95 10 0 16 12 12 15 13 19 2 14 39 11 13 0 19 1 15 1 16 73 38 71 13 0 19 1 17 39 61 13 0 19 1 18 42 19 27 13 0 19 1 20 42 21 6 1 22 73 38 12 42 23 6 1 24 73 38 4 1 25 73 38 25 42 26 19 13 0 19 1 20 42 27 6 1 28 73 38 4 1 29 73 38 4 1 30 73 38 4 1 31 73 38 4 1 32 73 29) #19# #1# 14548) si::fset)) #1# 14548) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 14 24 9 1 19 4 25 1 0 73 29) #20=#A(t (26) (common-lisp-user::suppress-declarative-noise ext::location (defmacro common-lisp-user::suppress-declarative-noise) (#1# . 15311) ext::annotate :lambda-list (&body common-lisp-user::body) #:g21207 #:g21206 #:g21208 common-lisp-user::body gensym common-lisp-user::old-val let (car (common-lisp-user::no-output (common-lisp-user::sgp :ans))) if unwind-protect progn (common-lisp-user::no-output (common-lisp-user::sgp :ans nil)) common-lisp-user::no-output common-lisp-user::sgp-fct list :ans #Y(common-lisp-user::suppress-declarative-noise nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 19 0 11 45 12 15 13 13 0 1 14 6 2 6 1 12 15 15 13 0 15 16 15 17 15 18 10 1 7 3 12 15 19 15 20 15 21 14 22 10 0 6 3 6 2 6 2 6 3 12 10 1 7 4 6 3 73 43 1 29) #20# #1# 15311) t si::fset)) #1# 15311) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 58 12 19 2 59 1 0 73 29) #21=#A(t (60) (common-lisp-user::stepper-parameter-frame-values ext::location (defun common-lisp-user::stepper-parameter-frame-values) (#1# . 15677) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper :environment common-lisp-user::get-module-fct common-lisp-user::env-mod-esc common-lisp-user::stepper-control-current-event common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected common-lisp-user::spp-fct common-lisp-user::production-fired common-lisp-user::declarative common-lisp-user::retrieved-chunk (:ans nil) #:g21225 common-lisp-user::with-parameters common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #6# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "with-parameters called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "with-parameters called with no current model." oddp "Odd length parameters list in call to with-parameters. The body is ignored." #:g21227 #:g21226 #:g21236 #:g21237 #:g21229 #:g21228 common-lisp-user::valid-parameter-name "~s is not the name of a parameter. with-parameters body ignored." common-lisp-user::get-parameters #:g21240 nconc si::%dolist-var #:g21230 common-lisp-user::test-and-set-parameter-value common-lisp-user::sdp-fct #Y(common-lisp-user::stepper-parameter-frame-values nil nil (24 45 7 26 14 8 19 1 9 45 10 10 1 39 10 15 11 19 1 12 12 19 1 13 73 39 484 13 0 19 1 14 12 19 1 15 39 471 13 0 19 1 14 12 19 1 16 42 17 40 13 0 19 1 14 12 19 1 18 42 19 11 10 1 6 1 12 19 1 20 38 16 42 21 11 10 1 6 1 12 19 1 20 38 3 75 73 38 418 42 22 413 13 0 19 1 14 12 19 1 18 42 23 397 1 24 45 25 57 26 60 385 14 27 19 1 28 76 39 42 14 29 15 30 19 0 31 73 39 12 19 0 32 16 33 12 9 1 19 2 34 12 19 0 35 12 15 36 19 5 37 12 14 29 19 1 38 22 73 38 335 14 27 19 1 28 12 19 1 39 76 39 42 14 29 15 30 19 0 31 73 39 12 19 0 32 16 33 12 9 1 19 2 34 12 19 0 35 12 15 40 19 5 37 12 14 29 19 1 38 22 73 38 282 10 1 16 33 16 41 39 42 14 29 15 30 19 0 31 73 39 12 19 0 32 16 33 12 9 1 19 2 34 12 19 0 35 12 15 42 19 5 37 12 14 29 19 1 38 22 73 38 233 77 77 46 43 46 44 38 134 10 3 45 45 10 0 4 12 10 0 5 51 0 10 0 51 4 43 1 10 3 45 46 10 0 4 12 10 0 5 51 0 10 0 51 4 43 1 46 47 46 48 13 0 19 1 49 76 39 43 14 29 15 30 19 0 31 73 39 12 19 0 32 16 33 12 9 1 19 2 34 12 19 0 35 12 15 50 13 0 19 6 37 14 29 19 1 38 75 73 36 4 13 0 10 0 6 1 12 77 19 2 51 4 3 12 10 2 3 51 2 13 0 10 1 3 6 1 45 52 13 4 13 0 19 2 53 51 4 43 1 43 2 10 3 76 39 -137 64 46 10 1 45 54 75 45 55 38 22 10 1 4 51 0 10 0 4 12 10 0 5 12 19 2 56 10 1 5 51 1 10 1 40 -24 43 2 10 5 6 1 12 19 1 57 65 10 0 45 54 75 45 55 38 22 10 1 4 51 0 10 0 4 12 10 0 5 12 19 2 56 10 1 5 51 1 10 1 40 -24 43 2 66 43 2 63 43 1 38 3 75 73 38 3 75 73 38 3 75 73 43 1 29) #21# #1# 15677) si::fset)) #1# 15677) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #22=#A(t (20) (common-lisp-user::tutored-step ext::location (defun common-lisp-user::tutored-step) (#1# . 16540) ext::annotate :lambda-list common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper common-lisp-user::stepper-control-current-event common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural eq common-lisp-user::evt-action common-lisp-user::production-selected common-lisp-user::stepper-control-mode :tutor #Y(common-lisp-user::tutored-step nil nil (26 14 6 19 1 7 45 8 13 0 19 1 9 12 19 1 10 73 39 45 13 0 19 1 9 12 19 1 11 12 1 12 17 13 73 39 28 13 0 19 1 9 12 19 1 14 12 1 15 17 13 73 39 11 13 0 19 1 16 12 11 17 17 13 43 1 29) #22# #1# 16540) si::fset)) #1# 16540) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #23=#A(t (30) (common-lisp-user::stepper-bindings-name ext::location (defun common-lisp-user::stepper-bindings-name) (#1# . 16923) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event type-of common-lisp-user::environment-handler subtypep common-lisp-user::add-handler-to-stepper " " common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected "Bindings" common-lisp-user::production-fired "Bindings" " " common-lisp-user::declarative common-lisp-user::retrieved-chunk "Retrieval Request" " " " " " " #Y(common-lisp-user::stepper-bindings-name nil nil (24 45 7 26 10 0 16 8 12 15 9 19 2 10 39 11 13 0 19 1 11 1 12 73 38 71 13 0 19 1 13 39 61 13 0 19 1 14 42 15 27 13 0 19 1 16 42 17 6 1 18 73 38 12 42 19 6 1 20 73 38 4 1 21 73 38 25 42 22 19 13 0 19 1 16 42 23 6 1 24 73 38 4 1 25 73 38 4 1 26 73 38 4 1 27 73 29) #23# #1# 16923) si::fset)) #1# 16923) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 73 12 19 2 74 1 0 73 29) #24=#A(t (75) (common-lisp-user::stepper-instan-binding ext::location (defun common-lisp-user::stepper-instan-binding) (#1# . 17530) ext::annotate :lambda-list (common-lisp-user::prod) common-lisp-user::prod common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper common-lisp-user::current-model :environment common-lisp-user::get-module-fct common-lisp-user::env common-lisp-user::stepper-control-current-event common-lisp-user::act-r-event-p common-lisp-user::evt-module common-lisp-user::procedural common-lisp-user::evt-action common-lisp-user::production-selected common-lisp-user::len common-lisp-user::get-production common-lisp-user::production-bindings common-lisp-user::bindings max common-lisp-user::x symbol-name length #Y(nil nil nil (24 45 26 26 10 0 4 16 27 16 28 29) #24# #1# 17530) mapcar apply common-lisp-user::stepper-control-mode :tutor eq common-lisp-user::stepper-control-tutor-bindings #:g21262 copy-tree #:g21263 common-lisp-user::stepper-control si::structure-set #:g21264 #Y(nil nil nil (24 45 26 26 10 0 4 12 75 3 73 29) #24# #1# 17530) #:g21265 common-lisp-user::stepper-control-tutor-responses reverse si::%dolist-var common-lisp-user::printing-module #:g21269 #:g21268 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" "~vA : ~a" "{binding}" format common-lisp-user::binding #:g21273 #:g21272 "~vA : ~s" common-lisp-user::production-fired #Y(nil nil nil (24 45 26 26 10 0 4 16 27 16 28 29) #24# #1# 17530) #:g21278 #:g21277 "~vA : ~s" common-lisp-user::declarative common-lisp-user::retrieved-chunk #:g21280 #:g21279 "+retrieval>" common-lisp-user::env-mod-last-dm-request common-lisp-user::pprint-chunk-spec #Y(common-lisp-user::stepper-instan-binding nil nil (24 45 7 26 14 8 19 1 9 45 10 10 1 39 4 19 0 11 73 39 599 15 12 19 1 13 45 14 10 0 73 39 585 13 1 19 1 15 12 19 1 16 39 572 13 1 19 1 15 12 19 1 17 42 18 474 13 1 19 1 15 12 19 1 19 42 20 321 8 0 45 21 13 3 19 1 22 12 19 1 23 45 24 10 0 73 39 295 33 25 12 34 29 12 13 0 19 2 30 12 19 2 31 51 1 13 3 19 1 32 12 11 33 17 34 39 175 13 3 19 1 35 76 39 59 10 3 45 36 10 1 16 37 45 38 13 1 15 39 9 6 13 0 19 4 40 43 1 43 1 10 3 45 41 34 42 12 13 4 19 1 35 12 19 2 30 45 43 13 1 15 39 9 7 13 0 19 4 40 43 1 43 1 13 3 19 1 44 16 45 45 46 75 45 26 38 85 10 1 4 51 0 15 47 19 1 13 47 1 48 45 49 10 1 39 18 13 0 19 1 50 76 39 10 13 0 19 1 51 12 19 1 52 39 40 13 0 19 1 51 12 19 1 52 12 15 53 15 54 13 5 10 2 4 12 10 2 5 76 39 6 1 55 73 38 5 10 2 5 73 12 19 6 56 43 2 10 1 5 51 1 10 1 40 -87 75 73 43 2 38 92 10 0 16 45 45 46 75 45 57 38 73 10 1 4 51 0 15 47 19 1 13 47 1 58 45 59 10 1 39 18 13 0 19 1 50 76 39 10 13 0 19 1 51 12 19 1 52 39 28 13 0 19 1 51 12 19 1 52 12 15 53 15 60 13 5 10 2 4 12 10 2 5 12 19 6 56 43 2 10 1 5 51 1 10 1 40 -75 75 73 43 2 43 1 43 1 38 140 42 61 135 8 0 45 21 13 3 19 1 22 12 19 1 23 45 24 10 0 73 39 109 33 25 12 34 62 12 13 0 19 2 30 12 19 2 31 51 1 10 0 16 45 45 46 75 45 57 38 73 10 1 4 51 0 15 47 19 1 13 47 1 63 45 64 10 1 39 18 13 0 19 1 50 76 39 10 13 0 19 1 51 12 19 1 52 39 28 13 0 19 1 51 12 19 1 52 12 15 53 15 65 13 5 10 2 4 12 10 2 5 12 19 6 56 43 2 10 1 5 51 1 10 1 40 -75 75 73 43 2 43 1 43 1 38 3 75 73 38 85 42 66 80 13 1 19 1 15 12 19 1 19 42 67 64 15 47 19 1 13 47 1 68 45 69 10 1 39 18 13 0 19 1 50 76 39 10 13 0 19 1 51 12 19 1 52 39 18 13 0 19 1 51 12 19 1 52 12 15 53 15 70 19 3 56 43 2 13 0 19 1 71 12 19 1 72 38 3 75 73 38 3 75 73 38 3 75 73 43 1 43 1 29) #24# #1# 17530) si::fset)) #1# 17530) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #25=#A(t (14) (common-lisp-user::tutor-completed ext::location (defun common-lisp-user::tutor-completed) (#1# . 20910) ext::annotate :lambda-list (common-lisp-user::word) common-lisp-user::word common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper-control-tutor-responses assoc #Y(common-lisp-user::tutor-completed nil nil (24 45 7 26 13 0 14 8 19 1 9 12 19 1 10 12 19 2 11 5 39 6 8 1 73 38 4 8 0 73 29) #25# #1# 20910) si::fset)) #1# 20910) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #26=#A(t (21) (common-lisp-user::tutor-check ext::location (defun common-lisp-user::tutor-check) (#1# . 21069) ext::annotate :lambda-list (common-lisp-user::word common-lisp-user::binding) common-lisp-user::word common-lisp-user::binding common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper common-lisp-user::stepper-control-tutor-bindings assoc equal common-lisp-user::stepper-control-tutor-responses #:g21283 #:g21284 rplacd #Y(common-lisp-user::tutor-check nil nil (24 45 7 24 45 8 26 14 9 19 1 10 45 11 13 1 13 2 13 0 19 1 12 12 19 2 13 5 17 14 39 35 13 2 13 0 19 1 15 12 19 2 13 45 16 10 2 45 17 13 1 10 0 17 18 10 0 43 1 43 1 8 1 73 38 4 8 0 73 43 1 29) #26# #1# 21069) si::fset)) #1# 21069) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #27=#A(t (14) (common-lisp-user::tutor-answer ext::location (defun common-lisp-user::tutor-answer) (#1# . 21381) ext::annotate :lambda-list (common-lisp-user::word) common-lisp-user::word common-lisp-user::*environment-control* common-lisp-user::environment-control-stepper common-lisp-user::stepper-control-tutor-bindings assoc #Y(common-lisp-user::tutor-answer nil nil (24 45 7 26 13 0 14 8 19 1 9 12 19 1 10 12 19 2 11 5 73 29) #27# #1# 21381) si::fset)) #1# 21381))
