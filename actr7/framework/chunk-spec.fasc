(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #1=#A(t (10) (common-lisp-user::spec-slot-op ext::location (defun common-lisp-user::spec-slot-op) (#2=#P"C:/Users/Son Pham/Desktop/actr7/framework/chunk-spec.lisp" . 0) ext::annotate :lambda-list (common-lisp-user::spec) common-lisp-user::spec #Y(common-lisp-user::spec-slot-op nil nil (24 45 7 26 10 0 4 73 29) #1# #2# 0) si::fset)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #3=#A(t (14) (common-lisp-user::set-spec-slot-op ext::location (defun common-lisp-user::set-spec-slot-op) (#2# . 14913) ext::annotate :lambda-list (common-lisp-user::spec common-lisp-user::value) common-lisp-user::spec common-lisp-user::value #:g3631 #:g3632 rplaca #Y(common-lisp-user::set-spec-slot-op nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 13 1 10 0 17 11 10 0 73 43 1 43 1 29) #3# #2# 14913) si::fset)) #2# 14913) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 9 1 19 3 6 1 0 73 29) #A(t (7) (common-lisp-user::spec-slot-op ext::location (defsetf common-lisp-user::spec-slot-op) (#2# . 14977) ext::annotate common-lisp-user::set-spec-slot-op si::do-defsetf)) #2# 14977) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #4=#A(t (11) (common-lisp-user::spec-slot-name ext::location (defun common-lisp-user::spec-slot-name) (#2# . 15017) ext::annotate :lambda-list (common-lisp-user::spec) common-lisp-user::spec second #Y(common-lisp-user::spec-slot-name nil nil (24 45 7 26 10 0 16 8 29) #4# #2# 15017) si::fset)) #2# 15017) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #5=#A(t (14) (common-lisp-user::set-spec-slot-name ext::location (defun common-lisp-user::set-spec-slot-name) (#2# . 15062) ext::annotate :lambda-list (common-lisp-user::spec common-lisp-user::value) common-lisp-user::spec common-lisp-user::value #:g3636 #:g3637 rplaca #Y(common-lisp-user::set-spec-slot-name nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 10 1 5 12 10 0 17 11 10 0 73 43 1 43 1 29) #5# #2# 15062) si::fset)) #2# 15062) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 9 1 19 3 6 1 0 73 29) #A(t (7) (common-lisp-user::spec-slot-name ext::location (defsetf common-lisp-user::spec-slot-name) (#2# . 15129) ext::annotate common-lisp-user::set-spec-slot-name si::do-defsetf)) #2# 15129) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #6=#A(t (11) (common-lisp-user::spec-slot-value ext::location (defun common-lisp-user::spec-slot-value) (#2# . 15173) ext::annotate :lambda-list (common-lisp-user::spec) common-lisp-user::spec third #Y(common-lisp-user::spec-slot-value nil nil (24 45 7 26 10 0 16 8 29) #6# #2# 15173) si::fset)) #2# 15173) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #7=#A(t (15) (common-lisp-user::set-spec-slot-value ext::location (defun common-lisp-user::set-spec-slot-value) (#2# . 15218) ext::annotate :lambda-list (common-lisp-user::spec common-lisp-user::value) common-lisp-user::spec common-lisp-user::value #:g3641 #:g3642 cddr rplaca #Y(common-lisp-user::set-spec-slot-value nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 10 1 16 11 12 10 0 17 12 10 0 73 43 1 43 1 29) #7# #2# 15218) si::fset)) #2# 15218) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 9 1 19 3 6 1 0 73 29) #A(t (7) (common-lisp-user::spec-slot-value ext::location (defsetf common-lisp-user::spec-slot-value) (#2# . 15285) ext::annotate common-lisp-user::set-spec-slot-value si::do-defsetf)) #2# 15285) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #8=#A(t (22) (common-lisp-user::slot-spec-modifier ext::location (defun common-lisp-user::slot-spec-modifier) (#2# . 15331) ext::annotate :lambda-list (common-lisp-user::slot-spec-list) common-lisp-user::slot-spec-list listp length = *error-output* #9="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Invalid slot-spec list ~s passed to slot-spec-modifier." format finish-output #Y(common-lisp-user::slot-spec-modifier nil nil (24 45 7 26 10 0 16 8 39 11 9 3 10 0 16 9 12 19 2 10 39 7 10 0 4 73 38 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 9 12 9 1 19 2 15 12 19 0 16 12 15 17 13 0 19 6 18 12 14 11 19 1 19 22 73 29) #8# #2# 15331) si::fset)) #2# 15331) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #10=#A(t (23) (common-lisp-user::slot-spec-slot ext::location (defun common-lisp-user::slot-spec-slot) (#2# . 15565) ext::annotate :lambda-list (common-lisp-user::slot-spec-list) common-lisp-user::slot-spec-list listp length = second *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Invalid slot-spec list ~s passed to slot-spec-slot." format finish-output #Y(common-lisp-user::slot-spec-slot nil nil (24 45 7 26 10 0 16 8 39 11 9 3 10 0 16 9 12 19 2 10 39 7 10 0 16 11 38 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 9 12 9 1 19 2 16 12 19 0 17 12 15 18 13 0 19 6 19 12 14 12 19 1 20 22 73 29) #10# #2# 15565) si::fset)) #2# 15565) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #11=#A(t (23) (common-lisp-user::slot-spec-value ext::location (defun common-lisp-user::slot-spec-value) (#2# . 15793) ext::annotate :lambda-list (common-lisp-user::slot-spec-list) common-lisp-user::slot-spec-list listp length = third *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Invalid slot-spec list ~s passed to slot-spec-value." format finish-output #Y(common-lisp-user::slot-spec-value nil nil (24 45 7 26 10 0 16 8 39 11 9 3 10 0 16 9 12 19 2 10 39 7 10 0 16 11 38 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 9 12 9 1 19 2 16 12 19 0 17 12 15 18 13 0 19 6 19 12 14 12 19 1 20 22 73 29) #11# #2# 15793) si::fset)) #2# 15793) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 1 0 73 29) #12=#A(t (16) (common-lisp-user::define-chunk-spec ext::location (defmacro common-lisp-user::define-chunk-spec) (#2# . 16020) ext::annotate :lambda-list (&rest common-lisp-user::specifications) #:g3645 #:g3644 #:g3646 common-lisp-user::specifications common-lisp-user::define-chunk-spec-fct quote #Y(common-lisp-user::define-chunk-spec nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #12# #2# 16020) t si::fset)) #2# 16020) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 37 12 19 2 38 1 0 73 29) #13=#A(t (39) (common-lisp-user::define-chunk-spec-fct ext::location (defun common-lisp-user::define-chunk-spec-fct) (#2# . 16117) ext::annotate :lambda-list (common-lisp-user::specifications-list &optional (common-lisp-user::extend t) (warn t)) common-lisp-user::specifications-list t common-lisp-user::extend warn common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "define-chunk-spec-fct called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "define-chunk-spec-fct called with no current model." = common-lisp-user::get-chunk common-lisp-user::chunk-name-to-chunk-spec "define-chunk-spec's 1 parameter doesn't name a chunk: ~S" common-lisp-user::isa eq second common-lisp-user::get-chunk-type common-lisp-user::chunk-type cddr common-lisp-user::process-slots-specs "Element after isa in define-chunk-spec isn't a chunk-type. ~S" #Y(common-lisp-user::define-chunk-spec-fct nil nil (24 45 7 25 40 3 14 8 46 9 25 40 3 14 8 46 10 26 14 11 19 1 12 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 12 14 13 19 1 22 22 73 38 222 14 11 19 1 12 12 19 1 23 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 24 19 5 21 12 14 13 19 1 22 22 73 38 169 10 2 16 17 12 9 1 19 2 25 39 62 10 2 4 12 19 1 26 39 10 10 2 4 12 19 1 27 38 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 28 13 2 19 6 21 12 14 13 19 1 22 22 73 38 96 10 2 4 12 1 29 17 30 39 76 10 2 16 31 12 19 1 32 45 33 10 0 39 17 13 0 10 3 16 34 12 13 2 13 1 19 4 35 38 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 36 13 3 19 6 21 12 14 13 19 1 22 22 73 43 1 38 11 77 13 2 13 1 13 0 19 4 35 29) #13# #2# 16117) si::fset)) #2# 16117) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 1 0 73 29) #14=#A(t (16) (common-lisp-user::define-query-spec ext::location (defmacro common-lisp-user::define-query-spec) (#2# . 17092) ext::annotate :lambda-list (&rest common-lisp-user::specifications) #:g3648 #:g3647 #:g3649 common-lisp-user::specifications common-lisp-user::define-query-spec-fct quote #Y(common-lisp-user::define-query-spec nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #14# #2# 17092) t si::fset)) #2# 17092) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #15=#A(t (27) (common-lisp-user::define-query-spec-fct ext::location (defun common-lisp-user::define-query-spec-fct) (#2# . 17189) ext::annotate :lambda-list (common-lisp-user::specifications-list) common-lisp-user::specifications-list common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "define-chunk-spec-fct called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "define-chunk-spec-fct called with no current model." = "define-query-spec was only given one parameter: ~S" common-lisp-user::process-query-specs #Y(common-lisp-user::define-query-spec-fct nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 114 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 61 10 0 16 14 12 9 1 19 2 22 39 44 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 23 13 0 19 6 18 12 14 10 19 1 19 22 73 38 6 13 0 19 1 24 29) #15# #2# 17189) si::fset)) #2# 17189) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 42 12 19 2 43 1 0 73 29) #16=#A(t (44) (common-lisp-user::chunk-name-to-chunk-spec ext::location (defun common-lisp-user::chunk-name-to-chunk-spec) (#2# . 17629) ext::annotate :lambda-list (common-lisp-user::chunk-name) common-lisp-user::chunk-name common-lisp-user::make-act-r-chunk-spec common-lisp-user::get-chunk common-lisp-user::chunk common-lisp-user::spec common-lisp-user::act-r-chunk-filled-slots common-lisp-user::slot-vector #:g3660 #:g3661 common-lisp-user::act-r-chunk-spec si::structure-set #:g3662 #:g3663 common-lisp-user::act-r-chunk-slot-value-lists si::%dolist-var common-lisp-user::slot :name :value :testable t common-lisp-user::make-act-r-slot-spec #:g3669 #:g3667 common-lisp-user::act-r-chunk-spec-slots #:g3668 *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-name-to-chunk-spec called with a non-chunk ~s." format finish-output #Y(common-lisp-user::chunk-name-to-chunk-spec nil nil (24 45 7 26 19 0 8 12 13 0 19 1 9 12 46 10 46 11 10 1 39 140 13 1 19 1 12 45 13 10 1 45 14 10 1 45 15 13 1 15 16 9 0 13 0 19 4 17 43 1 43 1 10 1 45 18 10 1 45 19 13 1 15 16 9 4 13 0 19 4 17 43 1 43 1 13 2 19 1 20 45 21 75 45 22 38 59 10 1 4 51 0 14 23 10 0 4 12 14 24 10 0 5 12 14 25 14 26 19 6 27 45 28 10 4 45 29 13 1 13 0 19 1 30 3 45 31 13 1 15 16 9 10 13 0 19 4 17 43 3 10 1 5 51 1 10 1 40 -61 75 51 0 10 3 73 43 2 43 1 38 42 14 32 15 33 19 0 34 73 39 12 19 0 35 16 36 12 9 1 19 2 37 12 19 0 38 12 15 39 13 2 19 6 40 12 14 32 19 1 41 22 73 43 2 29) #16# #2# 17629) si::fset)) #2# 17629) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 56 12 19 2 57 1 0 73 29) #17=#A(t (58) (common-lisp-user::chunk-difference-to-chunk-spec ext::location (defun common-lisp-user::chunk-difference-to-chunk-spec) (#2# . 18240) ext::annotate :lambda-list (common-lisp-user::chunk-name1 common-lisp-user::chunk-name2) common-lisp-user::chunk-name1 common-lisp-user::chunk-name2 common-lisp-user::make-act-r-chunk-spec common-lisp-user::get-chunk common-lisp-user::chunk2 common-lisp-user::chunk1 common-lisp-user::spec common-lisp-user::act-r-chunk-filled-slots common-lisp-user::slot-vector lognot common-lisp-user::slots-not-in-c1 common-lisp-user::slots-in-c2 logand common-lisp-user::slots-to-remove-from-c2 #:g3688 #:g3689 common-lisp-user::act-r-chunk-spec si::structure-set #:g3690 #:g3691 #:g3692 logior #:g3693 common-lisp-user::act-r-chunk-slot-value-lists si::%dolist-var common-lisp-user::slot :name :value :testable t common-lisp-user::make-act-r-slot-spec #:g3699 #:g3697 common-lisp-user::act-r-chunk-spec-slots #:g3698 common-lisp-user::slot-mask->names #:g3705 #:g3703 #:g3704 *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-difference-to-chunk-spec called with ~s and ~s which are not both chunks." format finish-output #Y(common-lisp-user::chunk-difference-to-chunk-spec nil nil (24 45 7 24 45 8 26 19 0 9 12 13 1 19 1 10 12 13 0 19 1 10 12 46 11 46 12 46 13 10 1 39 3 10 2 39 261 13 1 19 1 14 45 15 13 2 19 1 14 16 16 45 17 13 4 19 1 14 45 18 13 1 13 0 19 2 19 45 20 10 4 45 21 10 4 45 22 13 1 15 23 9 0 13 0 19 4 24 43 1 43 1 10 4 45 25 10 1 45 26 13 1 15 23 9 1 13 0 19 4 24 43 1 43 1 10 4 45 27 13 4 13 1 19 2 28 45 29 13 1 15 23 9 4 13 0 19 4 24 43 1 43 1 13 5 19 1 30 45 31 75 45 32 38 59 10 1 4 51 0 14 33 10 0 4 12 14 34 10 0 5 12 14 35 14 36 19 6 37 45 38 10 7 45 39 13 1 13 0 19 1 40 3 45 41 13 1 15 23 9 10 13 0 19 4 24 43 3 10 1 5 51 1 10 1 40 -61 43 2 13 0 19 1 42 45 31 75 45 32 38 54 10 1 4 51 0 14 33 13 0 14 34 77 14 35 14 36 19 6 37 45 43 10 7 45 44 13 1 13 0 19 1 40 3 45 45 13 1 15 23 9 10 13 0 19 4 24 43 3 10 1 5 51 1 10 1 40 -56 43 2 10 4 73 43 4 38 44 14 46 15 47 19 0 48 73 39 12 19 0 49 16 50 12 9 1 19 2 51 12 19 0 52 12 15 53 13 4 13 3 19 7 54 12 14 46 19 1 55 22 73 43 3 29) #17# #2# 18240) si::fset)) #2# 18240) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #18=#A(t (22) (common-lisp-user::chunk-spec-filled-slots ext::location (defun common-lisp-user::chunk-spec-filled-slots) (#2# . 19483) ext::annotate :lambda-list (common-lisp-user::chunk-spec) common-lisp-user::chunk-spec common-lisp-user::act-r-chunk-spec-p common-lisp-user::act-r-chunk-spec-filled-slots *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-spec-filled-slots called with a non-chunk-spec" format finish-output #Y(common-lisp-user::chunk-spec-filled-slots nil nil (24 45 7 26 13 0 19 1 8 39 8 13 0 19 1 9 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 29) #18# #2# 19483) si::fset)) #2# 19483) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #19=#A(t (22) (common-lisp-user::chunk-spec-empty-slots ext::location (defun common-lisp-user::chunk-spec-empty-slots) (#2# . 19693) ext::annotate :lambda-list (common-lisp-user::chunk-spec) common-lisp-user::chunk-spec common-lisp-user::act-r-chunk-spec-p common-lisp-user::act-r-chunk-spec-empty-slots *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-spec-empty-slots called with a non-chunk-spec" format finish-output #Y(common-lisp-user::chunk-spec-empty-slots nil nil (24 45 7 26 13 0 19 1 8 39 8 13 0 19 1 9 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 29) #19# #2# 19693) si::fset)) #2# 19693) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #20=#A(t (20) (common-lisp-user::chunk-spec-chunk-type ext::location (defun common-lisp-user::chunk-spec-chunk-type) (#2# . 19899) ext::annotate :lambda-list (common-lisp-user::chunk-spec) common-lisp-user::chunk-spec *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-specs no longer contain a chunk-type." format finish-output #Y(common-lisp-user::chunk-spec-chunk-type nil nil (24 45 7 26 14 8 15 9 19 0 10 73 39 12 19 0 11 16 12 12 9 1 19 2 13 12 19 0 14 12 15 15 19 5 16 12 14 8 19 1 17 22 73 29) #20# #2# 19899) si::fset)) #2# 19899) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #21=#A(t (11) (common-lisp-user::chunk-spec-match-chunk-type ext::location (defun common-lisp-user::chunk-spec-match-chunk-type) (#2# . 20039) ext::annotate :lambda-list (common-lisp-user::chunk-spec common-lisp-user::chunk-type-signature) common-lisp-user::chunk-spec common-lisp-user::chunk-type-signature #Y(common-lisp-user::chunk-spec-match-chunk-type nil nil (24 45 7 24 45 8 26 75 73 29) #21# #2# 20039) si::fset)) #2# 20039) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 19 2 24 1 0 73 29) #22=#A(t (25) (common-lisp-user::chunk-spec-slots ext::location (defun common-lisp-user::chunk-spec-slots) (#2# . 20208) ext::annotate :lambda-list (common-lisp-user::chunk-spec) common-lisp-user::chunk-spec common-lisp-user::act-r-chunk-spec-p *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-spec-slots called with something other than a chunk-spec" format finish-output common-lisp-user::act-r-slot-spec-name common-lisp-user::act-r-chunk-spec-slots mapcar remove-duplicates #Y(common-lisp-user::chunk-spec-slots nil nil (24 45 7 26 13 0 19 1 8 76 39 42 14 9 15 10 19 0 11 73 39 12 19 0 12 16 13 12 9 1 19 2 14 12 19 0 15 12 15 16 19 5 17 12 14 9 19 1 18 22 73 38 16 15 19 13 0 19 1 20 12 19 2 21 12 19 1 22 29) #22# #2# 20208) si::fset)) #2# 20208) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 30 12 19 2 31 1 0 73 29) #23=#A(t (32) (common-lisp-user::chunk-spec-slot-spec ext::location (defun common-lisp-user::chunk-spec-slot-spec) (#2# . 20494) ext::annotate :lambda-list (common-lisp-user::chunk-spec &optional common-lisp-user::slot) common-lisp-user::chunk-spec common-lisp-user::slot common-lisp-user::act-r-chunk-spec-p *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-spec-slot-spec called with something other than a chunk-spec" format finish-output common-lisp-user::act-r-chunk-spec-slots :key common-lisp-user::act-r-slot-spec-name find common-lisp-user::slot-spec-to-list common-lisp-user::x eq #Y(nil nil nil (24 45 25 26 13 0 10 1 17 26 29) #23# #2# 20494) remove-if-not mapcar #Y(common-lisp-user::chunk-spec-slot-spec nil nil (24 45 7 25 40 2 77 46 8 26 13 1 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 65 10 0 39 16 13 0 13 1 19 1 20 12 14 21 15 22 19 4 23 39 25 15 24 34 27 12 13 1 19 1 20 12 14 21 15 22 19 4 28 12 19 2 29 38 20 10 0 39 5 75 73 38 12 15 24 13 1 19 1 20 12 19 2 29 29) #23# #2# 20494) si::fset)) #2# 20494) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 31 12 19 2 32 1 0 73 29) #24=#A(t (33) (common-lisp-user::slot-in-chunk-spec-p ext::location (defun common-lisp-user::slot-in-chunk-spec-p) (#2# . 21277) ext::annotate :lambda-list (common-lisp-user::chunk-spec common-lisp-user::slot) common-lisp-user::chunk-spec common-lisp-user::slot common-lisp-user::act-r-chunk-spec-p common-lisp-user::chunk-spec-variable-p common-lisp-user::act-r-chunk-spec-slots :key common-lisp-user::act-r-slot-spec-name find t common-lisp-user::slot-name->mask common-lisp-user::mask common-lisp-user::act-r-chunk-spec-filled-slots logtest common-lisp-user::act-r-chunk-spec-empty-slots *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Slot-in-chunk-spec-p called with something other than a chunk-spec" format finish-output #Y(common-lisp-user::slot-in-chunk-spec-p nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 71 13 0 19 1 10 39 24 13 0 13 1 19 1 11 12 14 12 15 13 19 4 14 73 39 4 11 15 73 38 39 13 0 19 1 16 45 17 10 0 39 24 13 0 13 2 19 1 18 17 19 73 40 10 13 0 13 2 19 1 20 17 19 38 3 75 73 43 1 38 40 14 21 15 22 19 0 23 73 39 12 19 0 24 16 25 12 9 1 19 2 26 12 19 0 27 12 15 28 19 5 29 12 14 21 19 1 30 22 73 29) #24# #2# 21277) si::fset)) #2# 21277) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #25=#A(t (13) (common-lisp-user::slot-spec-to-list ext::location (defun common-lisp-user::slot-spec-to-list) (#2# . 21974) ext::annotate :lambda-list (common-lisp-user::slot-spec) common-lisp-user::slot-spec common-lisp-user::act-r-slot-spec-modifier common-lisp-user::act-r-slot-spec-name common-lisp-user::act-r-slot-spec-value #Y(common-lisp-user::slot-spec-to-list nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 13 0 19 1 10 6 3 73 29) #25# #2# 21974) si::fset)) #2# 21974) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 103 12 19 2 104 1 0 73 29) #26=#A(t (105) (common-lisp-user::process-slots-specs ext::location (defun common-lisp-user::process-slots-specs) (#2# . 22142) ext::annotate :lambda-list (common-lisp-user::chunk-type common-lisp-user::specs common-lisp-user::extend warn) common-lisp-user::chunk-type common-lisp-user::specs common-lisp-user::extend warn common-lisp-user::make-act-r-chunk-spec common-lisp-user::extended? common-lisp-user::defaults common-lisp-user::spec common-lisp-user::act-r-chunk-type-initial-spec common-lisp-user::default-spec common-lisp-user::act-r-chunk-spec-slots 0 si::%dolist-var common-lisp-user::x common-lisp-user::act-r-slot-spec-name common-lisp-user::slot-name->index common-lisp-user::index common-lisp-user::act-r-chunk-spec-filled-slots logbitp common-lisp-user::act-r-chunk-spec-empty-slots common-lisp-user::add-slot-spec-to-chunk-spec common-lisp-user::make-act-r-slot-spec common-lisp-user::slot-spec (= - > < >= <=) find #:g3732 #:g3734 #:g3733 common-lisp-user::act-r-slot-spec si::structure-set *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid specs in call to define-chunk-spec - not enough arguments" format finish-output common-lisp-user::slot? keywordp common-lisp-user::act-r-slot-spec-modifier = eq "Request parameters may not use a modifier other than =." common-lisp-user::valid-ct-slot common-lisp-user::valid-slot-name common-lisp-user::chunk-spec-variable-p symbolp symbol-name char alphanumericp common-lisp-user::extend-possible-slots common-lisp-user::extended common-lisp-user::printing-module common-lisp-user::get-module-fct #:g3737 #:g3736 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g3738 common-lisp-user::printing-module-model-warnings common-lisp-user::*one-stream-hack* t *standard-output* eql "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" "Chunks extended with slot ~s during a chunk-spec definition." "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" "Slot ~s invalid for type ~s but chunk-spec definition still created." common-lisp-user::act-r-chunk-type-name :mismatch "Invalid slot-name ~s in call to define-chunk-spec." "Invalid slot-name ~S in call to define-chunk-spec." #:g3740 #:g3742 #:g3741 #:g3743 :slot #:g3744 #:g3745 #:g3746 "Invalid specs in call to define-chunk-spec - not enough arguments" #:g3747 #:g3749 #:g3748 common-lisp-user::act-r-slot-spec-value common-lisp-user::act-r-slot-spec-variable #:g3750 :both #:g3751 #:g3752 :value #:g3753 #Y(common-lisp-user::process-slots-specs nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 19 0 11 12 77 77 46 12 46 13 46 14 10 6 39 17 13 6 19 1 15 45 16 13 0 19 1 17 51 2 43 1 58 60 975 57 18 61 1 1 10 7 76 39 77 10 3 45 19 75 45 20 38 54 10 1 4 51 0 13 0 19 1 21 12 19 1 22 45 23 13 0 13 5 19 1 24 17 25 40 10 13 0 13 5 19 1 26 17 25 76 39 8 13 1 13 5 19 2 27 43 1 10 1 5 51 1 10 1 40 -56 43 2 13 2 13 4 72 2 36 1 19 0 28 45 29 10 8 4 12 15 30 19 2 31 39 42 10 0 45 32 10 9 45 33 10 0 4 12 10 0 5 51 0 10 0 51 10 22 43 1 45 34 13 1 15 35 9 0 13 0 19 4 36 43 1 43 1 10 8 76 39 41 14 37 15 38 19 0 39 73 39 12 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 44 19 5 45 14 37 19 1 46 75 73 36 2 10 8 4 45 47 10 0 16 48 39 12 13 1 19 1 49 12 1 50 17 51 76 39 41 14 37 15 38 19 0 39 73 39 12 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 52 19 5 45 14 37 19 1 46 75 73 36 3 10 10 39 8 13 10 13 0 19 2 53 40 31 10 10 76 39 6 13 0 19 1 54 40 19 10 0 16 48 39 6 13 0 19 1 54 40 6 13 0 19 1 55 76 39 394 10 8 39 33 10 0 16 48 76 39 26 13 0 19 1 55 76 39 18 10 0 16 56 39 12 10 0 16 57 12 8 0 17 58 16 59 39 314 13 0 77 19 2 60 45 61 10 0 39 188 13 0 10 7 3 51 7 10 8 39 175 15 62 19 1 63 47 1 64 45 65 10 1 39 10 13 0 19 1 66 12 19 1 67 39 148 13 0 19 1 66 12 19 1 67 45 68 13 1 19 1 69 76 40 127 10 0 76 40 27 13 0 11 37 17 51 40 19 11 70 40 15 13 0 11 71 17 51 39 7 14 37 11 72 17 73 39 35 14 37 15 74 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 75 13 4 19 6 45 14 37 19 1 46 38 60 14 37 15 76 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 75 13 4 19 6 45 14 37 19 1 46 13 0 15 77 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 75 13 4 19 6 45 43 1 43 2 38 111 10 11 39 65 14 37 15 38 19 0 39 73 39 12 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 78 13 1 13 11 19 1 79 12 19 7 45 14 37 19 1 46 14 80 13 11 19 1 79 12 10 1 6 3 12 10 7 3 51 7 38 43 14 37 15 38 19 0 39 73 39 12 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 81 13 1 19 6 45 14 37 19 1 46 75 73 36 4 43 1 38 43 14 37 15 38 19 0 39 73 39 12 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 82 13 0 19 6 45 14 37 19 1 46 75 73 36 3 43 1 10 0 45 83 10 9 45 84 10 0 4 12 10 0 5 51 0 10 0 51 10 22 43 1 45 85 13 1 15 35 9 1 13 0 19 4 36 43 1 43 1 13 0 19 1 21 12 19 1 55 39 24 10 0 45 86 11 87 45 88 13 1 15 35 9 4 13 0 19 4 36 43 1 43 1 13 0 19 1 21 16 48 39 24 10 0 45 89 11 71 45 90 13 1 15 35 9 5 13 0 19 4 36 43 1 43 1 10 8 76 39 41 14 37 15 38 19 0 39 73 39 12 19 0 40 16 41 12 9 1 19 2 42 12 19 0 43 12 15 91 19 5 45 14 37 19 1 46 75 73 36 2 10 0 45 92 10 9 45 93 10 0 4 12 10 0 5 51 0 10 0 51 10 22 43 1 45 94 13 1 15 35 9 2 13 0 19 4 36 43 1 43 1 13 0 19 1 95 12 19 1 55 39 56 13 0 19 1 96 39 26 10 0 45 97 11 98 45 99 13 1 15 35 9 4 13 0 19 4 36 43 1 43 1 38 24 10 0 45 100 11 101 45 102 13 1 15 35 9 4 13 0 19 4 36 43 1 43 1 13 0 13 3 19 2 27 76 39 5 75 73 36 2 43 1 35 0 0 62 73 63 43 3 29) #26# #2# 22142) si::fset)) #2# 22142) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 57 12 19 2 58 1 0 73 29) #27=#A(t (59) (common-lisp-user::process-query-specs ext::location (defun common-lisp-user::process-query-specs) (#2# . 25859) ext::annotate :lambda-list (common-lisp-user::specs) common-lisp-user::specs common-lisp-user::make-act-r-chunk-spec common-lisp-user::spec 0 common-lisp-user::make-act-r-slot-spec common-lisp-user::slot-spec (= - > < >= <=) find (> < >= <=) *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Query specs only allow = or - modifiers." format finish-output #:g3773 #:g3775 #:g3774 common-lisp-user::act-r-slot-spec si::structure-set "Invalid specs in call to define-query-spec - not enough arguments" common-lisp-user::valid-query-name "Invalid query name ~S in call to define-query-spec." #:g3776 #:g3778 #:g3777 "Invalid specs in call to define-query-spec - not enough arguments" #:g3779 #:g3781 #:g3780 common-lisp-user::act-r-slot-spec-value common-lisp-user::chunk-spec-variable-p #:g3782 :value #:g3783 #:g3786 #:g3784 common-lisp-user::act-r-chunk-spec-variables adjoin #:g3785 common-lisp-user::act-r-chunk-spec #:g3787 #:g3789 common-lisp-user::act-r-chunk-spec-slots nconc #:g3788 #Y(common-lisp-user::process-query-specs nil nil (24 45 7 26 19 0 8 45 9 58 60 469 57 10 61 1 1 10 3 76 39 8 13 2 77 72 2 36 1 19 0 11 45 12 10 4 4 12 15 13 19 2 14 39 95 10 4 4 12 15 15 19 2 14 39 43 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 19 5 24 14 16 19 1 25 75 73 36 2 38 42 10 0 45 26 10 5 45 27 10 0 4 12 10 0 5 51 0 10 0 51 6 22 43 1 45 28 13 1 15 29 9 0 13 0 19 4 30 43 1 43 1 10 4 76 39 41 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 31 19 5 24 14 16 19 1 25 75 73 36 2 10 4 4 12 19 1 32 76 39 45 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 33 10 4 4 12 19 6 24 14 16 19 1 25 75 73 36 2 10 0 45 34 10 5 45 35 10 0 4 12 10 0 5 51 0 10 0 51 6 22 43 1 45 36 13 1 15 29 9 1 13 0 19 4 30 43 1 43 1 10 4 76 39 41 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 37 19 5 24 14 16 19 1 25 75 73 36 2 10 0 45 38 10 5 45 39 10 0 4 12 10 0 5 51 0 10 0 51 6 22 43 1 45 40 13 1 15 29 9 2 13 0 19 4 30 43 1 43 1 13 0 19 1 41 12 19 1 42 39 61 10 0 45 43 11 44 45 45 13 1 15 29 9 4 13 0 19 4 30 43 1 43 1 13 0 19 1 41 45 46 10 4 45 47 13 1 13 0 19 1 48 12 19 2 49 45 50 13 1 15 51 9 7 13 0 19 4 30 43 3 10 3 45 52 10 1 6 1 45 53 13 1 19 1 54 12 13 0 19 2 55 45 56 13 2 15 51 9 10 13 0 19 4 30 43 3 43 1 35 0 0 62 73 63 43 1 29) #27# #2# 25859) si::fset)) #2# 25859) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 97 12 19 2 98 1 0 73 29) #28=#A(t (99) (common-lisp-user::add-slot-spec-to-chunk-spec ext::location (defun common-lisp-user::add-slot-spec-to-chunk-spec) (#2# . 27288) ext::annotate :lambda-list (common-lisp-user::slot-spec common-lisp-user::spec) common-lisp-user::slot-spec common-lisp-user::spec #:g3790 #:g3792 common-lisp-user::act-r-chunk-spec-slots nconc #:g3791 common-lisp-user::act-r-chunk-spec si::structure-set common-lisp-user::act-r-slot-spec-variable common-lisp-user::it :value eq :both common-lisp-user::act-r-slot-spec-value #:g3795 #:g3793 common-lisp-user::act-r-chunk-spec-variables adjoin #:g3794 :slot common-lisp-user::act-r-slot-spec-name #:g3798 #:g3796 #:g3797 #:g3801 #:g3799 common-lisp-user::act-r-chunk-spec-slot-vars #:g3800 common-lisp-user::act-r-chunk-spec-dependencies assoc #:g3804 #:g3802 #:g3803 rplacd #:g3807 #:g3805 #:g3806 #:g3808 t #:g3809 common-lisp-user::act-r-slot-spec common-lisp-user::act-r-slot-spec-modifier mod common-lisp-user::slot-name common-lisp-user::val common-lisp-user::slot-name->mask common-lisp-user::mask common-lisp-user::slot-name->index common-lisp-user::index keywordp #:g3810 common-lisp-user::act-r-chunk-spec-request-param-slots logior #:g3811 common-lisp-user::act-r-chunk-spec-filled-slots logbitp common-lisp-user::act-r-chunk-spec-empty-slots #:g3812 common-lisp-user::act-r-chunk-spec-duplicate-slots #:g3813 = #:g3814 common-lisp-user::act-r-chunk-spec-equal-slots #:g3815 - #:g3816 common-lisp-user::act-r-chunk-spec-negated-slots #:g3817 #:g3818 common-lisp-user::act-r-chunk-spec-relative-slots #:g3819 #:g3820 #:g3821 #:g3822 #:g3823 #:g3824 #:g3825 #:g3826 #:g3827 *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "A ~s test for slot ~s with a value of nil not allowed in chunk-spec." format finish-output #Y(common-lisp-user::add-slot-spec-to-chunk-spec nil nil (24 45 7 24 45 8 26 57 0 60 798 10 1 45 9 10 3 6 1 45 10 13 1 19 1 11 12 13 0 19 2 12 45 13 13 2 15 14 9 10 13 0 19 4 15 43 3 13 2 19 1 16 45 17 10 0 39 253 13 0 11 18 17 19 40 7 13 0 11 20 17 19 39 38 13 3 19 1 21 45 22 10 3 45 23 13 1 13 0 19 1 24 12 19 2 25 45 26 13 1 15 14 9 7 13 0 19 4 15 43 3 13 0 11 27 17 19 40 7 13 0 11 20 17 19 39 75 13 3 19 1 28 45 29 10 3 45 30 13 1 13 0 19 1 24 12 19 2 25 45 31 13 1 15 14 9 7 13 0 19 4 15 43 3 13 3 19 1 28 45 32 10 3 45 33 13 1 13 0 19 1 34 12 19 2 25 45 35 13 1 15 14 9 8 13 0 19 4 15 43 3 13 0 11 20 17 19 39 100 13 3 19 1 21 12 13 2 19 1 36 12 19 2 37 45 17 10 0 39 35 13 4 19 1 28 45 38 10 1 45 39 13 1 10 0 5 12 19 2 25 45 40 13 1 10 0 17 41 10 0 43 3 38 43 13 4 19 1 21 12 13 4 19 1 28 6 2 45 42 10 4 45 43 13 1 13 0 19 1 36 3 45 44 13 1 15 14 9 9 13 0 19 4 15 43 3 43 1 38 1 43 1 13 2 19 1 16 12 11 20 17 19 40 11 13 2 19 1 16 12 11 27 17 19 39 26 10 2 45 45 11 46 45 47 13 1 15 48 9 3 13 0 19 4 15 43 1 43 1 38 447 13 2 19 1 49 45 50 13 3 19 1 28 45 51 13 4 19 1 21 45 52 13 1 19 1 53 45 54 13 2 19 1 55 45 56 10 3 16 57 39 33 10 6 45 58 13 2 13 7 19 1 59 12 19 2 60 45 61 13 1 15 14 9 2 13 0 19 4 15 43 1 43 1 13 0 13 6 19 1 62 17 63 40 10 13 0 13 6 19 1 64 17 63 39 33 10 6 45 65 13 2 13 7 19 1 66 12 19 2 60 45 67 13 1 15 14 9 3 13 0 19 4 15 43 1 43 1 10 4 42 68 35 10 6 45 69 13 2 13 7 19 1 70 12 19 2 60 45 71 13 1 15 14 9 4 13 0 19 4 15 43 1 43 1 38 70 42 72 35 10 6 45 73 13 2 13 7 19 1 74 12 19 2 60 45 75 13 1 15 14 9 5 13 0 19 4 15 43 1 43 1 38 33 10 6 45 76 13 2 13 7 19 1 77 12 19 2 60 45 78 13 1 15 14 9 6 13 0 19 4 15 43 1 43 1 10 3 16 57 76 39 200 10 2 39 67 10 7 45 79 11 46 45 80 13 1 15 48 9 3 13 0 19 4 15 43 1 43 1 13 4 1 72 17 19 76 39 33 10 6 45 81 13 2 13 7 19 1 62 12 19 2 60 45 82 13 1 15 14 9 0 13 0 19 4 15 43 1 43 1 38 130 13 4 1 68 17 19 39 35 10 6 45 83 13 2 13 7 19 1 64 12 19 2 60 45 84 13 1 15 14 9 1 13 0 19 4 15 43 1 43 1 38 88 13 4 1 72 17 19 39 35 10 6 45 85 13 2 13 7 19 1 62 12 19 2 60 45 86 13 1 15 14 9 0 13 0 19 4 15 43 1 43 1 38 46 14 87 15 88 19 0 89 73 39 12 19 0 90 16 91 12 9 1 19 2 92 12 19 0 93 12 15 94 13 4 13 3 19 7 95 12 14 87 19 1 96 22 73 36 5 11 46 73 43 5 63 29) #28# #2# 27288) si::fset)) #2# 27288) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 59 12 19 2 60 1 0 73 29) #29=#A(t (61) (common-lisp-user::instantiate-chunk-spec ext::location (defun common-lisp-user::instantiate-chunk-spec) (#2# . 31412) ext::annotate :lambda-list (common-lisp-user::chunk-spec common-lisp-user::bindings &optional (common-lisp-user::extend t)) common-lisp-user::chunk-spec common-lisp-user::bindings t common-lisp-user::extend common-lisp-user::extended-slots common-lisp-user::act-r-chunk-spec-p *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "instantiate-chunk-spec called with something other than a chunk-spec: ~s" format finish-output listp common-lisp-user::x consp common-lisp-user::chunk-spec-variable-p #Y(nil nil nil (24 45 24 26 10 0 16 25 73 39 15 10 0 4 12 19 1 26 73 39 5 10 0 5 73 29) #29# #2# 31412) every "Instantiate-chunk-spec called with an invalid bindings alist: ~s" common-lisp-user::make-act-r-chunk-spec common-lisp-user::new-spec common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::act-r-slot-spec-variable common-lisp-user::it :value eq common-lisp-user::act-r-slot-spec-name assoc common-lisp-user::slot :slot common-lisp-user::act-r-slot-spec-value common-lisp-user::replace-variables common-lisp-user::value common-lisp-user::valid-slot-name keywordp common-lisp-user::extend-possible-slots common-lisp-user::extended "Invalid slot-name ~s in instantiation of chunk spec for variable ~s" "Invalid slot-name ~s in instantiation of chunk spec for variable ~s" :modifier common-lisp-user::act-r-slot-spec-modifier :name :variable :both common-lisp-user::make-act-r-slot-spec common-lisp-user::add-slot-spec-to-chunk-spec common-lisp-user::copy-act-r-slot-spec #Y(common-lisp-user::instantiate-chunk-spec nil nil (24 45 7 24 45 8 25 40 3 14 9 46 10 26 57 0 60 482 75 45 11 13 4 19 1 12 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 13 4 19 6 21 12 14 13 19 1 22 22 73 38 425 10 3 16 23 39 9 34 27 12 13 3 19 2 28 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 29 13 3 19 6 21 12 14 13 19 1 22 22 73 38 365 19 0 30 45 31 13 5 19 1 32 45 33 75 45 24 38 334 10 1 4 51 0 13 0 19 1 34 45 35 10 0 39 300 13 0 11 36 17 37 39 8 13 1 19 1 38 38 30 13 1 19 1 38 12 13 7 19 2 39 45 35 10 0 39 6 10 0 5 38 6 13 2 19 1 38 43 1 45 40 13 1 11 41 17 37 39 8 13 2 19 1 42 38 12 13 2 19 1 42 12 13 8 19 2 43 45 44 13 1 19 1 26 40 6 13 1 19 1 45 76 39 134 10 8 39 82 10 1 16 46 39 4 75 38 6 13 1 19 1 47 45 48 10 0 39 10 13 2 10 7 3 51 7 38 49 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 49 13 2 13 4 19 1 38 12 19 7 21 14 13 19 1 22 75 73 36 8 43 1 38 49 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 50 13 1 13 3 19 1 38 12 19 7 21 14 13 19 1 22 75 73 36 7 14 51 13 3 19 1 52 12 14 53 13 1 14 36 13 0 14 54 13 1 19 1 26 39 6 13 0 19 1 26 39 6 11 55 73 38 27 13 1 19 1 26 39 6 11 41 73 38 15 13 0 19 1 26 39 6 11 36 73 38 3 75 73 12 19 8 56 12 13 5 19 2 57 43 2 38 12 13 1 19 1 58 12 13 3 19 2 57 43 1 10 1 5 51 1 10 1 40 -336 43 2 13 0 13 1 72 2 43 1 43 1 63 29) #29# #2# 31412) si::fset)) #2# 31412) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 52 12 19 2 53 1 0 73 29) #30=#A(t (54) (common-lisp-user::instantiate-query-spec ext::location (defun common-lisp-user::instantiate-query-spec) (#2# . 35044) ext::annotate :lambda-list (common-lisp-user::chunk-spec common-lisp-user::bindings) common-lisp-user::chunk-spec common-lisp-user::bindings common-lisp-user::act-r-chunk-spec-p *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "instantiate-query-spec called with something other than a chunk-spec: ~s" format finish-output listp common-lisp-user::x consp common-lisp-user::chunk-spec-variable-p #Y(nil nil nil (24 45 21 26 10 0 16 22 73 39 15 10 0 4 12 19 1 23 73 39 5 10 0 5 73 29) #30# #2# 35044) every "Instantiate-query-spec called with an invalid bindings alist: ~s" common-lisp-user::make-act-r-chunk-spec common-lisp-user::new-spec common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::act-r-slot-spec-variable common-lisp-user::act-r-slot-spec-value common-lisp-user::replace-variables common-lisp-user::value #:g3848 :modifier common-lisp-user::act-r-slot-spec-modifier :name common-lisp-user::act-r-slot-spec-name :value :variable common-lisp-user::make-act-r-slot-spec #:g3850 nconc #:g3849 common-lisp-user::act-r-chunk-spec si::structure-set #:g3851 common-lisp-user::copy-act-r-slot-spec #:g3853 #:g3852 #Y(common-lisp-user::instantiate-query-spec nil nil (24 45 7 24 45 8 26 13 1 19 1 9 76 39 44 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 13 1 19 6 18 12 14 10 19 1 19 22 73 38 238 10 0 16 20 39 9 34 24 12 13 0 19 2 25 76 39 44 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 26 13 0 19 6 18 12 14 10 19 1 19 22 73 38 178 19 0 27 45 28 13 2 19 1 29 45 30 75 45 21 38 148 10 1 4 51 0 13 0 19 1 31 39 92 13 0 19 1 32 12 13 3 19 2 33 45 34 10 3 45 35 14 36 13 2 19 1 37 12 14 38 13 2 19 1 39 12 14 40 13 1 14 41 13 1 19 1 23 39 6 11 40 73 38 3 75 73 12 19 8 42 6 1 45 43 13 1 19 1 29 12 13 0 19 2 44 45 45 13 2 15 46 9 10 13 0 19 4 47 43 3 43 1 38 40 10 2 45 48 13 1 19 1 49 6 1 45 50 13 1 19 1 29 12 13 0 19 2 44 45 51 13 2 15 46 9 10 13 0 19 4 47 43 3 10 1 5 51 1 10 1 40 -150 43 2 13 0 77 72 2 43 1 29) #30# #2# 35044) si::fset)) #2# 35044) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 49 12 19 2 50 1 0 73 29) #31=#A(t (51) (common-lisp-user::verify-single-explicit-value ext::location (defun common-lisp-user::verify-single-explicit-value) (#2# . 36453) ext::annotate :lambda-list (common-lisp-user::chunk-spec common-lisp-user::slot common-lisp-user::module common-lisp-user::cmd &optional (common-lisp-user::var-char #\=)) common-lisp-user::chunk-spec common-lisp-user::slot common-lisp-user::module common-lisp-user::cmd #\= common-lisp-user::var-char common-lisp-user::act-r-chunk-spec-p common-lisp-user::slot-name->index common-lisp-user::index common-lisp-user::act-r-chunk-spec-filled-slots logbitp common-lisp-user::act-r-chunk-spec-empty-slots common-lisp-user::act-r-chunk-spec-request-param-slots *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~a command to ~s module requires a value for the ~a slot." format finish-output common-lisp-user::act-r-chunk-spec-duplicate-slots "~a slot may only be specified once in a ~a command to the ~s module." common-lisp-user::act-r-chunk-spec-equal-slots "~a slot may only have the = modifier in a ~a command to the ~s module." common-lisp-user::act-r-chunk-spec-slots :key common-lisp-user::act-r-slot-spec-name find common-lisp-user::slot-spec common-lisp-user::act-r-slot-spec-value common-lisp-user::value characterp symbolp symbol-name char char-equal "~a slot must be explict - not a variable in a ~a command to the ~s module." t "~a is not a chunk-spec in ~a command to the ~s module." #Y(common-lisp-user::verify-single-explicit-value nil nil (24 45 7 24 45 8 24 45 9 24 45 10 25 40 3 15 11 46 12 26 13 4 19 1 13 39 326 13 3 19 1 14 45 15 13 0 13 5 19 1 16 17 17 40 21 13 0 13 5 19 1 18 17 17 40 10 13 0 13 5 19 1 19 17 17 76 39 48 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 27 13 2 13 3 13 4 19 8 28 12 14 20 19 1 29 22 73 38 234 13 0 13 5 19 1 30 17 17 39 48 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 31 13 4 13 2 13 3 19 8 28 12 14 20 19 1 29 22 73 38 176 13 0 13 5 19 1 32 17 17 76 39 48 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 33 13 4 13 2 13 3 19 8 28 12 14 20 19 1 29 22 73 38 117 13 4 13 5 19 1 34 12 14 35 15 36 19 4 37 45 38 10 0 39 6 13 0 19 1 39 45 40 10 0 39 28 10 3 16 41 39 22 10 0 16 42 39 16 13 3 10 0 16 43 12 8 0 17 44 12 19 2 45 39 48 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 46 13 6 13 4 13 5 19 8 28 12 14 20 19 1 29 22 73 38 7 13 0 14 47 72 2 43 2 43 1 38 46 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 48 13 4 13 1 13 2 19 8 28 12 14 20 19 1 29 22 73 29) #31# #2# 36453) si::fset)) #2# 36453) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #32=#A(t (29) (common-lisp-user::chunk-match-signature ext::location (defun common-lisp-user::chunk-match-signature) (#2# . 38144) ext::annotate :lambda-list (common-lisp-user::chunk-name common-lisp-user::filled &optional common-lisp-user::empty) common-lisp-user::chunk-name common-lisp-user::filled common-lisp-user::empty common-lisp-user::get-chunk common-lisp-user::chunk *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~s does not name a chunk in call to chunk-match-signature." format finish-output integerp "~s is not an appropriate filled signature in call to chunk-match-signature." "~s is not an appropriate empty signature in call to chunk-match-signature." common-lisp-user::act-r-chunk-filled-slots common-lisp-user::slots-vector-match-signature #Y(common-lisp-user::chunk-match-signature nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 13 2 19 1 10 45 11 10 0 76 39 44 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 13 3 19 6 20 12 14 12 19 1 21 22 73 38 119 10 2 16 22 76 39 44 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 23 13 2 19 6 20 12 14 12 19 1 21 22 73 38 69 10 1 76 40 5 10 1 16 22 76 39 44 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 24 13 1 19 6 20 12 14 12 19 1 21 22 73 38 14 13 0 19 1 25 12 13 2 13 1 19 3 26 43 1 29) #32# #2# 38144) si::fset)) #2# 38144) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #33=#A(t (15) (common-lisp-user::slots-vector-match-signature ext::location (defun common-lisp-user::slots-vector-match-signature) (#2# . 38789) ext::annotate :lambda-list (common-lisp-user::slots-vector common-lisp-user::filled &optional common-lisp-user::empty) common-lisp-user::slots-vector common-lisp-user::filled common-lisp-user::empty logand = logandc2 #Y(common-lisp-user::slots-vector-match-signature nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 13 1 13 1 13 2 19 2 10 12 19 2 11 73 39 19 10 0 76 73 40 13 13 0 13 0 10 2 17 12 12 19 2 11 29) #33# #2# 38789) si::fset)) #2# 38789) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #34=#A(t (29) (common-lisp-user::compare-chunk-to-signature ext::location (defun common-lisp-user::compare-chunk-to-signature) (#2# . 38993) ext::annotate :lambda-list (common-lisp-user::chunk-name common-lisp-user::filled &optional common-lisp-user::empty) common-lisp-user::chunk-name common-lisp-user::filled common-lisp-user::empty common-lisp-user::get-chunk common-lisp-user::chunk *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~s does not name a chunk in call to compare-chunk-to-signature." format finish-output integerp "~s is not an appropriate filled signature in call to compare-chunk-to-signature." "~s is not an appropriate empty signature in call to compare-chunk-to-signature." common-lisp-user::act-r-chunk-filled-slots common-lisp-user::compare-slots-vector-to-signature #Y(common-lisp-user::compare-chunk-to-signature nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 13 2 19 1 10 45 11 10 0 76 39 44 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 13 3 19 6 20 12 14 12 19 1 21 22 73 38 119 10 2 16 22 76 39 44 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 23 13 2 19 6 20 12 14 12 19 1 21 22 73 38 69 10 1 76 40 5 10 1 16 22 76 39 44 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 24 13 1 19 6 20 12 14 12 19 1 21 22 73 38 14 13 0 19 1 25 12 13 2 13 1 19 3 26 43 1 29) #34# #2# 38993) si::fset)) #2# 38993) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 17 12 19 2 18 15 0 15 19 15 20 19 3 21 1 0 73 29) #35=#A(t (22) (common-lisp-user::compare-slots-vector-to-signature ext::location (defun common-lisp-user::compare-slots-vector-to-signature) (#2# . 39663) ext::annotate :lambda-list (common-lisp-user::slots-vector common-lisp-user::filled &optional common-lisp-user::empty) common-lisp-user::slots-vector common-lisp-user::filled common-lisp-user::empty logand = logandc2 common-lisp-user::empty? common-lisp-user::filled? common-lisp-user::slot-mask->names logandc1 #Y(common-lisp-user::compare-slots-vector-to-signature nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 13 1 13 1 13 2 19 2 10 12 19 2 11 12 10 0 76 73 40 13 13 0 13 0 10 2 17 12 12 19 2 11 12 46 13 46 14 10 0 73 39 4 10 1 73 12 13 4 10 3 17 12 12 19 1 15 12 13 4 10 3 17 16 12 19 1 15 12 10 2 73 39 12 13 4 13 2 19 2 10 12 19 1 15 12 72 4 43 2 29) #35# #2# 39663) si::fset function "Returns match, extra slots with values, slots which were missing values, and slots which shouldn't have had values" si::set-documentation)) #2# 39663) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #36=#A(t (29) (common-lisp-user::reprocess-chunk-spec ext::location (defun common-lisp-user::reprocess-chunk-spec) (#2# . 40249) ext::annotate :lambda-list (common-lisp-user::spec common-lisp-user::var-char) common-lisp-user::spec common-lisp-user::var-char common-lisp-user::make-act-r-chunk-spec common-lisp-user::new-spec common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::x common-lisp-user::copy-act-r-slot-spec common-lisp-user::slot-spec #:g3860 common-lisp-user::act-r-slot-spec-name common-lisp-user::chunk-spec-variable-p common-lisp-user::act-r-slot-spec-value :both :slot :value #:g3861 common-lisp-user::act-r-slot-spec si::structure-set common-lisp-user::add-slot-spec-to-chunk-spec #Y(common-lisp-user::reprocess-chunk-spec nil nil (24 45 7 24 45 8 26 19 0 9 45 10 13 2 19 1 11 45 12 75 45 13 38 113 10 1 4 51 0 13 0 19 1 14 45 15 10 0 45 16 13 1 19 1 17 12 13 5 19 2 18 39 12 13 1 19 1 19 12 13 5 19 2 18 39 5 11 20 38 36 13 1 19 1 17 12 13 5 19 2 18 39 5 11 21 38 19 13 1 19 1 19 12 13 5 19 2 18 39 5 11 22 38 2 75 45 23 13 1 15 24 9 4 13 0 19 4 25 43 1 43 1 13 0 13 3 19 2 26 43 1 10 1 5 51 1 10 1 40 -115 43 2 10 0 73 43 1 29) #36# #2# 40249) si::fset)) #2# 40249) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 60 12 19 2 61 1 0 73 29) #37=#A(t (62) (common-lisp-user::match-chunk-spec-p ext::location (defun common-lisp-user::match-chunk-spec-p) (#2# . 41003) ext::annotate :lambda-list (common-lisp-user::chunk-name common-lisp-user::chunk-spec &key (common-lisp-user::=test 'common-lisp-user::chunk-slot-equal) (common-lisp-user::-test 'common-lisp-user::chunk-slot-not-equal) (common-lisp-user::>test 'common-lisp-user::safe>) (common-lisp-user::>=test 'common-lisp-user::safe>=) (common-lisp-user::<test 'common-lisp-user::safe<) (common-lisp-user::<=test 'common-lisp-user::safe<=) (common-lisp-user::variable-char #\=)) common-lisp-user::chunk-name common-lisp-user::chunk-spec (nil :variable-char :<=test :<test :>=test :>test :-test :=test) common-lisp-user::chunk-slot-equal common-lisp-user::=test common-lisp-user::chunk-slot-not-equal common-lisp-user::-test common-lisp-user::safe> common-lisp-user::>test common-lisp-user::safe>= common-lisp-user::>=test common-lisp-user::safe< common-lisp-user::<test common-lisp-user::safe<= common-lisp-user::<=test #\= common-lisp-user::variable-char common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Match-chunk-spec-p called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "Match-chunk-spec-p called with no current model." common-lisp-user::get-chunk common-lisp-user::chunk "~s does not name a chunk in call to match-chunk-spec-p." common-lisp-user::act-r-chunk-spec-p "~s is not a valid chunk-spec in call to match-chunk-spec-p." char-equal common-lisp-user::reprocess-chunk-spec common-lisp-user::act-r-chunk-filled-slots common-lisp-user::act-r-chunk-spec-filled-slots common-lisp-user::act-r-chunk-spec-empty-slots common-lisp-user::slots-vector-match-signature #:g3867 #:g3868 0 error si::temp #Y(nil nil nil (24 45 53 26 10 0 51 2 35 1 0 29) #37# #2# 41003) si::*handler-clusters* common-lisp-user::act-r-chunk-slot-value-lists common-lisp-user::test-chunk-slots condition "Error ~S encountered in matching chunk ~s." #Y(common-lisp-user::match-chunk-spec-p nil nil (24 45 7 24 45 8 28 9 22 40 3 15 10 46 11 22 40 3 15 12 46 13 22 40 3 15 14 46 15 22 40 3 15 16 46 17 22 40 3 15 18 46 19 22 40 3 15 20 46 21 22 40 3 15 22 46 23 14 24 19 1 25 76 39 42 14 26 15 27 19 0 28 73 39 12 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 33 19 5 34 12 14 26 19 1 35 22 73 38 316 14 24 19 1 25 12 19 1 36 76 39 42 14 26 15 27 19 0 28 73 39 12 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 37 19 5 34 12 14 26 19 1 35 22 73 38 263 13 8 19 1 38 45 39 10 0 76 39 44 14 26 15 27 19 0 28 73 39 12 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 40 13 9 19 6 34 12 14 26 19 1 35 22 73 38 206 13 8 19 1 41 76 39 44 14 26 15 27 19 0 28 73 39 12 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 42 13 8 19 6 34 12 14 26 19 1 35 22 73 38 155 13 1 15 22 19 2 43 76 39 10 13 8 13 1 19 2 44 51 8 13 0 19 1 45 12 13 8 19 1 46 12 13 8 19 1 47 12 19 3 48 39 111 57 49 60 105 75 45 50 57 51 61 1 41 15 52 34 54 3 6 1 12 11 55 3 48 55 13 3 19 1 56 12 13 11 13 10 13 9 13 8 13 7 13 6 13 5 19 8 57 36 2 44 1 10 1 45 58 14 26 15 27 19 0 28 73 39 12 19 0 29 16 30 12 9 1 19 2 31 12 19 0 32 12 15 59 13 0 13 13 19 7 34 12 14 26 19 1 35 22 73 43 1 36 2 62 73 43 1 63 38 3 75 73 43 1 29) #37# #2# 41003) si::fset)) #2# 41003) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #38=#A(t (12) (common-lisp-user::chunk-slot-not-equal ext::location (defun common-lisp-user::chunk-slot-not-equal) (#2# . 42863) ext::annotate :lambda-list (common-lisp-user::arg1 common-lisp-user::arg2) common-lisp-user::arg1 common-lisp-user::arg2 common-lisp-user::chunk-slot-equal #Y(common-lisp-user::chunk-slot-not-equal nil nil (24 45 7 24 45 8 26 13 1 13 0 19 2 9 76 73 29) #38# #2# 42863) si::fset)) #2# 42863) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 50 12 19 2 51 1 0 73 29) #39=#A(t (52) (common-lisp-user::test-chunk-slots ext::location (defun common-lisp-user::test-chunk-slots) (#2# . 42941) ext::annotate :lambda-list (common-lisp-user::slots common-lisp-user::spec common-lisp-user::=test common-lisp-user::-test common-lisp-user::>test common-lisp-user::>=test common-lisp-user::<test common-lisp-user::<=test) common-lisp-user::slots common-lisp-user::spec common-lisp-user::=test common-lisp-user::-test common-lisp-user::>test common-lisp-user::>=test common-lisp-user::<test common-lisp-user::<=test common-lisp-user::others common-lisp-user::get-bindings common-lisp-user::bindings common-lisp-user::modifier common-lisp-user::chunks-slot-value common-lisp-user::spec-value = - > >= < <= #Y(common-lisp-user::test-slot nil nil (24 45 18 24 45 19 24 45 20 26 10 2 42 21 6 10 12 73 38 43 42 22 6 10 11 73 38 35 42 23 6 10 10 73 38 27 42 24 6 10 9 73 38 19 42 25 6 10 8 73 38 11 42 26 6 10 7 73 38 3 75 73 12 13 1 13 0 20 2 23 29) #39# #2# 42941) common-lisp-user::slot assoc #Y(common-lisp-user::chunks-slot-value nil nil (24 45 28 26 13 0 13 12 19 2 29 5 73 29) #39# #2# 42941) common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::x common-lisp-user::act-r-slot-spec-testable common-lisp-user::act-r-slot-spec-value common-lisp-user::act-r-slot-spec-modifier common-lisp-user::act-r-slot-spec-name common-lisp-user::act-r-slot-spec-variable variable common-lisp-user::value :value eq :both t common-lisp-user::changed common-lisp-user::conds remove slot-value :slot #Y(common-lisp-user::test-chunk-slots nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 24 45 12 24 45 13 24 45 14 26 57 0 60 635 77 77 77 46 15 46 16 46 17 30 2 27 30 13 12 19 1 31 45 32 75 45 33 38 199 10 1 4 51 0 13 0 19 1 34 39 182 13 0 19 1 35 12 13 0 19 1 36 12 13 0 19 1 37 12 13 0 19 1 38 12 46 39 46 28 46 18 46 40 10 3 76 39 25 13 1 13 2 32 6 18 1 12 13 0 32 7 18 3 76 39 5 75 73 36 11 38 119 13 4 19 1 38 12 11 41 17 42 39 75 13 0 13 8 19 2 29 39 32 13 1 13 2 32 6 18 1 12 13 0 13 8 19 2 29 5 12 32 7 18 3 76 39 5 75 73 36 11 38 33 13 1 1 21 17 42 39 18 13 0 13 2 32 6 18 1 3 12 10 8 3 51 8 38 8 13 4 10 10 3 51 10 38 33 13 1 1 21 17 42 39 7 13 3 11 43 17 42 39 10 13 4 10 9 3 51 9 38 8 13 4 10 10 3 51 10 43 4 10 1 5 51 1 10 1 40 -201 43 2 10 3 39 199 13 3 14 44 46 45 46 46 38 167 75 51 1 10 0 45 32 75 45 33 38 149 10 1 4 51 0 13 0 19 1 35 12 13 0 19 1 37 12 46 28 46 40 13 1 13 8 19 2 29 76 40 111 13 0 13 8 19 2 29 39 52 15 21 13 1 13 8 19 2 29 5 12 32 6 18 1 12 13 0 13 8 19 2 29 5 12 32 7 18 3 76 39 5 75 73 36 11 13 2 13 4 19 2 47 51 4 11 44 51 5 38 51 13 1 13 8 19 2 29 5 12 32 6 18 1 45 48 10 0 76 39 5 75 73 36 12 13 1 10 0 3 12 10 9 3 51 9 13 3 13 5 19 2 47 51 5 11 44 51 6 43 1 43 2 10 1 5 51 1 10 1 40 -151 43 2 10 0 76 40 4 10 1 76 39 -175 10 0 76 76 39 5 75 73 36 7 43 2 10 4 45 32 75 45 33 38 178 10 1 4 51 0 13 0 19 1 35 12 13 0 19 1 36 12 13 0 19 1 37 12 13 0 19 1 38 12 46 39 46 28 46 18 46 40 10 3 42 41 32 13 1 13 2 32 6 18 1 12 13 0 13 8 19 2 29 5 12 32 7 18 3 76 39 5 75 73 36 11 38 98 42 49 32 13 1 13 2 13 8 19 2 29 5 12 32 6 18 1 12 13 0 32 7 18 3 76 39 5 75 73 36 11 38 64 42 43 39 13 1 13 2 13 8 19 2 29 5 12 32 6 18 1 12 13 0 13 8 19 2 29 5 12 32 7 18 3 76 39 5 75 73 36 11 38 23 13 1 13 2 32 6 18 1 12 13 0 32 7 18 3 76 39 5 75 73 36 11 43 4 10 1 5 51 1 10 1 40 -180 75 51 0 11 44 73 43 2 43 2 43 3 63 29) #39# #2# 42941) si::fset)) #2# 42941) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 59 12 19 2 60 1 0 73 29) #40=#A(t (61) (common-lisp-user::find-matching-chunks ext::location (defun common-lisp-user::find-matching-chunks) (#2# . 47985) ext::annotate :lambda-list (common-lisp-user::chunk-spec &key (common-lisp-user::chunks :all) (common-lisp-user::=test 'common-lisp-user::chunk-slot-equal) (common-lisp-user::-test 'common-lisp-user::chunk-slot-not-equal) (common-lisp-user::>test 'common-lisp-user::safe>) (common-lisp-user::>=test 'common-lisp-user::safe>=) (common-lisp-user::<test 'common-lisp-user::safe<) (common-lisp-user::<=test 'common-lisp-user::safe<=) (common-lisp-user::variable-char #\=)) common-lisp-user::chunk-spec (nil :variable-char :<=test :<test :>=test :>test :-test :=test :chunks) :all common-lisp-user::chunks common-lisp-user::chunk-slot-equal common-lisp-user::=test common-lisp-user::chunk-slot-not-equal common-lisp-user::-test common-lisp-user::safe> common-lisp-user::>test common-lisp-user::safe>= common-lisp-user::>=test common-lisp-user::safe< common-lisp-user::<test common-lisp-user::safe<= common-lisp-user::<=test #\= common-lisp-user::variable-char common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Find-matching-chunks called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "Find-matching-chunks called with no current model." common-lisp-user::found common-lisp-user::act-r-chunk-spec-p "~s is not a valid chunk-spec in call to find-matching-chunks." eq common-lisp-user::name common-lisp-user::chunk :=test :-test :>test :>=test :<test :<=test :variable-char common-lisp-user::match-chunk-spec-p #Y(nil nil nil (24 45 43 24 45 44 26 13 1 13 11 14 45 13 9 14 46 13 8 14 47 13 7 14 48 13 6 14 49 13 5 14 50 13 4 14 51 13 3 19 16 52 73 39 9 13 1 10 2 3 51 2 73 29) #40# #2# 47985) common-lisp-user::act-r-model-chunks-table maphash listp si::%dolist-var "~S is not a valid value for the :chunks keyword parameter to find-matching-chunks." #Y(common-lisp-user::find-matching-chunks nil nil (24 45 7 28 8 22 40 3 14 9 46 10 22 40 3 15 11 46 12 22 40 3 15 13 46 14 22 40 3 15 15 46 16 22 40 3 15 17 46 18 22 40 3 15 19 46 20 22 40 3 15 21 46 22 22 40 3 15 23 46 24 14 25 19 1 26 76 39 42 14 27 15 28 19 0 29 73 39 12 19 0 30 16 31 12 9 1 19 2 32 12 19 0 33 12 15 34 19 5 35 12 14 27 19 1 36 22 73 38 273 14 25 19 1 26 12 19 1 37 76 39 42 14 27 15 28 19 0 29 73 39 12 19 0 30 16 31 12 9 1 19 2 32 12 19 0 33 12 15 38 19 5 35 12 14 27 19 1 36 22 73 38 220 75 45 39 13 9 19 1 40 76 39 44 14 27 15 28 19 0 29 73 39 12 19 0 30 16 31 12 9 1 19 2 32 12 19 0 33 12 15 41 13 9 19 6 35 12 14 27 19 1 36 22 73 38 164 14 9 10 8 17 42 39 32 34 53 12 14 25 19 1 26 73 39 10 14 25 19 1 26 12 19 1 37 12 19 1 54 17 55 10 0 73 38 125 10 8 16 56 39 78 10 8 45 57 75 45 43 38 55 10 1 4 51 0 13 0 13 11 14 45 13 9 14 46 13 8 14 47 13 7 14 48 13 6 14 49 13 5 14 50 13 4 14 51 13 3 19 16 52 39 8 13 0 10 2 3 51 2 10 1 5 51 1 10 1 40 -57 75 51 0 10 2 73 43 2 38 42 14 27 15 28 19 0 29 73 39 12 19 0 30 16 31 12 9 1 19 2 32 12 19 0 33 12 15 58 13 8 19 6 35 12 14 27 19 1 36 22 73 43 1 29) #40# #2# 47985) si::fset)) #2# 47985) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 43 12 19 2 44 15 0 15 45 15 46 19 3 47 1 0 73 29) #41=#A(t (48) (common-lisp-user::pprint-chunk-spec ext::location (defun common-lisp-user::pprint-chunk-spec) (#2# . 49931) ext::annotate :lambda-list (common-lisp-user::chunk-spec) common-lisp-user::chunk-spec common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Pprint-chunk-spec called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "Pprint-chunk-spec called with no current model." common-lisp-user::act-r-chunk-spec-p common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::slot = common-lisp-user::act-r-slot-spec-modifier eql common-lisp-user::printing-module common-lisp-user::get-module-fct #:g3919 #:g3918 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" "    ~s ~s" common-lisp-user::act-r-slot-spec-name common-lisp-user::act-r-slot-spec-value #:g3921 #:g3920 " ~2a ~s ~s" #Y(common-lisp-user::pprint-chunk-spec nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 239 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 186 13 0 19 1 22 73 39 178 13 0 19 1 23 45 24 75 45 25 38 158 10 1 4 51 0 15 26 13 0 19 1 27 17 28 39 67 15 29 19 1 30 47 1 31 45 32 10 1 39 18 13 0 19 1 33 76 39 10 13 0 19 1 34 12 19 1 35 39 30 13 0 19 1 34 12 19 1 35 12 15 36 15 37 13 2 19 1 38 12 13 2 19 1 39 12 19 5 18 43 2 38 71 15 29 19 1 30 47 1 40 45 41 10 1 39 18 13 0 19 1 33 76 39 10 13 0 19 1 34 12 19 1 35 39 36 13 0 19 1 34 12 19 1 35 12 15 36 15 42 13 2 19 1 27 12 13 2 19 1 38 12 13 2 19 1 39 12 19 6 18 43 2 10 1 5 51 1 10 1 40 -160 75 73 43 2 29) #41# #2# 49931) si::fset function "Print a chunk specification in a 'production like' way to command output" si::set-documentation)) #2# 49931) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #42=#A(t (12) (common-lisp-user::slot-specs-to-chunk-spec-list ext::location (defun common-lisp-user::slot-specs-to-chunk-spec-list) (#2# . 50618) ext::annotate :lambda-list (common-lisp-user::slot-specs) common-lisp-user::slot-specs append apply #Y(common-lisp-user::slot-specs-to-chunk-spec-list nil nil (24 45 7 26 15 8 13 0 19 2 9 29) #42# #2# 50618) si::fset)) #2# 50618) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #43=#A(t (12) (common-lisp-user::slot-specs-to-chunk-spec ext::location (defun common-lisp-user::slot-specs-to-chunk-spec) (#2# . 50700) ext::annotate :lambda-list (common-lisp-user::slot-specs) common-lisp-user::slot-specs common-lisp-user::slot-specs-to-chunk-spec-list common-lisp-user::define-chunk-spec-fct #Y(common-lisp-user::slot-specs-to-chunk-spec nil nil (24 45 7 26 13 0 19 1 8 12 19 1 9 29) #43# #2# 50700) si::fset)) #2# 50700) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 43 12 19 2 44 15 0 15 45 15 46 19 3 47 1 0 73 29) #44=#A(t (48) (common-lisp-user::chunk-spec-to-chunk-def ext::location (defun common-lisp-user::chunk-spec-to-chunk-def) (#2# . 50816) ext::annotate :lambda-list (common-lisp-user::chunk-spec) common-lisp-user::chunk-spec common-lisp-user::act-r-chunk-spec-p common-lisp-user::act-r-chunk-spec-request-param-slots lognot common-lisp-user::requests common-lisp-user::act-r-chunk-spec-slot-vars *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-spec has variablized slots in a call to chunk-spec-to-chunk-def." format finish-output common-lisp-user::act-r-chunk-spec-variables "Chunk-spec has variables in the values in a call to chunk-spec-to-chunk-def." common-lisp-user::act-r-chunk-spec-duplicate-slots logand zerop "Chunk-spec may only specify a slot once in a call to chunk-spec-to-chunk-def." common-lisp-user::act-r-chunk-spec-negated-slots common-lisp-user::act-r-chunk-spec-relative-slots "Chunk-spec may only use the = modifier in a call to chunk-spec-to-chunk-def." common-lisp-user::x common-lisp-user::act-r-slot-spec-name keywordp common-lisp-user::act-r-slot-spec-value #Y(nil nil nil (24 45 32 26 13 0 19 1 33 16 34 76 73 39 15 13 0 19 1 33 12 13 0 19 1 35 6 2 73 29) #44# #2# 50816) common-lisp-user::act-r-chunk-spec-slots mapcan common-lisp-user::it common-lisp-user::isa common-lisp-user::chunk "Chunk-spec-to-chunk-def called with something other than a chunk-spec." #Y(common-lisp-user::chunk-spec-to-chunk-def nil nil (24 45 7 26 13 0 19 1 8 39 272 13 0 19 1 9 16 10 45 11 13 1 19 1 12 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 12 14 13 19 1 22 22 73 38 211 13 1 19 1 23 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 24 19 5 21 12 14 13 19 1 22 22 73 38 163 13 0 13 1 19 1 25 12 19 2 26 16 27 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 28 19 5 21 12 14 13 19 1 22 22 73 38 106 13 0 13 1 19 1 29 12 19 2 26 16 27 76 40 15 13 0 13 1 19 1 30 12 19 2 26 16 27 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 31 19 5 21 12 14 13 19 1 22 22 73 38 33 34 36 12 13 1 19 1 37 12 19 2 38 45 39 10 0 39 6 10 0 73 38 8 15 40 1 41 6 2 73 43 1 43 1 38 40 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 42 19 5 21 12 14 13 19 1 22 22 73 29) #44# #2# 50816) si::fset function "Convert a chunk-spec to a chunk definition list ignoring request parameters" si::set-documentation)) #2# 50816) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 26 12 19 2 27 1 0 73 29) #45=#A(t (28) (common-lisp-user::merge-chunk-specs ext::location (defun common-lisp-user::merge-chunk-specs) (#2# . 52379) ext::annotate :lambda-list (common-lisp-user::spec1 common-lisp-user::spec2) common-lisp-user::spec1 common-lisp-user::spec2 common-lisp-user::act-r-chunk-spec-p common-lisp-user::make-act-r-chunk-spec common-lisp-user::new-spec common-lisp-user::act-r-chunk-spec-slots si::%dolist-var common-lisp-user::slot common-lisp-user::add-slot-spec-to-chunk-spec *error-output* #9# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "merge-chunk-specs requires two valid chunk-specs" format finish-output #Y(common-lisp-user::merge-chunk-specs nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 6 13 0 19 1 9 39 83 19 0 10 45 11 13 2 19 1 12 45 13 75 45 14 38 18 10 1 4 51 0 13 0 13 2 19 2 15 10 1 5 51 1 10 1 40 -20 43 2 13 1 19 1 12 45 13 75 45 14 38 18 10 1 4 51 0 13 0 13 2 19 2 15 10 1 5 51 1 10 1 40 -20 43 2 10 0 73 43 1 38 40 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 19 5 24 12 14 16 19 1 25 22 73 29) #45# #2# 52379) si::fset)) #2# 52379))
