(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) (values t t)) common-lisp-user::get-module-fct) proclaim)) #1=#P"C:/Users/Son Pham/Desktop/actr7/framework/chunk-types.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function nil t) common-lisp-user::current-model) proclaim)) #1# 13814) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) (values t t)) common-lisp-user::get-chunk) proclaim)) #1# 13862) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (&optional t) (values t t t)) common-lisp-user::new-name-fct) proclaim)) #1# 13918) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t &optional t t) (values t t)) common-lisp-user::define-chunk-spec-fct) proclaim)) #1# 13989) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 15 0 15 27 15 28 19 3 29 1 0 73 29) #2=#A(t (30) (common-lisp-user::get-chunk-type ext::location (defun common-lisp-user::get-chunk-type) (#1# . 14071) ext::annotate :lambda-list (common-lisp-user::name) common-lisp-user::name common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #3="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "get-chunk-type called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "get-chunk-type called with no current model." common-lisp-user::act-r-model-chunk-types-info common-lisp-user::act-r-chunk-type-info-table gethash #Y(common-lisp-user::get-chunk-type nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 85 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 32 13 0 14 8 19 1 9 73 39 10 14 8 19 1 9 12 19 1 20 12 19 1 22 12 19 1 23 12 19 2 24 29) #2# #1# 14071) si::fset function "Internal command to get a chunk-type structure from its name" si::set-documentation)) #1# 14071) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 15 0 15 16 15 17 19 3 18 1 0 73 29) #4=#A(t (19) (common-lisp-user::chunk-type ext::location (defmacro common-lisp-user::chunk-type) (#1# . 14428) ext::annotate :lambda-list (&rest common-lisp-user::name-and-slots) #:g627 #:g626 #:g628 common-lisp-user::name-and-slots common-lisp-user::chunk-type-fct quote #Y(common-lisp-user::chunk-type nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #4# #1# 14428) t si::fset function "The user macro to define a new chunk-type." si::set-documentation)) #1# 14428) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 150 12 19 2 151 15 0 15 152 15 153 19 3 154 1 0 73 29) #5=#A(t (155) (common-lisp-user::chunk-type-fct ext::location (defun common-lisp-user::chunk-type-fct) (#1# . 14570) ext::annotate :lambda-list (common-lisp-user::name-and-slots) common-lisp-user::name-and-slots common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "chunk-type called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "chunk-type called with no current model." common-lisp-user::print-all-chunk-types listp "chunk-type-fct must be passed a list which defines a chunk-type." common-lisp-user::name-description consp common-lisp-user::name common-lisp-user::modifier second stringp documentation cddr common-lisp-user::slots common-lisp-user::chunk common-lisp-user::get-chunk-type common-lisp-user::super-types common-lisp-user::parents common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info "Chunk-type ~S is already defined and redefinition is not allowed." common-lisp-user::x = keywordp #Y(nil nil nil (24 45 41 26 10 0 16 23 73 39 19 9 2 10 0 16 14 12 19 2 42 73 39 6 10 0 4 16 43 29) #5# #1# 14570) every "Invalid modifier list specified with the chunk-type name: ~s" :static :key car find remove "Static modifier in chunk-type definitions is depricated and has no effect." si::%dolist-var :include eq "Invalid modifier ~s in ~s chunk-type definition." common-lisp-user::it equalp #:g637 nconc "Non-existent chunk-type ~s specified as an :include in ~s chunk-type definition." common-lisp-user::slot atom symbolp common-lisp-user::isa symbol-name char alphanumericp "Unacceptable slot specification ~S for chunk-type ~S.  Chunk-type not created." common-lisp-user::chunk-type-slot-name mapcar remove-duplicates "Duplicate slot specifications in ~S for chunk-type ~S.  Chunk-type not created." :name :documentation :parents :super-types union common-lisp-user::act-r-chunk-type-super-types reduce common-lisp-user::make-act-r-chunk-type common-lisp-user::ct common-lisp-user::y :test #Y(nil nil nil (24 45 41 24 45 83 26 13 1 13 0 14 84 15 58 19 4 78 29) #5# #1# 14570) common-lisp-user::act-r-chunk-type-slots remove-if-not #Y(nil nil nil (24 45 41 26 15 23 13 0 19 1 86 12 19 2 87 29) #5# #1# 14570) common-lisp-user::unique-parent-defaults #Y(nil nil nil (24 45 41 26 13 0 19 1 70 12 13 6 14 48 15 70 19 4 50 29) #5# #1# 14570) remove-if common-lisp-user::needed-defaults first "The multiple parents specified for type ~s ~s have inconsistent default values in one or more slots.  Chunk-type not created." common-lisp-user::s common-lisp-user::act-r-chunk-type-info-slot->index gethash common-lisp-user::act-r-chunk-type-info-index->slot vector-push-extend common-lisp-user::index si::hash-set common-lisp-user::act-r-chunk-type-info-slot->mask expt #:g652 1+ #:g653 common-lisp-user::act-r-chunk-type-info si::structure-set common-lisp-user::parent-slot #:g657 #:g658 #:g659 common-lisp-user::act-r-chunk-type common-lisp-user::type-name type #:g671 #:g669 common-lisp-user::act-r-chunk-type-possible-slots adjoin #:g670 common-lisp-user::filled-specs #:g677 #:g679 #:g680 common-lisp-user::define-chunk-spec-fct #:g681 common-lisp-user::act-r-chunk-type-info-table #:g685 #:g687 common-lisp-user::act-r-chunk-type-info-types #:g686 common-lisp-user::defaults common-lisp-user::ordered-slots common-lisp-user::named-slots logior < #Y(nil nil nil (24 45 41 26 13 0 19 1 70 12 13 5 19 1 96 12 19 2 97 29) #5# #1# 14570) sort common-lisp-user::act-r-chunk-type-info-distinct-types common-lisp-user::possibles "Chunk-type ~s has the same specification as the chunk-type~p ~{~s~^, ~}." #:g694 #:g698 #:g696 #:g697 rplacd #:g695 #:g706 #:g707 #Y(common-lisp-user::chunk-type-fct nil nil (24 45 7 26 57 0 60 1820 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 1770 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 1717 10 1 76 39 6 19 0 22 38 1707 10 1 16 23 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 24 19 5 18 12 14 10 19 1 19 22 73 38 1659 10 1 4 45 25 10 0 16 26 39 6 10 0 4 38 3 10 0 45 27 10 1 16 26 39 6 10 1 5 38 2 75 45 28 10 4 16 29 16 30 39 5 10 4 16 29 45 31 10 0 39 7 10 5 16 32 38 4 10 5 5 45 33 15 34 19 1 35 6 1 45 36 75 45 37 14 8 19 1 9 73 39 10 14 8 19 1 9 12 19 1 20 12 19 1 38 45 39 13 6 19 1 35 39 44 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 40 13 6 19 6 18 12 14 10 19 1 19 22 73 36 8 10 5 39 313 34 44 12 13 5 19 2 45 76 39 44 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 46 13 5 19 6 18 12 14 10 19 1 19 22 73 36 8 14 47 13 5 14 48 15 49 19 4 50 39 50 14 47 13 5 14 48 15 49 19 4 51 51 5 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 52 19 5 18 14 10 19 1 19 10 5 45 53 75 45 41 38 182 10 1 4 51 0 10 0 4 12 11 54 17 55 76 39 48 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 56 10 0 4 12 13 8 19 7 18 12 14 10 19 1 19 22 73 36 10 10 0 16 29 12 19 1 35 45 57 10 0 39 50 13 5 15 34 19 1 35 6 1 17 58 39 9 10 0 6 1 51 5 38 8 13 0 10 5 3 51 5 10 1 16 29 6 1 45 59 13 5 13 0 19 2 60 51 5 43 1 38 49 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 61 10 1 16 29 12 13 9 19 7 18 12 14 10 19 1 19 22 73 36 11 43 1 10 1 5 51 1 10 1 40 -184 43 2 10 3 45 53 75 45 62 38 156 10 1 4 51 0 10 0 16 63 39 34 10 0 16 64 39 28 10 0 16 43 76 39 21 13 0 1 65 17 55 76 39 12 10 0 16 66 12 8 0 17 67 16 68 40 57 10 0 16 23 39 51 10 0 16 14 12 9 2 19 2 42 39 39 10 0 4 12 1 65 17 55 76 39 28 10 0 4 16 64 39 21 10 0 4 16 43 76 39 13 10 0 4 16 66 12 8 0 17 67 16 68 76 39 46 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 69 13 0 13 8 19 7 18 12 14 10 19 1 19 22 73 36 10 10 1 5 51 1 10 1 40 -158 43 2 10 3 16 14 12 15 70 13 3 19 2 71 12 19 1 72 16 14 12 19 2 42 76 39 46 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 73 13 3 13 6 19 7 18 12 14 10 19 1 19 22 73 36 8 14 74 13 6 14 75 13 4 14 76 13 1 14 77 13 6 15 78 13 2 14 48 15 79 19 4 80 3 12 19 8 81 45 82 34 85 12 13 3 14 48 34 88 12 19 4 80 45 89 34 90 12 13 0 19 2 91 45 92 10 0 16 14 12 13 0 14 48 15 93 19 3 72 16 14 12 19 2 42 76 39 46 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 94 13 9 13 4 19 7 18 12 14 10 19 1 19 22 73 36 11 43 2 15 70 13 4 19 2 71 45 53 75 45 95 38 96 10 1 4 51 0 13 0 13 3 19 1 96 12 19 2 97 76 39 72 13 0 13 3 19 1 98 12 19 2 99 45 100 13 1 13 4 19 1 96 12 13 0 19 3 101 13 1 13 4 19 1 102 12 9 2 10 0 17 103 12 19 3 101 10 4 45 104 10 1 16 105 45 106 13 1 15 107 9 3 13 0 19 4 108 43 1 43 1 43 1 10 1 5 51 1 10 1 40 -98 43 2 15 78 13 3 14 48 15 86 19 4 80 45 53 75 45 109 38 50 10 1 4 51 0 13 0 19 1 70 12 13 6 14 48 15 70 14 84 15 55 19 6 50 76 39 18 10 0 6 1 45 110 13 7 13 0 19 2 60 51 7 43 1 10 1 5 51 1 10 1 40 -52 43 2 10 0 45 111 10 5 45 112 13 1 15 113 9 4 13 0 19 4 108 43 1 43 1 13 0 19 1 79 45 53 75 45 114 38 100 10 1 4 51 0 13 0 10 9 17 55 39 5 10 2 38 6 13 0 19 1 35 45 115 15 70 13 7 19 2 71 45 53 75 45 95 38 49 10 1 4 51 0 10 0 45 116 10 3 45 117 13 1 13 0 19 1 118 12 14 84 15 55 19 4 119 45 120 13 1 15 113 9 5 13 0 19 4 108 43 3 10 1 5 51 1 10 1 40 -51 43 2 43 1 10 1 5 51 1 10 1 40 -102 43 2 75 45 121 13 1 19 1 86 45 53 75 45 62 38 60 10 1 4 51 0 10 0 16 23 39 5 10 0 16 29 39 38 10 0 4 6 1 45 122 13 3 13 0 19 2 60 51 3 43 1 10 0 16 29 6 1 45 123 13 3 13 0 19 2 60 51 3 43 1 10 1 5 51 1 10 1 40 -62 43 2 10 1 45 124 13 1 19 1 125 45 126 13 1 15 113 9 7 13 0 19 4 108 43 1 43 1 43 1 13 7 13 1 19 1 127 12 13 0 19 3 101 10 1 45 128 10 8 6 1 45 129 13 1 19 1 130 12 13 0 19 2 60 45 131 13 2 15 107 9 8 13 0 19 4 108 43 3 9 0 77 77 46 132 46 133 46 134 13 3 19 1 86 45 53 75 45 62 38 41 10 1 4 51 0 13 0 19 1 70 12 13 6 19 1 102 12 19 2 97 12 13 2 19 2 135 51 2 13 0 10 3 3 51 3 10 1 5 51 1 10 1 40 -43 43 2 13 1 33 136 12 14 48 34 137 12 19 4 138 45 53 75 45 62 38 31 10 1 4 51 0 10 0 16 23 39 7 10 0 16 29 38 3 75 73 12 10 4 3 51 4 10 1 5 51 1 10 1 40 -33 43 2 13 0 13 4 19 1 139 12 19 2 97 45 140 10 0 39 145 13 3 13 0 14 84 15 58 14 48 15 49 19 6 50 45 57 10 0 39 95 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 141 13 12 10 0 5 16 14 12 10 0 5 12 19 8 18 14 10 19 1 19 10 0 45 142 10 13 45 143 10 2 45 144 13 1 10 0 5 3 45 145 13 1 10 0 17 146 10 0 43 3 45 147 13 1 10 0 17 146 10 0 43 1 43 1 38 26 13 2 13 6 19 1 139 12 13 4 10 12 6 1 3 12 10 0 3 51 0 12 19 3 101 43 1 38 22 13 1 13 5 19 1 139 12 13 3 10 11 6 1 3 6 1 12 19 3 101 43 1 10 3 45 148 10 1 45 149 13 1 15 113 9 6 13 0 19 4 108 43 1 43 1 10 10 73 43 3 43 1 43 8 63 29) #5# #1# 14570) si::fset function "The user function to define a new chunk-type" si::set-documentation)) #1# 14570) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 15 0 15 11 15 12 19 3 13 1 0 73 29) #6=#A(t (14) (common-lisp-user::chunk-type-slot-name ext::location (defun common-lisp-user::chunk-type-slot-name) (#1# . 24192) ext::annotate :lambda-list (common-lisp-user::slot) common-lisp-user::slot atom #Y(common-lisp-user::chunk-type-slot-name nil nil (24 45 7 26 10 0 16 8 39 6 10 0 73 38 5 10 0 4 73 29) #6# #1# 24192) si::fset function "Internal function for parsing chunk-types" si::set-documentation)) #1# 24192) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 15 12 19 2 16 15 0 15 17 15 18 19 3 19 1 0 73 29) #7=#A(t (20) (common-lisp-user::print-all-chunk-types ext::location (defun common-lisp-user::print-all-chunk-types) (#1# . 24323) ext::annotate :lambda-list common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-chunk-types-info common-lisp-user::act-r-chunk-type-info-types common-lisp-user::types si::%dolist-var common-lisp-user::x common-lisp-user::pprint-chunk-type-fct #Y(common-lisp-user::print-all-chunk-types nil nil (26 14 6 19 1 7 73 39 10 14 6 19 1 7 12 19 1 8 12 19 1 9 12 19 1 10 45 11 10 0 45 12 75 45 13 38 16 10 1 4 51 0 13 0 19 1 14 10 1 5 51 1 10 1 40 -18 75 51 0 10 2 73 43 2 43 1 29) #7# #1# 24323) si::fset function "Internal function for printing all chunk-types" si::set-documentation)) #1# 24323) #Y(si::bytecodes nil nil (15 0 1 38 17 39 15 0 15 40 15 41 19 3 42 15 0 15 43 15 44 15 45 19 4 46 1 0 73 29) #8=#A(t (47) (common-lisp-user::*pprint-chunk-type-string* stream si::format-error :complaint "Required argument missing" :control-string "~S~@[ <- ~{~s~^, ~}~]~@[ ~S~]~%~{~{   ~s~@[ (~s)~]~%~}~}~%" :offset error #:format-arg-708 #:format-arg-709 #:format-arg-710 #:format-arg-711 si::args prin1 " <- " write-string si::orig-args 0 #:g722 "No more arguments." #:g1723 #:g1722 #:g1721 <= eql ", " " " terpri #:g724 "   " #:g726 #:g727 si::arg si::prev-args " (" #:g729 ")" #Y(nil nil nil (24 45 1 25 40 19 15 2 14 3 15 4 14 5 15 6 14 7 9 1 19 7 8 12 46 9 25 40 19 15 2 14 3 15 4 14 5 15 6 14 7 9 10 19 7 8 12 46 10 25 40 19 15 2 14 3 15 4 14 5 15 6 14 7 9 26 19 7 8 12 46 11 25 40 19 15 2 14 3 15 4 14 5 15 6 14 7 9 32 19 7 8 12 46 12 27 45 13 13 4 13 5 19 2 14 10 3 39 156 15 15 13 5 19 2 16 10 3 45 17 10 0 45 13 58 60 136 57 18 61 1 1 10 2 76 39 5 75 73 36 1 10 2 39 24 10 2 45 19 10 0 4 12 10 0 5 51 0 10 0 51 3 22 73 43 1 38 18 15 2 14 3 15 20 14 5 15 6 14 7 9 12 19 7 8 12 13 9 19 2 14 77 77 77 46 21 46 22 46 23 10 2 39 12 13 0 13 1 13 2 19 3 24 38 28 10 1 39 9 13 0 10 1 17 25 38 16 10 0 39 9 13 0 8 0 17 25 38 4 10 5 76 43 3 39 5 75 73 36 1 15 26 13 9 19 2 16 35 0 0 62 63 43 2 10 2 39 15 15 27 13 5 19 2 16 13 2 13 5 19 2 14 13 5 19 1 28 10 1 45 17 10 0 45 13 58 60 280 57 18 61 1 1 10 2 76 39 5 75 73 36 1 10 2 39 23 10 2 45 29 10 0 4 12 10 0 5 51 0 10 0 51 3 22 43 1 38 18 15 2 14 3 15 20 14 5 15 6 14 7 9 34 19 7 8 45 17 10 0 45 13 58 60 207 57 18 61 1 1 10 2 76 39 5 75 73 36 1 15 30 13 13 19 2 16 10 2 39 24 10 2 45 31 10 0 4 12 10 0 5 51 0 10 0 51 3 22 73 43 1 38 18 15 2 14 3 15 20 14 5 15 6 14 7 9 39 19 7 8 12 13 13 19 2 14 13 2 10 2 39 24 10 2 45 32 10 0 4 12 10 0 5 51 0 10 0 51 3 22 73 43 1 38 18 15 2 14 3 15 20 14 5 15 6 14 7 9 42 19 7 8 12 46 33 46 34 10 1 39 69 10 0 51 4 15 35 13 15 19 2 16 10 4 39 24 10 4 45 36 10 0 4 12 10 0 5 51 0 10 0 51 5 22 73 43 1 38 18 15 2 14 3 15 20 14 5 15 6 14 7 9 46 19 7 8 12 13 15 19 2 14 15 37 13 15 19 2 16 43 2 13 13 19 1 28 35 0 0 62 63 43 2 35 0 0 62 63 43 2 13 5 19 1 28 10 0 73 29) #8# #1# 24572) si::*make-constant variable "Internal compiled format string used to print out chunk-types" si::set-documentation ext::location (defconstant common-lisp-user::*pprint-chunk-type-string*) (#1# . 24572) ext::annotate)) #1# 24572) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 26 12 19 2 27 15 0 15 28 15 29 19 3 30 1 0 73 29) #9=#A(t (31) (common-lisp-user::pprint-ct ext::location (defun common-lisp-user::pprint-ct) (#1# . 24758) ext::annotate :lambda-list (common-lisp-user::chunk-type) common-lisp-user::chunk-type common-lisp-user::printing-module common-lisp-user::get-module-fct #:g755 #:g754 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" common-lisp-user::*pprint-chunk-type-string* common-lisp-user::act-r-chunk-type-name common-lisp-user::act-r-chunk-type-parents common-lisp-user::act-r-chunk-type-documentation common-lisp-user::slot listp #Y(nil nil nil (24 45 20 26 10 0 16 21 39 6 10 0 73 38 7 13 0 75 6 2 73 29) #9# #1# 24758) common-lisp-user::act-r-chunk-type-slots mapcar format #Y(common-lisp-user::pprint-ct nil nil (24 45 7 26 15 8 19 1 9 47 1 10 45 11 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 54 13 0 19 1 13 12 19 1 14 12 15 15 77 14 16 13 2 19 1 17 12 13 2 19 1 18 12 13 2 19 1 19 12 34 22 12 13 2 19 1 23 12 19 2 24 12 19 6 25 12 19 3 25 43 2 13 0 19 1 17 29) #9# #1# 24758) si::fset function "Pretty prints a chunk-type." si::set-documentation)) #1# 24758) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 1 0 73 29) #10=#A(t (18) (common-lisp-user::pprint-chunk-type ext::location (defmacro common-lisp-user::pprint-chunk-type) (#1# . 25218) ext::annotate :lambda-list (common-lisp-user::chunk-type) #:g757 #:g756 #:g758 si::dm-too-few-arguments common-lisp-user::chunk-type si::dm-too-many-arguments common-lisp-user::pprint-chunk-type-fct quote #Y(common-lisp-user::pprint-chunk-type nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 39 6 13 3 19 1 12 15 13 15 14 10 0 6 2 6 2 73 29) #10# #1# 25218) t si::fset)) #1# 25218) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 26 12 19 2 27 1 0 73 29) #11=#A(t (28) (common-lisp-user::pprint-chunk-type-fct ext::location (defun common-lisp-user::pprint-chunk-type-fct) (#1# . 25302) ext::annotate :lambda-list (common-lisp-user::chunk-type) common-lisp-user::chunk-type common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "pprint-chunk-type called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "pprint-chunk-type called with no current model." common-lisp-user::get-chunk-type common-lisp-user::it common-lisp-user::pprint-ct "~s does not name a chunk-type in the current model." #Y(common-lisp-user::pprint-chunk-type-fct nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 115 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 62 13 0 19 1 22 45 23 10 0 39 8 13 0 19 1 24 38 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 25 13 1 19 6 18 12 14 10 19 1 19 22 73 43 1 29) #11# #1# 25302) si::fset)) #1# 25302) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 15 0 15 18 15 19 19 3 20 1 0 73 29) #12=#A(t (21) (common-lisp-user::chunk-type-p ext::location (defmacro common-lisp-user::chunk-type-p) (#1# . 25662) ext::annotate :lambda-list (common-lisp-user::chunk-type-name?) #:g760 #:g759 #:g761 si::dm-too-few-arguments common-lisp-user::chunk-type-name? si::dm-too-many-arguments common-lisp-user::chunk-type-p-fct quote #Y(common-lisp-user::chunk-type-p nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 39 6 13 3 19 1 12 15 13 15 14 10 0 6 2 6 2 73 29) #12# #1# 25662) t si::fset function "Predicate macro for verifying that a chunk-type of a given name exists" si::set-documentation)) #1# 25662) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 15 0 15 12 15 13 19 3 14 1 0 73 29) #13=#A(t (15) (common-lisp-user::chunk-type-p-fct ext::location (defun common-lisp-user::chunk-type-p-fct) (#1# . 25822) ext::annotate :lambda-list (common-lisp-user::chunk-type-name?) common-lisp-user::chunk-type-name? common-lisp-user::get-chunk-type t #Y(common-lisp-user::chunk-type-p-fct nil nil (24 45 7 26 13 0 19 1 8 39 6 11 9 73 38 3 75 73 29) #13# #1# 25822) si::fset function "Predicate function for verifying that a chunk-type of a given name exists" si::set-documentation)) #1# 25822) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 15 0 15 17 15 18 19 3 19 1 0 73 29) #14=#A(t (20) (common-lisp-user::valid-slot-name ext::location (defun common-lisp-user::valid-slot-name) (#1# . 25998) ext::annotate :lambda-list (common-lisp-user::slot) common-lisp-user::slot common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-info-slot->index gethash #Y(common-lisp-user::valid-slot-name nil nil (24 45 7 26 14 8 19 1 9 73 39 10 14 8 19 1 9 12 19 1 10 12 19 1 11 45 12 10 0 73 39 12 13 1 13 0 19 1 13 12 19 2 14 12 43 1 72 1 29) #14# #1# 25998) si::fset function "Function to determine if a slot name is valid for any chunk" si::set-documentation)) #1# 25998) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 1 0 73 29) #15=#A(t (17) (common-lisp-user::valid-query-name ext::location (defun common-lisp-user::valid-query-name) (#1# . 26250) ext::annotate :lambda-list (common-lisp-user::query) common-lisp-user::query common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-info-query-slots find #Y(common-lisp-user::valid-query-name nil nil (24 45 7 26 14 8 19 1 9 73 39 10 14 8 19 1 9 12 19 1 10 12 19 1 11 45 12 10 0 73 39 12 13 1 13 0 19 1 13 12 19 2 14 43 1 29) #15# #1# 26250) si::fset)) #1# 26250) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #16=#A(t (24) (common-lisp-user::valid-chunk-type-slot ext::location (defun common-lisp-user::valid-chunk-type-slot) (#1# . 26424) ext::annotate :lambda-list (common-lisp-user::chunk-type-name common-lisp-user::slot) common-lisp-user::chunk-type-name common-lisp-user::slot common-lisp-user::get-chunk-type common-lisp-user::ct common-lisp-user::valid-ct-slot *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid chunk-type name ~s passed to valid-chunk-type-slot." format finish-output #Y(common-lisp-user::valid-chunk-type-slot nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 0 39 10 13 0 13 1 19 2 11 38 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 13 2 19 6 20 12 14 12 19 1 21 22 73 43 1 29) #16# #1# 26424) si::fset)) #1# 26424) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #17=#A(t (21) (common-lisp-user::valid-ct-slot ext::location (defun common-lisp-user::valid-ct-slot) (#1# . 26670) ext::annotate :lambda-list (common-lisp-user::chunk-type common-lisp-user::slot) common-lisp-user::chunk-type common-lisp-user::slot common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-possible-slots :key common-lisp-user::chunk-type-slot-name find common-lisp-user::act-r-chunk-type-info-extended-slots #Y(common-lisp-user::valid-ct-slot nil nil (24 45 7 24 45 8 26 14 9 19 1 10 73 39 10 14 9 19 1 10 12 19 1 11 12 19 1 12 45 13 10 2 73 39 35 10 0 73 39 30 13 1 13 2 19 1 14 12 14 15 15 16 19 4 17 73 40 12 13 1 13 0 19 1 18 12 19 2 17 43 1 29) #17# #1# 26670) si::fset)) #1# 26670) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 30 12 19 2 31 1 0 73 29) #18=#A(t (32) (common-lisp-user::chunk-type-possible-slot-names-fct ext::location (defun common-lisp-user::chunk-type-possible-slot-names-fct) (#1# . 26983) ext::annotate :lambda-list (common-lisp-user::chunk-type-name) common-lisp-user::chunk-type-name common-lisp-user::get-chunk-type common-lisp-user::ct common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-possible-slots common-lisp-user::act-r-chunk-type-info-extended-slots append remove-duplicates *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No chunk-types info available for call to chunk-type-possible-slot-names-fct." format finish-output "Invalid chunk-type name ~s passed to chunk-type-possible-slot-names-fct." #Y(common-lisp-user::chunk-type-possible-slot-names-fct nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 92 14 10 19 1 11 73 39 10 14 10 19 1 11 12 19 1 12 12 19 1 13 45 14 10 0 39 22 13 1 19 1 15 12 13 0 19 1 16 12 19 2 17 12 19 1 18 38 40 14 19 15 20 19 0 21 73 39 12 19 0 22 16 23 12 9 1 19 2 24 12 19 0 25 12 15 26 19 5 27 12 14 19 19 1 28 22 73 43 1 38 42 14 19 15 20 19 0 21 73 39 12 19 0 22 16 23 12 9 1 19 2 24 12 19 0 25 12 15 29 13 1 19 6 27 12 14 19 19 1 28 22 73 43 1 29) #18# #1# 26983) si::fset)) #1# 26983) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 58 12 19 2 59 1 0 73 29) #19=#A(t (60) (common-lisp-user::extend-possible-slots ext::location (defun common-lisp-user::extend-possible-slots) (#1# . 27589) ext::annotate :lambda-list (common-lisp-user::slot-name &optional (warn t)) common-lisp-user::slot-name t warn common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-type info not available so the slot ~s cannot be added." format finish-output "Nil is not a valid slot name when trying to extend slots." symbolp "~s cannot be used as a slot name because it is not a symbol." symbol-name char alphanumericp "~s cannot be used as a slot name because it does not start with an alphanumeric character." keywordp "~s cannot be used as a slot name because it is a keyword." common-lisp-user::act-r-chunk-type-info-slot->index gethash #:g778 #:g776 common-lisp-user::act-r-chunk-type-info-extended-slots adjoin #:g777 common-lisp-user::act-r-chunk-type-info si::structure-set "~s already names a possible slot for chunks." #:g781 #:g779 #:g780 common-lisp-user::act-r-chunk-type-info-index->slot vector-push-extend common-lisp-user::index si::hash-set common-lisp-user::act-r-chunk-type-info-slot->mask expt #:g788 1+ #:g789 "Chunk-type info not available so the slot ~s cannot be added." #Y(common-lisp-user::extend-possible-slots nil nil (24 45 7 25 40 3 14 8 46 9 26 14 10 19 1 11 39 10 14 10 19 1 11 12 19 1 12 45 13 10 0 39 462 13 0 19 1 14 45 15 10 0 76 39 44 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 3 19 6 24 12 14 16 19 1 25 22 73 38 403 10 3 76 39 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 19 5 24 12 14 16 19 1 25 22 73 38 357 10 3 16 27 76 39 44 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 28 13 3 19 6 24 12 14 16 19 1 25 22 73 38 307 10 3 16 29 12 8 0 17 30 16 31 76 39 44 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 32 13 3 19 6 24 12 14 16 19 1 25 22 73 38 250 10 3 16 33 39 44 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 34 13 3 19 6 24 12 14 16 19 1 25 22 73 38 201 13 3 13 0 19 1 35 12 19 2 36 39 83 10 3 45 37 10 1 45 38 13 1 13 0 19 1 39 12 19 2 40 45 41 13 1 15 42 9 5 13 0 19 4 43 43 3 10 2 73 39 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 44 13 3 19 6 24 12 14 16 19 1 25 22 73 38 106 10 3 45 45 10 1 45 46 13 1 13 0 19 1 39 3 45 47 13 1 15 42 9 5 13 0 19 4 43 43 3 13 3 13 0 19 1 48 12 19 2 49 45 50 13 4 13 1 19 1 35 12 13 0 19 3 51 13 4 13 1 19 1 52 12 9 2 10 0 17 53 12 19 3 51 10 1 45 54 10 1 16 55 45 56 13 1 15 42 9 3 13 0 19 4 43 43 1 43 1 43 1 10 3 73 43 1 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 57 13 2 19 6 24 12 14 16 19 1 25 22 73 43 1 29) #19# #1# 27589) si::fset)) #1# 27589) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #20=#A(t (22) (common-lisp-user::extend-chunk-type-slots ext::location (defun common-lisp-user::extend-chunk-type-slots) (#1# . 29492) ext::annotate :lambda-list (common-lisp-user::chunk-type common-lisp-user::slot) common-lisp-user::chunk-type common-lisp-user::slot *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Extend-chunk-type-slots is depricated and extend-possible-slots should be used instead." format finish-output common-lisp-user::extend-possible-slots #Y(common-lisp-user::extend-chunk-type-slots nil nil (24 45 7 24 45 8 26 14 9 15 10 19 0 11 73 39 12 19 0 12 16 13 12 9 1 19 2 14 12 19 0 15 12 15 16 19 5 17 14 9 19 1 18 13 0 19 1 19 29) #20# #1# 29492) si::fset)) #1# 29492) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 45 12 19 2 46 1 0 73 29) #21=#A(t (47) (common-lisp-user::add-request-parameter ext::location (defun common-lisp-user::add-request-parameter) (#1# . 29714) ext::annotate :lambda-list (common-lisp-user::parameter-name) common-lisp-user::parameter-name common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-type info not available so the request parameter ~s cannot be added." format finish-output "Nil is not a valid request parameter name." keywordp "~s cannot be used as a request parameter because it must be a keyword." common-lisp-user::act-r-chunk-type-info-slot->index gethash #:g803 #:g801 common-lisp-user::act-r-chunk-type-info-extended-slots #:g802 common-lisp-user::act-r-chunk-type-info si::structure-set common-lisp-user::act-r-chunk-type-info-index->slot vector-push-extend common-lisp-user::index si::hash-set common-lisp-user::act-r-chunk-type-info-slot->mask expt #:g810 1+ #:g811 "Chunk-type info not available so the request parameter ~s cannot be added." #Y(common-lisp-user::add-request-parameter nil nil (24 45 7 26 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 10 45 11 10 0 39 279 13 0 19 1 12 45 13 10 0 76 39 44 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 2 19 6 22 12 14 14 19 1 23 22 73 38 220 10 2 76 39 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 19 5 22 12 14 14 19 1 23 22 73 38 174 10 2 16 25 76 39 44 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 26 13 2 19 6 22 12 14 14 19 1 23 22 73 38 124 13 2 13 0 19 1 27 12 19 2 28 39 6 10 2 73 38 106 10 2 45 29 10 1 45 30 13 1 13 0 19 1 31 3 45 32 13 1 15 33 9 5 13 0 19 4 34 43 3 13 2 13 0 19 1 35 12 19 2 36 45 37 13 3 13 1 19 1 27 12 13 0 19 3 38 13 3 13 1 19 1 39 12 9 2 10 0 17 40 12 19 3 38 10 1 45 41 10 1 16 42 45 43 13 1 15 33 9 3 13 0 19 4 34 43 1 43 1 43 1 10 2 73 43 1 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 44 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #21# #1# 29714) si::fset)) #1# 29714) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 35 12 19 2 36 1 0 73 29) #22=#A(t (37) (common-lisp-user::add-buffer-query ext::location (defun common-lisp-user::add-buffer-query) (#1# . 31375) ext::annotate :lambda-list (common-lisp-user::query-name) common-lisp-user::query-name common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Chunk-type info not available so the query ~s cannot be added." format finish-output "Nil is not a valid query name." keywordp "~s cannot be used as a query parameter because it is a keyword." common-lisp-user::act-r-chunk-type-info-query-slots find #:g817 #:g815 #:g816 common-lisp-user::act-r-chunk-type-info si::structure-set "Chunk-type info not available so the query ~s cannot be added." #Y(common-lisp-user::add-buffer-query nil nil (24 45 7 26 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 10 45 11 10 0 39 207 13 0 19 1 12 45 13 10 0 76 39 44 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 2 19 6 22 12 14 14 19 1 23 22 73 38 148 10 2 76 39 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 19 5 22 12 14 14 19 1 23 22 73 38 102 10 2 16 25 39 44 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 26 13 2 19 6 22 12 14 14 19 1 23 22 73 38 53 13 2 13 0 19 1 27 12 19 2 28 39 6 10 2 73 38 35 10 2 45 29 10 1 45 30 13 1 13 0 19 1 27 3 45 31 13 1 15 32 9 6 13 0 19 4 33 43 3 10 2 73 43 1 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 34 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #22# #1# 31375) si::fset)) #1# 31375) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #23=#A(t (30) (common-lisp-user::slot-name->mask ext::location (defun common-lisp-user::slot-name->mask) (#1# . 32675) ext::annotate :lambda-list (common-lisp-user::slot-name) common-lisp-user::slot-name common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-info-slot->mask gethash *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~s does not name a valid slot in the current model." format finish-output "Chunk-type info not available so a mask for the slot ~s cannot be found." "Chunk-type info not available so a mask for the slot ~s cannot be found." #Y(common-lisp-user::slot-name->mask nil nil (24 45 7 26 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 10 45 11 10 0 39 124 13 0 19 1 12 45 13 10 0 39 68 13 2 13 0 19 1 14 12 19 2 15 45 11 10 0 39 6 10 0 73 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 3 19 6 24 12 14 16 19 1 25 22 73 43 1 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 13 2 19 6 24 12 14 16 19 1 25 22 73 43 1 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 27 13 1 19 6 24 12 14 16 19 1 25 22 73 43 1 29) #23# #1# 32675) si::fset)) #1# 32675) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #24=#A(t (30) (common-lisp-user::slot-name->index ext::location (defun common-lisp-user::slot-name->index) (#1# . 33236) ext::annotate :lambda-list (common-lisp-user::slot-name) common-lisp-user::slot-name common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-info-slot->index gethash *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~s does not name a valid slot in the current model." format finish-output "Chunk-type info not available so an index for the slot ~s cannot be found." "Chunk-type info not available so an index for the slot ~s cannot be found." #Y(common-lisp-user::slot-name->index nil nil (24 45 7 26 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 10 45 11 10 0 39 124 13 0 19 1 12 45 13 10 0 39 68 13 2 13 0 19 1 14 12 19 2 15 45 11 10 0 39 6 10 0 73 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 3 19 6 24 12 14 16 19 1 25 22 73 43 1 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 13 2 19 6 24 12 14 16 19 1 25 22 73 43 1 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 27 13 1 19 6 24 12 14 16 19 1 25 22 73 43 1 29) #24# #1# 33236) si::fset)) #1# 33236) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #25=#A(t (31) (common-lisp-user::slot-index->name ext::location (defun common-lisp-user::slot-index->name) (#1# . 33803) ext::annotate :lambda-list (common-lisp-user::slot-index) common-lisp-user::slot-index common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-info-index->slot length < aref *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "~s is not a valid slot index in the current model." format finish-output "Chunk-type info not available so a name for the slot index ~s cannot be found." "Chunk-type info not available so a name for the slot index ~s cannot be found." #Y(common-lisp-user::slot-index->name nil nil (24 45 7 26 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 10 45 11 10 0 39 128 13 0 19 1 12 45 13 10 0 39 72 13 2 13 0 19 1 14 16 15 12 19 2 16 39 14 13 0 19 1 14 12 13 2 19 2 17 38 42 14 18 15 19 19 0 20 73 39 12 19 0 21 16 15 12 9 1 19 2 22 12 19 0 23 12 15 24 13 2 19 6 25 12 14 18 19 1 26 22 73 38 42 14 18 15 19 19 0 20 73 39 12 19 0 21 16 15 12 9 1 19 2 22 12 19 0 23 12 15 27 13 2 19 6 25 12 14 18 19 1 26 22 73 43 1 38 42 14 18 15 19 19 0 20 73 39 12 19 0 21 16 15 12 9 1 19 2 22 12 19 0 23 12 15 28 13 1 19 6 25 12 14 18 19 1 26 22 73 43 1 29) #25# #1# 33803) si::fset)) #1# 33803) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 40 12 19 2 41 1 0 73 29) #26=#A(t (42) (common-lisp-user::slot-mask->names ext::location (defun common-lisp-user::slot-mask->names) (#1# . 34437) ext::annotate :lambda-list (common-lisp-user::slot-mask) common-lisp-user::slot-mask common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::it common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info integer-length common-lisp-user::res common-lisp-user::len common-lisp-user::act-r-chunk-type-info-size <= si::%dotimes-var common-lisp-user::i logbitp common-lisp-user::act-r-chunk-type-info-index->slot aref #:g825 nconc 1+ < *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~s is not a valid slot mask in the current model." format finish-output "Chunk-type info not available so slot names for the mask ~s cannot be found." "Chunk-type info not available so slot names for the mask ~s cannot be found." #Y(common-lisp-user::slot-mask->names nil nil (24 45 7 26 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 10 45 11 10 0 39 191 13 0 19 1 12 45 13 10 0 39 135 10 2 16 14 12 77 46 15 46 16 13 0 13 2 19 1 17 12 19 2 18 39 67 10 0 45 19 8 0 45 20 38 41 13 0 10 6 17 21 39 27 13 4 19 1 22 12 13 0 19 2 23 6 1 45 24 13 4 13 0 19 2 25 51 4 43 1 10 0 16 26 51 0 13 0 13 1 19 2 27 40 -48 10 3 73 43 2 38 42 14 28 15 29 19 0 30 73 39 12 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 13 4 19 6 36 12 14 28 19 1 37 22 73 43 2 38 42 14 28 15 29 19 0 30 73 39 12 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 38 13 2 19 6 36 12 14 28 19 1 37 22 73 43 1 38 42 14 28 15 29 19 0 30 73 39 12 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 39 13 1 19 6 36 12 14 28 19 1 37 22 73 43 1 29) #26# #1# 34437) si::fset)) #1# 34437) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #27=#A(t (24) (common-lisp-user::all-chunk-type-names ext::location (defun common-lisp-user::all-chunk-type-names) (#1# . 35226) ext::annotate :lambda-list common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #3# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "all-chunk-type-names called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "all-chunk-type-names called with no current model." common-lisp-user::act-r-model-chunk-types-info common-lisp-user::act-r-chunk-type-info-types #Y(common-lisp-user::all-chunk-type-names nil nil (26 14 6 19 1 7 76 39 42 14 8 15 9 19 0 10 73 39 12 19 0 11 16 12 12 9 1 19 2 13 12 19 0 14 12 15 15 19 5 16 12 14 8 19 1 17 22 73 38 79 14 6 19 1 7 12 19 1 18 76 39 42 14 8 15 9 19 0 10 73 39 12 19 0 11 16 12 12 9 1 19 2 13 12 19 0 14 12 15 19 19 5 16 12 14 8 19 1 17 22 73 38 26 14 6 19 1 7 73 39 10 14 6 19 1 7 12 19 1 18 12 19 1 20 12 19 1 21 29) #27# #1# 35226) si::fset)) #1# 35226))
