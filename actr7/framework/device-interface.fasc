(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function nil t) common-lisp-user::unlock-tracking) proclaim)) #1=#P"C:/Users/Son Pham/Desktop/actr7/framework/device-interface.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::populate-loc-to-key-array) proclaim)) #1# 13626) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::xy-loc) proclaim)) #1# 13687) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::current-marker) proclaim)) #1# 13731) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::record-vis-loc-slots) proclaim)) #1# 13781) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 5 8 72 52 0 15 0 15 3 15 4 15 5 19 4 6 1 7 16 1 1 7 16 2 76 39 5 8 72 52 7 15 7 15 3 15 8 15 9 19 4 6 1 7 73 29) #A(t (10) (common-lisp-user::*pixels-per-inch-x* si::*make-special boundp ext::location (defvar common-lisp-user::*pixels-per-inch-x*) (#1# . 13839) ext::annotate common-lisp-user::*pixels-per-inch-y* (defvar common-lisp-user::*pixels-per-inch-y*) (#1# . 13839))) #1# 13839) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 15 0 15 10 15 11 19 3 12 1 0 73 29) #2=#A(t (13) (common-lisp-user::current-device-interface ext::location (defun common-lisp-user::current-device-interface) (#1# . 13990) ext::annotate :lambda-list :device common-lisp-user::get-module-fct #Y(common-lisp-user::current-device-interface nil nil (26 15 6 19 1 7 12 72 1 29) #2# #1# 13990) si::fset function "Return the device-interface for current model in the current meta-process" si::set-documentation)) #1# 13990) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 15 0 15 36 15 37 19 3 38 1 0 73 29) #3=#A(t (39) (common-lisp-user::install-device ext::location (defun common-lisp-user::install-device) (#1# . 14503) ext::annotate :lambda-list (common-lisp-user::device) common-lisp-user::device common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #4="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "install-device called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "install-device called with no current model." common-lisp-user::current-device-interface common-lisp-user::devin common-lisp-user::show-focus-p common-lisp-user::device-update-attended-loc :vision common-lisp-user::get-module-fct common-lisp-user::vis-m common-lisp-user::vis-loc-coordinate-slots common-lisp-user::record-vis-loc-slots #:g3974 #:g3975 (setf common-lisp-user::device) #Y(common-lisp-user::install-device nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 122 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 69 19 0 22 45 23 13 0 19 1 24 39 11 13 0 19 1 7 12 77 19 2 25 15 26 19 1 27 45 28 10 0 39 12 13 0 13 2 19 1 29 12 19 2 30 43 1 10 0 45 31 10 2 45 32 13 0 13 1 33 33 18 2 43 1 43 1 43 1 29) #3# #1# 14503) si::fset function "Set the device with which a model will interact" si::set-documentation)) #1# 14503) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 22 12 19 2 23 15 0 15 24 15 25 19 3 26 1 0 73 29) #5=#A(t (27) (common-lisp-user::current-device ext::location (defun common-lisp-user::current-device) (#1# . 15249) ext::annotate :lambda-list common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "current-device called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "current-device called with no current model." common-lisp-user::current-device-interface common-lisp-user::device #Y(common-lisp-user::current-device nil nil (26 14 6 19 1 7 76 39 42 14 8 15 9 19 0 10 73 39 12 19 0 11 16 12 12 9 1 19 2 13 12 19 0 14 12 15 15 19 5 16 12 14 8 19 1 17 22 73 38 61 14 6 19 1 7 12 19 1 18 76 39 42 14 8 15 9 19 0 10 73 39 12 19 0 11 16 12 12 9 1 19 2 13 12 19 0 14 12 15 19 19 5 16 12 14 8 19 1 17 22 73 38 8 19 0 20 12 19 1 21 29) #5# #1# 15249) si::fset function "Return the device for the current model in the current meta-process" si::set-documentation)) #1# 15249) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 15 0 15 30 15 31 19 3 32 1 0 73 29) #6=#A(t (33) (common-lisp-user::proc-display ext::location (defun common-lisp-user::proc-display) (#1# . 15546) ext::annotate :lambda-list (&key common-lisp-user::clear) (nil :clear) common-lisp-user::clear common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "proc-display called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "proc-display called with no current model." common-lisp-user::current-device-interface :vision common-lisp-user::get-module-fct common-lisp-user::process-display "No device interface available to process" #Y(common-lisp-user::proc-display nil nil (28 7 22 40 2 77 46 8 14 9 19 1 10 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 18 19 5 19 12 14 11 19 1 20 22 73 38 115 14 9 19 1 10 12 19 1 21 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 22 19 5 19 12 14 11 19 1 20 22 73 38 62 19 0 23 39 18 19 0 23 12 15 24 19 1 25 12 13 0 19 3 26 38 40 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 27 19 5 19 12 14 11 19 1 20 22 73 29) #6# #1# 15546) si::fset function "Processes the current display." si::set-documentation)) #1# 15546) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*model-generated-action* si::*make-special boundp ext::location (defvar common-lisp-user::*model-generated-action*) (#1# . 15951) ext::annotate)) #1# 15951) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 1 19 4 17 1 0 73 29) #7=#A(t (18) (common-lisp-user::indicate-model-generated ext::location (defmacro common-lisp-user::indicate-model-generated) (#1# . 16354) ext::annotate :lambda-list (&body common-lisp-user::body) #:g3977 #:g3976 #:g3978 common-lisp-user::body unwind-protect progn (setf common-lisp-user::*model-generated-action* (common-lisp-user::current-model)) (setf common-lisp-user::*model-generated-action* nil) #Y(common-lisp-user::indicate-model-generated nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 15 13 10 0 7 3 12 1 14 6 3 73 29) #7# #1# 16354) t si::fset)) #1# 16354) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 7 12 19 2 8 1 0 73 29) #8=#A(t (9) (common-lisp-user::model-generated-action ext::location (defun common-lisp-user::model-generated-action) (#1# . 16554) ext::annotate :lambda-list common-lisp-user::*model-generated-action* #Y(common-lisp-user::model-generated-action nil nil (26 11 6 73 29) #8# #1# 16554) si::fset)) #1# 16554) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 15 0 15 13 15 14 19 3 15 1 0 73 29) #9=#A(t (16) (common-lisp-user::pm-pixels-to-angle ext::location (defun common-lisp-user::pm-pixels-to-angle) (#1# . 16616) ext::annotate :lambda-list (common-lisp-user::pixels &optional common-lisp-user::dist) common-lisp-user::pixels common-lisp-user::dist common-lisp-user::current-device-interface common-lisp-user::pixels->angle-mth #Y(common-lisp-user::pm-pixels-to-angle nil nil (24 45 7 25 40 2 77 46 8 26 19 0 9 12 13 1 13 0 19 3 10 29) #9# #1# 16616) si::fset function "Convert <pixels> to degress of visual angle." si::set-documentation)) #1# 16616) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 15 0 15 13 15 14 19 3 15 1 0 73 29) #10=#A(t (16) (common-lisp-user::pm-angle-to-pixels ext::location (defun common-lisp-user::pm-angle-to-pixels) (#1# . 16885) ext::annotate :lambda-list (common-lisp-user::angle &optional common-lisp-user::dist) common-lisp-user::angle common-lisp-user::dist common-lisp-user::current-device-interface common-lisp-user::angle->pixels-mth #Y(common-lisp-user::pm-angle-to-pixels nil nil (24 45 7 25 40 2 77 46 8 26 19 0 9 12 13 1 13 0 19 3 10 29) #10# #1# 16885) si::fset function "Convert visual <angle> in degress to pixels." si::set-documentation)) #1# 16885) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 14 5 1 11 12 1 12 7 3 12 15 13 15 14 15 15 15 16 14 5 1 19 12 1 20 7 3 12 15 21 15 22 15 23 15 24 15 25 15 26 15 27 15 28 15 29 15 30 15 31 15 32 15 33 15 34 15 35 1 36 6 22 12 77 19 4 37 29) #11=#A(t (38) (common-lisp-user::device-interface ext::location (defclass common-lisp-user::device-interface) (#1# . 17046) ext::annotate :initfunction common-lisp-user::*pixels-per-inch-x* common-lisp-user::*pixels-per-inch-y* + #12=2.0 / #Y(nil nil nil (26 14 6 14 7 19 2 8 12 15 9 19 2 10 29) #11# #1# 17046) (:initform (/ (+ common-lisp-user::*pixels-per-inch-x* common-lisp-user::*pixels-per-inch-y*) #12#) :initargs (:ppi) :writers ((setf common-lisp-user::ppi)) :readers (common-lisp-user::ppi) :name common-lisp-user::pixels-per-inch) (:initform 15.0 :writers ((setf common-lisp-user::viewing-distance)) :readers (common-lisp-user::viewing-distance) :name common-lisp-user::viewing-distance) (:initform nil :writers ((setf common-lisp-user::device)) :readers (common-lisp-user::device) :name common-lisp-user::device) (:initform 0.01 :writers ((setf common-lisp-user::key-closure-time)) :readers (common-lisp-user::key-closure-time) :name common-lisp-user::key-closure-time) (:initform 0.1 :writers ((setf common-lisp-user::microphone-delay)) :readers (common-lisp-user::microphone-delay) :name common-lisp-user::microphone-delay) common-lisp-user::virtual-keyboard make-instance #Y(nil nil nil (26 15 17 19 1 18 29) #11# #1# 17046) (:initform (make-instance 'common-lisp-user::virtual-keyboard) :writers ((setf common-lisp-user::keyboard)) :readers (common-lisp-user::keyboard) :name common-lisp-user::keyboard) (:initform nil :writers ((setf common-lisp-user::with-cursor-p)) :readers (common-lisp-user::with-cursor-p) :name common-lisp-user::with-cursor-p) (:initform nil :writers ((setf common-lisp-user::input-q)) :readers (common-lisp-user::input-q) :name common-lisp-user::input-q) (:initform 0.1 :writers ((setf common-lisp-user::mouse-fitts-coeff)) :readers (common-lisp-user::mouse-fitts-coeff) :name common-lisp-user::mouse-fitts-coeff) (:initform nil :initargs (:show-focus-p) :writers ((setf common-lisp-user::show-focus-p)) :readers (common-lisp-user::show-focus-p) :name common-lisp-user::show-focus-p) (:initform nil :initargs (:trace-mouse-p) :writers ((setf common-lisp-user::trace-mouse-p)) :readers (common-lisp-user::trace-mouse-p) :name common-lisp-user::trace-mouse-p) (:initform nil :initargs (:mouse-trace) :writers ((setf common-lisp-user::mouse-trace)) :readers (common-lisp-user::mouse-trace) :name common-lisp-user::mouse-trace) (:initform t :initargs (:needs-mouse-p) :writers ((setf common-lisp-user::needs-mouse-p)) :readers (common-lisp-user::needs-mouse-p) :name common-lisp-user::needs-mouse-p) (:initform #A(t (2) (0 0)) :initargs (:true-cursor-loc) :writers ((setf common-lisp-user::true-cursor-loc)) :readers (common-lisp-user::true-cursor-loc) :name common-lisp-user::true-cursor-loc) (:initform 0 :writers ((setf common-lisp-user::locks)) :readers (common-lisp-user::locks) :name common-lisp-user::locks) (:initform nil :writers ((setf common-lisp-user::pending-procs)) :readers (common-lisp-user::pending-procs) :name common-lisp-user::pending-procs) (:initform nil :writers ((setf common-lisp-user::virtual-trace)) :readers (common-lisp-user::virtual-trace) :name common-lisp-user::virtual-trace) (:initform "1.2" :initargs (:version-string) :writers ((setf common-lisp-user::version-string)) :readers (common-lisp-user::version-string) :name common-lisp-user::version-string) (:initform t :initargs (:stable-names) :writers ((setf common-lisp-user::stable-names)) :readers (common-lisp-user::stable-names) :name common-lisp-user::stable-names) (:initform nil :writers ((setf common-lisp-user::last-visual-marker)) :readers (common-lisp-user::last-visual-marker) :name common-lisp-user::last-visual-marker) (:initform nil :writers ((setf common-lisp-user::visual-fixation)) :readers (common-lisp-user::visual-fixation) :name common-lisp-user::visual-fixation) (:initform nil :writers ((setf common-lisp-user::last-processed-device)) :readers (common-lisp-user::last-processed-device) :name common-lisp-user::last-processed-device) clos::load-defclass)) #1# 17046) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #13=#A(t (12) (common-lisp-user::my-name ext::location (defmethod common-lisp-user::my-name (mod common-lisp-user::device-interface)) (#1# . 18845) ext::annotate (common-lisp-user::device-interface) (mod) mod :device #Y(common-lisp-user::my-name nil nil (24 45 7 26 11 8 73 29) #13# #1# 18845) t clos::install-method)) #1# 18845) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::angle->pixels-mth ext::location (defgeneric common-lisp-user::angle->pixels-mth) (#1# . 18902) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::angle &optional common-lisp-user::dist) :delete-methods t :documentation "Determine the number of pixels subtending a visual angle." ensure-generic-function)) #1# 18902) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 18 12 14 19 19 6 20 29) #14=#A(t (21) (common-lisp-user::angle->pixels-mth ext::location (defmethod common-lisp-user::angle->pixels-mth (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::angle number) &optional common-lisp-user::dist) (#1# . 19043) ext::annotate (common-lisp-user::device-interface number) (common-lisp-user::devin common-lisp-user::angle &optional common-lisp-user::dist) common-lisp-user::devin common-lisp-user::angle common-lisp-user::dist numberp / common-lisp-user::deg->rad tan * round common-lisp-user::viewing-distance common-lisp-user::ppi #Y(common-lisp-user::angle->pixels-mth nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 10 0 16 10 39 28 9 2 13 0 13 1 9 2 19 2 11 12 19 1 12 16 13 12 19 3 14 12 19 1 15 38 36 9 2 13 2 19 1 16 12 13 2 19 1 17 12 13 1 9 2 19 2 11 12 19 1 12 16 13 12 19 4 14 12 19 1 15 29) #14# #1# 19043) t clos::install-method)) #1# 19043) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::pixels->angle-mth ext::location (defgeneric common-lisp-user::pixels->angle-mth) (#1# . 19291) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::pixels &optional common-lisp-user::dist) :delete-methods t :documentation "Determine the amount of visual angle subtended by <pixels>." ensure-generic-function)) #1# 19291) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 17 12 14 18 19 6 19 29) #15=#A(t (20) (common-lisp-user::pixels->angle-mth ext::location (defmethod common-lisp-user::pixels->angle-mth (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::pixels number) &optional common-lisp-user::dist) (#1# . 19436) ext::annotate (common-lisp-user::device-interface number) (common-lisp-user::devin common-lisp-user::pixels &optional common-lisp-user::dist) common-lisp-user::devin common-lisp-user::pixels common-lisp-user::dist numberp / atan * common-lisp-user::rad->deg common-lisp-user::ppi common-lisp-user::viewing-distance #Y(common-lisp-user::pixels->angle-mth nil nil (24 45 7 24 45 8 25 40 2 77 46 9 26 10 0 16 10 39 26 9 2 13 1 9 2 19 2 11 12 13 0 19 2 12 12 19 2 13 12 19 1 14 38 38 9 2 13 1 9 2 19 2 11 12 13 2 19 1 15 12 13 2 19 1 16 12 19 2 13 12 19 2 12 12 19 2 13 12 19 1 14 29) #15# #1# 19436) t clos::install-method)) #1# 19436) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::find-viewing-dist-mth ext::location (defgeneric common-lisp-user::find-viewing-dist-mth) (#1# . 19677) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::angle common-lisp-user::pixels &optional common-lisp-user::in-pixels) :delete-methods t :documentation "Given the number of pixels an angle subtends, what's the viewing distance?" ensure-generic-function)) #1# 19677) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 17 12 14 18 19 6 19 29) #16=#A(t (20) (common-lisp-user::find-viewing-dist-mth ext::location (defmethod common-lisp-user::find-viewing-dist-mth (common-lisp-user::devin common-lisp-user::device-interface) common-lisp-user::angle common-lisp-user::pixels &optional common-lisp-user::in-pixels) (#1# . 19852) ext::annotate (common-lisp-user::device-interface t t) (common-lisp-user::devin common-lisp-user::angle common-lisp-user::pixels &optional common-lisp-user::in-pixels) common-lisp-user::devin common-lisp-user::angle common-lisp-user::pixels common-lisp-user::in-pixels / common-lisp-user::deg->rad tan floor common-lisp-user::ppi * #Y(common-lisp-user::find-viewing-dist-mth nil nil (24 45 7 24 45 8 24 45 9 25 40 2 77 46 10 26 10 0 39 28 13 1 9 2 19 2 11 12 13 2 9 2 19 2 11 12 19 1 12 16 13 12 19 2 14 38 36 13 1 9 2 19 2 11 12 13 2 9 2 19 2 11 12 19 1 12 16 13 12 13 3 19 1 15 12 19 2 16 12 19 2 14 29) #16# #1# 19852) t clos::install-method)) #1# 19852) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #17=#A(t (21) (common-lisp-user::visual-fixation-marker ext::location (defun common-lisp-user::visual-fixation-marker) (#1# . 20090) ext::annotate :lambda-list common-lisp-user::current-device-interface common-lisp-user::it common-lisp-user::visual-fixation *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No current device interface to return a visual-fixation-marker." format finish-output #Y(common-lisp-user::visual-fixation-marker nil nil (26 19 0 6 45 7 10 0 39 8 13 0 19 1 8 38 40 14 9 15 10 19 0 11 73 39 12 19 0 12 16 13 12 9 1 19 2 14 12 19 0 15 12 15 16 19 5 17 12 14 9 19 1 18 22 73 43 1 29) #17# #1# 20090) si::fset)) #1# 20090) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 19 2 24 1 0 73 29) #18=#A(t (25) (common-lisp-user::set-visual-fixation-marker ext::location (defun common-lisp-user::set-visual-fixation-marker) (#1# . 20389) ext::annotate :lambda-list (common-lisp-user::val) common-lisp-user::val common-lisp-user::current-device-interface common-lisp-user::it #:g3981 #:g3982 (setf common-lisp-user::visual-fixation) *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No current device interface to return a visual-fixation-marker." format finish-output #Y(common-lisp-user::set-visual-fixation-marker nil nil (24 45 7 26 19 0 8 45 9 10 0 39 23 10 0 45 10 10 2 45 11 13 0 13 1 33 12 18 2 43 1 43 1 38 40 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 12 14 13 19 1 22 22 73 43 1 29) #18# #1# 20389) si::fset)) #1# 20389) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 9 1 19 3 6 1 0 73 29) #A(t (7) (common-lisp-user::visual-fixation-marker ext::location (defsetf common-lisp-user::visual-fixation-marker) (#1# . 20594) ext::annotate common-lisp-user::set-visual-fixation-marker si::do-defsetf)) #1# 20594) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 29 12 14 30 19 6 31 29) #19=#A(t (32) (common-lisp-user::reset-device ext::location (defmethod common-lisp-user::reset-device (common-lisp-user::devin common-lisp-user::device-interface)) (#1# . 20655) ext::annotate (common-lisp-user::device-interface) (common-lisp-user::devin) common-lisp-user::devin #:g4026 #:g4027 (setf common-lisp-user::input-q) #:g4028 #:g4029 (setf common-lisp-user::mouse-trace) #:g4030 #:g4031 (setf common-lisp-user::locks) #:g4032 #:g4033 (setf common-lisp-user::pending-procs) #:g4034 #:g4035 (setf common-lisp-user::device) #:g4036 #:g4037 (setf common-lisp-user::last-visual-marker) #:g4038 #:g4039 (setf common-lisp-user::last-processed-device) #Y(common-lisp-user::reset-device nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 10 0 45 11 75 45 12 13 0 13 1 33 13 18 2 43 1 43 1 10 0 45 14 8 0 45 15 13 0 13 1 33 16 18 2 43 1 43 1 10 0 45 17 75 45 18 13 0 13 1 33 19 18 2 43 1 43 1 10 0 45 20 75 45 21 13 0 13 1 33 22 18 2 43 1 43 1 10 0 45 23 77 75 3 45 24 13 0 13 1 33 25 18 2 43 1 43 1 10 0 45 26 75 45 27 13 0 13 1 33 28 18 2 43 1 43 1 29) #19# #1# 20655) t clos::install-method)) #1# 20655) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::update-device ext::location (defgeneric common-lisp-user::update-device) (#1# . 21185) ext::annotate :lambda-list (common-lisp-user::devin time) :delete-methods t :documentation "Update the device at <time>." ensure-generic-function)) #1# 21185) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 28 12 14 23 19 6 29 29) #20=#A(t (30) (common-lisp-user::update-device ext::location (defmethod common-lisp-user::update-device (common-lisp-user::devin common-lisp-user::device-interface) time) (#1# . 21277) ext::annotate (common-lisp-user::device-interface t) (common-lisp-user::devin time) common-lisp-user::devin time common-lisp-user::show-focus-p :vision common-lisp-user::get-module-fct common-lisp-user::vis-m common-lisp-user::current-marker common-lisp-user::last-visual-marker common-lisp-user::past-marker common-lisp-user::past-marker-exists common-lisp-user::marker eq common-lisp-user::device common-lisp-user::xy-loc common-lisp-user::device-update-attended-loc #:g4046 t #:g4047 (setf common-lisp-user::last-visual-marker) common-lisp-user::synch-mouse common-lisp-user::device-update #Y(common-lisp-user::update-device nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 111 15 10 19 1 11 45 12 10 0 39 98 13 0 19 1 13 12 13 2 19 1 14 4 12 13 2 19 1 14 5 12 46 15 46 16 46 17 10 1 39 7 13 0 10 2 17 18 76 39 57 10 0 39 20 13 5 19 1 19 12 13 0 13 3 19 2 20 12 19 2 21 38 11 13 5 19 1 19 12 77 19 2 21 10 5 45 22 14 23 10 1 3 45 24 13 0 13 1 33 25 18 2 43 1 43 1 43 3 43 1 13 1 19 1 26 13 1 19 1 19 12 13 0 19 2 27 29) #20# #1# 21277) clos::install-method)) #1# 21277) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::device-update-attended-loc ext::location (defgeneric common-lisp-user::device-update-attended-loc) (#1# . 22174) ext::annotate :lambda-list (common-lisp-user::device common-lisp-user::xyloc) :delete-methods t :documentation "Tell the device to update the attended location, which is passed in." ensure-generic-function)) #1# 22174) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #21=#A(t (12) (common-lisp-user::device-update-attended-loc ext::location (defmethod common-lisp-user::device-update-attended-loc common-lisp-user::device common-lisp-user::xyloc) (#1# . 22322) ext::annotate (t t) (common-lisp-user::device common-lisp-user::xyloc) common-lisp-user::device common-lisp-user::xyloc #Y(common-lisp-user::device-update-attended-loc nil nil (24 45 7 24 45 8 26 75 73 29) #21# #1# 22322) t clos::install-method)) #1# 22322) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::device-update ext::location (defgeneric common-lisp-user::device-update) (#1# . 22417) ext::annotate :lambda-list (common-lisp-user::device time) :delete-methods t :documentation "Update the device at <time>.  A method should be defined for this if the device is dynamic." ensure-generic-function)) #1# 22417) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #22=#A(t (12) (common-lisp-user::device-update ext::location (defmethod common-lisp-user::device-update common-lisp-user::device time) (#1# . 22574) ext::annotate (t t) (common-lisp-user::device time) common-lisp-user::device time #Y(common-lisp-user::device-update nil nil (24 45 7 24 45 8 26 75 73 29) #22# #1# 22574) t clos::install-method)) #1# 22574) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 15 0 15 13 15 14 19 3 15 1 0 73 29) #23=#A(t (16) (common-lisp-user::update-device-module ext::location (defun common-lisp-user::update-device-module) (#1# . 22654) ext::annotate :lambda-list (common-lisp-user::device common-lisp-user::old-time common-lisp-user::new-time) common-lisp-user::device common-lisp-user::old-time common-lisp-user::new-time common-lisp-user::update-device #Y(common-lisp-user::update-device-module nil nil (24 45 7 24 45 8 24 45 9 26 13 2 13 0 19 2 10 29) #23# #1# 22654) si::fset function "Call the device's update-device method with the new time" si::set-documentation)) #1# 22654) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 55 12 19 2 56 1 0 73 29) #24=#A(t (57) (common-lisp-user::params-device-module ext::location (defun common-lisp-user::params-device-module) (#1# . 22952) ext::annotate :lambda-list (common-lisp-user::device common-lisp-user::param) common-lisp-user::device common-lisp-user::param consp :pixels-per-inch #:g4066 #:g4067 (setf common-lisp-user::ppi) :process-cursor #:g4068 #:g4069 (setf common-lisp-user::with-cursor-p) :show-focus #:g4070 #:g4071 (setf common-lisp-user::show-focus-p) :viewing-distance #:g4072 #:g4073 (setf common-lisp-user::viewing-distance) :mouse-fitts-coeff #:g4074 #:g4075 (setf common-lisp-user::mouse-fitts-coeff) :needs-mouse #:g4076 #:g4077 (setf common-lisp-user::needs-mouse-p) :vwt #:g4078 #:g4079 (setf common-lisp-user::virtual-trace) :stable-loc-names #:g4080 #:g4081 (setf common-lisp-user::stable-names) :trace-mouse #:g4082 #:g4083 (setf common-lisp-user::trace-mouse-p) common-lisp-user::ppi common-lisp-user::with-cursor-p common-lisp-user::show-focus-p common-lisp-user::viewing-distance common-lisp-user::mouse-fitts-coeff common-lisp-user::needs-mouse-p common-lisp-user::virtual-trace common-lisp-user::stable-names common-lisp-user::trace-mouse-p #Y(common-lisp-user::params-device-module nil nil (24 45 7 24 45 8 26 10 0 16 9 39 242 10 0 4 42 10 24 10 1 45 11 10 1 5 45 12 13 0 13 1 33 13 18 2 43 1 43 1 38 211 42 14 24 10 1 45 15 10 1 5 45 16 13 0 13 1 33 17 18 2 43 1 43 1 38 185 42 18 24 10 1 45 19 10 1 5 45 20 13 0 13 1 33 21 18 2 43 1 43 1 38 159 42 22 24 10 1 45 23 10 1 5 45 24 13 0 13 1 33 25 18 2 43 1 43 1 38 133 42 26 24 10 1 45 27 10 1 5 45 28 13 0 13 1 33 29 18 2 43 1 43 1 38 107 42 30 24 10 1 45 31 10 1 5 45 32 13 0 13 1 33 33 18 2 43 1 43 1 38 81 42 34 24 10 1 45 35 10 1 5 45 36 13 0 13 1 33 37 18 2 43 1 43 1 38 55 42 38 24 10 1 45 39 10 1 5 45 40 13 0 13 1 33 41 18 2 43 1 43 1 38 29 42 42 24 10 1 45 43 10 1 5 45 44 13 0 13 1 33 45 18 2 43 1 43 1 38 3 75 73 38 95 10 0 42 10 8 13 1 19 1 46 38 83 42 14 8 13 1 19 1 47 38 73 42 18 8 13 1 19 1 48 38 63 42 22 8 13 1 19 1 49 38 53 42 26 8 13 1 19 1 50 38 43 42 30 8 13 1 19 1 51 38 33 42 34 8 13 1 19 1 52 38 23 42 38 8 13 1 19 1 53 38 13 42 42 8 13 1 19 1 54 38 3 75 73 29) #24# #1# 22952) si::fset)) #1# 22952) #Y(si::bytecodes nil nil (14 0 77 14 1 14 2 33 3 12 14 4 15 5 14 6 15 7 14 8 15 9 19 9 10 12 14 11 14 2 33 12 12 14 4 77 14 6 15 13 14 8 15 14 19 9 10 12 14 15 14 2 1 19 12 14 4 77 14 6 15 20 14 8 15 21 19 9 10 12 14 22 14 2 33 3 12 14 4 15 23 14 6 15 24 14 8 15 25 19 9 10 12 14 26 14 2 33 27 12 14 4 15 28 14 6 15 29 14 8 15 30 19 9 10 12 14 31 14 2 33 12 12 14 4 14 32 14 6 15 33 14 8 15 34 19 9 10 12 14 35 14 2 33 12 12 14 4 77 14 6 15 36 14 8 15 37 19 9 10 12 14 38 14 2 33 12 12 14 4 14 32 14 6 15 39 14 8 15 40 19 9 10 12 14 41 14 2 33 12 12 14 4 14 32 14 6 15 42 14 8 15 43 19 9 10 6 9 12 14 44 15 45 14 8 15 46 14 47 1 50 12 14 51 33 52 12 14 53 33 54 12 14 55 33 56 12 19 15 57 29) #25=#A(t (58) (:device :pixels-per-inch :valid-test common-lisp-user::posnum :default-value 72.0 :warning "a non-negative number" :documentation "Pixels per inch of display" common-lisp-user::define-parameter :process-cursor common-lisp-user::tornil "T or NIL" "Should there be a visicon feature for the cursor?" :show-focus common-lisp-user::x symbolp stringp #Y(nil nil nil (24 45 16 26 13 0 19 1 12 73 40 12 10 0 16 17 73 40 5 10 0 16 18 29) #25# #1# 24186) "T, NIL, a symbol, or string" "Show the focus ring on the GUI?  T, a string, or symbol will enable, and some devices will use the value to indicate a color." :viewing-distance 15.0 "a non-negative number" "Distance of the eyes from the display, in inches." :mouse-fitts-coeff common-lisp-user::nonneg 0.1 "a non-negative number" "b coefficient in Fitts's equation for aimed movements." :needs-mouse t "T or NIL" "Does ACT-R control the mouse?" :vwt "T or NIL" "Virtual Window trace controls the << ... >> outputs from virtual windows" :stable-loc-names "T or NIL" "Whether or not to sort the virtual window's subviews to guarantee the names always line up" :trace-mouse "T or NIL" "Whether or not to record all mouse position data" :version "2.1" "The device interface for a model" :creation common-lisp-user::device-interface make-instance #Y(nil nil nil (24 45 16 26 15 48 19 1 49 29) #25# #1# 24186) :reset common-lisp-user::reset-device :params common-lisp-user::params-device-module :update common-lisp-user::update-device-module common-lisp-user::define-module-fct)) #1# 24186) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::process-display ext::location (defgeneric common-lisp-user::process-display) (#1# . 26553) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::vis-mod &optional common-lisp-user::clear) :delete-methods t :documentation "Rebuild the Vision Module's icon based on the current display." ensure-generic-function)) #1# 26553) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::synch-mouse ext::location (defgeneric common-lisp-user::synch-mouse) (#1# . 27490) ext::annotate :lambda-list (common-lisp-user::devin &optional common-lisp-user::model-generated) :delete-methods t :documentation "Make sure everyone agress on the current cursor position." ensure-generic-function)) #1# 27490) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 21 12 14 22 19 6 23 29) #26=#A(t (24) (common-lisp-user::synch-mouse ext::location (defmethod common-lisp-user::synch-mouse (common-lisp-user::devin common-lisp-user::device-interface) &optional common-lisp-user::model-generated) (#1# . 27630) ext::annotate (common-lisp-user::device-interface) (common-lisp-user::devin &optional common-lisp-user::model-generated) common-lisp-user::devin common-lisp-user::model-generated common-lisp-user::device common-lisp-user::needs-mouse-p common-lisp-user::true-cursor-loc common-lisp-user::get-mouse-coordinates common-lisp-user::vpt= common-lisp-user::current-model common-lisp-user::*model-generated-action* common-lisp-user::device-move-cursor-to :vision common-lisp-user::get-module-fct common-lisp-user::vis-m common-lisp-user::update-cursor-feat #Y(common-lisp-user::synch-mouse nil nil (24 45 7 25 40 2 77 46 8 26 13 1 19 1 9 39 28 13 1 19 1 10 39 21 13 1 19 1 11 12 13 1 19 1 9 12 19 1 12 12 19 2 13 76 39 49 10 0 39 30 64 22 19 0 14 52 15 13 1 19 1 9 12 13 1 19 1 11 12 19 2 16 65 75 52 15 66 38 16 13 1 19 1 9 12 13 1 19 1 11 12 19 2 16 15 17 19 1 18 45 19 10 0 73 39 8 13 2 13 0 19 2 20 43 1 29) #26# #1# 27630) t clos::install-method)) #1# 27630) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::update-cursor-feat ext::location (defgeneric common-lisp-user::update-cursor-feat) (#1# . 28183) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::vis-mod) :delete-methods t :documentation "Updates the feature in the icon with the current cursor position." ensure-generic-function)) #1# 28183) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::key->cmd ext::location (defgeneric common-lisp-user::key->cmd) (#1# . 28321) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::key) :delete-methods t :documentation "Given a key, return the appropriate Motor Module command to type it." ensure-generic-function)) #1# 28321) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #27=#A(t (14) (common-lisp-user::key->cmd ext::location (defmethod common-lisp-user::key->cmd (common-lisp-user::devin common-lisp-user::device-interface) common-lisp-user::key) (#1# . 28447) ext::annotate (common-lisp-user::device-interface t) (common-lisp-user::devin common-lisp-user::key) common-lisp-user::devin common-lisp-user::key common-lisp-user::keyboard common-lisp-user::key-to-command #Y(common-lisp-user::key->cmd nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 2 10 29) #27# #1# 28447) t clos::install-method)) #1# 28447) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-mouse-coordinates ext::location (defgeneric common-lisp-user::get-mouse-coordinates) (#1# . 28540) ext::annotate :lambda-list (common-lisp-user::device) :delete-methods t :documentation "Return the mouse coordinates in #(x y) form." ensure-generic-function)) #1# 28540) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 10 12 14 11 19 6 12 29) #28=#A(t (13) (common-lisp-user::get-mouse-coordinates ext::location (defmethod common-lisp-user::get-mouse-coordinates common-lisp-user::device) (#1# . 28768) ext::annotate (t) (common-lisp-user::device) common-lisp-user::device "No method defined for GET-MOUSE-COORDINATES on object ~S." error #Y(common-lisp-user::get-mouse-coordinates nil nil (24 45 7 26 15 8 13 0 19 2 9 29) #28# #1# 28768) t clos::install-method)) #1# 28768) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::build-vis-locs-for ext::location (defgeneric common-lisp-user::build-vis-locs-for) (#1# . 28889) ext::annotate :lambda-list (common-lisp-user::obj common-lisp-user::vis-mod) :delete-methods t :documentation "Return a list of visual-location chunks for an object." ensure-generic-function)) #1# 28889) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 20 19 6 21 29) #29=#A(t (22) (common-lisp-user::build-vis-locs-for ext::location (defmethod common-lisp-user::build-vis-locs-for common-lisp-user::obj common-lisp-user::vis-mod) (#1# . 29013) ext::annotate (t t) (common-lisp-user::obj common-lisp-user::vis-mod) common-lisp-user::obj common-lisp-user::vis-mod *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No build-vis-locs-for defined on item ~s - no feature generated." format finish-output #Y(common-lisp-user::build-vis-locs-for nil nil (24 45 7 24 45 8 26 14 9 15 10 19 0 11 73 39 12 19 0 12 16 13 12 9 1 19 2 14 12 19 0 15 12 15 16 13 1 19 6 17 12 14 9 19 1 18 22 73 29) #29# #1# 29013) t clos::install-method)) #1# 29013) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::cursor-to-vis-loc ext::location (defgeneric common-lisp-user::cursor-to-vis-loc) (#1# . 29177) ext::annotate :lambda-list (common-lisp-user::device) :delete-methods t :documentation "Reaturn a visual-location chunk reprsenting the current cursor." ensure-generic-function)) #1# 29177) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 10 12 14 11 19 6 12 29) #30=#A(t (13) (common-lisp-user::cursor-to-vis-loc ext::location (defmethod common-lisp-user::cursor-to-vis-loc common-lisp-user::device) (#1# . 29304) ext::annotate (t) (common-lisp-user::device) common-lisp-user::device "No method definded for CURSOR-TO-VIS-LOC on object ~S." error #Y(common-lisp-user::cursor-to-vis-loc nil nil (24 45 7 26 15 8 13 0 19 2 9 29) #30# #1# 29304) t clos::install-method)) #1# 29304) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::vis-loc-coordinate-slots ext::location (defgeneric common-lisp-user::vis-loc-coordinate-slots) (#1# . 29418) ext::annotate :lambda-list (common-lisp-user::device) :delete-methods t :documentation "Return a list of the slots used to hold the x,y,z coordinates in a visual location chunk respectively." ensure-generic-function)) #1# 29418) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 9 12 14 10 19 6 11 29) #31=#A(t (12) (common-lisp-user::vis-loc-coordinate-slots ext::location (defmethod common-lisp-user::vis-loc-coordinate-slots common-lisp-user::device) (#1# . 29592) ext::annotate (t) (common-lisp-user::device) common-lisp-user::device (common-lisp-user::screen-x common-lisp-user::screen-y common-lisp-user::distance) #Y(common-lisp-user::vis-loc-coordinate-slots nil nil (24 45 7 26 1 8 73 29) #31# #1# 29592) t clos::install-method)) #1# 29592) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 24 12 14 25 19 6 26 29) #32=#A(t (27) (common-lisp-user::vis-loc-coordinate-slots ext::location (defmethod common-lisp-user::vis-loc-coordinate-slots :around common-lisp-user::device) (#1# . 29702) ext::annotate (:around) (t) (common-lisp-user::device) common-lisp-user::device call-next-method common-lisp-user::slots listp length = *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Invalid vis-loc-coordinate-slots result. It must return a three element list; using default." format finish-output (common-lisp-user::screen-x common-lisp-user::screen-y common-lisp-user::distance) #Y(common-lisp-user::vis-loc-coordinate-slots nil nil (24 45 8 26 19 0 9 45 10 10 0 16 11 39 11 10 0 16 12 12 9 3 19 2 13 39 6 10 0 73 38 40 14 14 15 15 19 0 16 73 39 12 19 0 17 16 12 12 9 1 19 2 18 12 19 0 19 12 15 20 19 5 21 14 14 19 1 22 1 23 73 43 1 29) #32# #1# 29702) t clos::install-method)) #1# 29702) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::output-key ext::location (defgeneric common-lisp-user::output-key) (#1# . 30060) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::keyloc) :delete-methods t :documentation "Request that the device register a key output for the key at a given location." ensure-generic-function)) #1# 30060) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 32 12 14 33 19 6 34 29) #33=#A(t (35) (common-lisp-user::output-key ext::location (defmethod common-lisp-user::output-key (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::keyloc vector)) (#1# . 30341) ext::annotate (common-lisp-user::device-interface vector) (common-lisp-user::devin common-lisp-user::keyloc) common-lisp-user::devin common-lisp-user::keyloc svref < > = common-lisp-user::invalid common-lisp-user::keyboard common-lisp-user::loc->key common-lisp-user::the-key common-lisp-user::current-model common-lisp-user::*model-generated-action* common-lisp-user::mouse eq common-lisp-user::device common-lisp-user::device-handle-click *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length "Invalid key location pressed ~s" format finish-output common-lisp-user::device-handle-keypress #Y(common-lisp-user::output-key nil nil (24 45 7 24 45 8 26 13 0 8 1 17 9 12 9 0 19 2 10 40 56 13 0 8 1 17 9 12 9 6 19 2 11 40 42 13 0 8 0 17 9 12 9 0 19 2 10 40 28 13 0 8 0 17 9 12 9 22 19 2 11 39 14 13 0 8 0 17 9 12 9 28 19 2 12 76 45 13 10 0 39 4 75 38 12 13 2 19 1 14 12 13 1 19 2 15 45 16 64 80 19 0 17 52 18 13 0 1 19 17 20 39 12 13 3 19 1 21 12 19 1 22 38 55 10 0 76 39 39 14 23 15 24 19 0 25 73 39 12 19 0 26 16 27 12 9 1 19 2 11 12 19 0 17 12 15 28 13 2 19 6 29 14 23 19 1 30 13 3 19 1 21 12 13 0 19 2 31 65 75 52 18 66 43 2 29) #33# #1# 30341) t clos::install-method)) #1# 30341) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::output-speech ext::location (defgeneric common-lisp-user::output-speech) (#1# . 31007) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::text) :delete-methods t :documentation "Requests that the device output the provided text as speech." ensure-generic-function)) #1# 31007) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #34=#A(t (14) (common-lisp-user::output-speech ext::location (defmethod common-lisp-user::output-speech (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::text string)) (#1# . 31132) ext::annotate (common-lisp-user::device-interface string) (common-lisp-user::devin common-lisp-user::text) common-lisp-user::devin common-lisp-user::text common-lisp-user::device common-lisp-user::device-speak-string #Y(common-lisp-user::output-speech nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 2 10 29) #34# #1# 31132) t clos::install-method)) #1# 31132) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::move-cursor-absolute ext::location (defgeneric common-lisp-user::move-cursor-absolute) (#1# . 31244) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::xyloc) :delete-methods t :documentation "Request that the device move the cursor to the absolute location <xyloc>." ensure-generic-function)) #1# 31244) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 25 12 14 23 19 6 26 29) #35=#A(t (27) (common-lisp-user::move-cursor-absolute ext::location (defmethod common-lisp-user::move-cursor-absolute (common-lisp-user::devin common-lisp-user::device-interface) common-lisp-user::xyloc) (#1# . 31390) ext::annotate (common-lisp-user::device-interface t) (common-lisp-user::devin common-lisp-user::xyloc) common-lisp-user::devin common-lisp-user::xyloc common-lisp-user::trace-mouse-p common-lisp-user::mp-time #:g4123 #:g4121 common-lisp-user::mouse-trace #:g4122 (setf common-lisp-user::mouse-trace) common-lisp-user::current-model common-lisp-user::*model-generated-action* common-lisp-user::device common-lisp-user::device-move-cursor-to #:g4126 #:g4127 (setf common-lisp-user::true-cursor-loc) t common-lisp-user::synch-mouse #Y(common-lisp-user::move-cursor-absolute nil nil (24 45 7 24 45 8 26 13 1 19 1 9 39 34 19 0 10 12 10 0 3 45 11 10 2 45 12 13 1 13 0 19 1 13 3 45 14 13 0 13 1 33 15 18 2 43 3 64 18 19 0 16 52 17 13 1 19 1 18 12 13 0 19 2 19 65 75 52 17 66 10 1 45 20 10 1 45 21 13 0 13 1 33 22 18 2 43 1 43 1 13 1 14 23 19 2 24 29) #35# #1# 31390) clos::install-method)) #1# 31390) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::move-cursor-polar ext::location (defgeneric common-lisp-user::move-cursor-polar) (#1# . 31683) ext::annotate :lambda-list (common-lisp-user::devin common-lisp-user::rtheta) :delete-methods t :documentation "Request that the device move the cursor by <r> in direction <theta>." ensure-generic-function)) #1# 31683) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 28 12 14 26 19 6 29 29) #36=#A(t (30) (common-lisp-user::move-cursor-polar ext::location (defmethod common-lisp-user::move-cursor-polar (common-lisp-user::devin common-lisp-user::device-interface) common-lisp-user::rtheta) (#1# . 31822) ext::annotate (common-lisp-user::device-interface t) (common-lisp-user::devin common-lisp-user::rtheta) common-lisp-user::devin common-lisp-user::rtheta common-lisp-user::device common-lisp-user::get-mouse-coordinates common-lisp-user::polar-move-xy common-lisp-user::newloc common-lisp-user::trace-mouse-p common-lisp-user::mp-time #:g4151 #:g4149 common-lisp-user::mouse-trace #:g4150 (setf common-lisp-user::mouse-trace) common-lisp-user::current-model common-lisp-user::*model-generated-action* common-lisp-user::device-move-cursor-to #:g4154 #:g4155 (setf common-lisp-user::true-cursor-loc) t common-lisp-user::synch-mouse #Y(common-lisp-user::move-cursor-polar nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 19 1 10 12 13 0 19 2 11 45 12 13 2 19 1 13 39 34 19 0 14 12 10 0 3 45 15 10 3 45 16 13 1 13 0 19 1 17 3 45 18 13 0 13 1 33 19 18 2 43 3 64 18 19 0 20 52 21 13 2 19 1 9 12 13 0 19 2 22 65 75 52 21 66 10 2 45 23 10 1 45 24 13 0 13 1 33 25 18 2 43 1 43 1 43 1 13 1 14 26 19 2 27 29) #36# #1# 31822) clos::install-method)) #1# 31822) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #37=#A(t (23) (common-lisp-user::get-mouse-trace ext::location (defun common-lisp-user::get-mouse-trace) (#1# . 32206) ext::annotate :lambda-list common-lisp-user::current-device-interface common-lisp-user::devin common-lisp-user::trace-mouse-p common-lisp-user::mouse-trace :mouse-trace-off *error-output* #4# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No device interface found for get-mouse-trace." format finish-output #Y(common-lisp-user::get-mouse-trace nil nil (26 19 0 6 45 7 10 0 39 6 13 0 19 1 8 39 8 13 0 19 1 9 38 49 10 0 39 6 11 10 73 38 40 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 18 19 5 19 12 14 11 19 1 20 22 73 43 1 29) #37# #1# 32206) si::fset)) #1# 32206) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::output-click ext::location (defgeneric common-lisp-user::output-click) (#1# . 32495) ext::annotate :lambda-list (common-lisp-user::devin) :delete-methods t :documentation "Output a mouse click to the device." ensure-generic-function)) #1# 32495) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #38=#A(t (15) (common-lisp-user::output-click ext::location (defmethod common-lisp-user::output-click (common-lisp-user::devin common-lisp-user::device-interface)) (#1# . 32588) ext::annotate (common-lisp-user::device-interface) (common-lisp-user::devin) common-lisp-user::devin common-lisp-user::current-model common-lisp-user::*model-generated-action* common-lisp-user::device common-lisp-user::device-handle-click #Y(common-lisp-user::output-click nil nil (24 45 7 26 64 16 19 0 8 52 9 13 0 19 1 10 12 19 1 11 65 75 52 9 66 29) #38# #1# 32588) t clos::install-method)) #1# 32588) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::device-handle-keypress ext::location (defgeneric common-lisp-user::device-handle-keypress) (#1# . 32710) ext::annotate :lambda-list (common-lisp-user::device common-lisp-user::key) :delete-methods t :documentation "Handle the press of the given key." ensure-generic-function)) #1# 32710) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #39=#A(t (14) (common-lisp-user::device-handle-keypress ext::location (defmethod common-lisp-user::device-handle-keypress common-lisp-user::device common-lisp-user::key) (#1# . 32933) ext::annotate (t t) (common-lisp-user::device common-lisp-user::key) common-lisp-user::device common-lisp-user::key "No method defined for DEVICE-HANDLE-KEYPRESS for object ~S." error #Y(common-lisp-user::device-handle-keypress nil nil (24 45 7 24 45 8 26 15 9 13 1 19 2 10 29) #39# #1# 32933) t clos::install-method)) #1# 32933) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::device-move-cursor-to ext::location (defgeneric common-lisp-user::device-move-cursor-to) (#1# . 33086) ext::annotate :lambda-list (common-lisp-user::device common-lisp-user::xyloc) :delete-methods t :documentation "Move the cursor to a specified location." ensure-generic-function)) #1# 33086) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #40=#A(t (14) (common-lisp-user::device-move-cursor-to ext::location (defmethod common-lisp-user::device-move-cursor-to common-lisp-user::device common-lisp-user::xyloc) (#1# . 33200) ext::annotate (t t) (common-lisp-user::device common-lisp-user::xyloc) common-lisp-user::device common-lisp-user::xyloc "No method defined for DEVICE-MOVE-CURSOR-TO for object ~S." error #Y(common-lisp-user::device-move-cursor-to nil nil (24 45 7 24 45 8 26 15 9 13 1 19 2 10 29) #40# #1# 33200) t clos::install-method)) #1# 33200) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::device-handle-click ext::location (defgeneric common-lisp-user::device-handle-click) (#1# . 33355) ext::annotate :lambda-list (common-lisp-user::device) :delete-methods t :documentation "Handle a click request." ensure-generic-function)) #1# 33355) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 10 12 14 11 19 6 12 29) #41=#A(t (13) (common-lisp-user::device-handle-click ext::location (defmethod common-lisp-user::device-handle-click common-lisp-user::device) (#1# . 33444) ext::annotate (t) (common-lisp-user::device) common-lisp-user::device "No method defined for DEVICE-HANDLE-CLICK for object ~S." error #Y(common-lisp-user::device-handle-click nil nil (24 45 7 26 15 8 13 0 19 2 9 29) #41# #1# 33444) t clos::install-method)) #1# 33444) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::device-speak-string ext::location (defgeneric common-lisp-user::device-speak-string) (#1# . 33562) ext::annotate :lambda-list (common-lisp-user::device string) :delete-methods t :documentation "Handle a speech request." ensure-generic-function)) #1# 33562) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #42=#A(t (14) (common-lisp-user::device-speak-string ext::location (defmethod common-lisp-user::device-speak-string common-lisp-user::device string) (#1# . 33659) ext::annotate (t t) (common-lisp-user::device string) common-lisp-user::device string "No method defined for DEVICE-SPEAK-STRING for object ~S." error #Y(common-lisp-user::device-speak-string nil nil (24 45 7 24 45 8 26 15 9 13 1 19 2 10 29) #42# #1# 33659) t clos::install-method)) #1# 33659) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 14 5 1 9 12 1 10 7 3 12 14 5 1 11 12 1 12 7 3 12 14 5 1 16 12 1 17 7 3 6 3 12 77 19 4 18 29) #43=#A(t (19) (common-lisp-user::virtual-keyboard ext::location (defclass common-lisp-user::virtual-keyboard) (#1# . 33812) ext::annotate :initfunction :test equal make-hash-table #Y(nil nil nil (26 14 6 33 7 12 19 2 8 29) #43# #1# 33812) (:initform (make-hash-table :test #'equal) :writers ((setf common-lisp-user::key->cmd-ht)) :readers (common-lisp-user::key->cmd-ht) :name common-lisp-user::key->cmd-ht) #Y(nil nil nil (26 14 6 33 7 12 19 2 8 29) #43# #1# 33812) (:initform (make-hash-table :test #'equal) :writers ((setf common-lisp-user::key->loc-ht)) :readers (common-lisp-user::key->loc-ht) :name common-lisp-user::key->loc-ht) #44=(23 7) :initial-element make-array #Y(nil nil nil (26 15 13 14 14 77 19 3 15 29) #43# #1# 33812) (:initform (make-array '#44# :initial-element nil) :writers ((setf common-lisp-user::loc->key-arr)) :readers (common-lisp-user::loc->key-arr) :name common-lisp-user::loc->key-array) clos::load-defclass)) #1# 33812) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 16 12 14 17 19 6 18 29) #45=#A(t (19) (initialize-instance ext::location (defmethod initialize-instance :after (common-lisp-user::vk common-lisp-user::virtual-keyboard) &key) (#1# . 34353) ext::annotate (:after) (common-lisp-user::virtual-keyboard) (common-lisp-user::vk &key) common-lisp-user::vk (t) common-lisp-user::key->cmd-ht common-lisp-user::populate-key-to-command-ht common-lisp-user::key->loc-ht common-lisp-user::populate-key-to-loc-ht common-lisp-user::loc->key-arr common-lisp-user::populate-loc-to-key-array #Y(initialize-instance nil nil (24 45 8 28 9 13 0 19 1 10 12 19 1 11 13 0 19 1 12 12 19 1 13 13 0 19 1 14 12 19 1 15 29) #45# #1# 34353) t clos::install-method)) #1# 34353) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::loc->key ext::location (defgeneric common-lisp-user::loc->key) (#1# . 34563) ext::annotate :lambda-list (common-lisp-user::vk common-lisp-user::loc) :delete-methods t :documentation "Given an location, return the corresponding key" ensure-generic-function)) #1# 34563) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #46=#A(t (18) (common-lisp-user::loc->key ext::location (defmethod common-lisp-user::loc->key (common-lisp-user::vk common-lisp-user::virtual-keyboard) (common-lisp-user::loc vector)) (#1# . 34829) ext::annotate (common-lisp-user::virtual-keyboard vector) (common-lisp-user::vk common-lisp-user::loc) common-lisp-user::vk common-lisp-user::loc #A(t (2) (28 2)) common-lisp-user::vpt= common-lisp-user::mouse common-lisp-user::loc->key-arr svref aref #Y(common-lisp-user::loc->key nil nil (24 45 7 24 45 8 26 13 0 15 9 19 2 10 39 6 1 11 73 38 24 13 1 19 1 12 12 13 0 8 0 17 13 12 13 0 8 1 17 13 12 19 3 14 29) #46# #1# 34829) t clos::install-method)) #1# 34829) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::key-to-command ext::location (defgeneric common-lisp-user::key-to-command) (#1# . 34972) ext::annotate :lambda-list (common-lisp-user::vk common-lisp-user::key) :delete-methods t :documentation "Given a key, return the appropriate command." ensure-generic-function)) #1# 34972) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #47=#A(t (14) (common-lisp-user::key-to-command ext::location (defmethod common-lisp-user::key-to-command (common-lisp-user::vk common-lisp-user::virtual-keyboard) common-lisp-user::key) (#1# . 35078) ext::annotate (common-lisp-user::virtual-keyboard t) (common-lisp-user::vk common-lisp-user::key) common-lisp-user::vk common-lisp-user::key common-lisp-user::key->cmd-ht gethash #Y(common-lisp-user::key-to-command nil nil (24 45 7 24 45 8 26 13 0 13 1 19 1 9 12 19 2 10 29) #47# #1# 35078) t clos::install-method)) #1# 35078) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #48=#A(t (14) (common-lisp-user::key-to-loc ext::location (defmethod common-lisp-user::key-to-loc (common-lisp-user::vk common-lisp-user::virtual-keyboard) common-lisp-user::key) (#1# . 35167) ext::annotate (common-lisp-user::virtual-keyboard t) (common-lisp-user::vk common-lisp-user::key) common-lisp-user::vk common-lisp-user::key common-lisp-user::key->loc-ht gethash #Y(common-lisp-user::key-to-loc nil nil (24 45 7 24 45 8 26 13 0 13 1 19 1 9 12 19 2 10 29) #48# #1# 35167) t clos::install-method)) #1# 35167) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::populate-key-to-command-ht ext::location (defgeneric common-lisp-user::populate-key-to-command-ht) (#1# . 35253) ext::annotate :lambda-list (common-lisp-user::ht) :delete-methods t :documentation "Populates the hash table that maps keys to motor commands" ensure-generic-function)) #1# 35253) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 163 12 14 44 19 6 164 29) #49=#A(t (165) (common-lisp-user::populate-key-to-command-ht ext::location (defmethod common-lisp-user::populate-key-to-command-ht (common-lisp-user::ht hash-table)) (#1# . 35380) ext::annotate (hash-table) (common-lisp-user::ht) common-lisp-user::ht space (common-lisp-user::punch :hand common-lisp-user::left :finger common-lisp-user::thumb) si::hash-set common-lisp-user::backquote (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 2.24 :theta -2.03) common-lisp-user::tab (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 1.41 :theta -2.36) (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 2 :theta -1.57) common-lisp-user::q (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 1 :theta -1.57) common-lisp-user::a (common-lisp-user::punch :hand common-lisp-user::left :finger common-lisp-user::pinkie) common-lisp-user::z (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::ring :r 2 :theta -1.57) common-lisp-user::w (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::ring :r 1 :theta -1.57) common-lisp-user::s (common-lisp-user::punch :hand common-lisp-user::left :finger common-lisp-user::ring) common-lisp-user::x (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::ring :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::middle :r 2 :theta -1.57) common-lisp-user::e (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::middle :r 1 :theta -1.57) common-lisp-user::d (common-lisp-user::punch :hand common-lisp-user::left :finger common-lisp-user::middle) common-lisp-user::c (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::middle :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 2 :theta -1.57) common-lisp-user::r (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 1 :theta -1.57) common-lisp-user::f (common-lisp-user::punch :hand common-lisp-user::left :finger common-lisp-user::index) common-lisp-user::v (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 2.24 :theta -1.11) t (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 1.41 :theta -0.79) common-lisp-user::g (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 1 :theta 0) common-lisp-user::b (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::index :r 1.41 :theta 0.79) (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 2.24 :theta -2.03) common-lisp-user::y (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1.41 :theta -2.36) common-lisp-user::h (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1 :theta 3.14) common-lisp-user::n (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1.41 :theta 2.36) (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 2 :theta -1.57) common-lisp-user::u (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1 :theta -1.57) common-lisp-user::j (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::index) common-lisp-user::m (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::middle :r 2 :theta -1.57) common-lisp-user::i (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::middle :r 1 :theta -1.57) common-lisp-user::k (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::middle) common-lisp-user::comma (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::middle :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 2 :theta -1.57) common-lisp-user::o (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 1 :theta -1.57) common-lisp-user::l (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::ring) common-lisp-user::period (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 1 :theta 1.57) common-lisp-user::dot (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 1 :theta 1.57) (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2 :theta -1.57) common-lisp-user::p (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1 :theta -1.57) common-lisp-user::semicolon (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::pinkie) common-lisp-user::slash (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1 :theta 1.57) / (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1 :theta 1.57) common-lisp-user::hyphen (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2.24 :theta -1.11) - (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2.24 :theta -1.11) common-lisp-user::[ (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1.41 :theta -0.78) quote (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1 :theta 0) return (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2 :theta 0) common-lisp-user::backslash (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 3.16 :theta -0.32) = (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2.83 :theta -0.78) common-lisp-user::] (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2.24 :theta -0.46) delete (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 3.6 :theta -0.59) common-lisp-user::right-shift (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1.41 :theta 0.78) common-lisp-user::right-control (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 3.6 :theta 0.59) common-lisp-user::right-option (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2.83 :theta 0.78) common-lisp-user::right-command (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2.24 :theta 1.11) common-lisp-user::shift (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 1.41 :theta 2.36) common-lisp-user::left-shift (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 1.41 :theta 2.36) common-lisp-user::left-control (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 2.24 :theta 2.03) common-lisp-user::left-option (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 2.0 :theta 1.57) common-lisp-user::left-command (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::ring :r 2.0 :theta 1.57) common-lisp-user::caps-lock (common-lisp-user::peck-recoil :hand common-lisp-user::left :finger common-lisp-user::pinkie :r 1.0 :theta 3.14) common-lisp-user::clear (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 2 :theta -1.57) common-lisp-user::keypad-= (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::middle :r 2 :theta -1.57) common-lisp-user::keypad-/ (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 2 :theta -1.57) common-lisp-user::keypad-* (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 3 :theta -1.57) common-lisp-user::keypad-7 (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1 :theta -1.57) common-lisp-user::keypad-8 (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::middle :r 1 :theta -1.57) common-lisp-user::keypad-9 (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 1 :theta -1.57) common-lisp-user::keypad-minus (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 2 :theta -1.57) common-lisp-user::keypad-4 (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::index) common-lisp-user::keypad-5 (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::middle) common-lisp-user::keypad-6 (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::ring) common-lisp-user::keypad-plus (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::pinkie :r 1 :theta -1.57) common-lisp-user::keypad-1 (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::index :r 1 :theta 1.57) common-lisp-user::keypad-2 (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::middle :r 1 :theta 1.57) common-lisp-user::keypad-3 (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 1 :theta 1.57) common-lisp-user::keypad-0 (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::thumb) common-lisp-user::keypad-period (common-lisp-user::peck-recoil :hand common-lisp-user::right :finger common-lisp-user::ring :r 2 :theta 1.57) common-lisp-user::enter (common-lisp-user::punch :hand common-lisp-user::right :finger common-lisp-user::pinkie) #Y(common-lisp-user::populate-key-to-command-ht nil nil (24 45 7 26 15 8 13 0 15 9 19 3 10 15 11 13 0 15 12 19 3 10 15 13 13 0 15 14 19 3 10 9 1 13 0 15 15 19 3 10 15 16 13 0 15 17 19 3 10 15 18 13 0 15 19 19 3 10 15 20 13 0 15 21 19 3 10 9 2 13 0 15 22 19 3 10 15 23 13 0 15 24 19 3 10 15 25 13 0 15 26 19 3 10 15 27 13 0 15 28 19 3 10 9 3 13 0 15 29 19 3 10 15 30 13 0 15 31 19 3 10 15 32 13 0 15 33 19 3 10 15 34 13 0 15 35 19 3 10 9 4 13 0 15 36 19 3 10 15 37 13 0 15 38 19 3 10 15 39 13 0 15 40 19 3 10 15 41 13 0 15 42 19 3 10 9 5 13 0 15 43 19 3 10 15 44 13 0 15 45 19 3 10 15 46 13 0 15 47 19 3 10 15 48 13 0 15 49 19 3 10 9 6 13 0 15 50 19 3 10 15 51 13 0 15 52 19 3 10 15 53 13 0 15 54 19 3 10 15 55 13 0 15 56 19 3 10 9 7 13 0 15 57 19 3 10 15 58 13 0 15 59 19 3 10 15 60 13 0 15 61 19 3 10 15 62 13 0 15 63 19 3 10 9 8 13 0 15 64 19 3 10 15 65 13 0 15 66 19 3 10 15 67 13 0 15 68 19 3 10 15 69 13 0 15 70 19 3 10 9 9 13 0 15 71 19 3 10 15 72 13 0 15 73 19 3 10 15 74 13 0 15 75 19 3 10 15 76 13 0 15 77 19 3 10 15 78 13 0 15 79 19 3 10 9 0 13 0 15 80 19 3 10 15 81 13 0 15 82 19 3 10 15 83 13 0 15 84 19 3 10 15 85 13 0 15 86 19 3 10 15 87 13 0 15 88 19 3 10 15 89 13 0 15 90 19 3 10 15 91 13 0 15 92 19 3 10 15 93 13 0 15 94 19 3 10 15 95 13 0 15 96 19 3 10 15 97 13 0 15 98 19 3 10 15 99 13 0 15 100 19 3 10 15 101 13 0 15 102 19 3 10 15 103 13 0 15 104 19 3 10 15 105 13 0 15 106 19 3 10 15 107 13 0 15 108 19 3 10 15 109 13 0 15 110 19 3 10 15 111 13 0 15 112 19 3 10 15 113 13 0 15 114 19 3 10 15 115 13 0 15 116 19 3 10 15 117 13 0 15 118 19 3 10 15 119 13 0 15 120 19 3 10 15 121 13 0 15 122 19 3 10 15 123 13 0 15 124 19 3 10 15 125 13 0 15 126 19 3 10 15 127 13 0 15 128 19 3 10 15 129 13 0 15 130 19 3 10 15 131 13 0 15 132 19 3 10 15 133 13 0 15 134 19 3 10 15 135 13 0 15 136 19 3 10 15 137 13 0 15 138 19 3 10 15 139 13 0 15 140 19 3 10 15 141 13 0 15 142 19 3 10 15 143 13 0 15 144 19 3 10 15 145 13 0 15 146 19 3 10 15 147 13 0 15 148 19 3 10 15 149 13 0 15 150 19 3 10 15 151 13 0 15 152 19 3 10 15 153 13 0 15 154 19 3 10 15 155 13 0 15 156 19 3 10 15 157 13 0 15 158 19 3 10 15 159 13 0 15 160 19 3 10 15 161 13 0 15 162 19 3 10 10 0 73 29) #49# #1# 35380) clos::install-method)) #1# 35380) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::populate-key-to-loc-ht ext::location (defgeneric common-lisp-user::populate-key-to-loc-ht) (#1# . 42751) ext::annotate :lambda-list (common-lisp-user::ht) :delete-methods t :documentation "Build a hash table mapping keys to locations." ensure-generic-function)) #1# 42751) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 226 12 14 85 19 6 227 29) #50=#A(t (228) (common-lisp-user::populate-key-to-loc-ht ext::location (defmethod common-lisp-user::populate-key-to-loc-ht (common-lisp-user::ht hash-table)) (#1# . 42861) ext::annotate (hash-table) (common-lisp-user::ht) common-lisp-user::ht common-lisp-user::escape #A(t (2) (0 0)) si::hash-set common-lisp-user::f1 #A(t (2) (2 0)) common-lisp-user::f2 #A(t (2) (3 0)) common-lisp-user::f3 #A(t (2) (4 0)) common-lisp-user::f4 #A(t (2) (5 0)) common-lisp-user::f5 #A(t (2) (7 0)) common-lisp-user::f6 #A(t (2) (8 0)) common-lisp-user::f7 #A(t (2) (9 0)) common-lisp-user::f8 #A(t (2) (10 0)) common-lisp-user::f9 #A(t (2) (12 0)) common-lisp-user::f10 #A(t (2) (13 0)) common-lisp-user::f11 #A(t (2) (14 0)) common-lisp-user::f12 #A(t (2) (15 0)) common-lisp-user::f13 #A(t (2) (17 0)) common-lisp-user::f14 #A(t (2) (18 0)) common-lisp-user::f15 #A(t (2) (19 0)) common-lisp-user::backquote #A(t (2) (0 2)) #A(t (2) (1 2)) #A(t (2) (2 2)) #A(t (2) (3 2)) #A(t (2) (4 2)) #A(t (2) (5 2)) #A(t (2) (6 2)) #A(t (2) (7 2)) #A(t (2) (8 2)) #A(t (2) (9 2)) #A(t (2) (10 2)) - #A(t (2) (11 2)) common-lisp-user::hyphen #A(t (2) (11 2)) = #A(t (2) (12 2)) delete #A(t (2) (13 2)) si::help #A(t (2) (15 2)) common-lisp-user::home #A(t (2) (16 2)) common-lisp-user::pageup #A(t (2) (17 2)) common-lisp-user::clear #A(t (2) (19 2)) common-lisp-user::keypad-= #A(t (2) (20 2)) common-lisp-user::keypad-/ #A(t (2) (21 2)) common-lisp-user::keypad-* #A(t (2) (22 2)) common-lisp-user::tab #A(t (2) (0 3)) common-lisp-user::q #A(t (2) (1 3)) common-lisp-user::w #A(t (2) (2 3)) common-lisp-user::e #A(t (2) (3 3)) common-lisp-user::r #A(t (2) (4 3)) t #A(t (2) (5 3)) common-lisp-user::y #A(t (2) (6 3)) common-lisp-user::u #A(t (2) (7 3)) common-lisp-user::i #A(t (2) (8 3)) common-lisp-user::o #A(t (2) (9 3)) common-lisp-user::p #A(t (2) (10 3)) common-lisp-user::[ #A(t (2) (11 3)) common-lisp-user::] #A(t (2) (12 3)) common-lisp-user::backslash #A(t (2) (13 3)) common-lisp-user::forward-delete #A(t (2) (15 3)) common-lisp-user::end #A(t (2) (16 3)) common-lisp-user::page-up #A(t (2) (17 3)) common-lisp-user::keypad-7 #A(t (2) (19 3)) common-lisp-user::keypad-8 #A(t (2) (20 3)) common-lisp-user::keypad-9 #A(t (2) (21 3)) common-lisp-user::keypad-hyphen #A(t (2) (22 3)) common-lisp-user::caps-lock #A(t (2) (0 4)) common-lisp-user::a #A(t (2) (1 4)) common-lisp-user::s #A(t (2) (2 4)) common-lisp-user::d #A(t (2) (3 4)) common-lisp-user::f #A(t (2) (4 4)) common-lisp-user::g #A(t (2) (5 4)) common-lisp-user::h #A(t (2) (6 4)) common-lisp-user::j #A(t (2) (7 4)) common-lisp-user::k #A(t (2) (8 4)) common-lisp-user::l #A(t (2) (9 4)) common-lisp-user::semicolon #A(t (2) (10 4)) quote #A(t (2) (11 4)) return #A(t (2) (12 4)) common-lisp-user::keypad-4 #A(t (2) (19 4)) common-lisp-user::keypad-5 #A(t (2) (20 4)) common-lisp-user::keypad-6 #A(t (2) (21 4)) common-lisp-user::keypad-plus #A(t (2) (22 4)) common-lisp-user::keypad-+ #A(t (2) (22 4)) common-lisp-user::shift #A(t (2) (0 5)) common-lisp-user::left-shift #A(t (2) (0 5)) common-lisp-user::z #A(t (2) (1 5)) common-lisp-user::x #A(t (2) (2 5)) common-lisp-user::c #A(t (2) (3 5)) common-lisp-user::v #A(t (2) (4 5)) common-lisp-user::b #A(t (2) (5 5)) common-lisp-user::n #A(t (2) (6 5)) common-lisp-user::m #A(t (2) (7 5)) common-lisp-user::comma #A(t (2) (8 5)) common-lisp-user::period #A(t (2) (9 5)) common-lisp-user::dot #A(t (2) (9 5)) / #A(t (2) (10 5)) common-lisp-user::right-shift #A(t (2) (11 5)) common-lisp-user::up-arrow #A(t (2) (16 5)) common-lisp-user::keypad-1 #A(t (2) (19 5)) common-lisp-user::keypad-2 #A(t (2) (20 5)) common-lisp-user::keypad-3 #A(t (2) (21 5)) common-lisp-user::keypad-enter #A(t (2) (22 5)) common-lisp-user::left-control #A(t (2) (0 6)) common-lisp-user::left-option #A(t (2) (1 6)) common-lisp-user::left-command #A(t (2) (2 6)) common-lisp-user::spc #A(t (2) (3 6)) #A(t (2) (4 6)) #A(t (2) (5 6)) #A(t (2) (6 6)) space #A(t (2) (6 6)) #A(t (2) (7 6)) #A(t (2) (8 6)) #A(t (2) (9 6)) #A(t (2) (10 6)) common-lisp-user::right-command #A(t (2) (11 6)) common-lisp-user::right-option #A(t (2) (12 6)) common-lisp-user::right-control #A(t (2) (13 6)) common-lisp-user::left-arrow #A(t (2) (15 6)) common-lisp-user::down-arrow #A(t (2) (16 6)) common-lisp-user::right-arrow #A(t (2) (17 6)) common-lisp-user::keypad-0 #A(t (2) (19 6)) common-lisp-user::keypad-period #A(t (2) (21 6)) common-lisp-user::enter #A(t (2) (22 6)) #Y(common-lisp-user::populate-key-to-loc-ht nil nil (24 45 7 26 15 8 13 0 15 9 19 3 10 15 11 13 0 15 12 19 3 10 15 13 13 0 15 14 19 3 10 15 15 13 0 15 16 19 3 10 15 17 13 0 15 18 19 3 10 15 19 13 0 15 20 19 3 10 15 21 13 0 15 22 19 3 10 15 23 13 0 15 24 19 3 10 15 25 13 0 15 26 19 3 10 15 27 13 0 15 28 19 3 10 15 29 13 0 15 30 19 3 10 15 31 13 0 15 32 19 3 10 15 33 13 0 15 34 19 3 10 15 35 13 0 15 36 19 3 10 15 37 13 0 15 38 19 3 10 15 39 13 0 15 40 19 3 10 15 41 13 0 15 42 19 3 10 9 1 13 0 15 43 19 3 10 9 2 13 0 15 44 19 3 10 9 3 13 0 15 45 19 3 10 9 4 13 0 15 46 19 3 10 9 5 13 0 15 47 19 3 10 9 6 13 0 15 48 19 3 10 9 7 13 0 15 49 19 3 10 9 8 13 0 15 50 19 3 10 9 9 13 0 15 51 19 3 10 9 0 13 0 15 52 19 3 10 15 53 13 0 15 54 19 3 10 15 55 13 0 15 56 19 3 10 15 57 13 0 15 58 19 3 10 15 59 13 0 15 60 19 3 10 15 61 13 0 15 62 19 3 10 15 63 13 0 15 64 19 3 10 15 65 13 0 15 66 19 3 10 15 67 13 0 15 68 19 3 10 15 69 13 0 15 70 19 3 10 15 71 13 0 15 72 19 3 10 15 73 13 0 15 74 19 3 10 15 75 13 0 15 76 19 3 10 15 77 13 0 15 78 19 3 10 15 79 13 0 15 80 19 3 10 15 81 13 0 15 82 19 3 10 15 83 13 0 15 84 19 3 10 15 85 13 0 15 86 19 3 10 15 87 13 0 15 88 19 3 10 15 89 13 0 15 90 19 3 10 15 91 13 0 15 92 19 3 10 15 93 13 0 15 94 19 3 10 15 95 13 0 15 96 19 3 10 15 97 13 0 15 98 19 3 10 15 99 13 0 15 100 19 3 10 15 101 13 0 15 102 19 3 10 15 103 13 0 15 104 19 3 10 15 105 13 0 15 106 19 3 10 15 107 13 0 15 108 19 3 10 15 109 13 0 15 110 19 3 10 15 111 13 0 15 112 19 3 10 15 113 13 0 15 114 19 3 10 15 115 13 0 15 116 19 3 10 15 117 13 0 15 118 19 3 10 15 119 13 0 15 120 19 3 10 15 121 13 0 15 122 19 3 10 15 123 13 0 15 124 19 3 10 15 125 13 0 15 126 19 3 10 15 127 13 0 15 128 19 3 10 15 129 13 0 15 130 19 3 10 15 131 13 0 15 132 19 3 10 15 133 13 0 15 134 19 3 10 15 135 13 0 15 136 19 3 10 15 137 13 0 15 138 19 3 10 15 139 13 0 15 140 19 3 10 15 141 13 0 15 142 19 3 10 15 143 13 0 15 144 19 3 10 15 145 13 0 15 146 19 3 10 15 147 13 0 15 148 19 3 10 15 149 13 0 15 150 19 3 10 15 151 13 0 15 152 19 3 10 15 153 13 0 15 154 19 3 10 15 155 13 0 15 156 19 3 10 15 157 13 0 15 158 19 3 10 15 159 13 0 15 160 19 3 10 15 161 13 0 15 162 19 3 10 15 163 13 0 15 164 19 3 10 15 165 13 0 15 166 19 3 10 15 167 13 0 15 168 19 3 10 15 169 13 0 15 170 19 3 10 15 171 13 0 15 172 19 3 10 15 173 13 0 15 174 19 3 10 15 175 13 0 15 176 19 3 10 15 177 13 0 15 178 19 3 10 15 179 13 0 15 180 19 3 10 15 181 13 0 15 182 19 3 10 15 183 13 0 15 184 19 3 10 15 185 13 0 15 186 19 3 10 15 187 13 0 15 188 19 3 10 15 189 13 0 15 190 19 3 10 15 191 13 0 15 192 19 3 10 15 193 13 0 15 194 19 3 10 15 195 13 0 15 196 19 3 10 15 197 13 0 15 198 19 3 10 15 197 13 0 15 199 19 3 10 15 197 13 0 15 200 19 3 10 15 197 13 0 15 201 19 3 10 15 202 13 0 15 203 19 3 10 15 197 13 0 15 204 19 3 10 15 197 13 0 15 205 19 3 10 15 197 13 0 15 206 19 3 10 15 197 13 0 15 207 19 3 10 15 208 13 0 15 209 19 3 10 15 210 13 0 15 211 19 3 10 15 212 13 0 15 213 19 3 10 15 214 13 0 15 215 19 3 10 15 216 13 0 15 217 19 3 10 15 218 13 0 15 219 19 3 10 15 220 13 0 15 221 19 3 10 15 222 13 0 15 223 19 3 10 15 224 13 0 15 225 19 3 10 10 0 73 29) #50# #1# 42861) clos::install-method)) #1# 42861) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 14 12 14 15 14 16 15 17 19 8 18 29) #51=#A(t (19) (common-lisp-user::lock-device ext::location (defmethod common-lisp-user::lock-device (common-lisp-user::devin common-lisp-user::device-interface)) (#1# . 47234) ext::annotate (common-lisp-user::device-interface) (common-lisp-user::devin) common-lisp-user::devin #:g6521 #:g6523 common-lisp-user::locks + #:g6522 (setf common-lisp-user::locks) #Y(common-lisp-user::lock-device nil nil (24 45 7 26 10 0 45 8 8 1 45 9 13 1 19 1 10 12 13 0 19 2 11 45 12 13 0 13 2 33 13 18 2 43 3 29) #51# #1# 47234) t :documentation "Place a lock on proc-display to prevent it from actually occuring" clos::install-method)) #1# 47234) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 30 12 14 31 14 32 15 33 19 8 34 29) #52=#A(t (35) (common-lisp-user::unlock-device ext::location (defmethod common-lisp-user::unlock-device (common-lisp-user::devin common-lisp-user::device-interface)) (#1# . 47532) ext::annotate (common-lisp-user::device-interface) (common-lisp-user::devin) common-lisp-user::devin common-lisp-user::locks zerop #:g6545 #:g6547 - #:g6546 (setf common-lisp-user::locks) :tracking common-lisp-user::pending-procs find common-lisp-user::unlock-tracking #:g6548 remove #:g6549 (setf common-lisp-user::pending-procs) :clear identity some common-lisp-user::proc-display #:g6550 #:g6551 (setf common-lisp-user::pending-procs) #Y(common-lisp-user::unlock-device nil nil (24 45 7 26 13 0 19 1 8 16 9 76 39 32 10 0 45 10 8 1 45 11 13 1 19 1 8 12 13 0 19 2 12 45 13 13 0 13 2 33 14 18 2 43 3 13 0 19 1 8 16 9 39 12 14 15 13 0 19 1 16 12 19 2 17 39 33 19 0 18 10 0 45 19 14 15 13 1 19 1 16 12 19 2 20 45 21 13 0 13 1 33 22 18 2 43 1 43 1 13 0 19 1 8 16 9 39 6 13 0 19 1 16 73 39 37 14 23 15 24 13 0 19 1 16 12 19 2 25 12 19 2 26 10 0 45 27 75 45 28 13 0 13 1 33 29 18 2 43 1 43 1 29) #52# #1# 47532) t :documentation "Remove one of the locks from proc-display and run it now if all locks are
   removed and there were any blocked calls" clos::install-method)) #1# 47532))
