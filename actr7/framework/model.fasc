(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #1=#A(t (12) (common-lisp-user::current-model ext::location (defun common-lisp-user::current-model) (#2=#P"C:/Users/Son Pham/Desktop/actr7/framework/model.lisp" . 0) ext::annotate :lambda-list common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-name #Y(common-lisp-user::current-model nil nil (26 14 6 19 1 7 39 10 14 6 19 1 7 12 19 1 8 73 39 22 14 6 19 1 7 73 39 10 14 6 19 1 7 12 19 1 8 12 19 1 9 29) #1# #2# 0) si::fset)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #3=#A(t (13) (common-lisp-user::largest-chunk-type-size ext::location (defun common-lisp-user::largest-chunk-type-size) (#2# . 11924) ext::annotate :lambda-list common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model common-lisp-user::act-r-model-chunk-types-info common-lisp-user::act-r-chunk-type-info-size #Y(common-lisp-user::largest-chunk-type-size nil nil (26 14 6 19 1 7 73 39 10 14 6 19 1 7 12 19 1 8 12 19 1 9 12 19 1 10 29) #3# #2# 11924) si::fset)) #2# 11924) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*model-chunk-table-size* si::*make-special boundp ext::location (defvar common-lisp-user::*model-chunk-table-size*) (#2# . 12045) ext::annotate)) #2# 12045) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*model-chunk-table-rehash-threshold* si::*make-special boundp ext::location (defvar common-lisp-user::*model-chunk-table-rehash-threshold*) (#2# . 12085) ext::annotate)) #2# 12085) #Y(si::bytecodes nil nil (14 0 14 1 15 2 14 3 77 14 4 15 5 14 6 15 7 14 8 1 12 12 19 11 13 29) #4=#A(t (14) (:mcts :valid-test common-lisp-user::posnumornil :default-value :warning "positive number or nil" :documentation "initial size of a model's chunk table" :handler common-lisp-user::set-or-get common-lisp-user::value common-lisp-user::*model-chunk-table-size* #Y(nil nil nil (24 45 9 24 45 10 26 10 1 39 8 10 0 52 11 73 38 4 11 11 73 29) #4# #2# 12135) common-lisp-user::create-system-parameter)) #2# 12135) #Y(si::bytecodes nil nil (14 0 14 1 1 5 12 14 6 77 14 7 15 8 14 9 15 10 14 11 1 15 12 19 11 16 29) #5=#A(t (17) (:mctrt :valid-test common-lisp-user::x (or null (real 0 1)) typep #Y(nil nil nil (24 45 2 26 13 0 15 3 19 2 4 29) #5# #2# 12416) :default-value :warning "a real number [0-1] or nil" :documentation "rehash-threshold of a model's chunk table" :handler common-lisp-user::set-or-get common-lisp-user::value common-lisp-user::*model-chunk-table-rehash-threshold* #Y(nil nil nil (24 45 12 24 45 13 26 10 1 39 8 10 0 52 14 73 38 4 11 14 73 29) #5# #2# 12416) common-lisp-user::create-system-parameter)) #2# 12416) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 1 0 73 29) #6=#A(t (18) (common-lisp-user::define-model ext::location (defmacro common-lisp-user::define-model) (#2# . 12796) ext::annotate :lambda-list (common-lisp-user::name &body common-lisp-user::model-code) #:g2006 #:g2005 #:g2007 si::dm-too-few-arguments common-lisp-user::name common-lisp-user::model-code common-lisp-user::define-model-fct quote #Y(common-lisp-user::define-model nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 45 12 15 13 15 14 10 1 6 2 12 15 14 10 0 6 2 6 3 73 29) #6# #2# 12796) t si::fset)) #2# 12796) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 170 12 19 2 171 1 0 73 29) #7=#A(t (172) (common-lisp-user::define-model-fct ext::location (defun common-lisp-user::define-model-fct) (#2# . 12889) ext::annotate :lambda-list (common-lisp-user::name common-lisp-user::model-code-list) common-lisp-user::name common-lisp-user::model-code-list common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "define-model called with no current meta-process." format finish-output symbolp "Model name must be a symbol, ~S is not valid.  No model defined." "Nil is not a valid name for a model.  No model defined." common-lisp-user::valid-model-name "~S is already the name of a model in the current meta-process.  Cannot be redefined." common-lisp-user::meta-p-cannot-define-model "Cannot define a model within the context of another model." #:g2008 #:g2010 + #:g2009 common-lisp-user::meta-process si::structure-set common-lisp-user::x symbol-name find #Y(nil nil nil (24 45 34 26 13 0 10 3 16 35 12 19 2 36 29) #7# #2# 12889) #\$ #\{ #\} #\[ #\] some "Model names that contain any of the characters $, {, }, [, or ] may not work correctly with the ACT-R Environment." :name common-lisp-user::make-act-r-model common-lisp-user::mp common-lisp-user::new-model common-lisp-user::*model-chunk-table-size* common-lisp-user::*model-chunk-table-rehash-threshold* #:g2011 :size :rehash-threshold make-hash-table #:g2012 common-lisp-user::act-r-model #:g2013 #:g2014 #:g2015 #:g2016 #:g2017 #:g2018 #:g2019 #:g2020 #:g2021 #:g2022 common-lisp-user::meta-p-models si::hash-set #:g2026 #:g2028 common-lisp-user::meta-p-model-order nconc #:g2027 #:g2029 #:g2030 #:g2031 #:g2033 common-lisp-user::meta-p-model-count #:g2032 "~S" common-lisp-user::meta-p-model-name-len #:g2034 "~S" #:g2035 common-lisp-user::create-model-default-chunk-types-and-chunks common-lisp-user::all-module-names si::%dolist-var common-lisp-user::module-name common-lisp-user::act-r-model-modules-table common-lisp-user::instantiate-module common-lisp-user::buffer-name common-lisp-user::buffer-struct common-lisp-user::copy-act-r-buffer common-lisp-user::buffer common-lisp-user::act-r-buffer-multi #:g2042 :test eq #:g2043 common-lisp-user::act-r-buffer common-lisp-user::act-r-buffer-requests common-lisp-user::add-request-parameter #:g2046 common-lisp-user::slot-name->mask common-lisp-user::act-r-buffer-requests-mask logior #:g2047 common-lisp-user::act-r-buffer-queries common-lisp-user::add-buffer-query common-lisp-user::act-r-model-buffers #Y(nil nil nil (24 45 91 24 45 92 26 13 0 19 1 93 45 94 13 0 19 1 95 39 33 10 0 45 96 14 97 15 98 14 52 9 5 19 4 54 45 99 13 1 15 100 9 13 13 0 19 4 33 43 1 43 1 13 0 19 1 101 45 87 75 45 34 38 52 10 1 4 51 0 13 0 19 1 102 10 2 45 103 13 1 19 1 104 12 13 3 19 1 105 12 19 2 106 45 107 13 1 15 100 9 7 13 0 19 4 33 43 1 43 1 10 1 5 51 1 10 1 40 -54 43 2 13 0 19 1 108 45 87 75 45 34 38 16 10 1 4 51 0 13 0 19 1 109 10 1 5 51 1 10 1 40 -18 43 2 13 2 13 3 19 1 110 12 13 0 19 3 68 43 1 29) #7# #2# 12889) common-lisp-user::*buffers-table* maphash #:g2051 #:g2052 common-lisp-user::reset-module common-lisp-user::parameter-name common-lisp-user::parameter common-lisp-user::act-r-parameter-default common-lisp-user::sgp-fct #Y(nil nil nil (24 45 117 24 45 118 26 13 1 13 0 19 1 119 6 2 12 19 1 120 29) #7# #2# 12889) common-lisp-user::*act-r-parameters-table* common-lisp-user::secondary-reset-module common-lisp-user::errored common-lisp-user::form #:g2068 #:g2069 0 error si::temp #Y(nil nil nil (24 45 130 26 10 0 51 2 35 1 0 29) #7# #2# 12889) si::*handler-clusters* eval condition t "Error encountered in model form:~%~S~%Invoking the debugger." "You must exit the error state to continue." invoke-debugger remhash #:g2072 remove #:g2073 "Model ~s not defined." #:g2074 #:g2076 - #:g2075 #:g2077 common-lisp-user::meta-p-events :key common-lisp-user::evt-model #:g2078 #:g2079 common-lisp-user::meta-p-delayed #:g2080 #:g2081 common-lisp-user::meta-p-dynamics #Y(nil nil nil (24 45 34 26 10 0 4 12 19 1 151 29) #7# #2# 12889) #:g2082 common-lisp-user::delete-module #:g2083 #:g2084 common-lisp-user::tertiary-reset-module = #:g2085 #:g2086 #:g2087 #:g2089 #:g2088 #Y(common-lisp-user::define-model-fct nil nil (24 45 7 24 45 8 26 57 0 60 1430 14 9 19 1 10 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 18 19 5 19 12 14 11 19 1 20 22 73 38 1380 10 2 16 21 76 39 44 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 22 13 2 19 6 19 12 14 11 19 1 20 22 73 38 1330 10 2 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 23 19 5 19 12 14 11 19 1 20 22 73 38 1284 13 2 19 1 24 39 44 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 25 13 2 19 6 19 12 14 11 19 1 20 22 73 38 1234 14 9 19 1 10 12 19 1 26 12 9 0 19 2 16 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 27 19 5 19 12 14 11 19 1 20 22 73 38 1176 14 9 19 1 10 45 28 8 1 45 29 13 1 19 1 26 12 13 0 19 2 30 45 31 13 2 15 32 9 29 13 0 19 4 33 43 3 64 1099 34 37 12 15 38 15 39 15 40 15 41 1 42 6 5 12 19 2 43 39 37 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 44 19 5 19 14 11 19 1 20 14 45 13 2 19 2 46 12 14 9 19 1 10 12 46 47 46 48 11 49 40 3 11 50 39 189 11 49 39 129 11 50 39 67 10 0 45 51 14 52 14 49 14 53 14 50 19 4 54 45 55 13 1 15 56 9 2 13 0 19 4 33 43 1 43 1 10 0 45 57 14 52 14 49 14 53 14 50 19 4 54 45 58 13 1 15 56 9 3 13 0 19 4 33 43 1 43 1 38 57 10 0 45 59 14 52 14 49 19 2 54 45 60 13 1 15 56 9 2 13 0 19 4 33 43 1 43 1 10 0 45 61 14 52 14 49 19 2 54 45 62 13 1 15 56 9 3 13 0 19 4 33 43 1 43 1 38 57 10 0 45 63 14 53 14 50 19 2 54 45 64 13 1 15 56 9 2 13 0 19 4 33 43 1 43 1 10 0 45 65 14 53 14 50 19 2 54 45 66 13 1 15 56 9 3 13 0 19 4 33 43 1 43 1 13 4 13 1 19 1 67 12 13 0 19 3 68 10 1 45 69 10 5 6 1 45 70 13 1 19 1 71 12 13 0 19 2 72 45 73 13 2 15 32 9 28 13 0 19 4 33 43 3 10 1 45 74 10 1 45 75 13 1 15 32 9 5 13 0 19 4 33 43 1 43 1 10 1 45 76 8 1 45 77 13 1 19 1 78 12 13 0 19 2 30 45 79 13 2 15 32 9 6 13 0 19 4 33 43 3 77 15 80 13 4 19 3 19 16 15 12 13 1 19 1 81 12 19 2 16 39 32 10 1 45 82 77 15 83 13 5 19 3 19 16 15 45 84 13 1 15 32 9 7 13 0 19 4 33 43 1 43 1 13 0 19 1 85 19 0 86 45 87 75 45 88 38 30 10 1 4 51 0 13 0 13 2 19 1 89 12 13 0 13 6 19 2 90 12 19 3 68 10 1 5 51 1 10 1 40 -32 43 2 34 111 12 11 112 17 113 10 0 45 114 75 45 115 13 1 15 56 9 12 13 0 19 4 33 43 1 43 1 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 116 10 1 5 51 1 10 1 40 -18 43 2 34 121 12 11 122 17 113 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 123 10 1 5 51 1 10 1 40 -18 43 2 75 45 124 10 4 45 87 75 45 125 38 405 10 1 4 51 0 64 129 57 126 60 124 75 45 127 57 128 61 1 22 15 129 34 131 3 6 1 12 11 132 3 48 132 10 3 16 133 36 2 44 1 10 1 45 134 11 135 51 6 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 136 13 4 19 6 19 14 11 19 1 20 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 137 19 5 19 14 11 19 1 20 10 0 16 138 43 1 36 2 62 43 1 63 65 10 2 39 260 13 7 13 4 19 1 67 17 139 10 4 45 140 13 8 13 5 19 1 71 12 19 2 141 45 142 13 1 15 32 9 28 13 0 19 4 33 43 1 43 1 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 143 13 7 19 6 19 14 11 19 1 20 10 4 45 144 8 1 45 145 13 1 19 1 78 12 13 0 19 2 146 45 147 13 2 15 32 9 6 13 0 19 4 33 43 3 10 4 45 148 13 8 13 5 19 1 149 12 14 150 33 151 12 19 4 141 45 152 13 1 15 32 9 8 13 0 19 4 33 43 1 43 1 10 4 45 153 13 8 13 5 19 1 154 12 14 150 33 151 12 19 4 141 45 155 13 1 15 32 9 9 13 0 19 4 33 43 1 43 1 10 4 45 156 13 8 13 5 19 1 157 12 14 150 34 158 12 19 4 141 45 159 13 1 15 32 9 10 13 0 19 4 33 43 1 43 1 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 160 10 1 5 51 1 10 1 40 -18 43 2 75 73 36 5 66 10 1 5 51 1 10 1 40 -407 43 2 43 1 10 0 45 161 10 4 45 162 13 1 15 56 9 6 13 0 19 4 33 43 1 43 1 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 163 10 1 5 51 1 10 1 40 -18 43 2 9 1 13 1 19 1 78 12 19 2 164 76 39 23 10 1 45 165 75 45 166 13 1 15 32 9 5 13 0 19 4 33 43 1 43 1 10 4 73 43 2 65 14 9 19 1 10 45 167 8 1 45 168 13 1 19 1 26 12 13 0 19 2 146 45 169 13 2 15 32 9 29 13 0 19 4 33 43 3 66 63 29) #7# #2# 12889) si::fset)) #2# 12889) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 1 0 73 29) #9=#A(t (18) (common-lisp-user::unsafe-define-model ext::location (defmacro common-lisp-user::unsafe-define-model) (#2# . 19621) ext::annotate :lambda-list (common-lisp-user::name &body common-lisp-user::model-code) #:g2091 #:g2090 #:g2092 si::dm-too-few-arguments common-lisp-user::name common-lisp-user::model-code common-lisp-user::unsafe-define-model-fct quote #Y(common-lisp-user::unsafe-define-model nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 45 12 15 13 15 14 10 1 6 2 12 15 14 10 0 6 2 6 3 73 29) #9# #2# 19621) t si::fset)) #2# 19621) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 136 12 19 2 137 1 0 73 29) #10=#A(t (138) (common-lisp-user::unsafe-define-model-fct ext::location (defun common-lisp-user::unsafe-define-model-fct) (#2# . 19728) ext::annotate :lambda-list (common-lisp-user::name common-lisp-user::model-code-list) common-lisp-user::name common-lisp-user::model-code-list common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "define-model called with no current meta-process." format finish-output symbolp "Model name must be a symbol, ~S is not valid.  No model defined." "Nil is not a valid name for a model.  No model defined." common-lisp-user::valid-model-name "~S is already the name of a model in the current meta-process.  Cannot be redefined." common-lisp-user::meta-p-cannot-define-model "Cannot define a model within the context of another model." #:g2145 #:g2147 + #:g2146 common-lisp-user::meta-process si::structure-set common-lisp-user::x symbol-name find #Y(nil nil nil (24 45 34 26 13 0 10 2 16 35 12 19 2 36 29) #10# #2# 19728) #\$ #\{ #\} #\[ #\] some "Model names that contain any of the characters $, {, }, [, or ] may not work correctly with the ACT-R Environment." :name common-lisp-user::make-act-r-model common-lisp-user::mp common-lisp-user::new-model common-lisp-user::*model-chunk-table-size* common-lisp-user::*model-chunk-table-rehash-threshold* #:g2148 :size :rehash-threshold make-hash-table #:g2149 common-lisp-user::act-r-model #:g2150 #:g2151 #:g2152 #:g2153 #:g2154 #:g2155 #:g2156 #:g2157 #:g2158 #:g2159 common-lisp-user::meta-p-models si::hash-set #:g2163 #:g2165 common-lisp-user::meta-p-model-order nconc #:g2164 #:g2166 #:g2167 #:g2168 #:g2170 common-lisp-user::meta-p-model-count #:g2169 "~S" common-lisp-user::meta-p-model-name-len #:g2171 "~S" #:g2172 common-lisp-user::create-model-default-chunk-types-and-chunks common-lisp-user::all-module-names si::%dolist-var common-lisp-user::module-name common-lisp-user::act-r-model-modules-table common-lisp-user::instantiate-module common-lisp-user::buffer-name common-lisp-user::buffer-struct common-lisp-user::copy-act-r-buffer common-lisp-user::buffer common-lisp-user::act-r-buffer-multi #:g2179 :test eq #:g2180 common-lisp-user::act-r-buffer common-lisp-user::act-r-buffer-requests common-lisp-user::add-request-parameter #:g2183 common-lisp-user::slot-name->mask common-lisp-user::act-r-buffer-requests-mask logior #:g2184 common-lisp-user::act-r-buffer-queries common-lisp-user::add-buffer-query common-lisp-user::act-r-model-buffers #Y(nil nil nil (24 45 91 24 45 92 26 13 0 19 1 93 45 94 13 0 19 1 95 39 33 10 0 45 96 14 97 15 98 14 52 9 5 19 4 54 45 99 13 1 15 100 9 13 13 0 19 4 33 43 1 43 1 13 0 19 1 101 45 87 75 45 34 38 52 10 1 4 51 0 13 0 19 1 102 10 2 45 103 13 1 19 1 104 12 13 3 19 1 105 12 19 2 106 45 107 13 1 15 100 9 7 13 0 19 4 33 43 1 43 1 10 1 5 51 1 10 1 40 -54 43 2 13 0 19 1 108 45 87 75 45 34 38 16 10 1 4 51 0 13 0 19 1 109 10 1 5 51 1 10 1 40 -18 43 2 13 2 13 3 19 1 110 12 13 0 19 3 68 43 1 29) #10# #2# 19728) common-lisp-user::*buffers-table* maphash #:g2188 #:g2189 common-lisp-user::reset-module common-lisp-user::parameter-name common-lisp-user::parameter common-lisp-user::act-r-parameter-default common-lisp-user::sgp-fct #Y(nil nil nil (24 45 117 24 45 118 26 13 1 13 0 19 1 119 6 2 12 19 1 120 29) #10# #2# 19728) common-lisp-user::*act-r-parameters-table* common-lisp-user::secondary-reset-module common-lisp-user::form eval #:g2190 #:g2191 common-lisp-user::tertiary-reset-module = #:g2192 #:g2193 #:g2194 #:g2196 - #:g2195 #Y(common-lisp-user::unsafe-define-model-fct nil nil (24 45 7 24 45 8 26 14 9 19 1 10 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 18 19 5 19 12 14 11 19 1 20 22 73 38 985 10 1 16 21 76 39 44 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 22 13 1 19 6 19 12 14 11 19 1 20 22 73 38 935 10 1 76 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 23 19 5 19 12 14 11 19 1 20 22 73 38 889 13 1 19 1 24 39 44 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 25 13 1 19 6 19 12 14 11 19 1 20 22 73 38 839 14 9 19 1 10 12 19 1 26 12 9 0 19 2 16 39 42 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 27 19 5 19 12 14 11 19 1 20 22 73 38 781 14 9 19 1 10 45 28 8 1 45 29 13 1 19 1 26 12 13 0 19 2 30 45 31 13 2 15 32 9 29 13 0 19 4 33 43 3 64 704 34 37 12 15 38 15 39 15 40 15 41 1 42 6 5 12 19 2 43 39 37 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 44 19 5 19 14 11 19 1 20 14 45 13 1 19 2 46 12 14 9 19 1 10 12 46 47 46 48 11 49 40 3 11 50 39 189 11 49 39 129 11 50 39 67 10 0 45 51 14 52 14 49 14 53 14 50 19 4 54 45 55 13 1 15 56 9 2 13 0 19 4 33 43 1 43 1 10 0 45 57 14 52 14 49 14 53 14 50 19 4 54 45 58 13 1 15 56 9 3 13 0 19 4 33 43 1 43 1 38 57 10 0 45 59 14 52 14 49 19 2 54 45 60 13 1 15 56 9 2 13 0 19 4 33 43 1 43 1 10 0 45 61 14 52 14 49 19 2 54 45 62 13 1 15 56 9 3 13 0 19 4 33 43 1 43 1 38 57 10 0 45 63 14 53 14 50 19 2 54 45 64 13 1 15 56 9 2 13 0 19 4 33 43 1 43 1 10 0 45 65 14 53 14 50 19 2 54 45 66 13 1 15 56 9 3 13 0 19 4 33 43 1 43 1 13 3 13 1 19 1 67 12 13 0 19 3 68 10 1 45 69 10 4 6 1 45 70 13 1 19 1 71 12 13 0 19 2 72 45 73 13 2 15 32 9 28 13 0 19 4 33 43 3 10 1 45 74 10 1 45 75 13 1 15 32 9 5 13 0 19 4 33 43 1 43 1 10 1 45 76 8 1 45 77 13 1 19 1 78 12 13 0 19 2 30 45 79 13 2 15 32 9 6 13 0 19 4 33 43 3 77 15 80 13 3 19 3 19 16 15 12 13 1 19 1 81 12 19 2 16 39 32 10 1 45 82 77 15 83 13 4 19 3 19 16 15 45 84 13 1 15 32 9 7 13 0 19 4 33 43 1 43 1 13 0 19 1 85 19 0 86 45 87 75 45 88 38 30 10 1 4 51 0 13 0 13 2 19 1 89 12 13 0 13 5 19 2 90 12 19 3 68 10 1 5 51 1 10 1 40 -32 43 2 34 111 12 11 112 17 113 10 0 45 114 75 45 115 13 1 15 56 9 12 13 0 19 4 33 43 1 43 1 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 116 10 1 5 51 1 10 1 40 -18 43 2 34 121 12 11 122 17 113 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 123 10 1 5 51 1 10 1 40 -18 43 2 10 2 45 87 75 45 124 38 15 10 1 4 51 0 10 0 16 125 10 1 5 51 1 10 1 40 -17 43 2 10 0 45 126 10 3 45 127 13 1 15 56 9 6 13 0 19 4 33 43 1 43 1 19 0 86 45 87 75 45 88 38 16 10 1 4 51 0 13 0 19 1 128 10 1 5 51 1 10 1 40 -18 43 2 9 1 13 1 19 1 78 12 19 2 129 76 39 23 10 1 45 130 75 45 131 13 1 15 32 9 5 13 0 19 4 33 43 1 43 1 10 3 73 43 2 65 14 9 19 1 10 45 132 8 1 45 133 13 1 19 1 26 12 13 0 19 2 134 45 135 13 2 15 32 9 29 13 0 19 4 33 43 3 66 29) #10# #2# 19728) si::fset)) #2# 19728) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 1 0 73 29) #11=#A(t (36) (common-lisp-user::create-model-default-chunk-types-and-chunks ext::location (defun common-lisp-user::create-model-default-chunk-types-and-chunks) (#2# . 24814) ext::annotate :lambda-list (common-lisp-user::model) common-lisp-user::model common-lisp-user::act-r-model-chunk-types-info :name common-lisp-user::chunk :super-types common-lisp-user::make-act-r-chunk-type common-lisp-user::c common-lisp-user::info common-lisp-user::act-r-chunk-type-info-table si::hash-set common-lisp-user::act-r-chunk-type-info-distinct-types #:g2209 #:g2210 common-lisp-user::act-r-chunk-type-info si::structure-set (common-lisp-user::constant-chunks common-lisp-user::name) common-lisp-user::chunk-type-fct (common-lisp-user::clear (common-lisp-user::clear t)) (common-lisp-user::query-slots common-lisp-user::state common-lisp-user::buffer error) (common-lisp-user::free common-lisp-user::busy error common-lisp-user::empty common-lisp-user::full common-lisp-user::failure common-lisp-user::requested common-lisp-user::unrequested) si::%dolist-var common-lisp-user::x common-lisp-user::name common-lisp-user::define-chunks-fct common-lisp-user::make-chunk-immutable ((common-lisp-user::clear common-lisp-user::isa common-lisp-user::clear)) common-lisp-user::clear #Y(common-lisp-user::create-model-default-chunk-types-and-chunks nil nil (24 45 7 26 13 0 19 1 8 12 14 9 15 10 14 11 1 10 6 1 12 19 4 12 12 46 13 46 14 15 10 13 0 19 1 15 12 13 1 19 3 16 9 0 13 0 19 1 17 12 77 1 10 6 1 3 6 1 12 19 3 16 10 0 45 18 1 10 6 1 45 19 13 1 15 20 9 8 13 0 19 4 21 43 1 43 1 43 2 15 22 19 1 23 15 24 19 1 23 15 25 19 1 23 1 26 45 27 75 45 28 38 30 10 1 4 51 0 13 0 15 29 10 0 6 3 6 1 12 19 1 30 13 0 19 1 31 10 1 5 51 1 10 1 40 -32 43 2 15 32 19 1 30 15 33 19 1 31 29) #11# #2# 24814) si::fset)) #2# 24814) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 14 11 9 2 19 4 19 1 0 73 29) #12=#A(t (20) (common-lisp-user::delete-model ext::location (defmacro common-lisp-user::delete-model) (#2# . 25573) ext::annotate :lambda-list (&optional (common-lisp-user::model-name nil common-lisp-user::provided)) #:g2212 #:g2211 #:g2213 common-lisp-user::model-name t common-lisp-user::provided si::dm-too-many-arguments if common-lisp-user::delete-model-fct quote (common-lisp-user::delete-model-fct (common-lisp-user::current-model)) #Y(common-lisp-user::delete-model nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 39 6 10 0 4 38 2 75 45 10 10 1 39 8 10 1 5 51 1 11 11 45 12 10 2 39 6 13 4 19 1 13 15 14 13 0 15 15 15 16 10 1 6 2 6 2 12 1 17 6 4 73 29) #12# #2# 25573) si::fset)) #2# 25573) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 77 12 19 2 78 1 0 73 29) #13=#A(t (79) (common-lisp-user::delete-model-fct ext::location (defun common-lisp-user::delete-model-fct) (#2# . 25734) ext::annotate :lambda-list (common-lisp-user::model-name) common-lisp-user::model-name common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "delete-model called with no current meta-process.~%No model deleted." format finish-output common-lisp-user::mp common-lisp-user::meta-p-models gethash #:g2239 #:g2241 common-lisp-user::meta-p-cannot-define-model + #:g2240 common-lisp-user::meta-process si::structure-set common-lisp-user::meta-p-current-model common-lisp-user::saved-current common-lisp-user::model #:g2242 #:g2243 #:g2244 common-lisp-user::meta-p-events :key common-lisp-user::evt-model remove #:g2245 #:g2246 common-lisp-user::meta-p-delayed #:g2247 #:g2248 common-lisp-user::meta-p-dynamics common-lisp-user::x #Y(nil nil nil (24 45 46 26 10 0 4 12 19 1 38 29) #13# #2# 25734) #:g2249 common-lisp-user::all-module-names si::%dolist-var common-lisp-user::module-name common-lisp-user::delete-module #:g2250 #:g2252 common-lisp-user::meta-p-model-count - #:g2251 remhash #:g2253 common-lisp-user::meta-p-model-order #:g2254 zerop #:g2255 #:g2256 = #:g2257 common-lisp-user::hash-table-keys #:g2258 #:g2259 #:g2260 t #:g2261 #:g2263 #:g2262 "No model named ~S in current meta-process." "No current model to delete." #Y(common-lisp-user::delete-model-fct nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 572 14 8 19 1 9 45 20 10 1 39 520 13 1 13 0 19 1 21 12 19 2 22 39 464 14 8 19 1 9 45 23 8 1 45 24 13 1 19 1 25 12 13 0 19 2 26 45 27 13 2 15 28 9 29 13 0 19 4 29 43 3 64 385 13 1 13 0 19 1 21 12 19 2 22 12 13 0 19 1 30 12 46 31 46 32 10 2 45 33 10 1 45 34 13 1 15 28 9 5 13 0 19 4 29 43 1 43 1 10 2 45 35 13 4 13 3 19 1 36 12 14 37 33 38 12 19 4 39 45 40 13 1 15 28 9 8 13 0 19 4 29 43 1 43 1 10 2 45 41 13 4 13 3 19 1 42 12 14 37 33 38 12 19 4 39 45 43 13 1 15 28 9 9 13 0 19 4 29 43 1 43 1 10 2 45 44 13 4 13 3 19 1 45 12 14 37 34 47 12 19 4 39 45 48 13 1 15 28 9 10 13 0 19 4 29 43 1 43 1 64 33 19 0 49 45 50 75 45 51 38 16 10 1 4 51 0 13 0 19 1 52 10 1 5 51 1 10 1 40 -18 43 2 65 10 2 45 53 8 1 45 54 13 1 19 1 55 12 13 0 19 2 56 45 57 13 2 15 28 9 6 13 0 19 4 29 43 3 13 3 13 2 19 1 21 17 58 10 2 45 59 13 4 13 3 19 1 60 12 19 2 39 45 61 13 1 15 28 9 28 13 0 19 4 29 43 1 43 1 13 2 19 1 55 16 62 39 25 10 2 45 63 75 45 64 13 1 15 28 9 5 13 0 19 4 29 43 1 43 1 38 80 9 1 13 2 19 1 55 12 19 2 65 39 44 10 2 45 66 13 3 19 1 21 12 19 1 67 4 12 13 3 19 1 21 12 19 2 22 45 68 13 1 15 28 9 5 13 0 19 4 29 43 1 43 1 38 24 10 2 45 69 10 2 45 70 13 1 15 28 9 5 13 0 19 4 29 43 1 43 1 66 11 71 73 43 2 65 14 8 19 1 9 45 72 8 1 45 73 13 1 19 1 25 12 13 0 19 2 56 45 74 13 2 15 28 9 29 13 0 19 4 29 43 3 66 38 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 75 13 1 19 6 18 12 14 10 19 1 19 22 73 38 40 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 76 19 5 18 12 14 10 19 1 19 22 73 43 1 29) #13# #2# 25734) si::fset)) #2# 25734) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 33 12 14 34 9 2 19 4 35 1 0 73 29) #14=#A(t (36) (common-lisp-user::with-model ext::location (defmacro common-lisp-user::with-model) (#2# . 27633) ext::annotate :lambda-list (common-lisp-user::model-name &body common-lisp-user::body) #:g2265 #:g2264 #:g2266 si::dm-too-few-arguments common-lisp-user::model-name common-lisp-user::body gensym common-lisp-user::previous-model common-lisp-user::mp let (common-lisp-user::current-mp) if common-lisp-user::valid-model-name quote (common-lisp-user::current-model-struct) setf (common-lisp-user::meta-p-current-model (common-lisp-user::current-mp)) gethash common-lisp-user::meta-p-models common-lisp-user::cannot-define-model unwind-protect progn (common-lisp-user::meta-p-current-model (common-lisp-user::current-mp)) common-lisp-user::print-warning "~S does not name a model in the current meta-process" (common-lisp-user::print-warning "No actions taken in with-model because there is no current meta-process") #Y(common-lisp-user::with-model nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 45 12 19 0 13 12 19 0 13 12 46 14 46 15 15 16 13 0 1 17 6 2 6 1 12 15 18 13 0 15 18 15 19 15 20 10 3 6 2 6 2 12 15 16 13 1 1 21 6 2 6 1 12 15 22 15 23 15 24 15 20 10 3 6 2 12 15 25 10 0 6 2 6 3 6 3 12 15 26 15 27 15 28 10 2 7 2 12 15 22 15 29 10 1 6 3 6 3 6 2 6 4 12 15 30 15 31 15 20 10 3 6 2 6 3 6 4 12 1 32 6 4 6 3 73 43 2 29) #14# #2# 27633) t si::fset)) #2# 27633) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 33 12 14 34 9 2 19 4 35 1 0 73 29) #15=#A(t (36) (common-lisp-user::with-model-eval ext::location (defmacro common-lisp-user::with-model-eval) (#2# . 28365) ext::annotate :lambda-list (common-lisp-user::model-name &body common-lisp-user::body) #:g2268 #:g2267 #:g2269 si::dm-too-few-arguments common-lisp-user::model-name common-lisp-user::body gensym common-lisp-user::model common-lisp-user::previous-model common-lisp-user::mp let (common-lisp-user::current-mp) if common-lisp-user::valid-model-name (common-lisp-user::current-model-struct) setf (common-lisp-user::meta-p-current-model (common-lisp-user::current-mp)) gethash common-lisp-user::meta-p-models common-lisp-user::cannot-define-model unwind-protect progn (common-lisp-user::meta-p-current-model (common-lisp-user::current-mp)) common-lisp-user::print-warning "~S does not name a model in the current meta-process" (common-lisp-user::print-warning "No actions taken in with-model because there is no current meta-process") #Y(common-lisp-user::with-model-eval nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 45 12 19 0 13 12 19 0 13 12 19 0 13 12 46 14 46 15 46 16 15 17 13 0 1 18 6 2 6 1 12 15 19 13 0 15 17 13 2 10 4 6 2 6 1 12 15 19 15 20 10 2 6 2 12 15 17 13 1 1 21 6 2 6 1 12 15 22 15 23 15 24 13 2 15 25 10 0 6 2 6 3 6 3 12 15 26 15 27 15 28 10 3 7 2 12 15 22 15 29 10 1 6 3 6 3 6 2 6 4 12 15 30 15 31 10 2 6 3 6 4 6 3 12 1 32 6 4 6 3 73 43 3 29) #15# #2# 28365) t si::fset)) #2# 28365) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 47 12 19 2 48 1 0 73 29) #16=#A(t (49) (common-lisp-user::with-model-fct ext::location (defun common-lisp-user::with-model-fct) (#2# . 29186) ext::annotate :lambda-list (common-lisp-user::model-name common-lisp-user::forms-list) common-lisp-user::model-name common-lisp-user::forms-list common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::mp common-lisp-user::valid-model-name common-lisp-user::meta-p-current-model common-lisp-user::val common-lisp-user::previous-model #:g2282 common-lisp-user::meta-p-models gethash #:g2283 common-lisp-user::meta-process si::structure-set #:g2284 #:g2286 common-lisp-user::meta-p-cannot-define-model + #:g2285 si::%dolist-var common-lisp-user::x eval #:g2289 #:g2290 #:g2291 #:g2293 - #:g2292 *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "~S does not name a model in the current meta-process" format finish-output "No actions taken in with-model because there is no current meta-process" #Y(common-lisp-user::with-model-fct nil nil (24 45 7 24 45 8 26 14 9 19 1 10 45 11 10 0 39 258 13 2 19 1 12 39 208 14 9 19 1 10 73 39 10 14 9 19 1 10 12 19 1 13 12 77 46 14 46 15 14 9 19 1 10 45 16 13 5 13 3 19 1 17 12 19 2 18 45 19 13 1 15 20 9 5 13 0 19 4 21 43 1 43 1 14 9 19 1 10 45 22 8 1 45 23 13 1 19 1 24 12 13 0 19 2 25 45 26 13 2 15 20 9 29 13 0 19 4 21 43 3 64 69 64 39 10 3 45 27 75 45 28 38 17 10 1 4 51 0 10 0 16 29 51 3 10 1 5 51 1 10 1 40 -19 75 51 0 10 3 73 43 2 65 14 9 19 1 10 45 30 10 1 45 31 13 1 15 20 9 5 13 0 19 4 21 43 1 43 1 66 65 14 9 19 1 10 45 32 8 1 45 33 13 1 19 1 24 12 13 0 19 2 34 45 35 13 2 15 20 9 29 13 0 19 4 21 43 3 66 43 2 38 42 14 36 15 37 19 0 38 73 39 12 19 0 39 16 40 12 9 1 19 2 41 12 19 0 42 12 15 43 13 2 19 6 44 12 14 36 19 1 45 22 73 38 40 14 36 15 37 19 0 38 73 39 12 19 0 39 16 40 12 9 1 19 2 41 12 19 0 42 12 15 46 19 5 44 12 14 36 19 1 45 22 73 43 1 29) #16# #2# 29186) si::fset)) #2# 29186) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 15 0 15 15 15 16 19 3 17 1 0 73 29) #17=#A(t (18) (common-lisp-user::valid-model-name ext::location (defun common-lisp-user::valid-model-name) (#2# . 29942) ext::annotate :lambda-list (common-lisp-user::name) common-lisp-user::name common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-models gethash t #Y(common-lisp-user::valid-model-name nil nil (24 45 7 26 13 0 14 8 19 1 9 12 19 1 10 12 19 2 11 39 6 11 12 73 38 3 75 73 29) #17# #2# 29942) si::fset function "Returns t if name is the name of a model in the current meta-process - there must be a current mp" si::set-documentation)) #2# 29942) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 100 12 19 2 101 1 0 73 29) #18=#A(t (102) (common-lisp-user::reset-model ext::location (defun common-lisp-user::reset-model) (#2# . 30147) ext::annotate :lambda-list (common-lisp-user::mp common-lisp-user::model) common-lisp-user::mp common-lisp-user::model common-lisp-user::meta-p-current-model common-lisp-user::previous-model #:g2328 #:g2329 common-lisp-user::meta-process si::structure-set common-lisp-user::*meta-processes* common-lisp-user::mps-current #:g2330 #:g2332 common-lisp-user::meta-p-cannot-define-model + #:g2331 common-lisp-user::act-r-model-chunk-types-info common-lisp-user::info common-lisp-user::act-r-chunk-type-info-slot->index clrhash #:g2333 :adjustable t :fill-pointer make-array #:g2334 common-lisp-user::act-r-chunk-type-info common-lisp-user::act-r-chunk-type-info-slot->mask #:g2335 #:g2336 common-lisp-user::act-r-chunk-type-info-distinct-types #:g2337 #:g2338 common-lisp-user::act-r-chunk-type-info-table common-lisp-user::act-r-model-chunks-table common-lisp-user::act-r-model-chunk-ref-table #:g2339 #:g2340 common-lisp-user::act-r-model #:g2341 #:g2342 #:g2343 #:g2344 #:g2345 #:g2346 common-lisp-user::create-model-default-chunk-types-and-chunks common-lisp-user::buffer-name common-lisp-user::buffer #:g2347 #:g2348 common-lisp-user::act-r-buffer common-lisp-user::act-r-buffer-multi #:g2349 :test eq :size make-hash-table #:g2350 common-lisp-user::act-r-buffer-requests si::%dolist-var common-lisp-user::x common-lisp-user::add-request-parameter #:g2353 common-lisp-user::slot-name->mask common-lisp-user::act-r-buffer-requests-mask logior #:g2354 common-lisp-user::act-r-buffer-queries common-lisp-user::add-buffer-query #:g2355 #:g2356 #Y(nil nil nil (24 45 52 24 45 53 26 10 0 45 54 75 45 55 13 1 15 56 9 1 13 0 19 4 14 43 1 43 1 13 0 19 1 57 39 33 10 0 45 58 14 59 15 60 14 61 9 5 19 4 62 45 63 13 1 15 56 9 13 13 0 19 4 14 43 1 43 1 13 0 19 1 64 45 65 75 45 66 38 52 10 1 4 51 0 13 0 19 1 67 10 2 45 68 13 1 19 1 69 12 13 3 19 1 70 12 19 2 71 45 72 13 1 15 56 9 7 13 0 19 4 14 43 1 43 1 10 1 5 51 1 10 1 40 -54 43 2 13 0 19 1 73 45 65 75 45 66 38 16 10 1 4 51 0 13 0 19 1 74 10 1 5 51 1 10 1 40 -18 43 2 10 0 45 75 75 45 76 13 1 15 56 9 2 13 0 19 4 14 43 1 43 1 29) #18# #2# 30147) common-lisp-user::act-r-model-buffers maphash common-lisp-user::all-module-names common-lisp-user::module-name common-lisp-user::reset-module common-lisp-user::parameter-name common-lisp-user::parameter common-lisp-user::act-r-parameter-default common-lisp-user::sgp-fct #Y(nil nil nil (24 45 83 24 45 84 26 13 1 13 0 19 1 85 6 2 12 19 1 86 29) #18# #2# 30147) common-lisp-user::*act-r-parameters-table* common-lisp-user::secondary-reset-module common-lisp-user::act-r-model-code common-lisp-user::form eval common-lisp-user::tertiary-reset-module #:g2357 #:g2358 #:g2359 #:g2361 - #:g2360 #Y(common-lisp-user::reset-model nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 2 45 11 10 2 45 12 13 1 15 13 9 5 13 0 19 4 14 43 1 43 1 14 15 19 1 16 45 17 8 1 45 18 13 1 19 1 19 12 13 0 19 2 20 45 21 13 2 15 13 9 29 13 0 19 4 14 43 3 64 401 64 374 13 1 19 1 22 45 23 13 0 19 1 24 16 25 10 0 45 26 8 0 6 1 12 14 27 14 28 14 29 14 28 19 5 30 45 31 13 1 15 32 9 1 13 0 19 4 14 43 1 43 1 13 0 19 1 33 16 25 10 0 45 34 8 0 45 35 13 1 15 32 9 3 13 0 19 4 14 43 1 43 1 13 0 19 1 36 16 25 10 0 45 37 75 45 38 13 1 15 32 9 5 13 0 19 4 14 43 1 43 1 13 0 19 1 39 16 25 13 2 19 1 40 16 25 13 2 19 1 41 16 25 10 2 45 42 11 28 45 43 13 1 15 44 9 7 13 0 19 4 14 43 1 43 1 10 2 45 45 11 28 45 46 13 1 15 44 9 8 13 0 19 4 14 43 1 43 1 10 2 45 47 75 45 48 13 1 15 44 9 9 13 0 19 4 14 43 1 43 1 10 2 45 49 75 45 50 13 1 15 44 9 12 13 0 19 4 14 43 1 43 1 13 2 19 1 51 34 77 12 13 2 19 1 78 17 79 19 0 80 45 65 75 45 81 38 16 10 1 4 51 0 13 0 19 1 82 10 1 5 51 1 10 1 40 -18 43 2 34 87 12 11 88 17 79 19 0 80 45 65 75 45 81 38 16 10 1 4 51 0 13 0 19 1 89 10 1 5 51 1 10 1 40 -18 43 2 13 2 19 1 90 45 65 75 45 91 38 15 10 1 4 51 0 10 0 16 92 10 1 5 51 1 10 1 40 -17 43 2 19 0 80 45 65 75 45 81 38 16 10 1 4 51 0 13 0 19 1 93 10 1 5 51 1 10 1 40 -18 75 73 43 2 43 1 65 10 2 45 94 10 1 45 95 13 1 15 13 9 5 13 0 19 4 14 43 1 43 1 66 65 14 15 19 1 16 45 96 8 1 45 97 13 1 19 1 19 12 13 0 19 2 98 45 99 13 2 15 13 9 29 13 0 19 4 14 43 3 66 43 1 29) #18# #2# 30147) si::fset)) #2# 30147) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 3 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 25 78 21 15 12 1 23 12 19 2 24 1 0 73 29) #19=#A(t (26) (common-lisp-user::request-tracking "REQUEST-TRACKING-" (common-lisp-user::buffer common-lisp-user::module common-lisp-user::spec) ((common-lisp-user::buffer nil t nil 0 nil) (common-lisp-user::module nil t nil 1 nil) (common-lisp-user::spec nil t nil 2 nil)) common-lisp-user::copy-request-tracking (common-lisp-user::make-request-tracking) common-lisp-user::request-tracking-p si::define-structure ext::location (defstruct common-lisp-user::request-tracking) (#2# . 32902) ext::annotate common-lisp-user::make-request-tracking (defun common-lisp-user::make-request-tracking) (#2# . 32902) :lambda-list (&key #20=#:buffer #21=#:module #22=#:spec) (nil :spec :module :buffer) #20# #21# #22# 0 si::make-structure #Y(common-lisp-user::make-request-tracking nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 15 21 13 2 13 1 13 0 19 4 22 29) #19# #2# 32902) si::fset find-class)) #2# 32902) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #23=#A(t (27) (common-lisp-user::track-request ext::location (defun common-lisp-user::track-request) (#2# . 33004) ext::annotate :lambda-list (common-lisp-user::buffer-instance common-lisp-user::spec) common-lisp-user::buffer-instance common-lisp-user::spec common-lisp-user::act-r-buffer-trackable :buffer common-lisp-user::act-r-buffer-name :module common-lisp-user::act-r-buffer-module :spec common-lisp-user::make-request-tracking #:g2367 common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model #:g2365 common-lisp-user::act-r-model-tracked-requests #:g2366 common-lisp-user::act-r-model si::structure-set #Y(common-lisp-user::track-request nil nil (24 45 7 24 45 8 26 13 1 19 1 9 73 39 67 14 10 13 1 19 1 11 12 14 12 13 1 19 1 13 12 14 14 13 0 19 6 15 45 16 14 17 19 1 18 39 10 14 17 19 1 18 12 19 1 19 45 20 13 1 13 0 19 1 21 3 45 22 13 1 15 23 9 12 13 0 19 4 24 43 3 29) #23# #2# 33004) si::fset)) #2# 33004) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #24=#A(t (31) (common-lisp-user::request-completed-p ext::location (defun common-lisp-user::request-completed-p) (#2# . 33412) ext::annotate :lambda-list (common-lisp-user::spec) common-lisp-user::spec common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "request-completed-p called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "request-completed-p called with no current model." common-lisp-user::act-r-model-tracked-requests :key common-lisp-user::request-tracking-spec :test eq find t #Y(common-lisp-user::request-completed-p nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 96 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 43 13 0 14 8 19 1 9 73 39 10 14 8 19 1 9 12 19 1 20 12 19 1 22 12 14 23 15 24 14 25 15 26 19 6 27 76 73 39 4 11 28 73 29) #24# #2# 33412) si::fset)) #2# 33412) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 1 0 73 29) #25=#A(t (36) (common-lisp-user::complete-request ext::location (defun common-lisp-user::complete-request) (#2# . 33812) ext::annotate :lambda-list (common-lisp-user::spec) common-lisp-user::spec common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "complete-request called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "complete-request called with no current model." common-lisp-user::cm #:g2370 common-lisp-user::act-r-model-tracked-requests :key common-lisp-user::request-tracking-spec :test eq remove #:g2371 common-lisp-user::act-r-model si::structure-set t #Y(common-lisp-user::complete-request nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 117 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 64 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 20 45 22 10 0 45 23 13 2 13 1 19 1 24 12 14 25 15 26 14 27 15 28 19 6 29 45 30 13 1 15 31 9 12 13 0 19 4 32 43 1 43 1 11 33 73 43 1 29) #25# #2# 33812) si::fset)) #2# 33812) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 1 0 73 29) #26=#A(t (36) (common-lisp-user::complete-all-buffer-requests ext::location (defun common-lisp-user::complete-all-buffer-requests) (#2# . 34196) ext::annotate :lambda-list (common-lisp-user::buffer-name) common-lisp-user::buffer-name common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "complete-all-buffer-requests called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "complete-all-buffer-requests called with no current model." common-lisp-user::cm #:g2374 common-lisp-user::act-r-model-tracked-requests :key common-lisp-user::request-tracking-buffer :test eq remove #:g2375 common-lisp-user::act-r-model si::structure-set t #Y(common-lisp-user::complete-all-buffer-requests nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 117 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 64 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 20 45 22 10 0 45 23 13 2 13 1 19 1 24 12 14 25 15 26 14 27 15 28 19 6 29 45 30 13 1 15 31 9 12 13 0 19 4 32 43 1 43 1 11 33 73 43 1 29) #26# #2# 34196) si::fset)) #2# 34196) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 1 0 73 29) #27=#A(t (36) (common-lisp-user::complete-all-module-requests ext::location (defun common-lisp-user::complete-all-module-requests) (#2# . 34632) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #8# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "complete-all-module-requests called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "complete-all-module-requests called with no current model." common-lisp-user::cm #:g2378 common-lisp-user::act-r-model-tracked-requests :key common-lisp-user::request-tracking-module :test eq remove #:g2379 common-lisp-user::act-r-model si::structure-set t #Y(common-lisp-user::complete-all-module-requests nil nil (24 45 7 26 14 8 19 1 9 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 12 14 10 19 1 19 22 73 38 117 14 8 19 1 9 12 19 1 20 76 39 42 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 12 14 10 19 1 19 22 73 38 64 14 8 19 1 9 39 10 14 8 19 1 9 12 19 1 20 45 22 10 0 45 23 13 2 13 1 19 1 24 12 14 25 15 26 14 27 15 28 19 6 29 45 30 13 1 15 31 9 12 13 0 19 4 32 43 1 43 1 11 33 73 43 1 29) #27# #2# 34632) si::fset)) #2# 34632))
