(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::buffers-module-name) proclaim)) #1=#P"C:/Users/Son Pham/Desktop/actr7/framework/modules.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::remove-modules-parameters) proclaim)) #1# 22210) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::uninstall-buffers) proclaim)) #1# 22271) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::buffer-exists) proclaim)) #1# 22324) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::install-parameters) proclaim)) #1# 22373) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t t) t) common-lisp-user::install-buffers) proclaim)) #1# 22429) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::parse-parameters) proclaim)) #1# 22482) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function (t) t) common-lisp-user::parse-buffers) proclaim)) #1# 22534) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((ftype (function nil t) common-lisp-user::buffers) proclaim)) #1# 22583) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 6 19 0 3 52 0 15 0 15 4 15 5 19 3 6 15 0 15 7 15 8 15 9 19 4 10 1 0 73 29) #A(t (11) (common-lisp-user::*modules-lookup* si::*make-special boundp common-lisp-user::make-act-r-modules variable "The table of all defined modules" si::set-documentation ext::location (defvar common-lisp-user::*modules-lookup*) (#1# . 22625) ext::annotate)) #1# 22625) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 15 0 15 10 15 11 19 3 12 1 0 73 29) #2=#A(t (13) (common-lisp-user::max-module-name-length ext::location (defun common-lisp-user::max-module-name-length) (#1# . 22825) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-name-len #Y(common-lisp-user::max-module-name-length nil nil (26 14 6 19 1 7 29) #2# #1# 22825) si::fset function "Length of the longest module's name" si::set-documentation)) #1# 22825) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #3=#A(t (10) (common-lisp-user::global-modules-table ext::location (defun common-lisp-user::global-modules-table) (#1# . 23012) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-table #Y(common-lisp-user::global-modules-table nil nil (26 14 6 19 1 7 29) #3# #1# 23012) si::fset)) #1# 23012) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #4=#A(t (10) (common-lisp-user::all-module-names ext::location (defun common-lisp-user::all-module-names) (#1# . 23086) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-sorted-names #Y(common-lisp-user::all-module-names nil nil (26 14 6 19 1 7 29) #4# #1# 23086) si::fset)) #1# 23086) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #5=#A(t (10) (common-lisp-user::notified-modules ext::location (defun common-lisp-user::notified-modules) (#1# . 23164) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-notify #Y(common-lisp-user::notified-modules nil nil (26 14 6 19 1 7 29) #5# #1# 23164) si::fset)) #1# 23164) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #6=#A(t (10) (common-lisp-user::run-notify-modules ext::location (defun common-lisp-user::run-notify-modules) (#1# . 23235) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-run-notify #Y(common-lisp-user::run-notify-modules nil nil (26 14 6 19 1 7 29) #6# #1# 23235) si::fset)) #1# 23235) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #7=#A(t (10) (common-lisp-user::run-over-notify-modules ext::location (defun common-lisp-user::run-over-notify-modules) (#1# . 23312) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-run-over-notify #Y(common-lisp-user::run-over-notify-modules nil nil (26 14 6 19 1 7 29) #7# #1# 23312) si::fset)) #1# 23312) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 8 12 19 2 9 1 0 73 29) #8=#A(t (10) (common-lisp-user::updating-modules ext::location (defun common-lisp-user::updating-modules) (#1# . 23399) ext::annotate :lambda-list common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-update #Y(common-lisp-user::updating-modules nil nil (26 14 6 19 1 7 29) #8# #1# 23399) si::fset)) #1# 23399) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 70 12 14 71 9 4 19 4 72 1 0 73 29) #9=#A(t (73) (common-lisp-user::define-module ext::location (defmacro common-lisp-user::define-module) (#1# . 23470) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-list common-lisp-user::params-list &key (common-lisp-user::version nil) (documentation nil) (common-lisp-user::creation nil) (common-lisp-user::reset nil) (common-lisp-user::query nil) (common-lisp-user::request nil) (common-lisp-user::buffer-mod nil) (common-lisp-user::params nil) (delete nil) (common-lisp-user::notify-on-clear nil) (common-lisp-user::update nil) (warning nil) (search nil) (common-lisp-user::offset nil) (common-lisp-user::run-start nil) (common-lisp-user::run-end nil)) #:g1445 #:g1444 #:g1446 si::dm-too-few-arguments common-lisp-user::module-name common-lisp-user::buffer-list common-lisp-user::params-list :version si::search-keyword #:g1447 si::missing-keyword eq common-lisp-user::version :documentation #:g1448 documentation :creation #:g1449 common-lisp-user::creation :reset #:g1450 common-lisp-user::reset :query #:g1451 common-lisp-user::query :request #:g1452 common-lisp-user::request :buffer-mod #:g1453 common-lisp-user::buffer-mod :params #:g1454 common-lisp-user::params :delete #:g1455 delete :notify-on-clear #:g1456 common-lisp-user::notify-on-clear :update #:g1457 common-lisp-user::update :warning #:g1458 warning :search #:g1459 search :offset #:g1460 common-lisp-user::offset :run-start #:g1461 common-lisp-user::run-start :run-end #:g1462 common-lisp-user::run-end (:run-end :run-start :offset :search :warning :update :notify-on-clear :delete :params :buffer-mod :request :query :reset :creation :documentation :version) si::check-keyword common-lisp-user::define-module-fct quote append #Y(common-lisp-user::define-module nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 76 39 6 13 3 19 1 10 10 1 4 12 10 1 5 51 1 22 45 12 10 2 76 39 6 13 4 19 1 10 10 2 4 12 10 2 5 51 2 22 45 13 13 3 15 14 19 2 15 45 16 13 0 1 17 17 18 39 4 75 38 3 10 0 45 19 13 5 15 20 19 2 15 45 21 13 0 1 17 17 18 39 4 75 38 3 10 0 45 22 13 7 15 23 19 2 15 45 24 13 0 1 17 17 18 39 4 75 38 3 10 0 45 25 13 9 15 26 19 2 15 45 27 13 0 1 17 17 18 39 4 75 38 3 10 0 45 28 13 11 15 29 19 2 15 45 30 13 0 1 17 17 18 39 4 75 38 3 10 0 45 31 13 13 15 32 19 2 15 45 33 13 0 1 17 17 18 39 4 75 38 3 10 0 45 34 13 15 15 35 19 2 15 45 36 13 0 1 17 17 18 39 4 75 38 3 10 0 45 37 13 17 15 38 19 2 15 45 39 13 0 1 17 17 18 39 4 75 38 3 10 0 45 40 13 19 15 41 19 2 15 45 42 13 0 1 17 17 18 39 4 75 38 3 10 0 45 43 13 21 15 44 19 2 15 45 45 13 0 1 17 17 18 39 4 75 38 3 10 0 45 46 13 23 15 47 19 2 15 45 48 13 0 1 17 17 18 39 4 75 38 3 10 0 45 49 13 25 15 50 19 2 15 45 51 13 0 1 17 17 18 39 4 75 38 3 10 0 45 52 13 27 15 53 19 2 15 45 54 13 0 1 17 17 18 39 4 75 38 3 10 0 45 55 13 29 15 56 19 2 15 45 57 13 0 1 17 17 18 39 4 75 38 3 10 0 45 58 13 31 15 59 19 2 15 45 60 13 0 1 17 17 18 39 4 75 38 3 10 0 45 61 13 33 15 62 19 2 15 45 63 13 0 1 17 17 18 39 4 75 38 3 10 0 45 64 13 35 15 65 19 2 66 15 67 15 68 10 34 6 2 12 15 68 10 33 6 2 12 15 68 10 32 6 2 12 10 30 73 39 8 14 14 10 30 6 2 73 12 10 28 73 39 8 14 20 10 28 6 2 73 12 14 23 15 68 10 26 6 2 12 14 26 15 68 10 24 6 2 12 14 29 15 68 10 22 6 2 12 14 32 15 68 10 20 6 2 12 14 35 15 68 10 18 6 2 12 14 38 15 68 10 16 6 2 12 14 41 15 68 10 14 6 2 12 14 44 15 68 10 12 6 2 12 14 47 15 68 10 10 6 2 12 14 50 15 68 10 8 6 2 12 14 53 15 68 10 6 6 2 12 14 56 15 68 10 4 6 2 12 14 59 15 68 10 2 6 2 12 14 62 15 68 10 0 6 2 6 28 12 19 3 69 7 5 73 29) #9# #1# 23470) t si::fset)) #1# 23470) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 148 12 19 2 149 1 0 73 29) #10=#A(t (150) (common-lisp-user::define-module-fct ext::location (defun common-lisp-user::define-module-fct) (#1# . 24684) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-list common-lisp-user::params-list &key (common-lisp-user::version #11="" common-lisp-user::version?) (documentation #12="" common-lisp-user::docs?) common-lisp-user::creation common-lisp-user::reset common-lisp-user::query common-lisp-user::request common-lisp-user::buffer-mod common-lisp-user::params delete common-lisp-user::notify-on-clear common-lisp-user::update warning search common-lisp-user::offset common-lisp-user::run-start common-lisp-user::run-end) common-lisp-user::module-name common-lisp-user::buffer-list common-lisp-user::params-list (nil :run-end :run-start :offset :search :warning :update :notify-on-clear :delete :params :buffer-mod :request :query :reset :creation :documentation :version) #11# common-lisp-user::version? common-lisp-user::version #12# common-lisp-user::docs? documentation common-lisp-user::creation common-lisp-user::reset common-lisp-user::query common-lisp-user::request common-lisp-user::buffer-mod common-lisp-user::params delete common-lisp-user::notify-on-clear common-lisp-user::update warning search common-lisp-user::offset common-lisp-user::run-start common-lisp-user::run-end *error-output* #13="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Modules should always provide a version and documentation string." format finish-output common-lisp-user::meta-process-names common-lisp-user::default eq "Cannot create a new module when there is a meta-process other than the default defined." "Cannot create a new module when there are models defined." "Nil is not a valid module-name. No module defined." symbolp "~s is not a symbol and thus not a valid module name.~%No module defined." common-lisp-user::valid-module-name "Module ~S already exists and cannot be redefined.  Delete it with undefine-module first if you want to redefine it." "A module with a buffer must support queries.~%Module ~s not defined." common-lisp-user::x listp common-lisp-user::buffer-exists #Y(nil nil nil (24 45 52 26 10 0 16 53 39 7 10 0 4 73 38 4 10 0 73 12 19 1 54 29) #10# #1# 24684) some "A buffer name requested when defining module ~s is already used by another module." "Existing buffer names are: ~s" common-lisp-user::buffers "Module attempted to create buffers: ~s" "Module ~s not defined" common-lisp-user::fctornil <= every "Reset parameter is not a function, functon name, nil or a list of one, two, or three such items." "Invalid parameter for a module call-back function" (common-lisp-user::creation common-lisp-user::query common-lisp-user::request common-lisp-user::buffer-mod common-lisp-user::params delete common-lisp-user::notify-on-clear common-lisp-user::update warning search common-lisp-user::offset common-lisp-user::run-start common-lisp-user::run-end) common-lisp-user::names common-lisp-user::items "Parameter: ~s is not a function, function name, or nil" "Module ~s not defined" common-lisp-user::act-r-parameter-p notevery "Invalid params-list ~s.~%Module ~s not defined." "Must specify a param function because parameters are used.~%Module ~s not defined." common-lisp-user::parse-buffers common-lisp-user::parse-parameters common-lisp-user::parameters :error "Error in module buffer definitions.~%Module ~s not defined." "Error in module parameter definitions.~%Module ~s not defined." :name :buffers :version :documentation :creation :reset :secondary-reset second :tertiary-reset third :query :request :buffer-mod :params :delete :notify-on-clear :update :warn :search :offset :run-notify :run-over-notify common-lisp-user::make-act-r-module common-lisp-user::new-mod common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-table si::hash-set #:g1488 common-lisp-user::act-r-modules-sorted-names symbol-name string< #Y(nil nil nil (24 45 52 26 10 25 16 111 12 10 0 16 111 12 19 2 112 29) #10# #1# 24684) position-if common-lisp-user::it common-lisp-user::splice-into-list #:g1489 common-lisp-user::act-r-modules si::structure-set #:g1490 #:g1492 common-lisp-user::act-r-modules-count + #:g1491 "~S" common-lisp-user::act-r-modules-name-len #:g1493 "~S" #:g1494 common-lisp-user::install-buffers common-lisp-user::install-parameters #:g1497 #:g1495 common-lisp-user::act-r-modules-notify #:g1496 #:g1500 #:g1498 common-lisp-user::act-r-modules-update #:g1499 #:g1503 #:g1501 common-lisp-user::act-r-modules-run-notify #:g1502 #:g1506 #:g1504 common-lisp-user::act-r-modules-run-over-notify #:g1505 #Y(common-lisp-user::define-module-fct nil nil (24 45 7 24 45 8 24 45 9 28 10 22 40 4 15 11 75 45 12 46 13 22 40 4 15 14 75 45 15 46 16 22 40 2 77 46 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 22 40 2 77 46 26 22 40 2 77 46 27 22 40 2 77 46 28 22 40 2 77 46 29 22 40 2 77 46 30 10 17 39 3 10 15 76 39 37 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 38 19 5 39 14 31 19 1 40 19 0 41 16 35 12 9 1 19 2 36 40 11 19 0 41 4 12 1 42 17 43 76 39 42 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 44 19 5 39 12 14 31 19 1 40 22 73 38 1447 19 0 34 39 42 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 45 19 5 39 12 14 31 19 1 40 22 73 38 1401 10 20 76 39 42 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 46 19 5 39 12 14 31 19 1 40 22 73 38 1355 10 20 16 47 76 39 44 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 48 13 20 19 6 39 12 14 31 19 1 40 22 73 38 1305 13 20 19 1 49 39 44 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 50 13 20 19 6 39 12 14 31 19 1 40 22 73 38 1255 10 19 39 4 10 11 76 39 44 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 51 13 20 19 6 39 12 14 31 19 1 40 22 73 38 1203 10 19 39 9 34 55 12 13 19 19 2 56 39 160 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 57 13 20 19 6 39 14 31 19 1 40 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 58 19 0 59 12 19 6 39 14 31 19 1 40 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 60 13 19 19 6 39 14 31 19 1 40 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 61 13 20 19 6 39 12 14 31 19 1 40 22 73 38 1030 10 12 16 53 76 39 6 13 12 19 1 62 40 27 10 12 16 53 39 21 10 12 16 35 12 9 3 19 2 63 39 9 33 62 12 13 12 19 2 64 76 39 42 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 65 19 5 39 12 14 31 19 1 40 22 73 38 946 13 13 19 1 62 39 76 13 11 19 1 62 39 69 13 10 19 1 62 39 62 13 9 19 1 62 39 55 13 8 19 1 62 39 48 13 7 19 1 62 39 41 13 3 19 1 62 39 34 13 2 19 1 62 39 27 13 6 19 1 62 39 20 13 5 19 1 62 39 13 13 1 19 1 62 39 6 13 0 19 1 62 76 39 186 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 66 19 5 39 14 31 19 1 40 13 13 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 10 0 6 13 12 15 67 46 68 46 69 38 63 10 0 4 12 19 1 62 76 39 41 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 70 10 1 4 12 19 6 39 14 31 19 1 40 10 0 5 12 10 1 5 12 53 1 53 0 10 0 76 39 -66 43 2 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 71 13 20 19 6 39 12 14 31 19 1 40 22 73 38 676 15 72 13 18 19 2 73 39 46 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 74 13 18 13 20 19 7 39 12 14 31 19 1 40 22 73 38 622 10 18 39 4 10 8 76 39 44 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 75 13 20 19 6 39 12 14 31 19 1 40 22 73 38 570 13 19 19 1 76 12 13 18 19 1 77 12 46 78 46 59 14 79 10 0 17 43 39 44 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 80 13 22 19 6 39 12 14 31 19 1 40 22 73 38 501 14 79 10 1 17 43 39 44 14 31 15 32 19 0 33 73 39 12 19 0 34 16 35 12 9 1 19 2 36 12 19 0 37 12 15 81 13 22 19 6 39 12 14 31 19 1 40 22 73 38 450 14 82 13 22 14 83 13 0 14 84 13 18 14 85 13 16 14 86 13 15 14 87 10 14 16 53 39 7 10 14 4 73 38 4 10 14 73 12 14 88 10 14 16 53 39 7 10 14 16 89 38 3 75 73 12 14 90 10 14 16 53 39 7 10 14 16 91 38 3 75 73 12 14 92 13 13 14 93 13 12 14 94 13 11 14 95 13 10 14 96 13 9 14 97 13 8 14 98 13 7 14 99 13 6 14 100 13 5 14 101 13 4 14 102 13 3 14 103 13 2 19 40 104 45 105 13 23 14 106 19 1 107 12 13 0 19 3 108 11 106 45 109 14 106 19 1 110 12 34 113 12 14 106 19 1 110 12 19 2 114 45 115 10 0 39 6 10 0 73 38 8 14 106 19 1 110 16 35 12 43 1 13 24 19 3 116 45 117 13 1 15 118 9 7 13 0 19 4 119 43 1 43 1 11 106 45 120 8 1 45 121 13 1 19 1 122 12 13 0 19 2 123 45 124 13 2 15 118 9 1 13 0 19 4 119 43 3 77 15 125 13 23 19 3 39 16 35 12 14 106 19 1 126 12 19 2 36 39 32 11 106 45 127 77 15 128 13 24 19 3 39 16 35 45 129 13 1 15 118 9 2 13 0 19 4 119 43 1 43 1 13 23 13 1 19 2 130 13 23 13 2 19 2 131 10 9 39 32 10 23 45 132 11 106 45 133 13 1 13 0 19 1 134 3 45 135 13 1 15 118 9 3 13 0 19 4 119 43 3 10 8 39 32 10 23 45 136 11 106 45 137 13 1 13 0 19 1 138 3 45 139 13 1 15 118 9 4 13 0 19 4 119 43 3 10 4 39 32 10 23 45 140 11 106 45 141 13 1 13 0 19 1 142 3 45 143 13 1 15 118 9 5 13 0 19 4 119 43 3 10 3 39 32 10 23 45 144 11 106 45 145 13 1 13 0 19 1 146 3 45 147 13 1 15 118 9 6 13 0 19 4 119 43 3 10 23 73 43 1 43 2 29) #10# #1# 24684) si::fset)) #1# 24684) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 1 0 73 29) #14=#A(t (18) (common-lisp-user::undefine-module ext::location (defmacro common-lisp-user::undefine-module) (#1# . 32644) ext::annotate :lambda-list (common-lisp-user::module-name) #:g1508 #:g1507 #:g1509 si::dm-too-few-arguments common-lisp-user::module-name si::dm-too-many-arguments common-lisp-user::undefine-module-fct quote #Y(common-lisp-user::undefine-module nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 39 6 13 3 19 1 12 15 13 15 14 10 0 6 2 6 2 73 29) #14# #1# 32644) t si::fset)) #1# 32644) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 67 12 19 2 68 1 0 73 29) #15=#A(t (69) (common-lisp-user::undefine-module-fct ext::location (defun common-lisp-user::undefine-module-fct) (#1# . 32898) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::meta-process-names length > common-lisp-user::default eq *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models common-lisp-user::current-model "Cannont delete a module when there is a meta-process other than the default defined." format finish-output "Cannot delete a module when there are models defined." common-lisp-user::valid-module-name "~S is not the name of a currently defined module." common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-table gethash common-lisp-user::act-r-module-buffers common-lisp-user::uninstall-buffers common-lisp-user::remove-modules-parameters remhash #:g1525 common-lisp-user::act-r-modules-sorted-names remove #:g1526 common-lisp-user::act-r-modules si::structure-set #:g1527 #:g1529 common-lisp-user::act-r-modules-count - #:g1528 "~S" common-lisp-user::act-r-modules-name-len = #:g1530 max common-lisp-user::x "~S" #Y(nil nil nil (24 45 47 26 77 15 48 13 0 19 3 19 16 9 29) #15# #1# 32898) common-lisp-user::all-module-names mapcar apply #:g1531 #:g1532 common-lisp-user::act-r-modules-notify #:g1533 #:g1534 common-lisp-user::act-r-modules-run-notify #:g1535 #:g1536 common-lisp-user::act-r-modules-run-over-notify #:g1537 #:g1538 common-lisp-user::act-r-modules-update #:g1539 t #Y(common-lisp-user::undefine-module-fct nil nil (24 45 7 26 19 0 8 16 9 12 9 1 19 2 10 40 11 19 0 8 4 12 1 11 17 12 76 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 9 12 9 1 19 2 10 12 19 0 17 12 15 18 19 5 19 12 14 13 19 1 20 22 73 38 388 19 0 16 39 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 9 12 9 1 19 2 10 12 19 0 17 12 15 21 19 5 19 12 14 13 19 1 20 22 73 38 342 13 0 19 1 22 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 9 12 9 1 19 2 10 12 19 0 17 12 15 23 13 0 19 6 19 12 14 13 19 1 20 22 73 38 291 13 0 14 24 19 1 25 12 19 2 26 12 19 1 27 12 19 1 28 13 0 19 1 29 13 0 14 24 19 1 25 17 30 11 24 45 31 13 1 14 24 19 1 32 12 19 2 33 45 34 13 1 15 35 9 7 13 0 19 4 36 43 1 43 1 11 24 45 37 8 1 45 38 13 1 19 1 39 12 13 0 19 2 40 45 41 13 2 15 35 9 1 13 0 19 4 36 43 3 77 15 42 13 0 19 3 19 16 9 12 14 24 19 1 43 12 19 2 44 39 39 11 24 45 45 33 46 12 34 49 12 19 0 50 12 19 2 51 12 19 2 52 45 53 13 1 15 35 9 2 13 0 19 4 36 43 1 43 1 11 24 45 54 13 1 14 24 19 1 55 12 19 2 33 45 56 13 1 15 35 9 3 13 0 19 4 36 43 1 43 1 11 24 45 57 13 1 14 24 19 1 58 12 19 2 33 45 59 13 1 15 35 9 5 13 0 19 4 36 43 1 43 1 11 24 45 60 13 1 14 24 19 1 61 12 19 2 33 45 62 13 1 15 35 9 6 13 0 19 4 36 43 1 43 1 11 24 45 63 13 1 14 24 19 1 64 12 19 2 33 45 65 13 1 15 35 9 4 13 0 19 4 36 43 1 43 1 11 66 73 29) #15# #1# 32898) si::fset)) #1# 32898) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 14 16 9 2 19 4 17 1 0 73 29) #16=#A(t (18) (common-lisp-user::get-module ext::location (defmacro common-lisp-user::get-module) (#1# . 35023) ext::annotate :lambda-list (common-lisp-user::module-name) #:g1541 #:g1540 #:g1542 si::dm-too-few-arguments common-lisp-user::module-name si::dm-too-many-arguments common-lisp-user::get-module-fct quote #Y(common-lisp-user::get-module nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 39 6 13 3 19 1 12 15 13 15 14 10 0 6 2 6 2 73 29) #16# #1# 35023) t si::fset)) #1# 35023) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #17=#A(t (30) (common-lisp-user::get-module-fct ext::location (defun common-lisp-user::get-module-fct) (#1# . 35108) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::*meta-processes* common-lisp-user::mps-current *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "get-module called with no current meta-process." format finish-output common-lisp-user::meta-p-current-model "get-module called with no current model." common-lisp-user::act-r-model-modules-table gethash common-lisp-user::present mod t "~s is not the name of a module in the current model." #Y(common-lisp-user::get-module-fct nil nil (24 45 7 26 57 0 60 188 14 8 19 1 9 76 39 39 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 17 19 5 18 14 10 19 1 19 38 137 14 8 19 1 9 12 19 1 20 76 39 39 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 21 19 5 18 14 10 19 1 19 38 87 13 1 14 8 19 1 9 73 39 10 14 8 19 1 9 12 19 1 20 12 19 1 22 12 19 2 23 47 1 24 45 25 10 1 39 11 13 0 14 26 72 2 36 2 38 39 14 10 15 11 19 0 12 73 39 12 19 0 13 16 14 12 9 1 19 2 15 12 19 0 16 12 15 27 13 3 19 6 18 14 10 19 1 19 43 2 77 77 72 2 63 29) #17# #1# 35108) si::fset)) #1# 35108) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #18=#A(t (13) (common-lisp-user::get-abstract-module ext::location (defun common-lisp-user::get-abstract-module) (#1# . 35600) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-table gethash #Y(common-lisp-user::get-abstract-module nil nil (24 45 7 26 13 0 14 8 19 1 9 12 19 2 10 29) #18# #1# 35600) si::fset)) #1# 35600) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 1 0 73 29) #19=#A(t (14) (common-lisp-user::valid-module-name ext::location (defun common-lisp-user::valid-module-name) (#1# . 35707) ext::annotate :lambda-list (common-lisp-user::name) common-lisp-user::name common-lisp-user::*modules-lookup* common-lisp-user::act-r-modules-table gethash t #Y(common-lisp-user::valid-module-name nil nil (24 45 7 26 13 0 14 8 19 1 9 12 19 2 10 39 6 11 11 73 38 3 75 73 29) #19# #1# 35707) si::fset)) #1# 35707) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 24 12 19 2 25 1 0 73 29) #20=#A(t (26) (common-lisp-user::process-parameters ext::location (defun common-lisp-user::process-parameters) (#1# . 35818) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::param) common-lisp-user::module-name common-lisp-user::param common-lisp-user::get-module-fct common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::instance common-lisp-user::act-r-module-params *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S. Cannot process parameters for it." format finish-output #Y(common-lisp-user::process-parameters nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 1 19 1 10 12 46 11 46 12 10 1 39 24 13 1 19 1 13 73 39 14 13 1 19 1 13 12 13 0 13 2 20 2 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 29) #20# #1# 35818) si::fset)) #1# 35818) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #21=#A(t (24) (common-lisp-user::instantiate-module ext::location (defun common-lisp-user::instantiate-module) (#1# . 36214) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::model-name) common-lisp-user::module-name common-lisp-user::model-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::act-r-module-creation *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S. Cannot instantiate it." format finish-output #Y(common-lisp-user::instantiate-module nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 0 39 22 13 0 19 1 11 73 39 12 13 0 19 1 11 12 13 1 20 1 23 38 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 13 2 19 6 20 12 14 12 19 1 21 22 73 43 1 29) #21# #1# 36214) si::fset)) #1# 36214) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #22=#A(t (27) (common-lisp-user::reset-module ext::location (defun common-lisp-user::reset-module) (#1# . 36533) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-reset *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model.  Cannot reset it." format finish-output "There is no module named ~S defined. Cannot reset it." #Y(common-lisp-user::reset-module nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 81 13 1 19 1 10 47 1 11 45 12 10 1 39 22 13 2 19 1 13 73 39 12 13 2 19 1 13 12 13 0 20 1 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #22# #1# 36533) si::fset)) #1# 36533) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #23=#A(t (27) (common-lisp-user::secondary-reset-module ext::location (defun common-lisp-user::secondary-reset-module) (#1# . 37106) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-secondary-reset *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model.  Cannot reset it." format finish-output "There is no module named ~S defined. Cannot reset it." #Y(common-lisp-user::secondary-reset-module nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 81 13 1 19 1 10 47 1 11 45 12 10 1 39 22 13 2 19 1 13 73 39 12 13 2 19 1 13 12 13 0 20 1 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #23# #1# 37106) si::fset)) #1# 37106) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #24=#A(t (27) (common-lisp-user::tertiary-reset-module ext::location (defun common-lisp-user::tertiary-reset-module) (#1# . 37710) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-tertiary-reset *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model.  Cannot reset it." format finish-output "There is no module named ~S defined. Cannot reset it." #Y(common-lisp-user::tertiary-reset-module nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 81 13 1 19 1 10 47 1 11 45 12 10 1 39 22 13 2 19 1 13 73 39 12 13 2 19 1 13 12 13 0 20 1 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #24# #1# 37710) si::fset)) #1# 37710) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 32 12 19 2 33 1 0 73 29) #25=#A(t (34) (common-lisp-user::query-module ext::location (defun common-lisp-user::query-module) (#1# . 38309) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::query common-lisp-user::value) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::query common-lisp-user::value common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-query error eq common-lisp-user::state *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Module ~s does not support queries." format finish-output "There is no module named ~S in the current model. Cannot query it." "There is no module named ~S. Cannot query it." #Y(common-lisp-user::query-module nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 13 3 19 1 11 45 12 10 0 39 181 13 4 19 1 13 47 1 14 45 15 10 1 39 122 13 2 19 1 16 39 72 13 4 1 17 17 18 39 45 10 3 39 20 13 2 19 1 16 12 13 0 13 5 15 19 15 17 20 4 23 38 20 13 2 19 1 16 12 13 0 13 5 15 19 15 17 20 4 23 76 73 38 18 13 2 19 1 16 12 13 0 13 5 13 4 13 3 20 4 23 38 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 27 13 6 19 6 28 12 14 20 19 1 29 22 73 38 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 30 13 6 19 6 28 12 14 20 19 1 29 22 73 43 2 38 42 14 20 15 21 19 0 22 73 39 12 19 0 23 16 24 12 9 1 19 2 25 12 19 0 26 12 15 31 13 4 19 6 28 12 14 20 19 1 29 22 73 43 1 29) #25# #1# 38309) si::fset)) #1# 38309) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #26=#A(t (24) (common-lisp-user::warn-module? ext::location (defun common-lisp-user::warn-module?) (#1# . 39304) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::act-r-module-warn t *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S. Cannot determine if it needs warnings." format finish-output #Y(common-lisp-user::warn-module? nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 17 13 0 19 1 10 39 6 11 11 73 38 3 75 73 38 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 13 1 19 6 20 12 14 12 19 1 21 22 73 43 1 29) #26# #1# 39304) si::fset)) #1# 39304) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #27=#A(t (30) (common-lisp-user::warn-module ext::location (defun common-lisp-user::warn-module) (#1# . 39560) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-warn *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Module ~s does not require warnings." format finish-output "There is no module named ~S in the current model. Cannot warn it." "There is no module named ~S. Cannot warn it." #Y(common-lisp-user::warn-module nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 127 13 3 19 1 12 47 1 13 45 14 10 1 39 68 13 2 19 1 15 39 18 13 2 19 1 15 12 13 0 13 4 13 3 20 3 23 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 5 19 6 24 12 14 16 19 1 25 22 73 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 13 5 19 6 24 12 14 16 19 1 25 22 73 43 2 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 27 13 3 19 6 24 12 14 16 19 1 25 22 73 43 1 29) #27# #1# 39560) si::fset)) #1# 39560) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #28=#A(t (31) (common-lisp-user::request-module ext::location (defun common-lisp-user::request-module) (#1# . 40203) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-request t *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Module ~s does not handle requests." format finish-output "There is no module named ~S in the current model.  Cannot make a request of it." "There is no module named ~S. Cannot make a request of it." #Y(common-lisp-user::request-module nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 130 13 3 19 1 12 47 1 13 45 14 10 1 39 71 13 2 19 1 15 39 21 13 2 19 1 15 12 13 0 13 4 13 3 20 3 23 11 16 73 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 13 5 19 6 25 12 14 17 19 1 26 22 73 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 27 13 5 19 6 25 12 14 17 19 1 26 22 73 43 2 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 28 13 3 19 6 25 12 14 17 19 1 26 22 73 43 1 29) #28# #1# 40203) si::fset)) #1# 40203) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #29=#A(t (31) (common-lisp-user::buffer-mod-module ext::location (defun common-lisp-user::buffer-mod-module) (#1# . 40988) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-mods) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-mods common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-buffer-mod t *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Module ~s does not support buffer modification requests." format finish-output "There is no module named ~S in the current model. Cannot make a buffer modification request using it." "There is no module named ~S. Cannot make a buffer modification using it." #Y(common-lisp-user::buffer-mod-module nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 130 13 3 19 1 12 47 1 13 45 14 10 1 39 71 13 2 19 1 15 39 21 13 2 19 1 15 12 13 0 13 4 13 3 20 3 23 11 16 73 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 13 5 19 6 25 12 14 17 19 1 26 22 73 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 27 13 5 19 6 25 12 14 17 19 1 26 22 73 43 2 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 28 13 3 19 6 25 12 14 17 19 1 26 22 73 43 1 29) #29# #1# 40988) si::fset)) #1# 40988) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #30=#A(t (27) (common-lisp-user::delete-module ext::location (defun common-lisp-user::delete-module) (#1# . 41785) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-delete *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot delete an instance of it." format finish-output "There is no module named ~S. Cannot delete an instance of it." #Y(common-lisp-user::delete-module nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 81 13 1 19 1 10 47 1 11 45 12 10 1 39 22 13 2 19 1 13 73 39 12 13 2 19 1 13 12 13 0 20 1 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #30# #1# 41785) si::fset)) #1# 41785) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #31=#A(t (29) (common-lisp-user::notify-module ext::location (defun common-lisp-user::notify-module) (#1# . 42384) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-name) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::chunk-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-notify-on-clear *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot notify it of a buffer's clearing." format finish-output "There is no module named ~S.  Cannot notify it of a buffer's clearing." #Y(common-lisp-user::notify-module nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 77 13 3 19 1 12 47 1 13 45 14 10 1 39 18 13 2 19 1 15 12 13 0 13 4 13 3 20 3 23 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 5 19 6 24 12 14 16 19 1 25 22 73 43 2 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 13 3 19 6 24 12 14 16 19 1 25 22 73 43 1 29) #31# #1# 42384) si::fset)) #1# 42384) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #32=#A(t (29) (common-lisp-user::update-the-module ext::location (defun common-lisp-user::update-the-module) (#1# . 43166) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::old-time common-lisp-user::new-time) common-lisp-user::module-name common-lisp-user::old-time common-lisp-user::new-time common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-update *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot update it." format finish-output "There is no module named ~S. Cannot update it." #Y(common-lisp-user::update-the-module nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 77 13 3 19 1 12 47 1 13 45 14 10 1 39 18 13 2 19 1 15 12 13 0 13 4 13 3 20 3 23 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 5 19 6 24 12 14 16 19 1 25 22 73 43 2 38 42 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 13 3 19 6 24 12 14 16 19 1 25 22 73 43 1 29) #32# #1# 43166) si::fset)) #1# 43166) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #33=#A(t (27) (common-lisp-user::run-notify-module ext::location (defun common-lisp-user::run-notify-module) (#1# . 43892) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-run-notify *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot notify it of a run start." format finish-output "There is no module named ~S. Cannot notify it of a run start." #Y(common-lisp-user::run-notify-module nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 73 13 1 19 1 10 47 1 11 45 12 10 1 39 14 13 2 19 1 13 12 13 0 20 1 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #33# #1# 43892) si::fset)) #1# 43892) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #34=#A(t (27) (common-lisp-user::run-over-notify-module ext::location (defun common-lisp-user::run-over-notify-module) (#1# . 44571) ext::annotate :lambda-list (common-lisp-user::module-name) common-lisp-user::module-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-run-over-notify *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot notify it of a run ending." format finish-output "There is no module named ~S. Cannot notify it of a run ending." #Y(common-lisp-user::run-over-notify-module nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 73 13 1 19 1 10 47 1 11 45 12 10 1 39 14 13 2 19 1 13 12 13 0 20 1 23 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 21 13 3 19 6 22 12 14 14 19 1 23 22 73 43 2 38 42 14 14 15 15 19 0 16 73 39 12 19 0 17 16 18 12 9 1 19 2 19 12 19 0 20 12 15 24 13 1 19 6 22 12 14 14 19 1 23 22 73 43 1 29) #34# #1# 44571) si::fset)) #1# 44571) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #35=#A(t (23) (common-lisp-user::m-buffer-search ext::location (defun common-lisp-user::m-buffer-search) (#1# . 45262) ext::annotate :lambda-list (common-lisp-user::buffer-name) common-lisp-user::buffer-name common-lisp-user::buffers-module-name common-lisp-user::it common-lisp-user::module-m-buffer-search *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "m-buffer-search cannot search ~s because it does not name a valid buffer." format finish-output #Y(common-lisp-user::m-buffer-search nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 10 13 0 13 1 19 2 10 38 40 14 11 15 12 19 0 13 73 39 12 19 0 14 16 15 12 9 1 19 2 16 12 19 0 17 12 15 18 19 5 19 12 14 11 19 1 20 22 73 43 1 29) #35# #1# 45262) si::fset)) #1# 45262) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 28 12 19 2 29 1 0 73 29) #36=#A(t (30) (common-lisp-user::module-m-buffer-search ext::location (defun common-lisp-user::module-m-buffer-search) (#1# . 45489) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-search common-lisp-user::it t *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot perform buffer search." format finish-output "There is no module named ~S. Cannot perform buffer search." #Y(common-lisp-user::module-m-buffer-search nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 0 39 95 13 2 19 1 11 47 1 12 45 13 10 1 39 36 13 2 19 1 14 45 15 10 0 39 17 14 16 13 0 13 1 13 4 20 2 23 12 72 2 38 5 77 77 72 2 43 1 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 13 4 19 6 25 12 14 17 19 1 26 22 73 43 2 38 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 27 13 2 19 6 25 12 14 17 19 1 26 22 73 43 1 29) #36# #1# 45489) si::fset)) #1# 45489) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #37=#A(t (24) (common-lisp-user::m-buffer-offset ext::location (defun common-lisp-user::m-buffer-offset) (#1# . 46111) ext::annotate :lambda-list (common-lisp-user::buffer-name common-lisp-user::c-list) common-lisp-user::buffer-name common-lisp-user::c-list common-lisp-user::buffers-module-name common-lisp-user::it common-lisp-user::module-m-buffer-offset *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "m-buffer-offset cannot get values for ~s because it does not name a valid buffer." format finish-output #Y(common-lisp-user::m-buffer-offset nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 0 39 12 13 0 13 2 13 1 19 3 11 38 40 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 19 5 20 12 14 12 19 1 21 22 73 43 1 29) #37# #1# 46111) si::fset)) #1# 46111) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 29 12 19 2 30 1 0 73 29) #38=#A(t (31) (common-lisp-user::module-m-buffer-offset ext::location (defun common-lisp-user::module-m-buffer-offset) (#1# . 46360) ext::annotate :lambda-list (common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::c-list) common-lisp-user::module-name common-lisp-user::buffer-name common-lisp-user::c-list common-lisp-user::get-abstract-module common-lisp-user::module common-lisp-user::get-module-fct common-lisp-user::exists common-lisp-user::instance common-lisp-user::act-r-module-offset common-lisp-user::it t *error-output* #13# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "There is no module named ~S in the current model. Cannot get buffer offsets." format finish-output "There is no module named ~S. Cannot get buffer offsets." #Y(common-lisp-user::module-m-buffer-offset nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 45 11 10 0 39 97 13 3 19 1 12 47 1 13 45 14 10 1 39 38 13 2 19 1 15 45 16 10 0 39 19 14 17 13 0 13 1 13 5 13 4 20 3 23 12 72 2 38 5 77 77 72 2 43 1 38 42 14 18 15 19 19 0 20 73 39 12 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 25 13 5 19 6 26 12 14 18 19 1 27 22 73 43 2 38 42 14 18 15 19 19 0 20 73 39 12 19 0 21 16 22 12 9 1 19 2 23 12 19 0 24 12 15 28 13 3 19 6 26 12 14 18 19 1 27 22 73 43 1 29) #38# #1# 46360) si::fset)) #1# 46360))
