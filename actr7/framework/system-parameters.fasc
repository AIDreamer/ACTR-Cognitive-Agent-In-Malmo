(#Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 11 14 3 33 4 12 19 2 5 52 0 15 0 15 6 15 7 19 3 8 15 0 15 9 15 10 15 11 19 4 12 1 0 73 29) #A(t (13) (common-lisp-user::*act-r-system-parameters-table* si::*make-special boundp :test eq make-hash-table variable "The table of all system parameters" si::set-documentation ext::location (defvar common-lisp-user::*act-r-system-parameters-table*) (#1=#P"C:/Users/Son Pham/Desktop/actr7/framework/system-parameters.lisp" . 0) ext::annotate)) #1# 0) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 15 5 77 77 15 6 9 8 77 77 15 7 19 15 8 15 9 15 10 15 11 15 12 19 4 13 15 14 15 10 15 15 15 16 19 4 13 15 14 14 17 77 15 18 19 4 13 15 0 19 1 33 78 29 15 14 1 31 12 19 2 32 1 0 73 29) #2=#A(t (34) (common-lisp-user::act-r-system-parameter "ACT-R-SYSTEM-PARAMETER-" (common-lisp-user::handler) ((common-lisp-user::param-name nil t nil 0 common-lisp-user::act-r-parameter-param-name) (common-lisp-user::default nil t nil 1 common-lisp-user::act-r-parameter-default) (common-lisp-user::test nil t nil 2 common-lisp-user::act-r-parameter-test) (warning nil t nil 3 common-lisp-user::act-r-parameter-warning) (common-lisp-user::details nil t nil 4 common-lisp-user::act-r-parameter-details) (common-lisp-user::owner t t nil 5 common-lisp-user::act-r-parameter-owner) (common-lisp-user::users nil t nil 6 common-lisp-user::act-r-parameter-users) (common-lisp-user::handler nil t nil 7 nil)) common-lisp-user::copy-act-r-system-parameter common-lisp-user::act-r-parameter (common-lisp-user::make-act-r-system-parameter) common-lisp-user::act-r-system-parameter-p si::define-structure #3=(common-lisp-user::act-r-system-parameter (:include common-lisp-user::act-r-parameter (common-lisp-user::owner t))) ext::location (defstruct #3#) (#1# . 3891) ext::annotate common-lisp-user::make-act-r-system-parameter (defun common-lisp-user::make-act-r-system-parameter) (#1# . 3891) :lambda-list (&key #4=#:param-name #5=#:default #6=#:test #7=#:warning #8=#:details (#9=#:owner t) #10=#:users #11=#:handler) (nil :handler :users :owner :details :warning :test :default :param-name) #4# #5# #6# #7# #8# t #9# #10# #11# 0 si::make-structure #Y(common-lisp-user::make-act-r-system-parameter nil nil (28 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 3 14 25 46 26 22 40 2 77 46 27 22 40 2 77 46 28 15 29 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 9 30 29) #2# #1# 3891) si::fset find-class)) #1# 3891) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 48 12 19 2 49 1 0 73 29) #12=#A(t (50) (common-lisp-user::create-system-parameter ext::location (defun common-lisp-user::create-system-parameter) (#1# . 3976) ext::annotate :lambda-list (common-lisp-user::param-name &key (common-lisp-user::valid-test nil) (common-lisp-user::default-value nil) (warning #13="") (documentation #14="") (common-lisp-user::handler nil)) common-lisp-user::param-name (nil :handler :documentation :warning :default-value :valid-test) common-lisp-user::valid-test common-lisp-user::default-value #13# warning #14# documentation common-lisp-user::handler keywordp *error-output* #15="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Parameter name must be a keyword." format finish-output "default-value cannot be a keyword." common-lisp-user::fctornil "valid-test must be a function, the name of a function, or nil." stringp "documentation must be a string." "warning must be a string." "a handler function must be provided." common-lisp-user::*act-r-system-parameters-table* gethash "a system parameter with the name ~s already exists." "default-value does not pass the valid-test" :param-name :default :test :warning :details :handler common-lisp-user::make-act-r-system-parameter common-lisp-user::param si::hash-set common-lisp-user::set-system-parameter-value #Y(common-lisp-user::create-system-parameter nil nil (24 45 7 28 8 22 40 2 77 46 9 22 40 2 77 46 10 22 40 3 15 11 46 12 22 40 3 15 13 46 14 22 40 2 77 46 15 10 5 16 16 76 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 24 19 5 25 12 14 17 19 1 26 22 73 38 407 10 3 16 16 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 27 19 5 25 12 14 17 19 1 26 22 73 38 360 13 4 19 1 28 76 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 29 19 5 25 12 14 17 19 1 26 22 73 38 311 10 1 16 30 76 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 31 19 5 25 12 14 17 19 1 26 22 73 38 263 10 2 16 30 76 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 32 19 5 25 12 14 17 19 1 26 22 73 38 215 10 0 39 6 13 0 19 1 28 76 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 33 19 5 25 12 14 17 19 1 26 22 73 38 162 13 5 14 34 19 2 35 39 44 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 36 13 5 19 6 25 12 14 17 19 1 26 22 73 38 110 10 4 39 13 10 3 39 9 13 4 13 3 20 1 23 76 39 42 14 17 15 18 19 0 19 73 39 12 19 0 20 16 21 12 9 1 19 2 22 12 19 0 23 12 15 37 19 5 25 12 14 17 19 1 26 22 73 38 51 14 38 13 5 14 39 13 3 14 40 13 4 14 41 13 2 14 42 13 1 14 43 13 0 19 12 44 45 45 13 6 14 34 13 0 19 3 46 13 0 13 4 19 2 47 10 6 73 43 1 29) #12# #1# 3976) si::fset)) #1# 3976) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 12 12 19 2 13 15 0 15 14 15 15 19 3 16 1 0 73 29) #16=#A(t (17) (common-lisp-user::remove-system-parameter ext::location (defun common-lisp-user::remove-system-parameter) (#1# . 5707) ext::annotate :lambda-list (common-lisp-user::param-name) common-lisp-user::param-name common-lisp-user::*act-r-system-parameters-table* gethash remhash t #Y(common-lisp-user::remove-system-parameter nil nil (24 45 7 26 13 0 14 8 19 2 9 73 39 10 13 0 11 8 17 10 11 11 73 29) #16# #1# 5707) si::fset function "Remove a system parameter" si::set-documentation)) #1# 5707) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 14 14 9 1 19 4 15 1 0 73 29) #17=#A(t (16) (common-lisp-user::ssp ext::location (defmacro common-lisp-user::ssp) (#1# . 5910) ext::annotate :lambda-list (&rest common-lisp-user::parameters) #:g405 #:g404 #:g406 common-lisp-user::parameters common-lisp-user::ssp-fct quote #Y(common-lisp-user::ssp nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 45 10 15 11 15 12 10 0 6 2 6 2 73 29) #17# #1# 5910) t si::fset)) #1# 5910) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #18=#A(t (15) (common-lisp-user::ssp-fct ext::location (defun common-lisp-user::ssp-fct) (#1# . 5972) ext::annotate :lambda-list (&optional (common-lisp-user::parameters-list nil)) common-lisp-user::parameters-list common-lisp-user::show-all-system-parameters keywordp every common-lisp-user::get-system-parameters common-lisp-user::set-system-parameters #Y(common-lisp-user::ssp-fct nil nil (25 40 2 77 46 7 26 10 0 76 39 6 19 0 8 38 23 33 9 12 13 0 19 2 10 39 8 13 0 19 1 11 38 6 13 0 19 1 12 29) #18# #1# 5972) si::fset)) #1# 5972) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #19=#A(t (20) (common-lisp-user::get-system-parameters ext::location (defun common-lisp-user::get-system-parameters) (#1# . 6226) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params common-lisp-user::res si::%dolist-var common-lisp-user::p-name common-lisp-user::valid-system-parameter-name common-lisp-user::get-system-parameter-struct common-lisp-user::param common-lisp-user::act-r-system-parameter-handler common-lisp-user::val :bad-parameter-name reverse #Y(common-lisp-user::get-system-parameters nil nil (24 45 7 26 75 45 8 10 1 45 9 75 45 10 38 56 10 1 4 51 0 13 0 19 1 11 39 32 13 0 19 1 12 45 13 13 0 19 1 14 12 77 77 20 2 23 45 15 13 0 10 4 3 51 4 43 2 38 8 14 16 10 2 3 51 2 10 1 5 51 1 10 1 40 -58 75 51 0 10 2 16 17 43 2 43 1 29) #19# #1# 6226) si::fset)) #1# 6226) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #20=#A(t (12) (common-lisp-user::get-system-parameter-struct ext::location (defun common-lisp-user::get-system-parameter-struct) (#1# . 6587) ext::annotate :lambda-list (common-lisp-user::p-name) common-lisp-user::p-name common-lisp-user::*act-r-system-parameters-table* gethash #Y(common-lisp-user::get-system-parameter-struct nil nil (24 45 7 26 13 0 14 8 19 2 9 29) #20# #1# 6587) si::fset)) #1# 6587) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #21=#A(t (12) (common-lisp-user::valid-system-parameter-name ext::location (defun common-lisp-user::valid-system-parameter-name) (#1# . 6685) ext::annotate :lambda-list (common-lisp-user::p-name) common-lisp-user::p-name common-lisp-user::*act-r-system-parameters-table* gethash #Y(common-lisp-user::valid-system-parameter-name nil nil (24 45 7 26 13 0 14 8 19 2 9 29) #21# #1# 6685) si::fset)) #1# 6685) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #22=#A(t (29) (common-lisp-user::set-system-parameters ext::location (defun common-lisp-user::set-system-parameters) (#1# . 6782) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params length evenp common-lisp-user::res #:g427 #:g428 common-lisp-user::p-val common-lisp-user::p-name common-lisp-user::test-and-set-system-parameter-value #:g430 nconc *error-output* #15# common-lisp-user::current-mp-fct common-lisp-user::mp-models > common-lisp-user::current-model "Odd number of parameters and values passed to ssp." format finish-output #Y(common-lisp-user::set-system-parameters nil nil (24 45 7 26 10 0 16 8 16 9 39 84 75 45 10 38 67 10 1 45 11 10 0 4 12 10 0 5 51 0 10 0 51 2 43 1 10 1 45 12 10 0 4 12 10 0 5 51 0 10 0 51 2 43 1 46 13 46 14 13 0 13 1 19 2 15 6 1 45 16 13 3 13 0 19 2 17 51 3 43 1 43 2 10 1 76 39 -70 10 0 73 43 1 38 40 14 18 15 19 19 0 20 73 39 12 19 0 21 16 8 12 9 1 19 2 22 12 19 0 23 12 15 24 19 5 25 12 14 18 19 1 26 22 73 29) #22# #1# 6782) si::fset)) #1# 6782) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #23=#A(t (29) (common-lisp-user::test-and-set-system-parameter-value ext::location (defun common-lisp-user::test-and-set-system-parameter-value) (#1# . 7142) ext::annotate :lambda-list (common-lisp-user::p-name common-lisp-user::value) common-lisp-user::p-name common-lisp-user::value common-lisp-user::get-system-parameter-struct common-lisp-user::param common-lisp-user::act-r-system-parameter-test common-lisp-user::set-system-parameter-value *error-output* #15# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "System parameter ~S cannot take value ~A because it must be ~A." common-lisp-user::act-r-parameter-warning format finish-output :invalid-value "Parameter ~s is not the name of an available system parameter" :bad-parameter-name #Y(common-lisp-user::test-and-set-system-parameter-value nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 0 39 82 13 0 19 1 11 76 40 12 13 0 19 1 11 12 13 1 20 1 23 39 10 13 0 13 1 19 2 12 38 50 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 13 2 13 1 13 0 19 1 21 12 19 8 22 14 13 19 1 23 11 24 73 38 42 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 25 13 2 19 6 22 14 13 19 1 23 11 26 73 43 1 29) #23# #1# 7142) si::fset)) #1# 7142) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #24=#A(t (13) (common-lisp-user::set-system-parameter-value ext::location (defun common-lisp-user::set-system-parameter-value) (#1# . 7803) ext::annotate :lambda-list (common-lisp-user::param common-lisp-user::value) common-lisp-user::param common-lisp-user::value common-lisp-user::act-r-system-parameter-handler t #Y(common-lisp-user::set-system-parameter-value nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 14 10 13 0 20 2 23 29) #24# #1# 7803) si::fset)) #1# 7803) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 36 12 19 2 37 1 0 73 29) #25=#A(t (38) (common-lisp-user::show-all-system-parameters ext::location (defun common-lisp-user::show-all-system-parameters) (#1# . 7912) ext::annotate :lambda-list :test eq make-hash-table common-lisp-user::value-len common-lisp-user::default-len common-lisp-user::name-len common-lisp-user::current-val-table common-lisp-user::p-name common-lisp-user::param common-lisp-user::act-r-system-parameter-handler common-lisp-user::val string length > "~s" common-lisp-user::act-r-system-parameter-default format "~s" "~s" "~s" si::hash-set #Y(nil nil nil (24 45 13 24 45 14 26 13 0 19 1 15 12 77 77 20 2 23 45 16 10 2 16 17 16 18 12 13 4 19 2 19 39 9 10 2 16 17 16 18 51 4 77 15 20 13 1 19 1 21 12 19 3 22 16 18 12 13 5 19 2 19 39 17 77 15 23 13 1 19 1 21 12 19 3 22 16 18 51 5 77 15 24 13 0 19 3 22 16 18 12 13 6 19 2 19 39 13 77 15 25 13 0 19 3 22 16 18 51 6 13 2 10 0 3 12 13 3 13 1 19 3 26 43 1 29) #25# #1# 7912) common-lisp-user::*act-r-system-parameters-table* maphash common-lisp-user::value t "~vS ~vS default: ~vS : ~A~%" 1+ common-lisp-user::act-r-system-parameter-details #Y(nil nil nil (24 45 14 24 45 30 26 14 31 15 32 10 3 16 33 12 10 1 4 12 13 5 10 1 5 12 13 4 13 0 19 1 21 12 13 0 19 1 34 12 19 9 22 29) #25# #1# 7912) #Y(common-lisp-user::show-all-system-parameters nil nil (26 14 6 15 7 19 2 8 12 9 0 9 0 9 0 46 9 46 10 46 11 46 12 34 27 12 11 28 17 29 34 35 12 10 0 17 29 43 4 29) #25# #1# 7912) si::fset)) #1# 7912) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 14 20 9 2 19 4 21 1 0 73 29) #26=#A(t (22) (common-lisp-user::simple-system-param-handler ext::location (defmacro common-lisp-user::simple-system-param-handler) (#1# . 9272) ext::annotate :lambda-list (common-lisp-user::var-name) #:g444 #:g443 #:g445 si::dm-too-few-arguments common-lisp-user::var-name si::dm-too-many-arguments lambda (common-lisp-user::set-or-get common-lisp-user::value) if common-lisp-user::set-or-get setf common-lisp-user::value #Y(common-lisp-user::simple-system-param-handler nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 39 6 13 3 19 1 12 15 13 15 14 15 15 15 16 15 17 13 0 1 18 6 3 12 10 0 6 4 6 3 73 29) #26# #1# 9272) t si::fset)) #1# 9272))
