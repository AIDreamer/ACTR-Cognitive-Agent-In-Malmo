(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 14 6 1 10 12 1 11 7 3 12 15 12 15 13 15 14 15 15 15 16 14 6 1 18 12 1 19 7 3 6 8 12 77 19 4 20 29) #1=#A(t (21) (common-lisp-user::char-feats ext::location (defclass common-lisp-user::char-feats) (#2=#P"C:/Users/Son Pham/Desktop/actr7/framework/vision-categorization.lisp" . 0) ext::annotate (:initargs (:feat-ls) :writers ((setf common-lisp-user::feature-ls)) :readers (common-lisp-user::feature-ls) :name common-lisp-user::feature-ls) :initfunction :test equal make-hash-table #Y(nil nil nil (26 14 7 33 8 12 19 2 9 29) #1# #2# 0) (:initform (make-hash-table :test #'equal) :writers ((setf common-lisp-user::fhash)) :readers (common-lisp-user::fhash) :name common-lisp-user::fhash) (:initform '("A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z") :allocation :class :writers ((setf common-lisp-user::letters)) :readers (common-lisp-user::letters) :name common-lisp-user::letters) (:initform '("1" "2" "3" "4" "5" "6" "7" "8" "9" "0") :allocation :class :writers ((setf common-lisp-user::digits)) :readers (common-lisp-user::digits) :name common-lisp-user::digits) (:initform nil :writers ((setf common-lisp-user::average-match-prob)) :readers (common-lisp-user::average-match-prob) :name common-lisp-user::average-match-prob) (:initform nil :initargs (:name) :writers ((setf common-lisp-user::name)) :readers (common-lisp-user::name) :name common-lisp-user::name) (:initform nil :writers ((setf common-lisp-user::number-of-features)) :readers (common-lisp-user::number-of-features) :name common-lisp-user::number-of-features) identity #Y(nil nil nil (26 33 17 73 29) #1# #2# 0) (:initform #'identity :initargs (:true->icon) :writers ((setf common-lisp-user::true->icon)) :readers (common-lisp-user::true->icon) :name common-lisp-user::true->icon) clos::load-defclass)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 13 19 6 16 29) #3=#A(t (17) (print-object ext::location (defmethod print-object (common-lisp-user::self common-lisp-user::char-feats) stream) (#2# . 2902) ext::annotate (common-lisp-user::char-feats t) (common-lisp-user::self stream) common-lisp-user::self stream "~S" common-lisp-user::name format #Y(si::.print-unreadable-object-body. nil nil (26 13 0 15 9 13 1 19 1 10 12 19 3 11 29) #3# #2# 2902) t si::print-unreadable-object-function #Y(print-object nil nil (24 45 7 24 45 8 26 30 1 12 13 2 13 1 14 13 77 32 0 12 19 5 14 43 1 29) #3# #2# 2902) clos::install-method)) #2# 2902) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::numfeats ext::location (defgeneric common-lisp-user::numfeats) (#2# . 3043) ext::annotate :lambda-list (common-lisp-user::chr-feat-set) :delete-methods t :documentation "Return the number of features in the feature set." ensure-generic-function)) #2# 3043) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #4=#A(t (15) (common-lisp-user::numfeats ext::location (defmethod common-lisp-user::numfeats (common-lisp-user::self common-lisp-user::char-feats)) (#2# . 3154) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::self) common-lisp-user::self common-lisp-user::number-of-features common-lisp-user::it common-lisp-user::feature-ls length #Y(common-lisp-user::numfeats nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 6 10 0 73 38 8 13 1 19 1 10 16 11 43 1 29) #4# #2# 3154) t clos::install-method)) #2# 3154) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::has-match-p ext::location (defgeneric common-lisp-user::has-match-p) (#2# . 3260) ext::annotate :lambda-list (common-lisp-user::chr-feat-set common-lisp-user::str1 common-lisp-user::str2) :delete-methods t :documentation "Given two letters, return the list of features that appear in both." ensure-generic-function)) #2# 3260) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #5=#A(t (16) (common-lisp-user::has-match-p ext::location (defmethod common-lisp-user::has-match-p (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::s1 string) (common-lisp-user::s2 string)) (#2# . 3402) ext::annotate (common-lisp-user::char-feats string string) (common-lisp-user::self common-lisp-user::s1 common-lisp-user::s2) common-lisp-user::self common-lisp-user::s1 common-lisp-user::s2 common-lisp-user::fhash gethash intersection #Y(common-lisp-user::has-match-p nil nil (24 45 7 24 45 8 24 45 9 26 13 1 13 2 19 1 10 12 19 2 11 12 13 0 13 2 19 1 10 12 19 2 11 12 19 2 12 29) #5# #2# 3402) t clos::install-method)) #2# 3402) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::prob-match ext::location (defgeneric common-lisp-user::prob-match) (#2# . 3540) ext::annotate :lambda-list (common-lisp-user::chr-feat-set common-lisp-user::str1 common-lisp-user::str2) :delete-methods t :documentation "Return the probabily that a random feature in s1 will appear in s2." ensure-generic-function)) #2# 3540) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 18 12 14 19 19 6 20 29) #6=#A(t (21) (common-lisp-user::prob-match ext::location (defmethod common-lisp-user::prob-match (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::s1 string) (common-lisp-user::s2 string)) (#2# . 3681) ext::annotate (common-lisp-user::char-feats string string) (common-lisp-user::self common-lisp-user::s1 common-lisp-user::s2) common-lisp-user::self common-lisp-user::s1 common-lisp-user::s2 string= common-lisp-user::has-match-p remove-duplicates length common-lisp-user::fhash gethash / float #Y(common-lisp-user::prob-match nil nil (24 45 7 24 45 8 24 45 9 26 13 1 13 0 19 2 10 39 6 8 -1 73 38 38 13 2 13 1 13 0 19 3 11 12 19 1 12 16 13 12 13 1 13 2 19 1 14 12 19 2 15 16 13 12 19 2 16 12 19 1 17 29) #6# #2# 3681) t clos::install-method)) #2# 3681) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::setfeats ext::location (defgeneric common-lisp-user::setfeats) (#2# . 3899) ext::annotate :lambda-list (common-lisp-user::chr-feat-set common-lisp-user::str common-lisp-user::feat-lst) :delete-methods t :documentation "Set the feature list for a string (character)." ensure-generic-function)) #2# 3899) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #7=#A(t (15) (common-lisp-user::setfeats ext::location (defmethod common-lisp-user::setfeats (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::s1 string) (common-lisp-user::feat-ls list)) (#2# . 4020) ext::annotate (common-lisp-user::char-feats string list) (common-lisp-user::self common-lisp-user::s1 common-lisp-user::feat-ls) common-lisp-user::self common-lisp-user::s1 common-lisp-user::feat-ls common-lisp-user::fhash si::hash-set #Y(common-lisp-user::setfeats nil nil (24 45 7 24 45 8 24 45 9 26 13 1 13 2 19 1 10 12 13 0 19 3 11 29) #7# #2# 4020) t clos::install-method)) #2# 4020) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::getfeats ext::location (defgeneric common-lisp-user::getfeats) (#2# . 4132) ext::annotate :lambda-list (common-lisp-user::chr-feat-set common-lisp-user::chr) :delete-methods t :documentation "Returns the feature list for a character." ensure-generic-function)) #2# 4132) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #8=#A(t (14) (common-lisp-user::getfeats ext::location (defmethod common-lisp-user::getfeats (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::s string)) (#2# . 4238) ext::annotate (common-lisp-user::char-feats string) (common-lisp-user::self common-lisp-user::s) common-lisp-user::self common-lisp-user::s common-lisp-user::fhash gethash #Y(common-lisp-user::getfeats nil nil (24 45 7 24 45 8 26 13 0 13 1 19 1 9 12 19 2 10 29) #8# #2# 4238) t clos::install-method)) #2# 4238) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #9=#A(t (15) (common-lisp-user::getfeats ext::location (defmethod common-lisp-user::getfeats (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::c character)) (#2# . 4318) ext::annotate (common-lisp-user::char-feats character) (common-lisp-user::self common-lisp-user::c) common-lisp-user::self common-lisp-user::c common-lisp-user::mkstr common-lisp-user::fhash gethash #Y(common-lisp-user::getfeats nil nil (24 45 7 24 45 8 26 13 0 19 1 9 12 13 1 19 1 10 12 19 2 11 29) #9# #2# 4318) t clos::install-method)) #2# 4318) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::get-icon-feats ext::location (defgeneric common-lisp-user::get-icon-feats) (#2# . 4409) ext::annotate :lambda-list (common-lisp-user::chr-feat-set char) :delete-methods t :documentation "Return the icon feature list for a given character." ensure-generic-function)) #2# 4409) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 20 19 6 21 29) #10=#A(t (22) (common-lisp-user::get-icon-feats ext::location (defmethod common-lisp-user::get-icon-feats (common-lisp-user::self common-lisp-user::char-feats) char) (#2# . 4532) ext::annotate (common-lisp-user::char-feats t) (common-lisp-user::self char) common-lisp-user::self char common-lisp-user::true->icon common-lisp-user::ti functionp common-lisp-user::getfeats mapcar listp common-lisp-user::feat assoc second #Y(nil nil nil (24 45 15 26 13 0 13 1 19 2 16 16 17 29) #10# #2# 4532) #Y(common-lisp-user::get-icon-feats nil nil (24 45 7 24 45 8 26 13 1 19 1 9 45 10 10 0 16 11 39 16 13 0 13 2 13 1 19 2 12 12 19 2 13 38 30 10 0 16 14 39 17 34 18 12 13 2 13 1 19 2 12 12 19 2 13 38 8 13 2 13 1 19 2 12 43 1 29) #10# #2# 4532) t clos::install-method)) #2# 4532) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::exact-character ext::location (defgeneric common-lisp-user::exact-character) (#2# . 4874) ext::annotate :lambda-list (common-lisp-user::char-feat-set common-lisp-user::feat-lst) :delete-methods t :documentation "Return the character exactly matching a feature set." ensure-generic-function)) #2# 4874) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 20 19 6 21 29) #11=#A(t (22) (common-lisp-user::exact-character ext::location (defmethod common-lisp-user::exact-character (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::feat-ls list)) (#2# . 5004) ext::annotate (common-lisp-user::char-feats list) (common-lisp-user::self common-lisp-user::feat-ls) common-lisp-user::self common-lisp-user::feat-ls common-lisp-user::sym->key mapcar common-lisp-user::realfeats common-lisp-user::chars si::%dolist-var char common-lisp-user::getfeats length intersection = #Y(common-lisp-user::exact-character nil nil (24 45 7 24 45 8 26 57 0 60 86 33 9 12 13 1 19 2 10 51 1 75 45 11 13 3 19 1 12 45 13 75 45 14 38 50 10 1 4 51 0 13 5 13 0 19 2 15 51 2 10 2 16 16 12 10 4 16 16 12 13 4 13 2 19 2 17 16 16 12 19 3 18 39 6 10 0 73 36 3 10 1 5 51 1 10 1 40 -52 75 73 43 2 43 1 63 29) #11# #2# 5004) t clos::install-method)) #2# 5004) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::prob-best-character ext::location (defgeneric common-lisp-user::prob-best-character) (#2# . 5363) ext::annotate :lambda-list (common-lisp-user::char-feat-set common-lisp-user::feat-lst) :delete-methods t :documentation "Return the character with the best probability of match to a feature list." ensure-generic-function)) #2# 5363) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 22 12 14 23 19 6 24 29) #12=#A(t (25) (common-lisp-user::prob-best-character ext::location (defmethod common-lisp-user::prob-best-character (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::feat-ls list)) (#2# . 5519) ext::annotate (common-lisp-user::char-feats list) (common-lisp-user::self common-lisp-user::feat-ls) common-lisp-user::self common-lisp-user::feat-ls common-lisp-user::cur-val common-lisp-user::bestchar common-lisp-user::bestval common-lisp-user::chars si::%dolist-var char common-lisp-user::getfeats common-lisp-user::feat-ls-prob-match = > common-lisp-user::mklist common-lisp-user::random-item * #Y(common-lisp-user::prob-best-character nil nil (24 45 7 24 45 8 26 9 0 77 77 46 9 46 10 46 11 13 4 19 1 12 45 13 75 45 14 38 64 10 1 4 51 0 13 6 13 5 13 6 13 0 19 2 15 12 19 3 16 51 4 13 4 13 2 19 2 17 39 8 13 0 10 3 3 51 3 13 4 13 2 19 2 18 39 12 10 4 51 2 13 0 19 1 19 51 3 10 1 5 51 1 10 1 40 -66 43 2 13 1 19 1 20 12 9 100 13 0 19 2 21 12 72 2 43 3 29) #12# #2# 5519) t clos::install-method)) #2# 5519) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::feat-ls-prob-match ext::location (defgeneric common-lisp-user::feat-ls-prob-match) (#2# . 5958) ext::annotate :lambda-list (common-lisp-user::char-feat-set common-lisp-user::lst1 common-lisp-user::lst2) :delete-methods t :documentation "Return the probability that two feature lists represent a match." ensure-generic-function)) #2# 5958) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 23 12 14 24 19 6 25 29) #13=#A(t (26) (common-lisp-user::feat-ls-prob-match ext::location (defmethod common-lisp-user::feat-ls-prob-match (common-lisp-user::self common-lisp-user::char-feats) (common-lisp-user::l1 list) (common-lisp-user::l2 list)) (#2# . 6104) ext::annotate (common-lisp-user::char-feats list list) (common-lisp-user::self common-lisp-user::l1 common-lisp-user::l2) common-lisp-user::self common-lisp-user::l1 common-lisp-user::l2 intersection remove-duplicates length common-lisp-user::overlap - + common-lisp-user::num-miss 2/3 common-lisp-user::numfeats expt 1/3 * float #Y(common-lisp-user::feat-ls-prob-match nil nil (24 45 7 24 45 8 24 45 9 26 13 1 13 0 19 2 10 12 19 1 11 16 12 45 13 10 2 16 12 12 13 0 19 2 14 12 10 1 16 12 12 13 0 19 2 14 12 19 2 15 45 16 15 17 13 4 19 1 18 12 13 0 19 2 14 17 19 12 15 20 10 0 17 19 12 19 2 21 12 19 1 22 43 2 29) #13# #2# 6104) t clos::install-method)) #2# 6104) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #14=#A(t (14) (common-lisp-user::chars ext::location (defmethod common-lisp-user::chars (common-lisp-user::char-feat-set common-lisp-user::char-feats)) (#2# . 6433) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::char-feat-set) common-lisp-user::char-feat-set common-lisp-user::letters common-lisp-user::digits append #Y(common-lisp-user::chars nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 19 2 10 29) #14# #2# 6433) t clos::install-method)) #2# 6433) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::avg-match-prob ext::location (defgeneric common-lisp-user::avg-match-prob) (#2# . 6540) ext::annotate :lambda-list (common-lisp-user::char-feat-set) :delete-methods t :documentation "Returns the average match probability for an entire feature set." ensure-generic-function)) #2# 6540) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 24 12 14 25 19 6 26 29) #15=#A(t (27) (common-lisp-user::avg-match-prob ext::location (defmethod common-lisp-user::avg-match-prob (common-lisp-user::self common-lisp-user::char-feats)) (#2# . 6672) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::self) common-lisp-user::self common-lisp-user::average-match-prob common-lisp-user::it common-lisp-user::accum common-lisp-user::chars si::%dolist-var common-lisp-user::targ common-lisp-user::item string= common-lisp-user::prob-match #:g6624 + reduce length / #:g6625 (setf common-lisp-user::average-match-prob) #Y(common-lisp-user::avg-match-prob nil nil (24 45 7 26 13 0 19 1 8 45 9 10 0 39 6 10 0 73 38 122 75 45 10 13 2 19 1 11 45 12 75 45 13 38 64 10 1 4 51 0 13 4 19 1 11 45 12 75 45 14 38 36 10 1 4 51 0 13 2 13 0 19 2 15 76 39 16 13 6 13 2 13 0 19 3 16 12 10 4 3 51 4 10 1 5 51 1 10 1 40 -38 43 2 10 1 5 51 1 10 1 40 -66 43 2 10 2 45 17 33 18 12 13 1 19 2 19 12 10 1 16 20 12 19 2 21 45 22 13 0 13 1 33 23 18 2 43 1 43 1 43 1 43 1 29) #15# #2# 6672) t clos::install-method)) #2# 6672) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::print-match-table ext::location (defgeneric common-lisp-user::print-match-table) (#2# . 7039) ext::annotate :lambda-list (common-lisp-user::char-feat-set) :delete-methods t :documentation "Print out a table of matc probabilities." ensure-generic-function)) #2# 7039) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 13 19 6 20 29) #16=#A(t (21) (common-lisp-user::print-match-table ext::location (defmethod common-lisp-user::print-match-table (common-lisp-user::self common-lisp-user::char-feats)) (#2# . 7173) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::self) common-lisp-user::self common-lisp-user::letters common-lisp-user::digits append si::%dolist-var common-lisp-user::targ t "~%~A	" format char "~3,2F	" common-lisp-user::prob-match #Y(common-lisp-user::print-match-table nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 19 2 10 45 11 75 45 12 38 75 10 1 4 51 0 14 13 15 14 13 0 19 3 15 13 2 19 1 8 12 13 2 19 1 9 12 19 2 10 45 11 75 45 16 38 28 10 1 4 51 0 14 13 15 17 13 4 13 2 13 0 19 3 18 12 19 3 15 10 1 5 51 1 10 1 40 -30 43 2 10 1 5 51 1 10 1 40 -77 75 73 43 2 29) #16# #2# 7173) clos::install-method)) #2# 7173) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::print-num-feats ext::location (defgeneric common-lisp-user::print-num-feats) (#2# . 7420) ext::annotate :lambda-list (common-lisp-user::char-feat-set) :delete-methods t :documentation "Print the number of features for each character." ensure-generic-function)) #2# 7420) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 13 19 6 20 29) #17=#A(t (21) (common-lisp-user::print-num-feats ext::location (defmethod common-lisp-user::print-num-feats (common-lisp-user::self common-lisp-user::char-feats)) (#2# . 7537) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::self) common-lisp-user::self common-lisp-user::letters common-lisp-user::digits append si::%dolist-var common-lisp-user::targ t "~%~A has ~S" common-lisp-user::fhash gethash length format #Y(common-lisp-user::print-num-feats nil nil (24 45 7 26 13 0 19 1 8 12 13 0 19 1 9 12 19 2 10 45 11 75 45 12 38 34 10 1 4 51 0 14 13 15 14 13 0 13 0 13 2 19 1 15 12 19 2 16 16 17 12 19 4 18 10 1 5 51 1 10 1 40 -36 75 73 43 2 29) #17# #2# 7537) clos::install-method)) #2# 7537) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::check-integrity ext::location (defgeneric common-lisp-user::check-integrity) (#2# . 7713) ext::annotate :lambda-list (common-lisp-user::thing) :delete-methods t :documentation "Check the internal integrity of <thing>." ensure-generic-function)) #2# 7713) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 29 12 14 19 19 6 30 29) #18=#A(t (31) (common-lisp-user::check-integrity ext::location (defmethod common-lisp-user::check-integrity (common-lisp-user::self common-lisp-user::char-feats)) (#2# . 7814) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::self) common-lisp-user::self common-lisp-user::feat-ls common-lisp-user::letters common-lisp-user::digits append si::%dolist-var char common-lisp-user::fhash gethash common-lisp-user::feature-ls set-difference common-lisp-user::it t "~&~A has a feature not in the set ~S" format common-lisp-user::item string= equal "~&~A and ~A have identical features" common-lisp-user::prob-best-character common-lisp-user::bestchar "~&~A has ~A as its best char." #Y(common-lisp-user::check-integrity nil nil (24 45 7 26 75 45 8 13 1 19 1 9 12 13 1 19 1 10 12 19 2 11 45 12 75 45 13 38 164 10 1 4 51 0 13 0 13 3 19 1 14 12 19 2 15 51 2 13 2 13 3 19 1 16 12 19 2 17 45 18 10 0 39 14 14 19 15 20 13 1 13 0 19 4 21 38 1 43 1 13 3 19 1 9 12 13 3 19 1 10 12 19 2 11 45 12 75 45 22 38 49 10 1 4 51 0 13 2 13 0 19 2 23 76 39 16 13 4 13 0 13 5 19 1 14 12 19 2 15 17 24 39 12 14 19 15 25 13 2 13 0 19 4 21 10 1 5 51 1 10 1 40 -51 43 2 13 3 13 2 19 2 26 45 27 13 1 13 0 19 2 23 76 39 12 14 19 15 28 13 1 13 0 19 4 21 43 1 10 1 5 51 1 10 1 40 -166 75 73 43 2 43 1 29) #18# #2# 7814) clos::install-method)) #2# 7814) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::feature-freq ext::location (defgeneric common-lisp-user::feature-freq) (#2# . 8531) ext::annotate :lambda-list (common-lisp-user::char-feat-set) :delete-methods t :documentation "Print the frequency of occurrence for each feature in the set." ensure-generic-function)) #2# 8531) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 22 12 14 19 19 6 23 29) #19=#A(t (24) (common-lisp-user::feature-freq ext::location (defmethod common-lisp-user::feature-freq (common-lisp-user::self common-lisp-user::char-feats)) (#2# . 8659) ext::annotate (common-lisp-user::char-feats) (common-lisp-user::self) common-lisp-user::self common-lisp-user::counter common-lisp-user::feature-ls si::%dolist-var common-lisp-user::feat common-lisp-user::chars char common-lisp-user::fhash gethash member #:g6673 + t "~&Feature ~S occurs in ~S chars" format #Y(common-lisp-user::feature-freq nil nil (24 45 7 26 75 45 8 13 1 19 1 9 45 10 75 45 11 38 88 10 1 4 51 0 8 0 51 2 13 3 19 1 12 45 10 75 45 13 38 45 10 1 4 51 0 13 2 13 0 13 5 19 1 14 12 19 2 15 12 19 2 16 39 16 8 1 45 17 13 5 13 0 19 2 18 51 5 43 1 10 1 5 51 1 10 1 40 -47 43 2 14 19 15 20 13 0 13 2 19 4 21 10 1 5 51 1 10 1 40 -90 75 73 43 2 43 1 29) #19# #2# 8659) clos::install-method)) #2# 8659) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 86 12 19 2 87 15 0 15 88 15 89 19 3 90 1 0 73 29) #20=#A(t (91) (common-lisp-user::build-gibson-set ext::location (defun common-lisp-user::build-gibson-set) (#2# . 8967) ext::annotate :lambda-list common-lisp-user::char-feats :name :gibson :feat-ls (common-lisp-user::horizontal common-lisp-user::vertical common-lisp-user::diagonal-slash common-lisp-user::diagonal-back common-lisp-user::diagonal-slash common-lisp-user::closed-curve common-lisp-user::open-v-curve common-lisp-user::open-h-curve intersection common-lisp-user::cyclic-change common-lisp-user::symmetry common-lisp-user::vertical-discont common-lisp-user::horizontal-discont) make-instance common-lisp-user::tmp "A" (common-lisp-user::symmetry common-lisp-user::horizontal common-lisp-user::diagonal-slash common-lisp-user::diagonal-back intersection common-lisp-user::vertical-discont) common-lisp-user::setfeats "B" (common-lisp-user::symmetry common-lisp-user::cyclic-change intersection common-lisp-user::horizontal common-lisp-user::vertical common-lisp-user::closed-curve) "C" (common-lisp-user::symmetry common-lisp-user::open-h-curve) "D" (common-lisp-user::symmetry common-lisp-user::vertical common-lisp-user::closed-curve) "E" (common-lisp-user::horizontal-discont common-lisp-user::symmetry common-lisp-user::cyclic-change common-lisp-user::horizontal common-lisp-user::vertical intersection) "F" (common-lisp-user::horizontal-discont common-lisp-user::vertical-discont common-lisp-user::horizontal common-lisp-user::vertical intersection) "G" (common-lisp-user::horizontal common-lisp-user::open-h-curve) "H" (common-lisp-user::vertical-discont common-lisp-user::symmetry common-lisp-user::horizontal common-lisp-user::vertical intersection) "I" (common-lisp-user::vertical-discont common-lisp-user::symmetry common-lisp-user::vertical) "J" (common-lisp-user::open-v-curve common-lisp-user::open-h-curve) "K" (common-lisp-user::vertical-discont common-lisp-user::symmetry common-lisp-user::cyclic-change common-lisp-user::vertical common-lisp-user::diagonal-slash common-lisp-user::diagonal-back intersection) "L" (common-lisp-user::horizontal-discont common-lisp-user::horizontal common-lisp-user::vertical) "M" (common-lisp-user::cyclic-change common-lisp-user::vertical-discont common-lisp-user::symmetry common-lisp-user::vertical common-lisp-user::diagonal-slash common-lisp-user::diagonal-back) "N" (common-lisp-user::vertical-discont common-lisp-user::vertical common-lisp-user::diagonal-back) "O" (common-lisp-user::symmetry common-lisp-user::closed-curve) "P" (common-lisp-user::vertical-discont intersection common-lisp-user::vertical common-lisp-user::closed-curve) "Q" (intersection common-lisp-user::diagonal-back common-lisp-user::closed-curve) "R" (common-lisp-user::vertical-discont intersection common-lisp-user::vertical common-lisp-user::diagonal-back common-lisp-user::closed-curve) "S" (common-lisp-user::cyclic-change common-lisp-user::open-h-curve) "T" (common-lisp-user::horizontal-discont common-lisp-user::vertical-discont common-lisp-user::symmetry common-lisp-user::horizontal common-lisp-user::vertical intersection) "U" (common-lisp-user::symmetry common-lisp-user::open-v-curve) "V" (common-lisp-user::symmetry common-lisp-user::diagonal-slash common-lisp-user::diagonal-back) "W" (common-lisp-user::symmetry common-lisp-user::cyclic-change common-lisp-user::diagonal-slash common-lisp-user::diagonal-back) "X" (common-lisp-user::symmetry intersection common-lisp-user::diagonal-slash common-lisp-user::diagonal-back) "Y" (common-lisp-user::vertical-discont common-lisp-user::symmetry common-lisp-user::vertical common-lisp-user::diagonal-slash common-lisp-user::diagonal-back) "Z" (common-lisp-user::horizontal-discont common-lisp-user::horizontal common-lisp-user::diagonal-slash) "1" (common-lisp-user::horizontal-discont common-lisp-user::horizontal common-lisp-user::vertical intersection) "2" (common-lisp-user::horizontal-discont common-lisp-user::horizontal common-lisp-user::open-h-curve) "3" (common-lisp-user::symmetry common-lisp-user::open-h-curve common-lisp-user::cyclic-change) "4" (common-lisp-user::vertical-discont common-lisp-user::horizontal-discont common-lisp-user::horizontal common-lisp-user::vertical common-lisp-user::diagonal-slash intersection) "5" (common-lisp-user::horizontal-discont common-lisp-user::horizontal common-lisp-user::open-h-curve common-lisp-user::cyclic-change) "6" (common-lisp-user::horizontal-discont common-lisp-user::closed-curve common-lisp-user::open-h-curve) "7" (common-lisp-user::vertical-discont common-lisp-user::horizontal common-lisp-user::diagonal-slash) "8" (common-lisp-user::symmetry common-lisp-user::closed-curve intersection) "9" (common-lisp-user::vertical-discont common-lisp-user::closed-curve common-lisp-user::open-h-curve) "0" (common-lisp-user::symmetry common-lisp-user::closed-curve common-lisp-user::diagonal-slash) #Y(common-lisp-user::build-gibson-set nil nil (26 15 6 14 7 14 8 14 9 15 10 19 5 11 45 12 13 0 15 13 15 14 19 3 15 13 0 15 16 15 17 19 3 15 13 0 15 18 15 19 19 3 15 13 0 15 20 15 21 19 3 15 13 0 15 22 15 23 19 3 15 13 0 15 24 15 25 19 3 15 13 0 15 26 15 27 19 3 15 13 0 15 28 15 29 19 3 15 13 0 15 30 15 31 19 3 15 13 0 15 32 15 33 19 3 15 13 0 15 34 15 35 19 3 15 13 0 15 36 15 37 19 3 15 13 0 15 38 15 39 19 3 15 13 0 15 40 15 41 19 3 15 13 0 15 42 15 43 19 3 15 13 0 15 44 15 45 19 3 15 13 0 15 46 15 47 19 3 15 13 0 15 48 15 49 19 3 15 13 0 15 50 15 51 19 3 15 13 0 15 52 15 53 19 3 15 13 0 15 54 15 55 19 3 15 13 0 15 56 15 57 19 3 15 13 0 15 58 15 59 19 3 15 13 0 15 60 15 61 19 3 15 13 0 15 62 15 63 19 3 15 13 0 15 64 15 65 19 3 15 13 0 15 66 15 67 19 3 15 13 0 15 68 15 69 19 3 15 13 0 15 70 15 71 19 3 15 13 0 15 72 15 73 19 3 15 13 0 15 74 15 75 19 3 15 13 0 15 76 15 77 19 3 15 13 0 15 78 15 79 19 3 15 13 0 15 80 15 81 19 3 15 13 0 15 82 15 83 19 3 15 13 0 15 84 15 85 19 3 15 10 0 73 43 1 29) #20# #2# 8967) si::fset function "Returns the Gibson (1969) character feature set." si::set-documentation)) #2# 8967) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 86 12 19 2 87 15 0 15 88 15 89 19 3 90 1 0 73 29) #21=#A(t (91) (common-lisp-user::build-bh-set ext::location (defun common-lisp-user::build-bh-set) (#2# . 12309) ext::annotate :lambda-list common-lisp-user::char-feats :name :briggs-hocevar :feat-ls (common-lisp-user::h-top common-lisp-user::h-center common-lisp-user::h-bottom common-lisp-user::single-v common-lisp-user::double-v common-lisp-user::ang-open-top common-lisp-user::ang-open-down common-lisp-user::ang-open-horiz common-lisp-user::sm-curve-convex-right common-lisp-user::sm-curve-convex-bottom common-lisp-user::large-curve common-lisp-user::continuous-curve common-lisp-user::closed-curve common-lisp-user::sm-curve-convex-left) make-instance common-lisp-user::tmp "A" (common-lisp-user::h-center common-lisp-user::ang-open-down) common-lisp-user::setfeats "B" (common-lisp-user::h-top common-lisp-user::h-center common-lisp-user::h-bottom common-lisp-user::single-v common-lisp-user::sm-curve-convex-right common-lisp-user::closed-curve) "C" (common-lisp-user::large-curve common-lisp-user::continuous-curve) "D" (common-lisp-user::single-v common-lisp-user::large-curve common-lisp-user::closed-curve) "E" (common-lisp-user::h-top common-lisp-user::h-center common-lisp-user::h-bottom common-lisp-user::single-v) "F" (common-lisp-user::h-top common-lisp-user::h-center common-lisp-user::single-v) "G" (common-lisp-user::sm-curve-convex-right common-lisp-user::large-curve) "H" (common-lisp-user::h-center common-lisp-user::double-v) "I" (common-lisp-user::single-v) "J" (common-lisp-user::single-v common-lisp-user::sm-curve-convex-bottom) "K" (common-lisp-user::single-v common-lisp-user::ang-open-top common-lisp-user::ang-open-down common-lisp-user::ang-open-horiz) "L" (common-lisp-user::h-bottom common-lisp-user::single-v) "M" (common-lisp-user::double-v common-lisp-user::ang-open-down) "N" (common-lisp-user::double-v common-lisp-user::ang-open-top common-lisp-user::ang-open-down) "O" (common-lisp-user::large-curve common-lisp-user::continuous-curve common-lisp-user::closed-curve) "P" (common-lisp-user::h-top common-lisp-user::h-center common-lisp-user::single-v common-lisp-user::sm-curve-convex-right common-lisp-user::closed-curve) "Q" (common-lisp-user::large-curve common-lisp-user::closed-curve) "R" (common-lisp-user::h-top common-lisp-user::h-center common-lisp-user::single-v common-lisp-user::ang-open-down common-lisp-user::sm-curve-convex-right common-lisp-user::closed-curve) "S" (common-lisp-user::sm-curve-convex-right common-lisp-user::continuous-curve) "T" (common-lisp-user::h-top common-lisp-user::single-v) "U" (common-lisp-user::double-v common-lisp-user::sm-curve-convex-bottom) "V" (common-lisp-user::ang-open-top) "W" (common-lisp-user::ang-open-top common-lisp-user::ang-open-down) "X" (common-lisp-user::ang-open-top common-lisp-user::ang-open-down common-lisp-user::ang-open-horiz) "Y" (common-lisp-user::single-v common-lisp-user::ang-open-top common-lisp-user::ang-open-horiz) "Z" (common-lisp-user::h-top common-lisp-user::h-bottom common-lisp-user::ang-open-horiz) "1" (common-lisp-user::h-bottom common-lisp-user::single-v common-lisp-user::ang-open-down) "2" (common-lisp-user::h-bottom common-lisp-user::sm-curve-convex-left) "3" (common-lisp-user::sm-curve-convex-left) "4" (common-lisp-user::single-v common-lisp-user::closed-curve common-lisp-user::h-center) "5" (common-lisp-user::sm-curve-convex-left common-lisp-user::h-top) "6" (common-lisp-user::closed-curve common-lisp-user::sm-curve-convex-right) "7" (common-lisp-user::h-top common-lisp-user::ang-open-horiz) "8" (common-lisp-user::closed-curve common-lisp-user::continuous-curve) "9" (common-lisp-user::closed-curve common-lisp-user::sm-curve-convex-left) "0" (common-lisp-user::closed-curve common-lisp-user::continuous-curve common-lisp-user::large-curve common-lisp-user::ang-open-horiz) #Y(common-lisp-user::build-bh-set nil nil (26 15 6 14 7 14 8 14 9 15 10 19 5 11 45 12 13 0 15 13 15 14 19 3 15 13 0 15 16 15 17 19 3 15 13 0 15 18 15 19 19 3 15 13 0 15 20 15 21 19 3 15 13 0 15 22 15 23 19 3 15 13 0 15 24 15 25 19 3 15 13 0 15 26 15 27 19 3 15 13 0 15 28 15 29 19 3 15 13 0 15 30 15 31 19 3 15 13 0 15 32 15 33 19 3 15 13 0 15 34 15 35 19 3 15 13 0 15 36 15 37 19 3 15 13 0 15 38 15 39 19 3 15 13 0 15 40 15 41 19 3 15 13 0 15 42 15 43 19 3 15 13 0 15 44 15 45 19 3 15 13 0 15 46 15 47 19 3 15 13 0 15 48 15 49 19 3 15 13 0 15 50 15 51 19 3 15 13 0 15 52 15 53 19 3 15 13 0 15 54 15 55 19 3 15 13 0 15 56 15 57 19 3 15 13 0 15 58 15 59 19 3 15 13 0 15 60 15 61 19 3 15 13 0 15 62 15 63 19 3 15 13 0 15 64 15 65 19 3 15 13 0 15 66 15 67 19 3 15 13 0 15 68 15 69 19 3 15 13 0 15 70 15 71 19 3 15 13 0 15 72 15 73 19 3 15 13 0 15 74 15 75 19 3 15 13 0 15 76 15 77 19 3 15 13 0 15 78 15 79 19 3 15 13 0 15 80 15 81 19 3 15 13 0 15 82 15 83 19 3 15 13 0 15 84 15 85 19 3 15 10 0 73 43 1 29) #21# #2# 12309) si::fset function "Returns the Briggs & Hocevar (1975) character feature set." si::set-documentation)) #2# 12309) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 86 12 19 2 87 15 0 15 88 15 89 19 3 90 1 0 73 29) #22=#A(t (91) (common-lisp-user::build-rm-orig-set ext::location (defun common-lisp-user::build-rm-orig-set) (#2# . 15107) ext::annotate :lambda-list common-lisp-user::char-feats :name :rm-orig :feat-ls (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::vertical-c1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::front-diagonal-l2 common-lisp-user::vertical-c2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing common-lisp-user::symmetric common-lisp-user::right-facing) make-instance common-lisp-user::tmp "A" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric) common-lisp-user::setfeats "B" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "C" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "D" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-r1 common-lisp-user::vertical-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "E" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "F" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::vertical-l2 common-lisp-user::right-facing) "G" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "H" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric) "I" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-c2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) "J" (common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing) "K" (common-lisp-user::vertical-l1 common-lisp-user::front-diagonal-u1 common-lisp-user::horizontal-c1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::right-facing) "L" (common-lisp-user::vertical-l1 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "M" (common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric) "N" (common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric) "O" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) "P" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::right-facing) "Q" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "R" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::right-facing) "S" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) "T" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-c2 common-lisp-user::symmetric) "U" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) "V" (common-lisp-user::vertical-l1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-l2 common-lisp-user::front-diagonal-l2 common-lisp-user::symmetric) "W" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::front-diagonal-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric) "X" (common-lisp-user::back-diagonal-u1 common-lisp-user::front-diagonal-u1 common-lisp-user::front-diagonal-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::symmetric) "Y" (common-lisp-user::back-diagonal-u1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-c2 common-lisp-user::symmetric) "Z" (common-lisp-user::horizontal-t0 common-lisp-user::front-diagonal-u1 common-lisp-user::front-diagonal-l2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) "1" (common-lisp-user::vertical-r1 common-lisp-user::vertical-r2 common-lisp-user::left-facing) "2" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing) "3" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing) "4" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::left-facing) "5" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::back-diagonal-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "6" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing) "7" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-r1 common-lisp-user::vertical-r2 common-lisp-user::left-facing) "8" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) "9" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing) "0" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric) #Y(common-lisp-user::build-rm-orig-set nil nil (26 15 6 14 7 14 8 14 9 15 10 19 5 11 45 12 13 0 15 13 15 14 19 3 15 13 0 15 16 15 17 19 3 15 13 0 15 18 15 19 19 3 15 13 0 15 20 15 21 19 3 15 13 0 15 22 15 23 19 3 15 13 0 15 24 15 25 19 3 15 13 0 15 26 15 27 19 3 15 13 0 15 28 15 29 19 3 15 13 0 15 30 15 31 19 3 15 13 0 15 32 15 33 19 3 15 13 0 15 34 15 35 19 3 15 13 0 15 36 15 37 19 3 15 13 0 15 38 15 39 19 3 15 13 0 15 40 15 41 19 3 15 13 0 15 42 15 43 19 3 15 13 0 15 44 15 45 19 3 15 13 0 15 46 15 47 19 3 15 13 0 15 48 15 49 19 3 15 13 0 15 50 15 51 19 3 15 13 0 15 52 15 53 19 3 15 13 0 15 54 15 55 19 3 15 13 0 15 56 15 57 19 3 15 13 0 15 58 15 59 19 3 15 13 0 15 60 15 61 19 3 15 13 0 15 62 15 63 19 3 15 13 0 15 64 15 65 19 3 15 13 0 15 66 15 67 19 3 15 13 0 15 68 15 69 19 3 15 13 0 15 70 15 71 19 3 15 13 0 15 72 15 73 19 3 15 13 0 15 74 15 75 19 3 15 13 0 15 76 15 77 19 3 15 13 0 15 78 15 79 19 3 15 13 0 15 80 15 81 19 3 15 13 0 15 82 15 83 19 3 15 13 0 15 84 15 85 19 3 15 10 0 73 43 1 29) #22# #2# 15107) si::fset function "Returns the Rumelhart & McClelland (1981) character feature set." si::set-documentation)) #2# 15107) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 15 0 15 17 15 18 19 3 19 1 0 73 29) #23=#A(t (20) (common-lisp-user::cliplast ext::location (defun common-lisp-user::cliplast) (#2# . 20648) ext::annotate :lambda-list (common-lisp-user::sym) common-lisp-user::sym common-lisp-user::mkstr common-lisp-user::str :start :end length - read-from-string #Y(common-lisp-user::cliplast nil nil (24 45 7 26 13 0 19 1 8 45 9 13 0 77 77 14 10 9 0 14 11 10 0 16 12 12 9 1 19 2 13 12 19 7 14 43 1 29) #23# #2# 20648) si::fset function "Removes the last character from a symbol." si::set-documentation)) #2# 20648) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 88 12 19 2 89 1 0 73 29) #24=#A(t (90) (common-lisp-user::build-rm-clean-set ext::location (defun common-lisp-user::build-rm-clean-set) (#2# . 20952) ext::annotate :lambda-list common-lisp-user::char-feats :name :rm-clean :true->icon common-lisp-user::cliplast :feat-ls (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::vertical-c1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::front-diagonal-l2 common-lisp-user::vertical-c2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing+ common-lisp-user::symmetric+ common-lisp-user::right-facing+) make-instance common-lisp-user::tmp "A" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric+) common-lisp-user::setfeats "B" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "C" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "D" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-r1 common-lisp-user::vertical-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "E" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "F" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::vertical-l2 common-lisp-user::right-facing+) "G" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "H" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric+) "I" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-c2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) "J" (common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing+) "K" (common-lisp-user::vertical-l1 common-lisp-user::front-diagonal-u1 common-lisp-user::horizontal-c1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::right-facing+) "L" (common-lisp-user::vertical-l1 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "M" (common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric+) "N" (common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric+) "O" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) "P" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::right-facing+) "Q" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "R" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::right-facing+) "S" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) "T" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-c1 common-lisp-user::vertical-c2 common-lisp-user::symmetric+) "U" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) "V" (common-lisp-user::vertical-l1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-l2 common-lisp-user::front-diagonal-l2 common-lisp-user::symmetric+) "W" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::front-diagonal-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::symmetric+) "X" (common-lisp-user::back-diagonal-u1 common-lisp-user::front-diagonal-u1 common-lisp-user::front-diagonal-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::symmetric+) "Y" (common-lisp-user::back-diagonal-u1 common-lisp-user::front-diagonal-u1 common-lisp-user::vertical-c2 common-lisp-user::symmetric+) "Z" (common-lisp-user::horizontal-t0 common-lisp-user::front-diagonal-u1 common-lisp-user::front-diagonal-l2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) "1" (common-lisp-user::vertical-r1 common-lisp-user::vertical-r2 common-lisp-user::left-facing+) "2" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing+) "3" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing+) "4" (common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::left-facing+) "5" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::back-diagonal-l2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "6" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::right-facing+) "7" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-r1 common-lisp-user::vertical-r2 common-lisp-user::left-facing+) "8" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) "9" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::vertical-r1 common-lisp-user::horizontal-c1 common-lisp-user::horizontal-c2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::left-facing+) "0" (common-lisp-user::horizontal-t0 common-lisp-user::vertical-l1 common-lisp-user::back-diagonal-u1 common-lisp-user::vertical-r1 common-lisp-user::vertical-l2 common-lisp-user::back-diagonal-l2 common-lisp-user::vertical-r2 common-lisp-user::horizontal-l0 common-lisp-user::symmetric+) #Y(common-lisp-user::build-rm-clean-set nil nil (26 15 6 14 7 14 8 14 9 33 10 12 14 11 15 12 19 7 13 45 14 13 0 15 15 15 16 19 3 17 13 0 15 18 15 19 19 3 17 13 0 15 20 15 21 19 3 17 13 0 15 22 15 23 19 3 17 13 0 15 24 15 25 19 3 17 13 0 15 26 15 27 19 3 17 13 0 15 28 15 29 19 3 17 13 0 15 30 15 31 19 3 17 13 0 15 32 15 33 19 3 17 13 0 15 34 15 35 19 3 17 13 0 15 36 15 37 19 3 17 13 0 15 38 15 39 19 3 17 13 0 15 40 15 41 19 3 17 13 0 15 42 15 43 19 3 17 13 0 15 44 15 45 19 3 17 13 0 15 46 15 47 19 3 17 13 0 15 48 15 49 19 3 17 13 0 15 50 15 51 19 3 17 13 0 15 52 15 53 19 3 17 13 0 15 54 15 55 19 3 17 13 0 15 56 15 57 19 3 17 13 0 15 58 15 59 19 3 17 13 0 15 60 15 61 19 3 17 13 0 15 62 15 63 19 3 17 13 0 15 64 15 65 19 3 17 13 0 15 66 15 67 19 3 17 13 0 15 68 15 69 19 3 17 13 0 15 70 15 71 19 3 17 13 0 15 72 15 73 19 3 17 13 0 15 74 15 75 19 3 17 13 0 15 76 15 77 19 3 17 13 0 15 78 15 79 19 3 17 13 0 15 80 15 81 19 3 17 13 0 15 82 15 83 19 3 17 13 0 15 84 15 85 19 3 17 13 0 15 86 15 87 19 3 17 10 0 73 43 1 29) #24# #2# 20952) si::fset)) #2# 20952) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #25=#A(t (12) (common-lisp-user::all-feature-sets ext::location (defun common-lisp-user::all-feature-sets) (#2# . 26347) ext::annotate :lambda-list common-lisp-user::build-gibson-set common-lisp-user::build-bh-set common-lisp-user::build-rm-orig-set common-lisp-user::build-rm-clean-set #Y(common-lisp-user::all-feature-sets nil nil (26 19 0 6 12 19 0 7 12 19 0 8 12 19 0 9 6 4 73 29) #25# #2# 26347) si::fset)) #2# 26347))
