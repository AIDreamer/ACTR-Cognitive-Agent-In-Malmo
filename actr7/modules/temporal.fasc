(#Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 8 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 30 78 26 15 12 1 28 12 19 2 29 1 0 73 29) #1=#A(t (31) (common-lisp-user::temporal-module "TEMPORAL-MODULE-" (common-lisp-user::time-noise common-lisp-user::time-mult common-lisp-user::time-start-increment common-lisp-user::time-master-start-increment common-lisp-user::tick common-lisp-user::ticks common-lisp-user::next-increment common-lisp-user::record-ticks) ((common-lisp-user::time-noise nil t nil 0 nil) (common-lisp-user::time-mult nil t nil 1 nil) (common-lisp-user::time-start-increment nil t nil 2 nil) (common-lisp-user::time-master-start-increment nil t nil 3 nil) (common-lisp-user::tick nil t nil 4 nil) (common-lisp-user::ticks nil t nil 5 nil) (common-lisp-user::next-increment nil t nil 6 nil) (common-lisp-user::record-ticks nil t nil 7 nil)) common-lisp-user::copy-temporal-module (common-lisp-user::make-temporal-module) common-lisp-user::temporal-module-p si::define-structure ext::location (defstruct common-lisp-user::temporal-module) (#2=#P"C:/Users/Son Pham/Desktop/actr7/modules/temporal.lisp" . 0) ext::annotate common-lisp-user::make-temporal-module (defun common-lisp-user::make-temporal-module) (#2# . 0) :lambda-list (&key #3=#:time-noise #4=#:time-mult #5=#:time-start-increment #6=#:time-master-start-increment #7=#:tick #8=#:ticks #9=#:next-increment #10=#:record-ticks) (nil :record-ticks :next-increment :ticks :tick :time-master-start-increment :time-start-increment :time-mult :time-noise) #3# #4# #5# #6# #7# #8# #9# #10# 0 si::make-structure #Y(common-lisp-user::make-temporal-module nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 15 26 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 9 27 29) #1# #2# 0) si::fset find-class)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #11=#A(t (11) (common-lisp-user::create-temporal-module ext::location (defun common-lisp-user::create-temporal-module) (#2# . 5855) ext::annotate :lambda-list (common-lisp-user::model-name) common-lisp-user::model-name common-lisp-user::make-temporal-module #Y(common-lisp-user::create-temporal-module nil nil (24 45 7 26 19 0 8 29) #11# #2# 5855) si::fset)) #2# 5855) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #12=#A(t (16) (common-lisp-user::temporal-reset-1 ext::location (defun common-lisp-user::temporal-reset-1) (#2# . 5957) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance (time (common-lisp-user::ticks 0)) common-lisp-user::chunk-type-fct #:g18318 #:g18319 common-lisp-user::temporal-module si::structure-set #Y(common-lisp-user::temporal-reset-1 nil nil (24 45 7 26 15 8 19 1 9 10 0 45 10 75 45 11 13 1 15 12 9 6 13 0 19 4 13 43 1 43 1 29) #12# #2# 5957) si::fset)) #2# 5957) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #13=#A(t (12) (common-lisp-user::temporal-reset-2 ext::location (defun common-lisp-user::temporal-reset-2) (#2# . 6163) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance (:do-not-harvest common-lisp-user::temporal) common-lisp-user::sgp-fct #Y(common-lisp-user::temporal-reset-2 nil nil (24 45 7 26 15 8 19 1 9 29) #13# #2# 6163) si::fset)) #2# 6163) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #14=#A(t (29) (common-lisp-user::temporal-query ext::location (defun common-lisp-user::temporal-query) (#2# . 6327) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::slot common-lisp-user::value) common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::slot common-lisp-user::value common-lisp-user::state common-lisp-user::busy common-lisp-user::free t error *error-output* #15="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Unknown state query ~S to temporal module" format finish-output "Unknown query of the temporal module" #Y(common-lisp-user::temporal-query nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 1 42 11 67 10 0 42 12 5 75 73 38 56 42 13 6 11 14 73 38 48 42 15 5 75 73 38 41 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 23 13 0 19 6 24 14 16 19 1 25 75 73 38 40 14 16 15 17 19 0 18 73 39 12 19 0 19 16 20 12 9 1 19 2 21 12 19 0 22 12 15 26 19 5 24 12 14 16 19 1 25 22 73 29) #14# #2# 6327) si::fset)) #2# 6327) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 6 12 19 2 7 1 0 73 29) #16=#A(t (8) (common-lisp-user::temporal-clear ext::location (defun common-lisp-user::temporal-clear) (#2# . 6679) ext::annotate :lambda-list #Y(common-lisp-user::temporal-clear nil nil (26 75 73 29) #16# #2# 6679) si::fset)) #2# 6679) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 67 12 19 2 68 1 0 73 29) #17=#A(t (69) (common-lisp-user::temporal-request ext::location (defun common-lisp-user::temporal-request) (#2# . 6741) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::instance common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::temporal-module-next-increment common-lisp-user::delete-event common-lisp-user::temporal-module-time-start-increment #:g18328 common-lisp-user::temporal-module-time-master-start-increment common-lisp-user::temporal-module-time-noise * common-lisp-user::act-r-noise + max #:g18329 common-lisp-user::temporal-module si::structure-set common-lisp-user::ticks common-lisp-user::chunk-spec-slot-spec common-lisp-user::test-for-clear-request common-lisp-user::clear common-lisp-user::temporal-clear :module common-lisp-user::temporal :details "Clear" common-lisp-user::schedule-event-now time common-lisp-user::verify-single-explicit-value zerop *error-output* #15# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid time request made to the temporal module." format finish-output common-lisp-user::create-new-buffer-chunk :priority :params (common-lisp-user::isa time) "create-new-buffer-chunk isa time" #:g18330 #:g18331 #:g18332 #:g18333 #:g18334 common-lisp-user::temporal-module-tick round common-lisp-user::next-time-tick :time-in-ms t :min "Incrementing time ticks to 1" :destination common-lisp-user::schedule-event-relative #:g18335 "Invalid request made to the temporal module." #Y(common-lisp-user::temporal-request nil nil (24 45 7 24 45 8 24 45 9 26 13 2 19 1 10 39 10 13 2 19 1 10 12 19 1 11 13 2 19 1 12 76 39 59 10 2 45 13 9 1 13 3 19 1 14 12 13 3 19 1 14 12 9 5 13 3 19 1 15 12 19 3 16 12 19 1 17 12 19 2 18 12 19 2 19 45 20 13 1 15 21 9 2 13 0 19 4 22 43 1 43 1 13 0 15 23 19 2 24 12 13 0 19 1 25 12 46 26 46 23 10 0 40 3 10 1 39 240 10 1 39 16 15 27 14 28 15 29 14 30 15 31 19 5 32 38 219 13 2 15 23 15 29 15 33 19 4 34 16 35 76 39 42 14 36 15 37 19 0 38 73 39 12 19 0 39 16 40 12 9 1 19 2 41 12 19 0 42 12 15 43 19 5 44 12 14 36 19 1 45 22 73 38 162 15 46 14 28 15 29 14 47 9 -100 14 48 15 29 1 49 6 2 12 14 30 15 50 19 9 32 10 4 45 51 9 1 13 5 19 1 12 12 13 5 19 1 15 12 13 5 19 1 12 12 19 2 16 12 19 1 17 12 19 2 18 12 19 2 19 45 52 13 1 15 21 9 4 13 0 19 4 22 43 1 43 1 10 4 45 53 8 0 45 54 13 1 15 21 9 5 13 0 19 4 22 43 1 43 1 10 4 45 55 13 5 19 1 56 12 19 1 57 12 15 58 14 59 14 60 14 28 15 29 14 47 14 61 14 30 15 62 14 63 15 29 19 12 64 45 65 13 1 15 21 9 6 13 0 19 4 22 43 1 43 1 38 40 14 36 15 37 19 0 38 73 39 12 19 0 39 16 40 12 9 1 19 2 41 12 19 0 42 12 15 66 19 5 44 12 14 36 19 1 45 22 73 43 2 29) #17# #2# 6741) si::fset)) #2# 6741) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 52 12 19 2 53 1 0 73 29) #18=#A(t (54) (common-lisp-user::next-time-tick ext::location (defun common-lisp-user::next-time-tick) (#2# . 9130) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance common-lisp-user::temporal common-lisp-user::buffer-read common-lisp-user::c common-lisp-user::ticks common-lisp-user::chunk-slot-value-fct numberp #:g18345 #:g18347 common-lisp-user::temporal-module-ticks + #:g18346 common-lisp-user::temporal-module si::structure-set #:g18348 common-lisp-user::temporal-module-tick common-lisp-user::temporal-module-time-mult * #:g18349 #:g18350 common-lisp-user::temporal-module-time-noise common-lisp-user::act-r-noise max #:g18351 common-lisp-user::temporal-module-record-ticks :time-in-ms t :module common-lisp-user::schedule-module-mod-request :output common-lisp-user::medium common-lisp-user::schedule-mod-buffer-chunk #:g18352 round :priority :min :destination :details string "Incrementing time ticks to " 1+ princ-to-string concatenate common-lisp-user::schedule-event-relative #:g18353 #Y(common-lisp-user::next-time-tick nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 10 13 0 15 11 19 2 12 16 13 43 1 73 39 262 10 0 45 14 8 1 45 15 13 1 19 1 16 12 13 0 19 2 17 45 18 13 2 15 19 9 5 13 0 19 4 20 43 3 10 0 45 21 13 1 19 1 22 12 13 1 19 1 23 12 19 2 24 45 25 13 1 15 19 9 4 13 0 19 4 20 43 1 43 1 10 0 45 26 9 1 13 1 19 1 22 12 13 1 19 1 27 12 13 1 19 1 22 12 19 2 24 12 19 1 28 12 19 2 17 12 19 2 29 45 30 13 1 15 19 9 4 13 0 19 4 20 43 1 43 1 13 0 19 1 31 39 28 15 8 15 11 13 0 19 1 16 6 2 12 9 0 14 32 14 33 14 34 15 8 19 7 35 38 30 15 8 15 11 13 0 19 1 16 6 2 12 9 0 14 32 14 33 14 34 15 8 14 36 15 37 19 9 38 10 0 45 39 13 1 19 1 22 12 19 1 40 12 15 0 14 32 14 33 14 34 15 8 14 41 14 42 14 43 15 8 14 44 15 45 15 46 13 1 19 1 16 16 47 16 48 12 19 3 49 12 19 12 50 45 51 13 1 15 19 9 6 13 0 19 4 20 43 1 43 1 29) #18# #2# 9130) si::fset)) #2# 9130) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 1 0 73 29) #19=#A(t (18) (common-lisp-user::temporal-mod-request ext::location (defun common-lisp-user::temporal-mod-request) (#2# . 10711) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::buffer common-lisp-user::mods) common-lisp-user::instance common-lisp-user::buffer common-lisp-user::mods :time-in-ms t :module :output common-lisp-user::medium common-lisp-user::schedule-mod-buffer-chunk #Y(common-lisp-user::temporal-mod-request nil nil (24 45 7 24 45 8 24 45 9 26 13 1 13 0 9 0 14 10 14 11 14 12 13 1 14 13 15 14 19 9 15 29) #19# #2# 10711) si::fset)) #2# 10711) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 32 12 19 2 33 1 0 73 29) #20=#A(t (34) (common-lisp-user::temporal-params ext::location (defun common-lisp-user::temporal-params) (#2# . 10883) ext::annotate :lambda-list (common-lisp-user::tmp common-lisp-user::param) common-lisp-user::tmp common-lisp-user::param consp :time-noise #:g18364 #:g18365 common-lisp-user::temporal-module si::structure-set :time-mult #:g18366 #:g18367 :record-ticks #:g18368 #:g18369 :time-master-start-increment #:g18370 #:g18371 #:g18372 common-lisp-user::seconds->ms #:g18373 common-lisp-user::temporal-module-time-noise common-lisp-user::temporal-module-time-mult common-lisp-user::temporal-module-record-ticks common-lisp-user::temporal-module-time-master-start-increment common-lisp-user::ms->seconds #Y(common-lisp-user::temporal-params nil nil (24 45 7 24 45 8 26 10 0 16 9 39 154 10 0 4 42 10 27 10 1 45 11 10 1 5 45 12 13 1 15 13 9 0 13 0 19 4 14 43 1 43 1 38 120 42 15 27 10 1 45 16 10 1 5 45 17 13 1 15 13 9 1 13 0 19 4 14 43 1 43 1 38 91 42 18 27 10 1 45 19 10 1 5 45 20 13 1 15 13 9 7 13 0 19 4 14 43 1 43 1 38 62 42 21 57 10 1 45 22 75 45 23 13 1 15 13 9 2 13 0 19 4 14 43 1 43 1 10 1 45 24 10 1 5 12 19 1 25 45 26 13 1 15 13 9 3 13 0 19 4 14 43 1 43 1 10 0 5 73 38 3 75 73 38 49 10 0 42 10 8 13 1 19 1 27 38 37 42 15 8 13 1 19 1 28 38 27 42 18 8 13 1 19 1 29 38 17 42 21 12 13 1 19 1 30 12 19 1 31 38 3 75 73 29) #20# #2# 10883) si::fset)) #2# 10883) #Y(si::bytecodes nil nil (15 0 15 1 14 2 14 3 15 4 14 5 15 6 14 7 15 8 14 9 15 10 19 9 11 12 14 12 14 3 15 4 14 5 15 13 14 7 15 14 14 9 15 15 19 9 11 12 14 16 14 3 15 4 14 5 15 17 14 7 15 18 14 9 15 19 19 9 11 12 14 20 14 3 15 21 14 5 14 22 14 7 15 23 14 9 15 24 19 9 11 6 4 12 14 25 15 26 14 9 15 27 14 28 33 29 12 14 30 33 31 12 14 32 33 33 12 14 34 33 35 12 14 36 33 37 12 14 38 33 39 12 33 40 6 2 12 19 19 41 29) #A(t (42) (common-lisp-user::temporal (common-lisp-user::temporal) :time-noise :valid-test common-lisp-user::posnum :default-value 0.015 :warning "a positive number" :documentation "Temporal noise" common-lisp-user::define-parameter :time-master-start-increment 0.011 "a positive number" "Temporal start interval" :time-mult 1.1 "a positive number" "Temporal multiplier" :record-ticks common-lisp-user::tornil t "t or nil" "Record each time increment as a buffer event" :version "2.1" "The temporal module is used to estimate short time intervals" :creation common-lisp-user::create-temporal-module :query common-lisp-user::temporal-query :request common-lisp-user::temporal-request :buffer-mod common-lisp-user::temporal-mod-request :params common-lisp-user::temporal-params :reset common-lisp-user::temporal-reset-1 common-lisp-user::temporal-reset-2 common-lisp-user::define-module-fct)) #2# 11795))
