(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 15 7 15 8 15 9 15 10 14 11 1 15 12 1 16 7 3 6 7 12 77 19 4 17 29) #1=#A(t (18) (common-lisp-user::perceptual-history ext::location (defclass common-lisp-user::perceptual-history) (#2=#P"C:/Users/Son Pham/Desktop/actr7/other-files/perceptual-history.lisp" . 0) ext::annotate (:initform nil :writers ((setf common-lisp-user::visicon-history)) :readers (common-lisp-user::visicon-history) :name common-lisp-user::visicon-history) (:initform nil :writers ((setf common-lisp-user::audicon-history)) :readers (common-lisp-user::audicon-history) :name common-lisp-user::audicon-history) (:initform "" :writers ((setf common-lisp-user::last-visicon)) :readers (common-lisp-user::last-visicon) :name common-lisp-user::last-visicon) (:initform "" :writers ((setf common-lisp-user::last-audicon)) :readers (common-lisp-user::last-audicon) :name common-lisp-user::last-audicon) (:initform nil :writers ((setf common-lisp-user::save-visicon)) :readers (common-lisp-user::save-visicon) :name common-lisp-user::save-visicon) (:initform nil :writers ((setf common-lisp-user::save-audicon)) :readers (common-lisp-user::save-audicon) :name common-lisp-user::save-audicon) :initfunction :test eq make-hash-table #Y(nil nil nil (26 14 12 15 13 19 2 14 29) #1# #2# 0) (:allocation :class :initform (make-hash-table :test 'eq) :writers ((setf common-lisp-user::perceptual-event-hook)) :readers (common-lisp-user::perceptual-event-hook) :name common-lisp-user::perceptual-event-hook) clos::load-defclass)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 71 12 14 72 19 6 73 29) #3=#A(t (74) (common-lisp-user::process-display ext::location (defmethod common-lisp-user::process-display :after (common-lisp-user::devin common-lisp-user::device-interface) (common-lisp-user::vis-mod common-lisp-user::vision-module) &optional #4=(common-lisp-user::clear nil)) (#2# . 5855) ext::annotate (:after) (common-lisp-user::device-interface common-lisp-user::vision-module) (common-lisp-user::devin common-lisp-user::vis-mod &optional #4#) common-lisp-user::devin common-lisp-user::vis-mod common-lisp-user::clear :perceptual-history common-lisp-user::get-module-fct common-lisp-user::instance common-lisp-user::printing-module #:g24124 #:g24123 make-string-output-stream common-lisp-user::printing-module-v common-lisp-user::printing-module-c #:g24126 #:g24125 #:g24127 #:g24128 :stream common-lisp-user::make-act-r-output #:g24129 (setf common-lisp-user::printing-module-v) #:g24130 #:g24131 (setf common-lisp-user::printing-module-c) common-lisp-user::print-visicon #:g24132 #:g24133 (setf common-lisp-user::printing-module-v) #:g24134 #:g24135 (setf common-lisp-user::printing-module-c) get-output-stream-string close common-lisp-user::current common-lisp-user::last-visicon string-equal #:g24136 #:g24137 (setf common-lisp-user::last-visicon) common-lisp-user::visicon-history last caar common-lisp-user::last-time common-lisp-user::mp-time-ms = #:g24138 #:g24140 nconc #:g24139 rplaca #:g24141 #:g24143 #:g24142 (setf common-lisp-user::visicon-history) *error-output* #5="~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No perceptual history module available cannot record visicon information" format finish-output #Y(common-lisp-user::process-display nil nil (24 45 8 24 45 9 25 40 2 77 46 10 26 15 11 19 1 12 45 13 10 0 39 300 15 14 19 1 12 47 1 15 45 16 10 1 39 133 19 0 17 12 13 0 19 1 18 12 13 0 19 1 19 12 46 20 46 21 46 22 10 3 45 23 14 24 13 1 19 2 25 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 3 45 28 14 24 13 1 19 2 25 45 29 13 0 13 1 33 30 18 2 43 1 43 1 64 5 19 0 31 65 10 3 45 32 10 2 45 33 13 0 13 1 33 34 18 2 43 1 43 1 10 3 45 35 10 3 45 36 13 0 13 1 33 37 18 2 43 1 43 1 66 10 0 16 38 12 13 0 19 1 39 22 43 3 43 2 45 40 13 1 19 1 41 12 13 0 19 2 42 76 73 39 131 10 1 45 43 10 1 45 44 13 0 13 1 33 45 18 2 43 1 43 1 13 1 19 1 46 12 19 1 47 16 48 45 49 10 0 39 10 13 0 19 0 50 12 19 2 51 39 42 13 2 19 1 46 12 19 1 47 45 52 10 2 6 1 45 53 10 1 4 12 13 0 19 2 54 45 55 13 2 10 0 17 56 10 0 73 43 3 38 40 10 2 45 57 19 0 50 12 10 2 6 2 6 1 45 58 13 1 19 1 46 12 13 0 19 2 54 45 59 13 0 13 2 33 60 18 2 43 3 43 1 43 1 38 40 14 61 15 62 19 0 63 73 39 12 19 0 64 16 65 12 9 1 19 2 66 12 19 0 67 12 15 68 19 5 69 12 14 61 19 1 70 22 73 43 1 29) #3# #2# 5855) t clos::install-method)) #2# 5855) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 69 12 14 70 19 6 71 29) #6=#A(t (72) (common-lisp-user::new-sound-event ext::location (defmethod common-lisp-user::new-sound-event :after (common-lisp-user::evt common-lisp-user::sound-event)) (#2# . 6639) ext::annotate (:after) (common-lisp-user::sound-event) (common-lisp-user::evt) common-lisp-user::evt :perceptual-history common-lisp-user::get-module-fct common-lisp-user::instance common-lisp-user::printing-module #:g24208 #:g24207 make-string-output-stream common-lisp-user::printing-module-v common-lisp-user::printing-module-c #:g24210 #:g24209 #:g24211 #:g24212 :stream common-lisp-user::make-act-r-output #:g24213 (setf common-lisp-user::printing-module-v) #:g24214 #:g24215 (setf common-lisp-user::printing-module-c) common-lisp-user::print-audicon #:g24216 #:g24217 (setf common-lisp-user::printing-module-v) #:g24218 #:g24219 (setf common-lisp-user::printing-module-c) get-output-stream-string close common-lisp-user::current common-lisp-user::last-audicon string-equal #:g24220 #:g24221 (setf common-lisp-user::last-audicon) common-lisp-user::audicon-history last caar common-lisp-user::last-time common-lisp-user::mp-time-ms = #:g24222 #:g24224 nconc #:g24223 rplaca #:g24225 #:g24227 #:g24226 (setf common-lisp-user::audicon-history) *error-output* #5# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "No perceptual history module available cannot record audicon information" format finish-output #Y(common-lisp-user::new-sound-event nil nil (24 45 8 26 15 9 19 1 10 45 11 10 0 39 300 15 12 19 1 10 47 1 13 45 14 10 1 39 133 19 0 15 12 13 0 19 1 16 12 13 0 19 1 17 12 46 18 46 19 46 20 10 3 45 21 14 22 13 1 19 2 23 45 24 13 0 13 1 33 25 18 2 43 1 43 1 10 3 45 26 14 22 13 1 19 2 23 45 27 13 0 13 1 33 28 18 2 43 1 43 1 64 5 19 0 29 65 10 3 45 30 10 2 45 31 13 0 13 1 33 32 18 2 43 1 43 1 10 3 45 33 10 3 45 34 13 0 13 1 33 35 18 2 43 1 43 1 66 10 0 16 36 12 13 0 19 1 37 22 43 3 43 2 45 38 13 1 19 1 39 12 13 0 19 2 40 76 73 39 131 10 1 45 41 10 1 45 42 13 0 13 1 33 43 18 2 43 1 43 1 13 1 19 1 44 12 19 1 45 16 46 45 47 10 0 39 10 13 0 19 0 48 12 19 2 49 39 42 13 2 19 1 44 12 19 1 45 45 50 10 2 6 1 45 51 10 1 4 12 13 0 19 2 52 45 53 13 2 10 0 17 54 10 0 73 43 3 38 40 10 2 45 55 19 0 48 12 10 2 6 2 6 1 45 56 13 1 19 1 44 12 13 0 19 2 52 45 57 13 0 13 2 33 58 18 2 43 3 43 1 43 1 38 40 14 59 15 60 19 0 61 73 39 12 19 0 62 16 63 12 9 1 19 2 64 12 19 0 65 12 15 66 19 5 67 12 14 59 19 1 68 22 73 43 1 29) #6# #2# 6639) t clos::install-method)) #2# 6639) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 95 12 19 2 96 1 0 73 29) #7=#A(t (97) (common-lisp-user::perceptual-history-recorder ext::location (defun common-lisp-user::perceptual-history-recorder) (#2# . 7343) ext::annotate :lambda-list (common-lisp-user::event) common-lisp-user::event common-lisp-user::current-model :perceptual-history common-lisp-user::get-module-fct common-lisp-user::instance common-lisp-user::save-visicon common-lisp-user::evt-module :vision eq common-lisp-user::printing-module #:g24271 #:g24270 make-string-output-stream common-lisp-user::printing-module-v common-lisp-user::printing-module-c #:g24273 #:g24272 #:g24274 #:g24275 :stream common-lisp-user::make-act-r-output #:g24276 (setf common-lisp-user::printing-module-v) #:g24277 #:g24278 (setf common-lisp-user::printing-module-c) common-lisp-user::print-visicon #:g24279 #:g24280 (setf common-lisp-user::printing-module-v) #:g24281 #:g24282 (setf common-lisp-user::printing-module-c) get-output-stream-string close common-lisp-user::current common-lisp-user::last-visicon string-equal #:g24283 #:g24284 (setf common-lisp-user::last-visicon) common-lisp-user::visicon-history last caar common-lisp-user::last-time common-lisp-user::mp-time-ms = #:g24285 #:g24287 nconc #:g24286 rplaca #:g24288 #:g24290 #:g24289 (setf common-lisp-user::visicon-history) common-lisp-user::save-audicon :audio #:g24292 #:g24291 #:g24294 #:g24293 #:g24295 #:g24296 #:g24297 (setf common-lisp-user::printing-module-v) #:g24298 #:g24299 (setf common-lisp-user::printing-module-c) common-lisp-user::print-audicon #:g24300 #:g24301 (setf common-lisp-user::printing-module-v) #:g24302 #:g24303 (setf common-lisp-user::printing-module-c) common-lisp-user::last-audicon #:g24304 #:g24305 (setf common-lisp-user::last-audicon) common-lisp-user::audicon-history #:g24306 #:g24308 #:g24307 #:g24309 #:g24311 #:g24310 (setf common-lisp-user::audicon-history) #Y(common-lisp-user::perceptual-history-recorder nil nil (24 45 7 26 19 0 8 73 39 641 15 9 19 1 10 45 11 13 0 19 1 12 39 11 13 1 19 1 13 12 11 14 17 15 39 296 15 16 19 1 10 47 1 17 45 18 10 1 39 133 19 0 19 12 13 0 19 1 20 12 13 0 19 1 21 12 46 22 46 23 46 24 10 3 45 25 14 26 13 1 19 2 27 45 28 13 0 13 1 33 29 18 2 43 1 43 1 10 3 45 30 14 26 13 1 19 2 27 45 31 13 0 13 1 33 32 18 2 43 1 43 1 64 5 19 0 33 65 10 3 45 34 10 2 45 35 13 0 13 1 33 36 18 2 43 1 43 1 10 3 45 37 10 3 45 38 13 0 13 1 33 39 18 2 43 1 43 1 66 10 0 16 40 12 13 0 19 1 41 22 43 3 43 2 45 42 13 1 19 1 43 12 13 0 19 2 44 76 39 130 10 1 45 45 10 1 45 46 13 0 13 1 33 47 18 2 43 1 43 1 13 1 19 1 48 12 19 1 49 16 50 45 51 10 0 39 10 13 0 19 0 52 12 19 2 53 39 41 13 2 19 1 48 12 19 1 49 45 54 10 2 6 1 45 55 10 1 4 12 13 0 19 2 56 45 57 13 2 10 0 17 58 10 0 43 3 38 40 10 2 45 59 19 0 52 12 10 2 6 2 6 1 45 60 13 1 19 1 48 12 13 0 19 2 56 45 61 13 0 13 2 33 62 18 2 43 3 43 1 43 1 13 0 19 1 63 39 11 13 1 19 1 13 12 11 64 17 15 73 39 298 15 16 19 1 10 47 1 65 45 66 10 1 39 133 19 0 19 12 13 0 19 1 20 12 13 0 19 1 21 12 46 67 46 68 46 69 10 3 45 70 14 26 13 1 19 2 27 45 71 13 0 13 1 33 72 18 2 43 1 43 1 10 3 45 73 14 26 13 1 19 2 27 45 74 13 0 13 1 33 75 18 2 43 1 43 1 64 5 19 0 76 65 10 3 45 77 10 2 45 78 13 0 13 1 33 79 18 2 43 1 43 1 10 3 45 80 10 3 45 81 13 0 13 1 33 82 18 2 43 1 43 1 66 10 0 16 40 12 13 0 19 1 41 22 43 3 43 2 45 42 13 1 19 1 83 12 13 0 19 2 44 76 73 39 131 10 1 45 84 10 1 45 85 13 0 13 1 33 86 18 2 43 1 43 1 13 1 19 1 87 12 19 1 49 16 50 45 51 10 0 39 10 13 0 19 0 52 12 19 2 53 39 42 13 2 19 1 87 12 19 1 49 45 88 10 2 6 1 45 89 10 1 4 12 13 0 19 2 56 45 90 13 2 10 0 17 58 10 0 73 43 3 38 40 10 2 45 91 19 0 52 12 10 2 6 2 6 1 45 92 13 1 19 1 87 12 13 0 19 2 56 45 93 13 0 13 2 33 94 18 2 43 3 43 1 43 1 43 1 29) #7# #2# 7343) si::fset)) #2# 7343) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 22 12 19 2 23 1 0 73 29) #8=#A(t (24) (common-lisp-user::reset-perceptual-history ext::location (defun common-lisp-user::reset-perceptual-history) (#2# . 8582) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance #:g24320 #:g24321 (setf common-lisp-user::visicon-history) #:g24322 #:g24323 (setf common-lisp-user::audicon-history) #:g24324 "" #:g24325 (setf common-lisp-user::last-visicon) #:g24326 "" #:g24327 (setf common-lisp-user::last-audicon) #Y(common-lisp-user::reset-perceptual-history nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 10 0 45 11 75 45 12 13 0 13 1 33 13 18 2 43 1 43 1 10 0 45 14 1 15 45 16 13 0 13 1 33 17 18 2 43 1 43 1 10 0 45 18 1 19 45 20 13 0 13 1 33 21 18 2 43 1 43 1 29) #8# #2# 8582) si::fset)) #2# 8582) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 23 12 19 2 24 1 0 73 29) #9=#A(t (25) (common-lisp-user::delete-perceptual-history ext::location (defun common-lisp-user::delete-perceptual-history) (#2# . 8780) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance common-lisp-user::save-visicon common-lisp-user::current-meta-process common-lisp-user::perceptual-event-hook gethash common-lisp-user::state third 1- common-lisp-user::vis-count second common-lisp-user::aud-count zerop common-lisp-user::delete-event-hook remhash si::hash-set common-lisp-user::save-audicon #Y(common-lisp-user::delete-perceptual-history nil nil (24 45 7 26 13 0 19 1 8 39 88 19 0 9 12 13 0 19 1 10 12 19 2 11 45 12 10 0 16 13 16 14 45 15 10 1 16 16 45 17 10 1 16 18 39 5 10 0 16 18 39 21 10 2 4 12 19 1 19 19 0 9 12 13 3 19 1 10 17 20 38 25 19 0 9 12 13 3 19 1 10 12 10 2 4 12 13 0 10 1 6 3 12 19 3 21 43 3 13 0 19 1 22 73 39 88 19 0 9 12 13 0 19 1 10 12 19 2 11 45 12 10 0 16 16 16 14 45 17 10 1 16 13 45 15 10 0 16 18 39 5 10 1 16 18 39 21 10 2 4 12 19 1 19 19 0 9 12 13 3 19 1 10 17 20 38 25 19 0 9 12 13 3 19 1 10 12 10 2 4 12 13 1 10 0 6 3 12 19 3 21 43 3 29) #9# #2# 8780) si::fset)) #2# 8780) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 54 12 19 2 55 1 0 73 29) #10=#A(t (56) (common-lisp-user::perceptual-history-params ext::location (defun common-lisp-user::perceptual-history-params) (#2# . 9864) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::param) common-lisp-user::instance common-lisp-user::param consp :save-visicon-history common-lisp-user::save-visicon common-lisp-user::previous common-lisp-user::current eq common-lisp-user::current-meta-process common-lisp-user::perceptual-event-hook gethash common-lisp-user::state common-lisp-user::perceptual-history-recorder common-lisp-user::add-post-event-hook si::hash-set #:g24369 #:g24371 third + #:g24370 cddr rplaca #:g24372 t #:g24373 (setf common-lisp-user::save-visicon) 1- common-lisp-user::vis-count second common-lisp-user::aud-count zerop common-lisp-user::delete-event-hook remhash #:g24377 #:g24378 (setf common-lisp-user::save-visicon) :save-audicon-history common-lisp-user::save-audicon #:g24382 #:g24384 #:g24383 #:g24385 #:g24386 (setf common-lisp-user::save-audicon) #:g24390 #:g24391 (setf common-lisp-user::save-audicon) #Y(common-lisp-user::perceptual-history-params nil nil (24 45 7 24 45 8 26 10 0 16 9 39 529 10 0 4 42 10 259 10 0 5 12 13 1 19 1 11 12 46 12 46 13 13 0 10 1 17 14 39 6 10 0 73 38 228 10 1 76 39 117 19 0 15 12 13 3 19 1 16 12 19 2 17 45 18 10 0 76 39 29 19 0 15 12 13 4 19 1 16 12 15 19 19 1 20 12 9 0 8 1 6 3 12 19 3 21 38 45 19 0 15 12 13 4 19 1 16 12 19 2 17 45 22 8 1 45 23 10 1 16 24 12 13 0 19 2 25 45 26 10 2 16 27 12 10 0 17 28 10 0 43 3 43 1 10 3 45 29 11 30 45 31 13 0 13 1 33 32 18 2 43 1 43 1 38 107 19 0 15 12 13 3 19 1 16 12 19 2 17 45 18 10 0 16 24 16 33 45 34 10 1 16 35 45 36 10 1 16 37 39 5 10 0 16 37 39 21 10 2 4 12 19 1 38 19 0 15 12 13 6 19 1 16 17 39 38 25 19 0 15 12 13 6 19 1 16 12 10 2 4 12 13 0 10 1 6 3 12 19 3 21 43 3 10 3 45 40 75 45 41 13 0 13 1 33 42 18 2 43 1 43 1 43 2 38 263 42 43 258 10 0 5 12 13 1 19 1 44 12 46 12 46 13 13 0 10 1 17 14 39 6 10 0 73 38 227 10 1 76 39 116 19 0 15 12 13 3 19 1 16 12 19 2 17 45 18 10 0 76 39 29 19 0 15 12 13 4 19 1 16 12 15 19 19 1 20 12 9 1 8 0 6 3 12 19 3 21 38 44 19 0 15 12 13 4 19 1 16 12 19 2 17 45 45 8 1 45 46 10 1 16 35 12 13 0 19 2 25 45 47 10 2 5 12 10 0 17 28 10 0 43 3 43 1 10 3 45 48 11 30 45 49 13 0 13 1 33 50 18 2 43 1 43 1 38 107 19 0 15 12 13 3 19 1 16 12 19 2 17 45 18 10 0 16 24 45 34 10 1 16 35 16 33 45 36 10 1 16 37 39 5 10 0 16 37 39 21 10 2 4 12 19 1 38 19 0 15 12 13 6 19 1 16 17 39 38 25 19 0 15 12 13 6 19 1 16 12 10 2 4 12 13 0 10 1 6 3 12 19 3 21 43 3 10 3 45 51 75 45 52 13 0 13 1 33 53 18 2 43 1 43 1 43 2 38 3 75 73 38 25 10 0 42 10 8 13 1 19 1 11 38 13 42 43 8 13 1 19 1 44 38 3 75 73 29) #10# #2# 9864) si::fset)) #2# 9864) #Y(si::bytecodes nil nil (14 0 77 14 1 14 2 15 3 14 4 77 14 5 15 6 14 7 15 8 19 9 9 12 14 10 14 2 15 3 14 4 77 14 5 15 11 14 7 15 12 19 9 9 6 2 12 14 13 1 17 12 14 18 15 19 14 20 15 21 14 22 15 23 14 24 15 25 14 7 15 26 19 15 27 29) #11=#A(t (28) (:perceptual-history :save-visicon-history :valid-test common-lisp-user::tornil :default-value :warning "T or nil" :documentation "Whether or not to record a history of all visicon changes." common-lisp-user::define-parameter :save-audicon-history "T or nil" "Whether or not to record a history of all audicon changes." :creation common-lisp-user::x common-lisp-user::perceptual-history make-instance #Y(nil nil nil (24 45 14 26 15 15 19 1 16 29) #11# #2# 13788) :reset common-lisp-user::reset-perceptual-history :delete common-lisp-user::delete-perceptual-history :params common-lisp-user::perceptual-history-params :version "1.0a2" "Module to record visicon and audicon changes." common-lisp-user::define-module-fct)) #2# 13788) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #12=#A(t (12) (common-lisp-user::get-audicon-history ext::location (defun common-lisp-user::get-audicon-history) (#2# . 14519) ext::annotate :lambda-list :perceptual-history common-lisp-user::get-module-fct common-lisp-user::m common-lisp-user::audicon-history #Y(common-lisp-user::get-audicon-history nil nil (26 15 6 19 1 7 45 8 10 0 73 39 6 13 0 19 1 9 43 1 29) #12# #2# 14519) si::fset)) #2# 14519) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #13=#A(t (12) (common-lisp-user::get-visicon-history ext::location (defun common-lisp-user::get-visicon-history) (#2# . 14646) ext::annotate :lambda-list :perceptual-history common-lisp-user::get-module-fct common-lisp-user::m common-lisp-user::visicon-history #Y(common-lisp-user::get-visicon-history nil nil (26 15 6 19 1 7 45 8 10 0 73 39 6 13 0 19 1 9 43 1 29) #13# #2# 14646) si::fset)) #2# 14646) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 49 12 19 2 50 1 0 73 29) #14=#A(t (51) (common-lisp-user::show-visicon-history ext::location (defun common-lisp-user::show-visicon-history) (#2# . 14764) ext::annotate :lambda-list (&optional common-lisp-user::start common-lisp-user::end) common-lisp-user::start common-lisp-user::end :perceptual-history common-lisp-user::get-module-fct common-lisp-user::instance numberp *error-output* #5# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Start value for show-visicon-history must be a number or nil, but given ~s" format finish-output "End value for show-visicon-history must be a number or nil, but given ~s" "End value for show-visicon-history must be greater-than or equal to the start value, but given start=~f and end=~f" common-lisp-user::visicon-history common-lisp-user::history common-lisp-user::x common-lisp-user::seconds->ms >= #Y(nil nil nil (24 45 27 26 10 0 4 12 13 4 19 1 28 12 19 2 29 29) #14# #2# 14764) position-if common-lisp-user::it common-lisp-user::si #Y(nil nil nil (24 45 27 26 10 0 4 12 13 4 19 1 28 12 19 2 18 29) #14# #2# 14764) common-lisp-user::ei subseq si::%dolist-var common-lisp-user::printing-module #:g24399 #:g24398 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #15="~&~@?~%" "Time: ~f~%~{~a~}" common-lisp-user::ms->seconds copy-seq "No perceptual history module available cannot show visicon history" #Y(common-lisp-user::show-visicon-history nil nil (25 40 2 77 46 7 25 40 2 77 46 8 26 15 9 19 1 10 45 11 10 0 39 356 10 2 16 12 40 4 10 2 76 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 13 2 19 6 21 12 14 13 19 1 22 22 73 38 299 10 1 16 12 40 4 10 1 76 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 23 13 1 19 6 21 12 14 13 19 1 22 22 73 38 244 10 2 16 12 39 14 10 1 16 12 39 8 13 2 13 1 19 2 18 39 46 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 24 13 2 13 1 19 7 21 12 14 13 19 1 22 22 73 38 178 13 0 19 1 25 45 26 10 3 16 12 39 27 34 30 12 13 0 19 2 31 45 32 10 0 39 5 10 0 38 5 10 1 16 17 43 1 38 3 8 0 45 33 10 3 16 12 39 11 34 34 12 13 1 19 2 31 38 5 10 1 16 17 45 35 13 2 13 1 13 0 19 3 36 45 37 75 45 27 38 75 10 1 4 51 0 15 38 19 1 10 47 1 39 45 40 10 1 39 18 13 0 19 1 41 76 39 10 13 0 19 1 42 12 19 1 43 39 30 13 0 19 1 42 12 19 1 43 12 15 44 15 45 10 2 4 12 19 1 46 12 10 2 5 12 19 5 21 43 2 10 1 5 51 1 10 1 40 -77 75 51 0 13 4 13 3 13 2 19 3 36 16 47 43 2 43 3 38 40 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 48 19 5 21 12 14 13 19 1 22 22 73 43 1 29) #14# #2# 14764) si::fset)) #2# 14764) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 49 12 19 2 50 1 0 73 29) #16=#A(t (51) (common-lisp-user::show-audicon-history ext::location (defun common-lisp-user::show-audicon-history) (#2# . 16254) ext::annotate :lambda-list (&optional common-lisp-user::start common-lisp-user::end) common-lisp-user::start common-lisp-user::end :perceptual-history common-lisp-user::get-module-fct common-lisp-user::instance numberp *error-output* #5# common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Start value for show-audicon-history must be a number or nil, but given ~s" format finish-output "End value for show-audicon-history must be a number or nil, but given ~s" "End value for show-audicon-history must be greater-than or equal to the start value, but given start=~f and end=~f" common-lisp-user::audicon-history common-lisp-user::history common-lisp-user::x common-lisp-user::seconds->ms >= #Y(nil nil nil (24 45 27 26 10 0 4 12 13 4 19 1 28 12 19 2 29 29) #16# #2# 16254) position-if common-lisp-user::it common-lisp-user::si #Y(nil nil nil (24 45 27 26 10 0 4 12 13 4 19 1 28 12 19 2 18 29) #16# #2# 16254) common-lisp-user::ei subseq si::%dolist-var common-lisp-user::printing-module #:g24407 #:g24406 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream #15# "Time: ~f~%~{~a~}" common-lisp-user::ms->seconds copy-seq "No perceptual history module available cannot show audicon history" #Y(common-lisp-user::show-audicon-history nil nil (25 40 2 77 46 7 25 40 2 77 46 8 26 15 9 19 1 10 45 11 10 0 39 356 10 2 16 12 40 4 10 2 76 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 20 13 2 19 6 21 12 14 13 19 1 22 22 73 38 299 10 1 16 12 40 4 10 1 76 76 39 44 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 23 13 1 19 6 21 12 14 13 19 1 22 22 73 38 244 10 2 16 12 39 14 10 1 16 12 39 8 13 2 13 1 19 2 18 39 46 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 24 13 2 13 1 19 7 21 12 14 13 19 1 22 22 73 38 178 13 0 19 1 25 45 26 10 3 16 12 39 27 34 30 12 13 0 19 2 31 45 32 10 0 39 5 10 0 38 5 10 1 16 17 43 1 38 3 8 0 45 33 10 3 16 12 39 11 34 34 12 13 1 19 2 31 38 5 10 1 16 17 45 35 13 2 13 1 13 0 19 3 36 45 37 75 45 27 38 75 10 1 4 51 0 15 38 19 1 10 47 1 39 45 40 10 1 39 18 13 0 19 1 41 76 39 10 13 0 19 1 42 12 19 1 43 39 30 13 0 19 1 42 12 19 1 43 12 15 44 15 45 10 2 4 12 19 1 46 12 10 2 5 12 19 5 21 43 2 10 1 5 51 1 10 1 40 -77 75 51 0 13 4 13 3 13 2 19 3 36 16 47 43 2 43 3 38 40 14 13 15 14 19 0 15 73 39 12 19 0 16 16 17 12 9 1 19 2 18 12 19 0 19 12 15 48 19 5 21 12 14 13 19 1 22 22 73 43 1 29) #16# #2# 16254) si::fset)) #2# 16254) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 1 0 73 29) #17=#A(t (17) (common-lisp-user::audicon-history-time-list ext::location (defun common-lisp-user::audicon-history-time-list) (#2# . 17743) ext::annotate :lambda-list (common-lisp-user::key) common-lisp-user::key common-lisp-user::x "~/print-time-in-seconds/" format #Y(nil nil nil (24 45 8 26 77 15 9 10 0 4 12 19 3 10 29) #17# #2# 17743) :save-audicon-history common-lisp-user::get-history-information mapcar #Y(common-lisp-user::audicon-history-time-list nil nil (24 45 7 26 34 11 12 14 12 13 0 19 2 13 12 19 2 14 29) #17# #2# 17743) si::fset)) #2# 17743) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #18=#A(t (27) (common-lisp-user::audicon-history-text ext::location (defun common-lisp-user::audicon-history-text) (#2# . 17912) ext::annotate :lambda-list (common-lisp-user::time-string common-lisp-user::key) common-lisp-user::time-string common-lisp-user::key length > #\. remove read-from-string time :save-audicon-history common-lisp-user::get-history-information :test = assoc common-lisp-user::data "~{~a~}" format " " " " #Y(common-lisp-user::audicon-history-text nil nil (24 45 7 24 45 8 26 10 1 16 9 12 9 1 19 2 10 39 57 15 11 13 1 19 2 12 12 19 1 13 45 14 13 0 14 15 13 1 19 2 16 12 14 17 33 18 12 19 4 19 45 20 10 0 39 13 77 15 21 10 0 5 12 19 3 22 38 4 1 23 73 43 2 38 4 1 24 73 29) #18# #2# 17912) si::fset)) #2# 17912) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 15 12 19 2 16 1 0 73 29) #19=#A(t (17) (common-lisp-user::visicon-history-time-list ext::location (defun common-lisp-user::visicon-history-time-list) (#2# . 18267) ext::annotate :lambda-list (common-lisp-user::key) common-lisp-user::key common-lisp-user::x "~/print-time-in-seconds/" format #Y(nil nil nil (24 45 8 26 77 15 9 10 0 4 12 19 3 10 29) #19# #2# 18267) :save-visicon-history common-lisp-user::get-history-information mapcar #Y(common-lisp-user::visicon-history-time-list nil nil (24 45 7 26 34 11 12 14 12 13 0 19 2 13 12 19 2 14 29) #19# #2# 18267) si::fset)) #2# 18267) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 25 12 19 2 26 1 0 73 29) #20=#A(t (27) (common-lisp-user::visicon-history-text ext::location (defun common-lisp-user::visicon-history-text) (#2# . 18435) ext::annotate :lambda-list (common-lisp-user::time-string common-lisp-user::key) common-lisp-user::time-string common-lisp-user::key length > #\. remove read-from-string time :save-visicon-history common-lisp-user::get-history-information :test = assoc common-lisp-user::data "~{~a~}" format " " " " #Y(common-lisp-user::visicon-history-text nil nil (24 45 7 24 45 8 26 10 1 16 9 12 9 1 19 2 10 39 57 15 11 13 1 19 2 12 12 19 1 13 45 14 13 0 14 15 13 1 19 2 16 12 14 17 33 18 12 19 4 19 45 20 10 0 39 13 77 15 21 10 0 5 12 19 3 22 38 4 1 23 73 43 2 38 4 1 24 73 29) #20# #2# 18435) si::fset)) #2# 18435))
