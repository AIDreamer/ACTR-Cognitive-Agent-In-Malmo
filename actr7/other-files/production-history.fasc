(#Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 8 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 30 78 26 15 12 1 28 12 19 2 29 1 0 73 29) #1=#A(t (31) (common-lisp-user::p-history-module "P-HISTORY-MODULE-" (common-lisp-user::history common-lisp-user::enabled common-lisp-user::why-not-list common-lisp-user::draw-blanks common-lisp-user::current-data common-lisp-user::color-list common-lisp-user::x-spacing common-lisp-user::y-spacing) ((common-lisp-user::history nil t nil 0 nil) (common-lisp-user::enabled nil t nil 1 nil) (common-lisp-user::why-not-list nil t nil 2 nil) (common-lisp-user::draw-blanks nil t nil 3 nil) (common-lisp-user::current-data nil t nil 4 nil) (common-lisp-user::color-list nil t nil 5 nil) (common-lisp-user::x-spacing nil t nil 6 nil) (common-lisp-user::y-spacing nil t nil 7 nil)) common-lisp-user::copy-p-history-module (common-lisp-user::make-p-history-module) common-lisp-user::p-history-module-p si::define-structure ext::location (defstruct common-lisp-user::p-history-module) (#2=#P"C:/Users/Son Pham/Desktop/actr7/other-files/production-history.lisp" . 0) ext::annotate common-lisp-user::make-p-history-module (defun common-lisp-user::make-p-history-module) (#2# . 0) :lambda-list (&key #3=#:history #4=#:enabled #5=#:why-not-list #6=#:draw-blanks #7=#:current-data #8=#:color-list #9=#:x-spacing #10=#:y-spacing) (nil :y-spacing :x-spacing :color-list :current-data :draw-blanks :why-not-list :enabled :history) #3# #4# #5# #6# #7# #8# #9# #10# 0 si::make-structure #Y(common-lisp-user::make-p-history-module nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 15 26 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 9 27 29) #1# #2# 0) si::fset find-class)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 6 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 28 78 24 15 12 1 26 12 19 2 27 1 0 73 29) #11=#A(t (29) (common-lisp-user::p-history "P-HISTORY-" (time common-lisp-user::selected common-lisp-user::matched common-lisp-user::mismatched common-lisp-user::info common-lisp-user::tag) ((time nil t nil 0 nil) (common-lisp-user::selected nil t nil 1 nil) (common-lisp-user::matched nil t nil 2 nil) (common-lisp-user::mismatched nil t nil 3 nil) (common-lisp-user::info nil t nil 4 nil) (common-lisp-user::tag nil t nil 5 nil)) common-lisp-user::copy-p-history (common-lisp-user::make-p-history) common-lisp-user::p-history-p si::define-structure ext::location (defstruct common-lisp-user::p-history) (#2# . 14556) ext::annotate common-lisp-user::make-p-history (defun common-lisp-user::make-p-history) (#2# . 14556) :lambda-list (&key #12=#:time #13=#:selected #14=#:matched #15=#:mismatched #16=#:info #17=#:tag) (nil :tag :info :mismatched :matched :selected :time) #12# #13# #14# #15# #16# #17# 0 si::make-structure #Y(common-lisp-user::make-p-history nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 15 24 13 5 13 4 13 3 13 2 13 1 13 0 19 7 25 29) #11# #2# 14556) si::fset find-class)) #2# 14556) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 10 14 3 15 4 19 2 5 52 0 15 0 15 6 15 7 15 8 19 4 9 1 0 73 29) #A(t (10) (common-lisp-user::*p-history-module-graph-cache* si::*make-special boundp :test equalp make-hash-table ext::location (defvar common-lisp-user::*p-history-module-graph-cache*) (#2# . 14636) ext::annotate)) #2# 14636) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 38 12 19 2 39 1 0 73 29) #18=#A(t (40) (common-lisp-user::production-history-reward-markers ext::location (defun common-lisp-user::production-history-reward-markers) (#2# . 14709) ext::annotate :lambda-list (common-lisp-user::reward) common-lisp-user::reward common-lisp-user::production-history common-lisp-user::get-module-fct common-lisp-user::history common-lisp-user::p-history-module-enabled :tag :reward :time common-lisp-user::mp-time-ms :info common-lisp-user::printing-module #:g22270 #:g22269 common-lisp-user::printing-module-suppress-cmds #:g22271 #:g22272 t #:g22273 (setf common-lisp-user::printing-module-suppress-cmds) (:name :u) common-lisp-user::spp-fct #:g22274 #:g22275 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::make-p-history #:g22268 #:g22266 common-lisp-user::p-history-module-history #:g22267 common-lisp-user::p-history-module si::structure-set #Y(common-lisp-user::production-history-reward-markers nil nil (24 45 7 26 15 8 19 1 9 45 10 13 0 19 1 11 73 39 121 14 12 14 13 14 14 19 0 15 12 14 16 15 17 19 1 9 47 1 18 45 19 10 1 73 39 59 13 0 19 1 20 45 21 10 1 45 22 11 23 45 24 13 0 13 1 33 25 18 2 43 1 43 1 64 7 15 26 19 1 27 65 10 1 45 28 10 1 45 29 13 0 13 1 33 30 18 2 43 1 43 1 66 43 1 12 43 2 19 6 31 45 32 10 1 45 33 13 1 13 0 19 1 34 3 45 35 13 1 15 36 9 0 13 0 19 4 37 43 3 43 1 29) #18# #2# 14709) si::fset)) #2# 14709) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 20 12 19 2 21 1 0 73 29) #19=#A(t (22) (common-lisp-user::production-history-start-markers ext::location (defun common-lisp-user::production-history-start-markers) (#2# . 15017) ext::annotate :lambda-list (common-lisp-user::ph) common-lisp-user::ph common-lisp-user::p-history-module-enabled :tag :start :time common-lisp-user::mp-time-ms common-lisp-user::make-p-history #:g22281 #:g22279 common-lisp-user::p-history-module-history #:g22280 common-lisp-user::p-history-module si::structure-set #Y(common-lisp-user::production-history-start-markers nil nil (24 45 7 26 13 0 19 1 8 73 39 43 14 9 14 10 14 11 19 0 12 12 19 4 13 45 14 10 1 45 15 13 1 13 0 19 1 16 3 45 17 13 1 15 18 9 0 13 0 19 4 19 43 3 29) #19# #2# 15017) si::fset)) #2# 15017) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 36 12 19 2 37 1 0 73 29) #20=#A(t (38) (common-lisp-user::production-history-stop-markers ext::location (defun common-lisp-user::production-history-stop-markers) (#2# . 15192) ext::annotate :lambda-list (common-lisp-user::ph) common-lisp-user::ph common-lisp-user::p-history-module-enabled :tag :stop :time common-lisp-user::mp-time-ms :info common-lisp-user::printing-module common-lisp-user::get-module-fct #:g22296 #:g22295 common-lisp-user::printing-module-suppress-cmds #:g22297 #:g22298 t #:g22299 (setf common-lisp-user::printing-module-suppress-cmds) (:name :u) common-lisp-user::spp-fct #:g22300 #:g22301 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::make-p-history #:g22294 #:g22292 common-lisp-user::p-history-module-history #:g22293 common-lisp-user::p-history-module si::structure-set #Y(common-lisp-user::production-history-stop-markers nil nil (24 45 7 26 13 0 19 1 8 73 39 121 14 9 14 10 14 11 19 0 12 12 14 13 15 14 19 1 15 47 1 16 45 17 10 1 73 39 59 13 0 19 1 18 45 19 10 1 45 20 11 21 45 22 13 0 13 1 33 23 18 2 43 1 43 1 64 7 15 24 19 1 25 65 10 1 45 26 10 1 45 27 13 0 13 1 33 28 18 2 43 1 43 1 66 43 1 12 43 2 19 6 29 45 30 10 1 45 31 13 1 13 0 19 1 32 3 45 33 13 1 15 34 9 0 13 0 19 4 35 43 3 29) #20# #2# 15192) si::fset)) #2# 15192) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 76 12 19 2 77 1 0 73 29) #21=#A(t (78) (common-lisp-user::production-history-recorder ext::location (defun common-lisp-user::production-history-recorder) (#2# . 15398) ext::annotate :lambda-list (common-lisp-user::cs) common-lisp-user::cs common-lisp-user::production-history common-lisp-user::get-module-fct common-lisp-user::history common-lisp-user::best common-lisp-user::all-productions set-difference common-lisp-user::mismatched :mismatched :time common-lisp-user::mp-time-ms common-lisp-user::make-p-history block common-lisp-user::printing-module #:g22339 #:g22338 common-lisp-user::printing-module-suppress-cmds #:g22340 #:g22341 t #:g22342 (setf common-lisp-user::printing-module-suppress-cmds) (:ut) common-lisp-user::sgp-fct common-lisp-user::ut numberp :utility common-lisp-user::spp-fct caar >= #:g22343 #:g22344 common-lisp-user::p-history si::structure-set si::%dolist-var common-lisp-user::x :u #:g22350 #:g22348 common-lisp-user::p-history-info #:g22349 common-lisp-user::production-failure-reason common-lisp-user::reason common-lisp-user::p-history-module-why-not-list :test string-equal position common-lisp-user::index length #:g22359 #:g22361 nconc #:g22360 common-lisp-user::p-history-module #:g22364 #:g22362 #:g22363 common-lisp-user::p-history-selected #:g22365 #:g22366 #:g22367 #:g22368 #:g22371 #:g22369 common-lisp-user::p-history-module-history #:g22370 #:g22372 #:g22373 (setf common-lisp-user::printing-module-suppress-cmds) #Y(common-lisp-user::production-history-recorder nil nil (24 45 7 26 15 8 19 1 9 45 10 10 1 4 45 11 19 0 12 12 13 2 19 2 13 45 14 14 15 13 0 14 16 19 0 17 12 19 4 18 45 19 15 20 19 1 9 47 1 21 45 22 10 1 73 39 422 13 0 19 1 23 45 24 10 1 45 25 11 26 45 27 13 0 13 1 33 28 18 2 43 1 43 1 64 370 15 29 19 1 30 45 31 10 6 39 32 10 0 16 32 76 40 25 10 0 16 32 39 19 13 6 11 33 6 2 12 19 1 34 16 35 12 13 0 19 2 36 39 24 10 4 45 37 10 7 45 38 13 1 15 39 9 1 13 0 19 4 40 43 1 43 1 10 8 45 41 75 45 42 38 56 10 1 4 51 0 13 0 13 0 14 33 11 43 6 3 12 19 1 34 4 3 45 44 10 7 45 45 13 1 13 0 19 1 46 3 45 47 13 1 15 39 9 4 13 0 19 4 40 43 3 10 1 5 51 1 10 1 40 -58 43 2 10 5 45 41 75 45 42 38 126 10 1 4 51 0 13 0 19 1 48 45 49 13 0 13 10 19 1 50 12 14 51 33 52 12 19 4 53 45 54 10 0 76 39 46 13 11 19 1 50 16 55 51 0 10 11 45 56 10 2 6 1 45 57 13 1 19 1 50 12 13 0 19 2 58 45 59 13 2 15 60 9 2 13 0 19 4 40 43 3 13 2 13 0 8 0 6 2 3 45 61 10 9 45 62 13 1 13 0 19 1 46 3 45 63 13 1 15 39 9 4 13 0 19 4 40 43 3 43 2 10 1 5 51 1 10 1 40 -128 43 2 43 1 13 3 19 1 64 39 27 10 3 45 65 10 8 5 45 66 13 1 15 39 9 2 13 0 19 4 40 43 1 43 1 38 24 10 3 45 67 10 8 45 68 13 1 15 39 9 2 13 0 19 4 40 43 1 43 1 10 3 45 69 10 7 45 70 13 1 13 0 19 1 71 3 45 72 13 1 15 60 9 0 13 0 19 4 40 43 3 75 73 65 10 1 45 73 10 1 45 74 13 0 13 1 33 75 18 2 43 1 43 1 66 43 1 43 2 43 4 29) #21# #2# 15398) si::fset)) #2# 15398) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 35 12 19 2 36 1 0 73 29) #22=#A(t (37) (common-lisp-user::production-history-chart-data ext::location (defun common-lisp-user::production-history-chart-data) (#2# . 16684) ext::annotate :lambda-list (common-lisp-user::draw-blank common-lisp-user::key) common-lisp-user::draw-blank common-lisp-user::key :save-p-history common-lisp-user::get-history-information common-lisp-user::history second common-lisp-user::module common-lisp-user::p-history-module-current-data common-lisp-user::parse-production-history-chart-data common-lisp-user::data length > subseq common-lisp-user::results #:g22379 #:g22380 common-lisp-user::p-history-module si::structure-set common-lisp-user::x "~{~S ~}" format #Y(nil nil nil (24 45 25 26 77 15 26 13 0 19 3 27 29) #22# #2# 16684) mapcar #:g22381 #:g22382 "~{~S ~}" #Y(nil nil nil (24 45 25 26 77 15 32 13 0 19 3 27 29) #22# #2# 16684) common-lisp-user::done #Y(common-lisp-user::production-history-chart-data nil nil (24 45 7 24 45 8 26 14 9 13 0 19 2 10 45 11 10 0 16 12 45 13 13 0 19 1 14 76 39 8 13 3 13 1 19 2 15 13 0 19 1 14 45 16 10 0 16 17 12 9 200 19 2 18 39 52 13 0 9 0 9 200 19 3 19 45 20 10 2 45 21 13 2 9 200 19 2 19 45 22 13 1 15 23 9 4 13 0 19 4 24 43 1 43 1 34 28 12 13 0 19 2 29 43 1 38 40 10 1 45 30 75 45 31 13 1 15 23 9 4 13 0 19 4 24 43 1 43 1 34 33 12 1 34 6 1 12 10 0 3 51 0 12 19 2 29 43 1 43 2 29) #22# #2# 16684) si::fset)) #2# 16684) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 73 12 19 2 74 1 0 73 29) #23=#A(t (75) (common-lisp-user::parse-production-history-chart-data ext::location (defun common-lisp-user::parse-production-history-chart-data) (#2# . 17419) ext::annotate :lambda-list (common-lisp-user::draw-blank common-lisp-user::data) common-lisp-user::draw-blank common-lisp-user::data common-lisp-user::results second common-lisp-user::history common-lisp-user::p-names-and-texts car mapcar common-lisp-user::p-names common-lisp-user::columns max common-lisp-user::x symbol-name length #Y(nil nil nil (24 45 18 26 10 0 16 19 16 20 29) #23# #2# 17419) apply common-lisp-user::name-size common-lisp-user::p-history-module-history si::%dolist-var common-lisp-user::p-history-selected common-lisp-user::p-history-matched common-lisp-user::p-history-tag common-lisp-user::column "~/print-time-in-seconds/" common-lisp-user::p-history-time format common-lisp-user::col common-lisp-user::y eq #:g22540 nconc common-lisp-user::p-history-info assoc common-lisp-user::utilities #:g22542 #:g22544 find #:g22546 #:g22548 #:g22550 common-lisp-user::p-history-mismatched #:g22552 #:g22554 #:g22556 #:g22558 #:g22560 + labels cdr append common-lisp-user::colors common-lisp-user::p-history-module-color-list nth common-lisp-user::it "#44DA22" "#FCA31D" "#E1031E" common-lisp-user::reasons common-lisp-user::p-history-module-why-not-list common-lisp-user::size 1+ * #:g22566 #:g22567 common-lisp-user::p-history-module si::structure-set #Y(common-lisp-user::parse-production-history-chart-data nil nil (24 45 7 24 45 8 26 75 45 9 10 1 16 10 45 11 10 2 4 45 12 15 13 13 0 19 2 14 45 15 8 0 45 16 10 2 39 17 15 17 34 21 12 13 1 19 2 14 12 19 2 22 38 3 8 5 45 23 13 4 19 1 24 45 25 75 45 18 38 372 10 1 4 51 0 10 9 40 13 13 0 19 1 26 40 6 13 0 19 1 27 39 7 13 0 19 1 28 76 39 336 15 29 77 15 30 13 0 19 1 31 12 19 3 32 6 2 45 33 10 5 45 25 75 45 34 38 279 10 1 4 51 0 13 0 13 3 19 1 26 17 35 39 73 8 0 6 1 45 36 13 3 13 0 19 2 37 51 3 43 1 13 0 13 3 19 1 38 12 19 2 39 5 45 40 10 0 4 6 1 45 41 13 4 13 0 19 2 37 51 4 43 1 10 0 16 10 6 1 45 42 13 4 13 0 19 2 37 51 4 43 1 43 1 38 169 13 0 13 3 19 1 27 12 19 2 43 39 73 8 1 6 1 45 44 13 3 13 0 19 2 37 51 3 43 1 13 0 13 3 19 1 38 12 19 2 39 5 45 40 10 0 4 6 1 45 45 13 4 13 0 19 2 37 51 4 43 1 10 0 16 10 6 1 45 46 13 4 13 0 19 2 37 51 4 43 1 43 1 38 84 13 0 13 3 19 1 47 12 19 2 43 39 71 8 2 6 1 45 48 13 3 13 0 19 2 37 51 3 43 1 13 0 13 3 19 1 38 12 19 2 39 5 45 40 10 0 4 6 1 45 49 13 4 13 0 19 2 37 51 4 43 1 10 0 16 10 6 1 45 50 13 4 13 0 19 2 37 51 4 43 1 43 1 10 0 6 1 45 51 13 3 13 0 19 2 37 51 3 43 1 10 1 5 51 1 10 1 40 -281 43 2 8 1 45 52 13 5 13 0 19 2 53 51 5 43 1 13 0 10 8 3 51 8 43 1 10 1 5 51 1 10 1 40 -374 43 2 15 54 10 2 16 20 6 2 12 13 2 15 55 13 3 19 2 14 12 19 3 56 12 10 5 3 51 5 15 57 9 0 13 4 19 1 58 17 59 45 60 10 0 39 6 10 0 73 38 4 1 61 73 12 43 1 9 1 13 4 19 1 58 17 59 45 60 10 0 39 6 10 0 73 38 4 1 62 73 12 43 1 9 2 13 4 19 1 58 17 59 45 60 10 0 39 5 10 0 38 3 1 63 43 1 6 4 12 10 5 3 51 5 15 64 13 4 19 1 65 3 12 10 5 3 51 5 15 66 9 20 10 2 16 20 16 67 12 19 2 68 12 9 20 9 9 13 0 19 2 68 12 9 80 9 80 13 1 19 2 68 6 6 12 10 5 3 51 5 10 4 45 69 10 6 45 70 13 1 15 71 9 4 13 0 19 4 72 43 1 43 1 75 73 43 6 29) #23# #2# 17419) si::fset)) #2# 17419) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 7 77 77 15 6 19 15 7 15 8 15 9 15 10 15 11 19 4 12 15 13 15 9 15 14 15 15 19 4 12 15 13 14 16 77 15 17 19 4 12 15 0 19 1 30 78 26 15 13 1 28 12 19 2 29 1 0 73 29) #24=#A(t (31) (common-lisp-user::p-history-node common-lisp-user::phn- (common-lisp-user::name common-lisp-user::color-starts common-lisp-user::color-ends common-lisp-user::cycle-starts common-lisp-user::cycle-ends common-lisp-user::links common-lisp-user::utilities) ((common-lisp-user::name nil t nil 0 nil) (common-lisp-user::color-starts nil t nil 1 nil) (common-lisp-user::color-ends nil t nil 2 nil) (common-lisp-user::cycle-starts nil t nil 3 nil) (common-lisp-user::cycle-ends nil t nil 4 nil) (common-lisp-user::links nil t nil 5 nil) (common-lisp-user::utilities nil t nil 6 nil)) common-lisp-user::copy-p-history-node (common-lisp-user::make-p-history-node) common-lisp-user::p-history-node-p si::define-structure #25=(common-lisp-user::p-history-node (:conc-name common-lisp-user::phn-)) ext::location (defstruct #25#) (#2# . 19685) ext::annotate common-lisp-user::make-p-history-node (defun common-lisp-user::make-p-history-node) (#2# . 19685) :lambda-list (&key #26=#:name #27=#:color-starts #28=#:color-ends #29=#:cycle-starts #30=#:cycle-ends #31=#:links #32=#:utilities) (nil :utilities :links :cycle-ends :cycle-starts :color-ends :color-starts :name) #26# #27# #28# #29# #30# #31# #32# 0 si::make-structure #Y(common-lisp-user::make-p-history-node nil nil (28 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 15 26 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 8 27 29) #24# #2# 19685) si::fset find-class)) #2# 19685) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 6 77 77 15 6 19 15 7 15 8 15 9 15 10 15 11 19 4 12 15 13 15 9 15 14 15 15 19 4 12 15 13 14 16 77 15 17 19 4 12 15 0 19 1 29 78 25 15 13 1 27 12 19 2 28 1 0 73 29) #33=#A(t (30) (common-lisp-user::p-history-link common-lisp-user::phl- (common-lisp-user::target common-lisp-user::color count common-lisp-user::cycle common-lisp-user::from-time common-lisp-user::to-time) ((common-lisp-user::target nil t nil 0 nil) (common-lisp-user::color nil t nil 1 nil) (count nil t nil 2 nil) (common-lisp-user::cycle nil t nil 3 nil) (common-lisp-user::from-time nil t nil 4 nil) (common-lisp-user::to-time nil t nil 5 nil)) common-lisp-user::copy-p-history-link (common-lisp-user::make-p-history-link) common-lisp-user::p-history-link-p si::define-structure #34=(common-lisp-user::p-history-link (:conc-name common-lisp-user::phl-)) ext::location (defstruct #34#) (#2# . 19803) ext::annotate common-lisp-user::make-p-history-link (defun common-lisp-user::make-p-history-link) (#2# . 19803) :lambda-list (&key #35=#:target #36=#:color #37=#:count #38=#:cycle #39=#:from-time #40=#:to-time) (nil :to-time :from-time :cycle :count :color :target) #35# #36# #37# #38# #39# #40# 0 si::make-structure #Y(common-lisp-user::make-p-history-link nil nil (28 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 15 25 13 5 13 4 13 3 13 2 13 1 13 0 19 7 26 29) #33# #2# 19803) si::fset find-class)) #2# 19803) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 9 77 77 15 6 19 15 7 15 8 15 9 15 10 15 11 19 4 12 15 13 15 9 15 14 15 15 19 4 12 15 13 14 16 77 15 17 19 4 12 15 0 19 1 32 78 28 15 13 1 30 12 19 2 31 1 0 73 29) #41=#A(t (33) (common-lisp-user::p-history-display common-lisp-user::phd- (common-lisp-user::name common-lisp-user::x common-lisp-user::y common-lisp-user::color common-lisp-user::width common-lisp-user::links common-lisp-user::starts common-lisp-user::ends common-lisp-user::utilities) ((common-lisp-user::name nil t nil 0 nil) (common-lisp-user::x nil t nil 1 nil) (common-lisp-user::y nil t nil 2 nil) (common-lisp-user::color nil t nil 3 nil) (common-lisp-user::width nil t nil 4 nil) (common-lisp-user::links nil t nil 5 nil) (common-lisp-user::starts nil t nil 6 nil) (common-lisp-user::ends nil t nil 7 nil) (common-lisp-user::utilities nil t nil 8 nil)) common-lisp-user::copy-p-history-display (common-lisp-user::make-p-history-display) common-lisp-user::p-history-display-p si::define-structure #42=(common-lisp-user::p-history-display (:conc-name common-lisp-user::phd-)) ext::location (defstruct #42#) (#2# . 19893) ext::annotate common-lisp-user::make-p-history-display (defun common-lisp-user::make-p-history-display) (#2# . 19893) :lambda-list (&key #43=#:name #44=#:x #45=#:y #46=#:color #47=#:width #48=#:links #49=#:starts #50=#:ends #51=#:utilities) (nil :utilities :ends :starts :links :width :color :y :x :name) #43# #44# #45# #46# #47# #48# #49# #50# #51# 0 si::make-structure #Y(common-lisp-user::make-p-history-display nil nil (28 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 22 40 2 77 46 26 22 40 2 77 46 27 15 28 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 10 29 29) #41# #2# 19893) si::fset find-class)) #2# 19893) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 7 77 77 15 6 19 15 7 15 8 15 9 15 10 15 11 19 4 12 15 13 15 9 15 14 15 15 19 4 12 15 13 14 16 77 15 17 19 4 12 15 0 19 1 30 78 26 15 13 1 28 12 19 2 29 1 0 73 29) #52=#A(t (31) (common-lisp-user::p-history-cache common-lisp-user::phc- (common-lisp-user::offsets common-lisp-user::holes common-lisp-user::max-loops max common-lisp-user::height common-lisp-user::min-u common-lisp-user::max-u) ((common-lisp-user::offsets nil t nil 0 nil) (common-lisp-user::holes nil t nil 1 nil) (common-lisp-user::max-loops nil t nil 2 nil) (max nil t nil 3 nil) (common-lisp-user::height nil t nil 4 nil) (common-lisp-user::min-u nil t nil 5 nil) (common-lisp-user::max-u nil t nil 6 nil)) common-lisp-user::copy-p-history-cache (common-lisp-user::make-p-history-cache) common-lisp-user::p-history-cache-p si::define-structure #53=(common-lisp-user::p-history-cache (:conc-name common-lisp-user::phc-)) ext::location (defstruct #53#) (#2# . 19992) ext::annotate common-lisp-user::make-p-history-cache (defun common-lisp-user::make-p-history-cache) (#2# . 19992) :lambda-list (&key #54=#:offsets #55=#:holes #56=#:max-loops #57=#:max #58=#:height #59=#:min-u #60=#:max-u) (nil :max-u :min-u :height :max :max-loops :holes :offsets) #54# #55# #56# #57# #58# #59# #60# 0 si::make-structure #Y(common-lisp-user::make-p-history-cache nil nil (28 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 2 77 46 22 22 40 2 77 46 23 22 40 2 77 46 24 22 40 2 77 46 25 15 26 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 8 27 29) #52# #2# 19992) si::fset find-class)) #2# 19992) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 195 12 19 2 196 1 0 73 29) #61=#A(t (197) (common-lisp-user::parse-production-history-graph ext::location (defun common-lisp-user::parse-production-history-graph) (#2# . 20087) ext::annotate :lambda-list (common-lisp-user::module-data common-lisp-user::which) common-lisp-user::module-data common-lisp-user::which common-lisp-user::x :name :links common-lisp-user::make-p-history-node #Y(nil nil nil (24 45 9 26 14 10 13 0 14 11 77 19 4 12 29) #61# #2# 20087) car mapcar second common-lisp-user::stop-utilities common-lisp-user::max-utility common-lisp-user::min-utility common-lisp-user::start-time common-lisp-user::max-cycle common-lisp-user::max-color common-lisp-user::previous common-lisp-user::top common-lisp-user::cycle common-lisp-user::current-loop common-lisp-user::loops common-lisp-user::history common-lisp-user::nodes common-lisp-user::p-history-module-history reverse si::%dolist-var common-lisp-user::p-history-selected common-lisp-user::p-history-matched common-lisp-user::p-history-time time common-lisp-user::matched common-lisp-user::selected (:all :freq :color :cycle) find common-lisp-user::y common-lisp-user::phn-links :key common-lisp-user::z common-lisp-user::phl-cycle = common-lisp-user::phl-target #Y(nil nil nil (24 45 44 26 13 0 19 1 45 12 13 12 19 2 46 73 39 6 13 0 19 1 47 29) #61# #2# 20087) :target :cycle :count :color :from-time :to-time common-lisp-user::make-p-history-link #:g22981 #:g22979 #:g22980 common-lisp-user::p-history-node si::structure-set :test equalp position common-lisp-user::existing-color length common-lisp-user::color common-lisp-user::check common-lisp-user::phn-name common-lisp-user::link common-lisp-user::phl-color #:g22988 #:g22989 common-lisp-user::p-history-link common-lisp-user::from+time common-lisp-user::to+time common-lisp-user::to-time common-lisp-user::from-time common-lisp-user::to common-lisp-user::from common-lisp-user::phl-count #Y(nil nil nil (24 45 44 26 13 0 19 1 80 76 39 12 13 0 19 1 45 12 13 18 19 2 46 73 39 6 13 0 19 1 47 29) #61# #2# 20087) common-lisp-user::it #:g22990 remove #:g22991 #:g22994 #:g22992 #:g22993 #Y(nil nil nil (24 45 74 24 45 75 26 10 1 4 12 10 0 4 12 10 1 5 12 10 1 5 12 46 76 46 77 46 78 46 79 13 1 13 0 13 13 14 43 15 68 19 4 40 12 19 1 42 12 14 43 34 81 12 19 4 40 45 82 10 0 39 54 13 1 13 14 14 43 15 68 19 4 40 45 83 13 1 13 2 13 15 14 43 15 68 19 4 40 12 19 1 42 12 19 2 84 45 85 13 1 15 59 9 5 13 0 19 4 60 43 1 43 1 38 1 43 1 14 49 13 1 14 52 13 6 14 51 9 1 14 50 13 17 14 53 13 2 14 54 13 3 19 12 55 45 86 13 1 13 14 14 43 15 68 19 4 40 45 87 13 1 13 0 19 1 42 3 45 88 13 1 15 59 9 5 13 0 19 4 60 43 3 43 4 29) #61# #2# 20087) butlast mapc #:g22997 last caar #:g22995 common-lisp-user::phn-color-starts adjoin #:g22996 cdar #:g23000 #:g22998 common-lisp-user::phn-cycle-starts #:g22999 #:g23003 #:g23001 common-lisp-user::phn-color-ends #:g23002 #:g23006 #:g23004 common-lisp-user::phn-cycle-ends #:g23005 > #:g23010 nconc #:g23012 + (:run :run-color) common-lisp-user::p-history-tag :start eq #Y(nil nil nil (24 45 44 26 13 0 19 1 45 12 13 12 19 2 46 73 39 6 13 0 19 1 47 29) #61# #2# 20087) #:g23025 #:g23023 #:g23024 :stop #:g23034 #:g23035 #Y(nil nil nil (24 45 44 26 13 0 19 1 80 76 39 12 13 0 19 1 45 12 13 18 19 2 46 73 39 6 13 0 19 1 47 29) #61# #2# 20087) #:g23036 #:g23037 #:g23040 #:g23038 #:g23039 #Y(nil nil nil (24 45 74 24 45 75 26 10 1 4 12 10 0 4 12 10 1 5 12 10 0 5 12 46 76 46 77 46 78 46 79 13 1 13 0 13 13 14 43 15 68 19 4 40 12 19 1 42 12 14 43 34 128 12 19 4 40 45 82 10 0 39 54 13 1 13 14 14 43 15 68 19 4 40 45 129 13 1 13 2 13 15 14 43 15 68 19 4 40 12 19 1 42 12 19 2 84 45 130 13 1 15 59 9 5 13 0 19 4 60 43 1 43 1 38 1 43 1 14 49 13 1 14 52 13 6 14 51 9 1 14 50 13 17 14 53 13 2 14 54 13 3 19 12 55 45 131 13 1 13 14 14 43 15 68 19 4 40 45 132 13 1 13 0 19 1 42 3 45 133 13 1 15 59 9 5 13 0 19 4 60 43 3 43 4 29) #61# #2# 20087) #:g23043 #:g23041 #:g23042 #:g23046 #:g23044 #:g23045 #:g23049 #:g23047 #:g23048 #:g23052 #:g23050 #:g23051 #:g23056 #:g23058 #Y(nil nil nil (24 45 44 26 13 0 19 1 45 12 13 12 19 2 46 73 39 6 13 0 19 1 47 29) #61# #2# 20087) #:g23069 #:g23067 #:g23068 common-lisp-user::p-history-info :reward common-lisp-user::reward #:g23078 #:g23080 common-lisp-user::phn-utilities #:g23079 < #Y(nil nil nil (24 45 44 26 13 0 19 1 80 76 39 12 13 0 19 1 45 12 13 16 19 2 46 73 39 6 13 0 19 1 47 29) #61# #2# 20087) #:g23083 #:g23084 #:g23087 #:g23085 #:g23086 #Y(nil nil nil (24 45 74 24 45 75 26 10 1 4 12 10 0 4 12 10 1 5 12 10 0 5 12 46 76 46 77 46 78 46 79 13 1 13 0 13 11 14 43 15 68 19 4 40 12 19 1 42 12 14 43 34 161 12 19 4 40 45 82 10 0 39 54 13 1 13 12 14 43 15 68 19 4 40 45 162 13 1 13 2 13 13 14 43 15 68 19 4 40 12 19 1 42 12 19 2 84 45 163 13 1 15 59 9 5 13 0 19 4 60 43 1 43 1 38 1 43 1 14 49 13 1 14 52 9 0 14 51 9 1 14 50 13 15 14 53 13 2 14 54 13 3 19 12 55 45 164 13 1 13 12 14 43 15 68 19 4 40 45 165 13 1 13 0 19 1 42 3 45 166 13 1 15 59 9 5 13 0 19 4 60 43 3 43 4 29) #61# #2# 20087) #:g23090 #:g23088 #:g23089 #:g23093 #:g23091 #:g23092 #:g23097 :utility #:g23104 #:g23106 #:g23105 #:g23111 #:g23109 #:g23110 #Y(nil nil nil (24 45 74 24 45 75 26 10 1 4 12 10 0 4 12 10 1 5 12 10 1 5 12 46 76 46 77 46 78 46 79 14 49 13 1 14 52 10 8 16 65 12 14 51 9 1 14 50 13 10 14 53 13 2 14 54 13 3 19 12 55 45 179 13 1 13 7 14 43 15 68 19 4 40 45 180 13 1 13 0 19 1 42 3 45 181 13 1 15 59 9 5 13 0 19 4 60 43 3 43 4 29) #61# #2# 20087) #:g23114 #:g23112 #:g23113 #:g23117 #:g23115 #:g23116 #:g23120 #:g23118 #:g23119 #:g23123 #:g23121 #:g23122 #Y(common-lisp-user::parse-production-history-graph nil nil (24 45 7 24 45 8 26 34 13 12 15 14 10 1 4 12 19 2 15 12 19 2 15 12 10 1 16 16 12 77 77 9 0 77 77 9 0 9 0 77 77 77 77 46 17 46 18 46 19 46 20 46 21 46 22 46 23 46 24 46 25 46 26 46 27 46 28 46 29 13 1 19 1 30 16 31 45 32 75 45 9 38 1849 10 1 4 51 0 13 0 19 1 33 12 13 0 19 1 34 12 13 0 19 1 35 12 46 36 46 37 46 38 13 18 15 39 19 2 40 39 633 10 1 40 3 10 0 39 623 10 10 76 39 3 10 0 39 40 10 1 45 32 75 45 41 38 18 10 1 4 51 0 13 0 10 12 3 51 12 10 1 5 51 1 10 1 40 -20 43 2 13 0 10 10 3 51 10 10 11 39 3 10 1 39 100 10 1 45 32 75 45 41 38 85 10 1 4 51 0 13 0 13 13 19 1 42 12 14 43 34 48 12 19 4 40 76 39 56 14 49 13 0 14 50 13 11 14 51 77 14 52 9 -1 14 53 13 4 14 54 13 4 19 12 55 45 56 10 14 45 57 13 1 13 0 19 1 42 3 45 58 13 1 15 59 9 5 13 0 19 4 60 43 3 10 1 5 51 1 10 1 40 -87 43 2 10 0 39 464 13 0 13 8 14 43 15 14 19 4 40 39 427 13 0 15 14 13 8 19 2 15 3 12 13 7 14 61 15 62 19 4 63 45 64 10 0 39 5 10 0 38 5 10 8 16 65 45 66 15 14 13 10 19 2 15 45 32 75 45 67 38 85 10 1 4 51 0 13 0 13 9 14 43 15 68 19 4 40 12 19 1 42 45 32 75 45 69 38 47 10 1 4 51 0 9 -1 13 0 19 1 70 12 19 2 46 39 24 10 0 45 71 10 5 45 72 13 1 15 73 9 1 13 0 19 4 60 43 1 43 1 10 1 5 51 1 10 1 40 -49 43 2 10 1 5 51 1 10 1 40 -87 43 2 34 89 12 13 10 13 2 10 4 3 12 13 10 19 1 90 3 12 19 3 91 10 0 45 92 13 11 19 1 93 16 94 12 13 8 14 43 15 68 19 4 40 45 95 13 1 13 0 19 1 96 12 19 2 97 45 98 13 1 15 59 9 1 13 0 19 4 60 43 3 13 11 13 10 19 1 93 16 99 3 45 100 13 11 19 1 93 16 94 12 13 8 14 43 15 68 19 4 40 45 101 13 1 13 0 19 1 102 3 45 103 13 1 15 59 9 3 13 0 19 4 60 43 3 10 0 45 104 13 3 13 8 14 43 15 68 19 4 40 45 105 13 1 13 0 19 1 106 12 19 2 97 45 107 13 1 15 59 9 2 13 0 19 4 60 43 3 13 11 10 4 3 45 108 13 3 13 8 14 43 15 68 19 4 40 45 109 13 1 13 0 19 1 110 3 45 111 13 1 15 59 9 4 13 0 19 4 60 43 3 13 11 13 15 19 2 112 39 5 10 11 51 15 13 0 13 14 19 2 112 39 5 10 0 51 14 10 1 76 39 26 13 2 15 14 13 10 19 2 15 3 6 1 45 113 13 10 13 0 19 2 114 51 10 43 1 43 2 8 1 45 115 13 10 13 0 19 2 116 51 10 43 1 75 51 8 13 0 10 2 3 12 10 8 3 51 8 13 0 13 5 14 43 15 68 19 4 40 51 11 38 1172 13 18 15 117 19 2 40 39 653 10 1 40 10 10 0 40 6 13 3 19 1 118 39 636 14 119 13 3 19 1 118 17 120 39 5 10 2 51 14 10 10 76 39 3 10 0 39 40 10 1 45 32 75 45 41 38 18 10 1 4 51 0 13 0 10 12 3 51 12 10 1 5 51 1 10 1 40 -20 43 2 13 0 10 10 3 51 10 10 11 39 3 10 1 39 100 10 1 45 32 75 45 41 38 85 10 1 4 51 0 13 0 13 13 19 1 42 12 14 43 34 121 12 19 4 40 76 39 56 14 49 13 0 14 50 13 11 14 51 77 14 52 9 -1 14 53 13 4 14 54 13 4 19 12 55 45 122 10 14 45 123 13 1 13 0 19 1 42 3 45 124 13 1 15 59 9 5 13 0 19 4 60 43 3 10 1 5 51 1 10 1 40 -87 43 2 10 0 39 25 13 0 10 2 3 12 10 8 3 51 8 13 0 13 5 14 43 15 68 19 4 40 51 11 10 8 39 10 14 125 13 3 19 1 118 17 120 39 423 15 14 13 8 19 2 15 12 13 7 14 61 15 62 19 4 63 45 64 10 0 39 5 10 0 38 5 10 8 16 65 45 66 15 14 13 10 19 2 15 45 32 75 45 67 38 85 10 1 4 51 0 13 0 13 9 14 43 15 68 19 4 40 12 19 1 42 45 32 75 45 69 38 47 10 1 4 51 0 9 -1 13 0 19 1 70 12 19 2 46 39 24 10 0 45 126 10 5 45 127 13 1 15 73 9 1 13 0 19 4 60 43 1 43 1 10 1 5 51 1 10 1 40 -49 43 2 10 1 5 51 1 10 1 40 -87 43 2 34 134 12 10 10 5 12 13 10 19 1 90 12 19 3 91 10 0 45 135 13 11 19 1 93 16 94 12 13 8 14 43 15 68 19 4 40 45 136 13 1 13 0 19 1 96 12 19 2 97 45 137 13 1 15 59 9 1 13 0 19 4 60 43 3 13 11 10 16 3 45 138 13 11 19 1 93 16 94 12 13 8 14 43 15 68 19 4 40 45 139 13 1 13 0 19 1 102 12 19 2 97 45 140 13 1 15 59 9 3 13 0 19 4 60 43 3 10 0 45 141 10 11 16 94 12 13 8 14 43 15 68 19 4 40 45 142 13 1 13 0 19 1 106 12 19 2 97 45 143 13 1 15 59 9 2 13 0 19 4 60 43 3 13 11 10 4 3 45 144 10 11 16 94 12 13 8 14 43 15 68 19 4 40 45 145 13 1 13 0 19 1 110 3 45 146 13 1 15 59 9 4 13 0 19 4 60 43 3 13 11 13 15 19 2 112 39 5 10 11 51 15 13 0 13 14 19 2 112 39 5 10 0 51 14 10 1 76 39 23 15 14 13 10 19 2 15 6 1 45 147 13 10 13 0 19 2 114 51 10 43 1 43 2 8 1 45 148 13 10 13 0 19 2 116 51 10 43 1 75 51 8 75 51 11 38 511 10 1 40 10 10 0 40 6 13 3 19 1 118 39 496 10 10 76 39 3 10 0 39 40 10 1 45 32 75 45 41 38 18 10 1 4 51 0 13 0 10 12 3 51 12 10 1 5 51 1 10 1 40 -20 43 2 13 0 10 10 3 51 10 10 11 39 3 10 1 39 100 10 1 45 32 75 45 41 38 85 10 1 4 51 0 13 0 13 13 19 1 42 12 14 43 34 149 12 19 4 40 76 39 56 14 49 13 0 14 50 13 11 14 51 77 14 52 9 -1 14 53 13 4 14 54 13 4 19 12 55 45 150 10 14 45 151 13 1 13 0 19 1 42 3 45 152 13 1 15 59 9 5 13 0 19 4 60 43 3 10 1 5 51 1 10 1 40 -87 43 2 10 0 39 25 13 0 10 2 3 12 10 8 3 51 8 13 0 13 5 14 43 15 68 19 4 40 51 11 14 125 13 3 19 1 118 17 120 39 8 13 3 19 1 153 51 17 10 8 39 10 14 154 13 3 19 1 118 17 120 39 280 13 3 19 1 153 45 32 75 45 155 38 109 10 1 4 51 0 10 0 4 12 13 7 14 43 15 68 19 4 40 45 156 13 12 10 1 16 16 3 6 1 45 157 13 1 19 1 158 12 13 0 19 2 114 45 159 13 2 15 59 9 6 13 0 19 4 60 43 3 10 17 76 40 11 10 0 16 16 12 13 17 19 2 160 39 7 10 0 16 16 51 17 10 18 76 40 11 10 0 16 16 12 13 18 19 2 112 39 7 10 0 16 16 51 18 10 1 5 51 1 10 1 40 -111 43 2 34 167 12 10 8 5 12 13 8 19 1 90 12 19 3 91 13 9 13 8 19 1 93 16 99 3 45 168 13 9 19 1 93 16 94 12 13 6 14 43 15 68 19 4 40 45 169 13 1 13 0 19 1 102 12 19 2 97 45 170 13 1 15 59 9 3 13 0 19 4 60 43 3 13 9 10 2 3 45 171 10 9 16 94 12 13 6 14 43 15 68 19 4 40 45 172 13 1 13 0 19 1 110 3 45 173 13 1 15 59 9 4 13 0 19 4 60 43 3 13 9 13 13 19 2 112 39 5 10 9 51 13 75 51 11 8 1 45 174 13 10 13 0 19 2 116 51 10 43 1 75 51 8 43 3 10 1 5 51 1 10 1 40 -1851 43 2 13 13 11 175 17 120 39 3 10 12 39 124 10 12 45 32 75 45 155 38 109 10 1 4 51 0 10 0 4 12 13 2 14 43 15 68 19 4 40 45 176 13 7 10 1 16 16 3 6 1 45 177 13 1 19 1 158 12 13 0 19 2 114 45 178 13 2 15 59 9 6 13 0 19 4 60 43 3 10 12 76 40 11 10 0 16 16 12 13 12 19 2 160 39 7 10 0 16 16 51 12 10 13 76 40 11 10 0 16 16 12 13 13 19 2 112 39 7 10 0 16 16 51 13 10 1 5 51 1 10 1 40 -111 43 2 10 3 16 65 12 9 0 19 2 112 39 204 34 182 12 10 3 5 12 13 3 19 1 90 12 19 3 91 10 2 16 65 45 183 13 4 19 1 93 16 94 12 13 1 14 43 15 68 19 4 40 45 184 13 1 13 0 19 1 96 12 19 2 97 45 185 13 1 15 59 9 1 13 0 19 4 60 43 3 13 4 13 3 19 1 93 16 99 3 45 186 13 4 19 1 93 16 94 12 13 1 14 43 15 68 19 4 40 45 187 13 1 13 0 19 1 102 3 45 188 13 1 15 59 9 3 13 0 19 4 60 43 3 10 2 16 65 45 189 10 7 45 190 13 1 13 0 19 1 106 12 19 2 97 45 191 13 1 15 59 9 2 13 0 19 4 60 43 3 13 4 10 3 16 99 3 45 192 10 7 45 193 13 1 13 0 19 1 110 3 45 194 13 1 15 59 9 4 13 0 19 4 60 43 3 10 2 16 65 51 7 10 4 51 8 13 5 10 6 73 39 6 13 6 19 1 68 12 13 0 13 7 10 8 6 2 12 13 10 10 11 6 2 6 5 73 43 13 29) #61# #2# 20087) si::fset)) #2# 20087) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 1 0 73 29) #62=#A(t (36) (common-lisp-user::filter-links ext::location (defun common-lisp-user::filter-links) (#2# . 32775) ext::annotate :lambda-list (common-lisp-user::links common-lisp-user::which number) common-lisp-user::links common-lisp-user::which number :all :freq :key common-lisp-user::x common-lisp-user::phl-target common-lisp-user::phl-count #Y(nil nil nil (24 45 13 26 13 0 19 1 14 12 13 0 19 1 15 3 73 29) #62# #2# 32775) remove-duplicates common-lisp-user::y #Y(nil nil nil (24 45 18 26 13 0 19 1 15 73 39 6 13 0 19 1 14 29) #62# #2# 32775) find #Y(nil nil nil (24 45 13 26 13 0 19 1 15 76 73 39 17 13 0 19 1 14 12 13 3 14 12 34 19 12 19 4 20 29) #62# #2# 32775) remove-if :run :cycle :utility common-lisp-user::phl-cycle = #Y(nil nil nil (24 45 13 26 13 0 19 1 26 12 13 1 19 2 27 29) #62# #2# 32775) remove-if-not :run-color :color common-lisp-user::phl-color #Y(nil nil nil (24 45 13 26 13 0 19 1 32 12 13 1 19 2 27 29) #62# #2# 32775) #Y(common-lisp-user::filter-links nil nil (24 45 7 24 45 8 24 45 9 26 10 1 41 10 4 42 11 23 13 2 14 12 34 16 12 19 3 17 51 2 34 21 12 13 2 19 2 22 38 46 41 23 7 41 24 4 42 25 11 34 28 12 13 2 19 2 29 38 27 41 30 4 42 31 19 34 33 12 13 2 19 2 29 12 14 12 15 14 19 3 17 38 3 75 73 29) #62# #2# 32775) si::fset)) #2# 32775) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #63=#A(t (12) (common-lisp-user::remove-p-history-entry ext::location (defun common-lisp-user::remove-p-history-entry) (#2# . 33318) ext::annotate :lambda-list (common-lisp-user::name) common-lisp-user::name common-lisp-user::*p-history-module-graph-cache* remhash #Y(common-lisp-user::remove-p-history-entry nil nil (24 45 7 26 13 0 11 8 17 9 29) #63# #2# 33318) si::fset)) #2# 33318) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 144 12 19 2 145 1 0 73 29) #64=#A(t (146) (common-lisp-user::create-production-graph-coords ext::location (defun common-lisp-user::create-production-graph-coords) (#2# . 33405) ext::annotate :lambda-list (common-lisp-user::name common-lisp-user::which number common-lisp-user::with-labels common-lisp-user::show-unused common-lisp-user::key) common-lisp-user::name common-lisp-user::which number common-lisp-user::with-labels common-lisp-user::show-unused common-lisp-user::key :save-p-history common-lisp-user::get-history-information common-lisp-user::module-data common-lisp-user::*p-history-module-graph-cache* gethash common-lisp-user::exists common-lisp-user::value common-lisp-user::phc-offsets common-lisp-user::phc-holes common-lisp-user::phc-max-loops common-lisp-user::phc-max common-lisp-user::phc-height common-lisp-user::phc-min-u common-lisp-user::phc-max-u common-lisp-user::p-history-display-output second common-lisp-user::module :cycle common-lisp-user::parse-production-history-graph common-lisp-user::layer-data (:freq :all :color :cycle) find common-lisp-user::data fifth common-lisp-user::min-u common-lisp-user::max-u car mapcar common-lisp-user::all-production-names common-lisp-user::unused common-lisp-user::current common-lisp-user::next common-lisp-user::layers caar common-lisp-user::start common-lisp-user::end :all :freq :run-color :color fourth :run :utility common-lisp-user::max-loops si::%dolist-var common-lisp-user::x remove third :key common-lisp-user::phn-name common-lisp-user::phn-links common-lisp-user::y common-lisp-user::phl-count common-lisp-user::phl-target max symbol-name length #Y(nil nil nil (24 45 58 26 10 0 16 68 16 69 29) #64# #2# 33405) apply * common-lisp-user::max-width common-lisp-user::holes common-lisp-user::widths common-lisp-user::offsets common-lisp-user::cur reverse common-lisp-user::layer common-lisp-user::p-history-module-x-spacing round common-lisp-user::hole common-lisp-user::item eq common-lisp-user::width :name :links common-lisp-user::it :width :x + :y :starts common-lisp-user::phn-cycle-starts common-lisp-user::phn-color-starts :ends common-lisp-user::phn-cycle-ends common-lisp-user::phn-color-ends common-lisp-user::gray common-lisp-user::black :utilities common-lisp-user::phn-utilities common-lisp-user::make-p-history-display = - #:g23272 #:g23274 > #:g23278 nconc common-lisp-user::p-history-module-y-spacing #:g23281 #:g23283 #Y(nil nil nil (24 45 58 26 13 1 13 20 19 1 80 12 9 2 19 2 81 12 19 2 105 12 10 0 3 16 78 29) #64# #2# 33405) common-lisp-user::w common-lisp-user::o common-lisp-user::phd-y #:g23295 #:g23297 common-lisp-user::phd-x #:g23296 common-lisp-user::p-history-display si::structure-set common-lisp-user::h list subseq #Y(nil nil nil (24 45 58 26 13 0 13 4 10 2 4 12 19 2 105 12 9 2 19 2 81 12 19 2 91 29) #64# #2# 33405) butlast last concatenate :offsets :holes :max-loops :max :height :min-u :max-u common-lisp-user::make-p-history-cache si::hash-set "size 300 40" "label \"no graph data to display\" 150 20 0 0 299 39 red \"\"" "cycles 0" "done" #Y(common-lisp-user::create-production-graph-coords nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 24 45 12 26 14 13 13 0 19 2 14 45 15 10 0 39 1313 10 3 39 7 77 77 72 2 38 8 13 6 14 16 19 2 17 47 1 18 45 19 10 1 39 56 13 2 13 7 13 6 13 5 13 0 19 1 20 12 13 0 19 1 21 12 13 0 19 1 22 12 13 0 19 1 23 12 13 0 19 1 24 12 13 0 19 1 25 12 13 0 19 1 26 12 19 11 27 38 1228 10 2 16 28 45 29 13 3 14 30 19 2 31 45 32 13 9 15 33 19 2 34 39 5 10 0 38 8 13 4 13 9 19 2 31 45 35 10 0 16 36 4 45 37 10 1 16 36 16 28 45 38 15 39 10 7 4 12 19 2 40 45 41 10 0 45 42 10 4 4 45 43 75 45 44 75 45 45 10 7 16 46 45 47 10 8 16 28 45 48 10 19 41 49 4 42 50 5 8 0 38 32 41 51 4 42 52 8 10 9 16 53 4 38 19 41 54 7 41 30 4 42 55 9 10 9 16 53 16 28 38 2 75 45 56 38 159 10 5 45 57 75 45 58 38 20 10 1 4 51 0 13 0 13 8 19 2 59 51 8 10 1 5 51 1 10 1 40 -22 43 2 10 5 45 57 75 45 58 38 96 10 1 4 51 0 13 0 10 13 16 60 12 14 61 15 62 19 4 34 12 19 1 63 45 57 75 45 64 38 55 10 1 4 51 0 13 0 19 1 65 39 12 13 0 19 1 66 12 13 10 19 2 34 39 25 13 0 19 1 66 12 13 10 19 2 59 51 10 13 0 19 1 66 12 10 8 3 51 8 10 1 5 51 1 10 1 40 -57 43 2 10 1 5 51 1 10 1 40 -98 43 2 13 5 10 3 3 51 3 10 4 51 5 75 51 4 10 5 76 39 -162 10 6 39 3 10 17 39 8 13 6 10 3 3 51 3 9 0 9 0 9 65 77 77 77 9 10 15 67 34 70 12 13 7 19 2 40 12 19 2 71 12 19 2 72 12 46 73 46 74 46 75 46 76 46 64 46 77 46 67 10 10 16 78 45 57 75 45 79 38 558 10 1 4 51 0 13 21 19 1 80 12 9 2 19 2 81 6 1 45 82 8 0 51 4 10 1 45 57 75 45 83 38 422 10 1 4 51 0 13 32 11 55 17 84 39 5 10 11 38 13 9 10 10 0 16 68 16 69 12 19 2 72 45 85 14 86 13 1 14 87 13 1 10 23 16 60 12 14 61 15 62 19 4 34 45 88 10 0 39 8 13 0 19 1 63 38 3 75 73 12 43 1 14 89 13 0 14 90 13 7 13 0 9 2 19 2 81 12 19 2 91 12 14 92 13 8 14 93 10 33 41 49 4 42 50 20 13 1 10 15 17 84 39 8 8 0 6 1 73 38 3 75 73 38 58 41 30 7 41 54 4 42 55 21 13 1 10 23 16 60 12 14 61 15 62 19 4 34 12 19 1 94 38 29 41 52 4 42 51 21 13 1 10 23 16 60 12 14 61 15 62 19 4 34 12 19 1 95 38 3 75 73 12 14 96 10 33 41 49 4 42 50 20 13 1 10 14 17 84 39 8 8 0 6 1 73 38 3 75 73 38 58 41 30 7 41 54 4 42 55 21 13 1 10 23 16 60 12 14 61 15 62 19 4 34 12 19 1 97 38 29 41 52 4 42 51 21 13 1 10 23 16 60 12 14 61 15 62 19 4 34 12 19 1 98 38 3 75 73 12 14 52 13 1 13 19 19 2 34 39 6 1 99 73 38 4 1 100 73 12 14 101 13 1 10 23 16 60 12 14 61 15 62 19 4 34 45 88 10 0 39 8 13 0 19 1 102 38 3 75 73 12 43 1 19 18 103 12 10 9 3 51 9 10 3 16 69 12 9 1 19 2 104 39 24 13 7 13 25 19 1 80 12 9 2 19 2 81 12 19 2 105 12 10 3 3 51 3 13 7 13 0 13 25 19 1 80 12 9 2 19 2 81 12 19 3 91 12 10 3 3 51 3 13 0 13 25 19 1 80 12 19 2 91 45 106 13 8 13 0 19 2 91 51 8 43 1 43 1 10 1 5 51 1 10 1 40 -424 43 2 13 22 19 1 80 45 107 13 5 13 0 19 2 105 51 5 43 1 13 4 13 3 19 2 108 39 5 10 4 51 3 13 4 10 5 3 12 10 7 3 51 7 10 5 6 1 45 109 13 1 13 0 19 2 110 51 1 43 1 13 0 10 8 3 51 8 9 30 13 22 19 1 111 12 19 2 91 45 112 13 6 13 0 19 2 91 51 6 43 1 43 1 10 1 5 51 1 10 1 40 -560 43 2 9 2 13 19 19 1 80 12 19 2 72 45 113 13 1 13 0 19 2 91 51 1 43 1 34 114 12 13 5 19 2 40 51 5 10 4 45 57 75 45 115 38 178 10 1 4 51 0 10 0 4 12 13 2 19 2 104 76 39 156 10 5 45 57 75 45 116 38 73 10 1 4 51 0 13 0 19 1 117 12 10 2 5 12 19 2 104 39 48 10 0 45 118 13 5 10 3 4 12 19 2 105 12 9 2 19 2 81 45 119 13 1 19 1 120 12 13 0 19 2 91 45 121 13 2 15 122 9 1 13 0 19 4 123 43 3 10 1 5 51 1 10 1 40 -75 43 2 10 0 5 12 13 7 14 61 15 39 19 4 34 45 124 15 125 13 0 9 0 9 2 19 3 126 12 34 127 12 13 0 19 1 128 12 9 2 19 2 126 12 19 2 40 12 13 0 19 1 129 12 19 4 130 12 13 0 13 8 19 2 59 3 51 8 43 1 10 1 5 51 1 10 1 40 -180 43 2 13 28 14 16 14 131 13 3 14 132 13 5 14 133 13 7 14 134 13 0 14 135 13 2 14 136 13 16 14 137 13 15 19 14 138 12 19 3 139 13 22 13 27 13 26 13 25 13 3 13 5 13 7 13 0 13 2 13 16 13 15 19 11 27 43 7 43 13 43 2 38 12 15 140 15 141 15 142 1 143 6 4 73 43 1 29) #64# #2# 33405) si::fset)) #2# 33405) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 124 12 19 2 125 1 0 73 29) #65=#A(t (126) (common-lisp-user::p-history-display-output ext::location (defun common-lisp-user::p-history-display-output) (#2# . 39629) ext::annotate :lambda-list (common-lisp-user::data common-lisp-user::which number common-lisp-user::with-labels common-lisp-user::offsets common-lisp-user::holes common-lisp-user::max-loops max common-lisp-user::height common-lisp-user::min-u common-lisp-user::max-u) common-lisp-user::data common-lisp-user::which number common-lisp-user::with-labels common-lisp-user::offsets common-lisp-user::holes common-lisp-user::max-loops max common-lisp-user::height common-lisp-user::min-u common-lisp-user::max-u second t common-lisp-user::equal-link-counts common-lisp-user::max-link-count common-lisp-user::module common-lisp-user::links common-lisp-user::max-time common-lisp-user::min-time numberp = 1- 1+ si::%dolist-var common-lisp-user::o common-lisp-user::phd-links common-lisp-user::filter-links common-lisp-user::link common-lisp-user::phl-target :key common-lisp-user::phd-name find (:freq) common-lisp-user::x eq #Y(nil nil nil (24 45 40 26 13 0 19 1 35 12 13 1 19 1 35 17 41 29) #65# #2# 39629) count-if common-lisp-user::link-count common-lisp-user::target > zerop common-lisp-user::phd-x min common-lisp-user::xx common-lisp-user::phd-y #Y(nil nil nil (24 45 50 26 13 0 19 1 51 12 13 5 19 1 51 12 19 2 27 29) #65# #2# 39629) remove-if-not mapcar apply common-lisp-user::phl-count common-lisp-user::black common-lisp-user::gray common-lisp-user::phd-width round - + #Y(nil nil nil (24 45 50 26 13 0 19 1 51 12 13 5 19 1 51 12 19 2 27 29) #65# #2# 39629) common-lisp-user::p-history-module-y-spacing list common-lisp-user::vals / si::%dotimes-var common-lisp-user::i * common-lisp-user::y car common-lisp-user::hs common-lisp-user::min-x common-lisp-user::j abs < reverse concatenate <= common-lisp-user::end-x common-lisp-user::start-x #Y(nil nil nil (24 45 50 26 13 0 19 1 51 12 13 7 19 1 51 12 19 2 27 29) #65# #2# 39629) #Y(nil nil nil (24 45 50 26 13 0 19 1 51 12 13 7 19 1 51 12 19 2 27 29) #65# #2# 39629) >= "size ~d ~d" format common-lisp-user::results "label ~S ~d ~d ~d ~d ~d ~d ~s ~s" common-lisp-user::phd-color keywordp assoc :utility common-lisp-user::phd-utilities common-lisp-user::it "box ~s ~d ~d ~d ~d ~s" floor common-lisp-user::blue "box ~s ~d ~d ~d ~d ~s" common-lisp-user::phd-starts :cycle :run identity "box ~s ~d ~d ~d ~d ~s" common-lisp-user::green common-lisp-user::phd-ends "box ~s ~d ~d ~d ~d ~s" common-lisp-user::red "link ~s ~s ~s ~d~{ ~d~}" third fourth common-lisp-user::p-history-module-x-spacing common-lisp-user::max-width cddddr #Y(nil nil nil (24 45 40 26 77 15 109 10 0 4 12 10 0 16 18 12 10 0 16 110 12 10 0 16 111 76 40 21 10 6 40 17 9 1 13 5 19 2 27 40 8 9 0 13 5 19 2 27 39 6 8 1 73 38 42 13 4 19 1 112 12 9 4 19 2 60 45 113 9 1 13 0 10 1 16 111 12 13 6 19 2 67 12 19 2 70 12 19 1 60 12 19 2 14 43 1 12 10 0 16 114 12 19 7 87 29) #65# #2# 39629) :test #Y(nil nil nil (24 45 40 24 45 71 26 10 1 4 12 10 0 4 17 41 73 39 26 10 1 16 18 12 10 0 16 18 17 41 73 39 12 10 1 16 110 12 10 0 16 110 17 41 29) #65# #2# 39629) remove-duplicates "min_time ~/print-time-in-seconds/" "max_time ~/print-time-in-seconds/" "cycles ~d" "done" append #Y(common-lisp-user::p-history-display-output nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 24 45 12 24 45 13 24 45 14 24 45 15 24 45 16 24 45 17 26 9 -1 9 -1 77 10 10 16 18 12 9 0 14 19 46 20 46 21 46 22 46 23 46 24 46 25 10 7 16 26 39 14 10 6 16 26 39 8 13 7 13 6 19 2 27 39 13 10 7 16 28 51 7 10 6 16 29 51 6 10 12 45 30 75 45 31 38 2698 10 1 4 51 0 13 0 19 1 32 12 13 17 13 16 19 3 33 45 30 75 45 34 38 2662 10 1 4 51 0 13 0 19 1 35 12 13 16 14 36 15 37 19 4 38 12 13 19 15 39 19 2 38 39 15 34 42 12 13 2 19 1 32 12 19 2 43 38 3 75 73 12 46 44 46 45 10 1 16 26 39 8 13 1 13 10 19 2 46 39 15 10 10 16 47 76 39 4 75 51 11 10 1 51 10 13 4 19 1 37 12 13 0 19 1 37 17 41 39 610 13 4 19 1 48 12 15 49 15 48 34 52 12 13 18 19 2 53 12 19 2 54 12 19 2 55 12 19 2 27 39 206 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 4 19 1 51 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 15 19 3 61 12 13 4 19 1 51 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 15 19 3 61 12 13 4 19 1 51 12 9 30 19 2 62 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 -15 19 3 61 12 13 4 19 1 51 12 9 30 19 2 62 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 -15 19 3 61 12 13 4 19 1 51 12 9 15 19 2 62 6 14 12 10 8 3 51 8 38 371 13 4 19 1 48 12 15 14 15 48 34 63 12 13 18 19 2 53 12 19 2 54 12 19 2 55 12 19 2 27 39 206 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 62 12 13 4 19 1 51 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 15 19 3 62 12 13 4 19 1 51 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 15 19 3 62 12 13 4 19 1 51 12 9 30 19 2 62 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 -15 19 3 62 12 13 4 19 1 51 12 9 30 19 2 62 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 9 -15 19 3 62 12 13 4 19 1 51 12 9 15 19 2 62 6 14 12 10 8 3 51 8 38 134 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 9 5 19 2 62 12 13 4 19 1 51 12 9 15 19 2 62 12 13 4 19 1 48 12 9 10 19 2 62 12 13 4 19 1 51 12 9 25 19 2 62 12 13 4 19 1 48 12 9 10 19 2 61 12 13 4 19 1 51 12 9 25 19 2 62 12 13 4 19 1 48 12 9 5 19 2 61 12 13 4 19 1 51 12 9 15 19 2 62 6 12 12 10 8 3 51 8 38 1951 13 4 19 1 51 12 13 0 19 1 51 12 19 2 27 39 440 13 0 19 1 48 12 13 4 19 1 48 12 19 2 46 39 212 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 62 12 13 4 19 1 51 12 9 15 19 2 62 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 62 12 13 0 19 1 48 12 13 0 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 62 12 19 2 61 12 9 2 19 2 60 12 19 2 62 12 13 4 19 1 51 12 9 15 13 9 19 1 64 12 9 3 19 2 60 12 19 3 62 12 13 0 19 1 48 12 13 0 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 4 19 1 51 12 9 15 19 2 62 6 10 12 10 8 3 51 8 38 210 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 4 19 1 51 12 9 15 19 2 62 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 4 19 1 48 12 13 4 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 0 19 1 48 12 13 0 19 1 59 12 9 2 19 2 60 12 19 2 62 12 19 2 61 12 9 2 19 2 60 12 19 2 61 12 13 4 19 1 51 12 9 15 13 9 19 1 64 12 9 3 19 2 60 12 19 3 62 12 13 0 19 1 48 12 13 0 19 1 59 12 9 2 19 2 60 12 19 2 62 12 13 4 19 1 51 12 9 15 19 2 62 6 10 12 10 8 3 51 8 38 1495 13 0 19 1 51 12 13 4 19 1 51 12 19 2 46 39 428 13 0 19 1 51 12 13 4 19 1 51 12 19 2 61 12 9 30 13 9 19 1 64 12 19 2 62 12 19 2 27 39 76 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 51 12 9 15 19 2 62 12 13 0 19 1 48 12 13 0 19 1 51 12 9 15 19 2 61 6 8 12 10 8 3 51 8 38 318 15 65 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 51 12 9 15 19 2 62 6 6 12 13 4 19 1 48 12 77 46 66 46 40 13 2 19 1 51 12 13 6 19 1 51 12 19 2 61 12 9 30 13 11 19 1 64 12 19 2 62 12 19 2 67 12 9 1 19 2 61 45 68 8 0 45 69 38 163 13 8 19 1 51 12 10 0 16 29 12 9 30 13 13 19 1 64 12 19 2 62 12 19 2 70 12 19 2 62 45 71 13 0 13 22 14 36 15 72 19 4 38 45 73 10 21 45 49 75 45 74 10 2 5 45 30 75 45 75 38 43 10 1 4 51 0 13 8 13 0 19 2 61 16 76 12 13 3 19 2 77 39 16 13 8 13 0 19 2 61 16 76 51 3 10 0 51 2 10 1 5 51 1 10 1 40 -45 43 2 13 0 10 7 3 51 7 13 3 9 20 19 2 61 12 10 7 3 51 7 13 0 10 7 3 51 7 13 3 9 20 19 2 62 12 10 7 3 51 7 10 0 51 6 43 4 10 0 16 29 51 0 13 0 13 1 19 2 77 40 -170 43 2 10 1 16 78 12 43 2 13 0 19 1 48 12 13 0 19 1 51 12 9 15 19 2 61 6 2 12 19 4 79 12 10 8 3 51 8 38 1051 13 4 19 1 51 12 13 0 19 1 51 12 19 2 61 12 9 30 13 9 19 1 64 12 19 2 62 12 19 2 27 39 232 13 4 19 1 48 12 13 0 19 1 48 12 19 2 80 39 108 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 59 12 9 6 19 2 60 12 19 2 61 12 13 4 19 1 51 12 9 15 19 2 61 12 13 0 19 1 48 12 13 0 19 1 59 12 9 6 19 2 60 12 19 2 61 12 13 0 19 1 51 12 9 15 19 2 62 6 8 12 10 8 3 51 8 38 106 13 4 19 1 37 12 13 0 19 1 37 12 13 2 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 1 13 4 19 1 48 12 13 4 19 1 59 12 9 6 19 2 60 12 19 2 62 12 13 4 19 1 51 12 9 15 19 2 61 12 13 0 19 1 48 12 13 0 19 1 59 12 9 6 19 2 60 12 19 2 62 12 13 0 19 1 51 12 9 15 19 2 62 6 8 12 10 8 3 51 8 38 787 77 77 46 81 46 82 13 6 19 1 48 12 15 49 15 48 34 83 12 13 20 19 2 53 12 19 2 54 12 19 2 55 12 19 2 27 39 34 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 61 12 13 17 9 2 19 2 60 12 19 2 80 39 49 13 6 19 1 48 12 13 6 19 1 59 12 9 6 19 2 60 12 19 2 61 51 0 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 61 51 1 38 359 13 6 19 1 48 12 15 14 15 48 34 84 12 13 20 19 2 53 12 19 2 54 12 19 2 55 12 19 2 27 39 34 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 62 12 13 17 9 2 19 2 60 12 19 2 85 39 49 13 6 19 1 48 12 13 6 19 1 59 12 9 6 19 2 60 12 19 2 62 51 0 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 62 51 1 38 244 13 2 19 1 48 12 13 6 19 1 48 12 19 2 77 39 49 13 6 19 1 48 12 13 6 19 1 59 12 9 6 19 2 60 12 19 2 61 51 0 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 62 51 1 38 179 13 2 19 1 48 12 13 6 19 1 48 12 19 2 46 39 49 13 6 19 1 48 12 13 6 19 1 59 12 9 6 19 2 60 12 19 2 62 51 0 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 61 51 1 38 114 13 6 19 1 48 12 13 17 9 2 19 2 60 12 19 2 77 39 49 13 6 19 1 48 12 13 6 19 1 59 12 9 6 19 2 60 12 19 2 61 51 0 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 61 51 1 38 47 13 6 19 1 48 12 13 6 19 1 59 12 9 6 19 2 60 12 19 2 62 51 0 13 2 19 1 48 12 13 2 19 1 59 12 9 6 19 2 60 12 19 2 62 51 1 15 65 13 6 19 1 37 12 13 2 19 1 37 12 13 4 19 1 56 39 6 1 57 73 38 4 1 58 73 12 13 3 13 0 13 6 19 1 51 12 9 15 19 2 61 6 6 12 13 0 77 46 66 46 40 13 8 19 1 51 12 13 4 19 1 51 12 19 2 61 12 9 30 13 13 19 1 64 12 19 2 62 12 19 2 67 12 9 1 19 2 61 45 68 8 0 45 69 38 163 13 10 19 1 51 12 10 0 16 29 12 9 30 13 15 19 1 64 12 19 2 62 12 19 2 70 12 19 2 61 45 71 13 0 13 24 14 36 15 72 19 4 38 45 73 10 23 45 49 75 45 74 10 2 5 45 30 75 45 75 38 43 10 1 4 51 0 13 8 13 0 19 2 61 16 76 12 13 3 19 2 77 39 16 13 8 13 0 19 2 61 16 76 51 3 10 0 51 2 10 1 5 51 1 10 1 40 -45 43 2 13 0 10 7 3 51 7 13 3 9 20 19 2 62 12 10 7 3 51 7 13 0 10 7 3 51 7 13 3 9 20 19 2 61 12 10 7 3 51 7 10 0 51 6 43 4 10 0 16 29 51 0 13 0 13 1 19 2 77 40 -170 43 2 10 1 16 78 12 43 2 13 1 13 2 19 1 51 12 9 15 19 2 62 6 2 12 19 4 79 12 10 10 3 51 10 43 2 43 2 10 1 5 51 1 10 1 40 -2664 43 2 10 1 5 51 1 10 1 40 -2700 43 2 77 15 86 13 9 13 8 19 4 87 6 1 12 75 45 88 10 13 45 30 75 45 40 38 831 10 1 4 51 0 10 16 39 134 77 15 89 13 0 19 1 37 12 13 0 19 1 48 12 13 0 19 1 51 12 13 0 19 1 48 12 13 0 19 1 59 12 9 2 19 2 60 12 19 2 61 12 13 0 19 1 51 12 9 15 19 2 61 12 13 0 19 1 48 12 13 0 19 1 59 12 9 2 19 2 60 12 19 2 62 12 13 0 19 1 51 12 9 15 19 2 62 12 13 0 19 1 90 16 91 39 6 1 57 73 38 6 13 0 19 1 90 12 13 0 19 1 37 12 10 19 4 12 19 2 92 5 12 19 11 87 12 10 2 3 51 2 13 18 11 93 17 41 39 322 13 17 13 0 19 1 94 12 19 2 92 45 95 10 0 39 141 77 15 96 13 1 19 1 37 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 -4 19 3 61 12 13 1 19 1 51 12 9 11 19 2 61 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 -4 19 3 61 12 13 1 19 1 59 12 9 8 19 2 61 12 10 0 5 12 13 11 19 2 61 12 13 10 13 11 19 2 61 12 19 2 67 12 19 2 70 12 19 1 97 12 19 2 62 12 13 1 19 1 51 12 9 9 19 2 61 12 15 98 19 8 87 12 10 3 3 51 3 38 1 43 1 10 17 16 29 12 13 0 19 1 94 12 19 2 92 45 95 10 0 39 141 77 15 99 13 1 19 1 37 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 -4 19 3 61 12 13 1 19 1 51 12 9 11 19 2 62 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 -4 19 3 61 12 13 1 19 1 59 12 9 8 19 2 61 12 10 0 5 12 13 11 19 2 61 12 13 10 13 11 19 2 61 12 19 2 67 12 19 2 70 12 19 1 97 12 19 2 62 12 13 1 19 1 51 12 9 9 19 2 62 12 15 98 19 8 87 12 10 3 3 51 3 38 1 43 1 13 17 13 0 19 1 100 12 14 36 13 18 11 101 17 41 40 15 13 18 11 102 17 41 40 7 13 18 11 93 17 41 39 6 1 72 73 38 4 1 103 73 12 19 4 38 45 95 10 0 39 124 13 19 11 101 17 41 40 15 13 19 11 102 17 41 40 7 13 19 11 93 17 41 39 6 10 0 5 51 4 77 15 104 13 1 19 1 37 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 2 19 3 61 12 13 1 19 1 51 12 9 17 19 2 61 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 2 19 3 62 12 13 1 19 1 51 12 9 17 19 2 62 12 15 105 19 8 87 12 10 3 3 51 3 38 1 43 1 13 17 13 0 19 1 106 12 14 36 13 18 11 101 17 41 40 15 13 18 11 102 17 41 40 7 13 18 11 93 17 41 39 6 1 72 73 38 4 1 103 73 12 19 4 38 45 95 10 0 39 124 13 19 11 101 17 41 40 15 13 19 11 102 17 41 40 7 13 19 11 93 17 41 39 6 10 0 5 51 5 77 15 107 13 1 19 1 37 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 -2 19 3 61 12 13 1 19 1 51 12 9 13 19 2 61 12 13 1 19 1 48 12 13 1 19 1 59 12 9 2 19 2 60 12 9 -2 19 3 62 12 13 1 19 1 51 12 9 13 19 2 62 12 15 108 19 8 87 12 10 3 3 51 3 38 1 43 1 10 1 5 51 1 10 1 40 -833 43 2 13 0 43 1 34 115 12 13 2 14 116 34 117 12 19 3 118 12 19 2 54 12 13 15 11 101 17 41 40 15 13 15 11 102 17 41 40 7 13 15 11 93 17 41 39 17 13 0 9 -1 19 2 46 39 8 13 1 9 -1 19 2 46 73 39 21 77 15 119 13 0 19 3 87 12 77 15 120 13 1 19 3 87 6 2 73 12 77 15 121 13 10 19 3 87 6 1 12 1 122 6 1 12 19 6 123 43 6 29) #65# #2# 39629) si::fset)) #2# 39629) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 180 12 19 2 181 1 0 73 29) #66=#A(t (182) (common-lisp-user::production-transition-graph ext::location (defun common-lisp-user::production-transition-graph) (#2# . 57370) ext::annotate :lambda-list (&optional (common-lisp-user::which :all)) :all common-lisp-user::which common-lisp-user::*meta-processes* common-lisp-user::mps-current common-lisp-user::meta-p-current-model *error-output* "~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models length > common-lisp-user::current-model "Cannot generate a production transition graph because there is no current model." format finish-output (:all :cycle :run :unique-cycle :unique-run) find "Invalid graph type.  Must be one of (:all :cycle :run :unique-cycle :unique-run)." :unique-cycle eq :color :unique-run :run-color list common-lisp-user::all-productions mapcar common-lisp-user::production-history common-lisp-user::get-module-fct common-lisp-user::parse-production-history-graph common-lisp-user::data common-lisp-user::unused caar common-lisp-user::start second common-lisp-user::end :freq fourth 1+ :run :cycle common-lisp-user::max-loops common-lisp-user::printing-module #:g23817 #:g23816 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" "digraph \"~s\" {" #:g23819 #:g23818 "  \"~s\" [ color = green ];" #:g23821 #:g23820 "  \"~s\" [ color = red ];" third si::%dolist-var common-lisp-user::node common-lisp-user::phn-links :test common-lisp-user::x common-lisp-user::y common-lisp-user::phl-target common-lisp-user::phl-count eql #Y(nil nil nil (24 45 67 24 45 68 26 13 1 19 1 69 12 13 0 19 1 69 17 26 73 39 14 13 1 19 1 70 12 13 0 19 1 70 17 71 29) #66# #2# 57370) remove-duplicates common-lisp-user::transitions remove :key #Y(nil nil nil (24 45 67 26 13 0 19 1 70 76 73 39 22 13 0 19 1 69 12 13 0 13 1 19 2 75 12 14 76 15 69 19 4 23 29) #66# #2# 57370) remove-if common-lisp-user::links common-lisp-user::link #:g23839 #:g23838 "  \"~s\" -> \"~s\" ;" common-lisp-user::phn-name #:g23841 #:g23840 "  \"~s\" -> \"~s\" [ color = gray style = dashed ] ;" #:g23845 #:g23844 "  \"~s\" [color = gray] ;" #:g23847 #:g23846 "}" #:g23849 #:g23848 "digraph \"~s\" {" si::%dotimes-var common-lisp-user::i #:g23885 #:g23884 "  subgraph cluster_~d {~%    label = \"~a ~d\";" "unique cycle" "unique run" common-lisp-user::new-name-fct #Y(nil nil nil (24 45 67 26 13 0 13 0 19 1 104 3 73 29) #66# #2# 57370) member common-lisp-user::phn-color-starts common-lisp-user::phn-color-ends common-lisp-user::used common-lisp-user::end-node common-lisp-user::start-node common-lisp-user::node-names #:g23887 #:g23886 "    \"~s\" [ color = green ];" assoc #:g23889 #:g23888 "    \"~s\" [ color = red ];" adjoin common-lisp-user::phl-color = #Y(nil nil nil (24 45 67 26 13 0 19 1 121 12 13 7 19 2 122 29) #66# #2# 57370) remove-if-not #Y(nil nil nil (24 45 67 24 45 68 26 13 1 19 1 69 12 13 0 19 1 69 17 26 73 39 14 13 1 19 1 70 12 13 0 19 1 70 17 71 29) #66# #2# 57370) #Y(nil nil nil (24 45 67 26 13 0 19 1 70 76 73 39 22 13 0 19 1 69 12 13 0 13 1 19 2 75 12 14 76 15 69 19 4 23 29) #66# #2# 57370) #:g23909 #:g23908 "    \"~s\" -> \"~s\" ;" #:g23911 #:g23910 "    \"~s\" -> \"~s\" [ color = gray style = dashed ] ;" #:g23915 #:g23914 "    \"~s\" [ label = \"~s\" ];" #:g23917 #:g23916 "  }" < #:g23919 #:g23918 "}" #:g23921 #:g23920 "digraph \"~s\" {" #:g23957 #:g23956 "  subgraph cluster_~d {~%    label = \"~a ~d\";" #Y(nil nil nil (24 45 67 26 13 0 13 0 19 1 104 3 73 29) #66# #2# 57370) car common-lisp-user::phn-cycle-starts #Y(nil nil nil (24 45 68 26 15 150 13 0 19 1 151 12 19 2 32 29) #66# #2# 57370) common-lisp-user::phn-cycle-ends #Y(nil nil nil (24 45 68 26 15 150 13 0 19 1 153 12 19 2 32 29) #66# #2# 57370) #:g23959 #:g23958 "    \"~s\" [ color = green ];" #:g23961 #:g23960 "    \"~s\" [ color = red ];" common-lisp-user::phl-cycle #Y(nil nil nil (24 45 67 26 13 0 19 1 161 12 13 7 19 2 122 29) #66# #2# 57370) #Y(nil nil nil (24 45 67 24 45 68 26 13 1 19 1 69 12 13 0 19 1 69 17 26 73 39 14 13 1 19 1 70 12 13 0 19 1 70 17 71 29) #66# #2# 57370) #Y(nil nil nil (24 45 67 26 13 0 19 1 161 76 73 39 22 13 0 19 1 69 12 13 0 13 1 19 2 75 12 14 76 15 69 19 4 23 29) #66# #2# 57370) #:g23981 #:g23980 "    \"~s\" -> \"~s\" ;" #:g23983 #:g23982 "    \"~s\" -> \"~s\" [ color = gray style = dashed ] ;" #:g23987 #:g23986 "    \"~s\" [ label = \"~s\" ];" #:g23989 #:g23988 "  }" #:g23991 #:g23990 "}" #Y(common-lisp-user::production-transition-graph nil nil (25 40 3 14 7 46 8 26 57 0 60 2498 14 9 19 1 10 12 19 1 11 76 39 42 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 19 19 5 20 12 14 12 19 1 21 22 73 38 2444 13 1 15 22 19 2 23 76 39 41 14 12 15 13 19 0 14 73 39 12 19 0 15 16 16 12 9 1 19 2 17 12 19 0 18 12 15 24 19 5 20 14 12 19 1 21 75 73 36 0 13 1 11 25 17 26 39 5 11 27 51 1 13 1 11 28 17 26 39 5 11 29 51 1 15 30 19 0 31 12 19 2 32 12 15 33 19 1 34 6 2 12 13 1 19 2 35 45 36 19 0 31 45 37 10 1 16 38 45 39 10 2 16 40 45 41 10 5 41 7 4 42 42 5 8 0 38 33 41 29 4 42 27 10 10 3 16 43 4 16 44 38 18 41 45 4 42 46 11 10 3 16 43 16 40 16 44 38 2 75 45 47 13 6 11 7 17 26 39 538 15 48 19 1 34 47 1 49 45 50 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 22 13 0 19 1 52 12 19 1 53 12 15 54 15 55 19 0 18 12 19 4 20 43 2 15 48 19 1 34 47 1 56 45 57 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 20 13 0 19 1 52 12 19 1 53 12 15 54 15 58 13 4 19 4 20 43 2 13 2 10 1 17 26 76 39 55 15 48 19 1 34 47 1 59 45 60 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 20 13 0 19 1 52 12 19 1 53 12 15 54 15 61 13 3 19 4 20 43 2 10 4 16 62 45 63 75 45 64 38 214 10 1 4 51 0 13 0 19 1 65 12 14 66 34 72 12 19 3 73 45 74 34 77 12 13 0 19 2 78 45 79 10 0 45 63 75 45 80 38 161 10 1 4 51 0 13 0 19 1 70 39 80 13 0 19 1 69 12 13 9 19 2 75 51 9 15 48 19 1 34 47 1 81 45 82 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 30 13 0 19 1 52 12 19 1 53 12 15 54 15 83 13 6 19 1 84 12 13 2 19 1 69 12 19 5 20 43 2 38 65 15 48 19 1 34 47 1 85 45 86 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 30 13 0 19 1 52 12 19 1 53 12 15 54 15 87 13 6 19 1 84 12 13 2 19 1 69 12 19 5 20 43 2 10 1 5 51 1 10 1 40 -163 43 2 43 2 10 1 5 51 1 10 1 40 -216 43 2 10 3 45 63 75 45 64 38 65 10 1 4 51 0 15 48 19 1 34 47 1 88 45 89 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 20 13 0 19 1 52 12 19 1 53 12 15 54 15 90 13 2 19 4 20 43 2 10 1 5 51 1 10 1 40 -67 43 2 15 48 19 1 34 47 1 91 45 92 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 73 39 18 13 0 19 1 52 12 19 1 53 12 15 54 15 93 19 3 20 43 2 38 1735 13 6 11 27 17 26 40 7 13 6 11 29 17 26 39 859 15 48 19 1 34 47 1 94 45 95 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 22 13 0 19 1 52 12 19 1 53 12 15 54 15 96 19 0 18 12 19 4 20 43 2 10 0 45 97 8 0 45 98 38 727 15 48 19 1 34 47 1 99 45 100 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 42 13 0 19 1 52 12 19 1 53 12 15 54 15 101 13 2 13 10 11 27 17 26 39 6 1 102 73 38 4 1 103 73 12 10 2 16 44 12 19 6 20 43 2 34 105 12 15 84 10 6 16 62 12 19 2 32 12 19 2 32 12 13 0 10 6 16 62 12 14 66 15 106 14 76 15 107 19 6 23 12 19 1 84 12 13 0 10 6 16 62 12 14 66 15 106 14 76 15 108 19 6 23 12 19 1 84 12 77 46 109 46 110 46 111 46 112 15 48 19 1 34 47 1 113 45 114 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 27 13 0 19 1 52 12 19 1 53 12 15 54 15 115 13 3 13 2 19 2 116 5 12 19 4 20 43 2 13 1 10 2 17 26 76 39 62 15 48 19 1 34 47 1 117 45 118 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 27 13 0 19 1 52 12 19 1 53 12 15 54 15 119 13 4 13 2 19 2 116 5 12 19 4 20 43 2 13 1 13 0 19 2 116 12 13 3 19 2 120 51 3 13 2 13 0 19 2 116 12 13 3 19 2 120 51 3 10 10 16 62 45 63 75 45 64 38 255 10 1 4 51 0 34 123 12 13 0 19 1 65 12 19 2 124 12 14 66 34 125 12 19 3 73 45 74 34 126 12 13 0 19 2 78 45 79 10 0 45 63 75 45 80 38 195 10 1 4 51 0 13 0 19 1 69 12 13 6 19 2 116 12 13 9 19 2 120 51 9 13 0 19 1 70 39 81 15 48 19 1 34 47 1 127 45 128 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 44 13 0 19 1 52 12 19 1 53 12 15 54 15 129 13 6 19 1 84 12 13 8 19 2 116 5 12 13 2 19 1 69 12 13 8 19 2 116 5 12 19 5 20 43 2 38 79 15 48 19 1 34 47 1 130 45 131 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 44 13 0 19 1 52 12 19 1 53 12 15 54 15 132 13 6 19 1 84 12 13 8 19 2 116 5 12 13 2 19 1 69 12 13 8 19 2 116 5 12 19 5 20 43 2 10 1 5 51 1 10 1 40 -197 43 2 43 2 10 1 5 51 1 10 1 40 -257 43 2 10 3 45 63 75 45 67 38 71 10 1 4 51 0 15 48 19 1 34 47 1 133 45 134 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 26 13 0 19 1 52 12 19 1 53 12 15 54 15 135 10 2 5 12 10 2 4 12 19 5 20 43 2 10 1 5 51 1 10 1 40 -73 43 2 15 48 19 1 34 47 1 136 45 137 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 18 13 0 19 1 52 12 19 1 53 12 15 54 15 138 19 3 20 43 2 43 4 10 0 16 44 51 0 13 0 13 1 19 2 139 40 -734 43 2 15 48 19 1 34 47 1 140 45 141 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 73 39 18 13 0 19 1 52 12 19 1 53 12 15 54 15 142 19 3 20 43 2 38 861 13 6 11 46 17 26 40 7 13 6 11 45 17 26 73 39 844 15 48 19 1 34 47 1 143 45 144 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 22 13 0 19 1 52 12 19 1 53 12 15 54 15 145 19 0 18 12 19 4 20 43 2 10 0 45 97 8 0 45 98 38 714 15 48 19 1 34 47 1 146 45 147 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 27 13 0 19 1 52 12 19 1 53 12 15 54 15 148 13 2 13 10 10 2 16 44 12 19 6 20 43 2 34 149 12 15 84 10 6 16 62 12 19 2 32 12 19 2 32 12 13 0 10 6 16 62 12 14 66 15 106 14 76 34 152 12 19 6 23 12 19 1 84 12 13 0 10 6 16 62 12 14 66 15 106 14 76 34 154 12 19 6 23 12 19 1 84 12 77 46 109 46 110 46 111 46 112 15 48 19 1 34 47 1 155 45 156 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 27 13 0 19 1 52 12 19 1 53 12 15 54 15 157 13 3 13 2 19 2 116 5 12 19 4 20 43 2 13 1 10 2 17 26 76 39 62 15 48 19 1 34 47 1 158 45 159 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 27 13 0 19 1 52 12 19 1 53 12 15 54 15 160 13 4 13 2 19 2 116 5 12 19 4 20 43 2 13 1 13 0 19 2 116 12 13 3 19 2 120 51 3 13 2 13 0 19 2 116 12 13 3 19 2 120 51 3 10 10 16 62 45 63 75 45 64 38 255 10 1 4 51 0 34 162 12 13 0 19 1 65 12 19 2 124 12 14 66 34 163 12 19 3 73 45 74 34 164 12 13 0 19 2 78 45 79 10 0 45 63 75 45 80 38 195 10 1 4 51 0 13 0 19 1 69 12 13 6 19 2 116 12 13 9 19 2 120 51 9 13 0 19 1 70 39 81 15 48 19 1 34 47 1 165 45 166 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 44 13 0 19 1 52 12 19 1 53 12 15 54 15 167 13 6 19 1 84 12 13 8 19 2 116 5 12 13 2 19 1 69 12 13 8 19 2 116 5 12 19 5 20 43 2 38 79 15 48 19 1 34 47 1 168 45 169 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 44 13 0 19 1 52 12 19 1 53 12 15 54 15 170 13 6 19 1 84 12 13 8 19 2 116 5 12 13 2 19 1 69 12 13 8 19 2 116 5 12 19 5 20 43 2 10 1 5 51 1 10 1 40 -197 43 2 43 2 10 1 5 51 1 10 1 40 -257 43 2 10 3 45 63 75 45 67 38 71 10 1 4 51 0 15 48 19 1 34 47 1 171 45 172 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 26 13 0 19 1 52 12 19 1 53 12 15 54 15 173 10 2 5 12 10 2 4 12 19 5 20 43 2 10 1 5 51 1 10 1 40 -73 43 2 15 48 19 1 34 47 1 174 45 175 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 39 18 13 0 19 1 52 12 19 1 53 12 15 54 15 176 19 3 20 43 2 43 4 10 0 16 44 51 0 13 0 13 1 19 2 139 40 -721 43 2 15 48 19 1 34 47 1 177 45 178 10 1 39 18 13 0 19 1 51 76 39 10 13 0 19 1 52 12 19 1 53 73 39 18 13 0 19 1 52 12 19 1 53 12 15 54 15 179 19 3 20 43 2 43 5 63 29) #66# #2# 57370) si::fset)) #2# 57370) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #67=#A(t (16) (common-lisp-user::reset-p-history-module ext::location (defun common-lisp-user::reset-p-history-module) (#2# . 64206) ext::annotate :lambda-list (common-lisp-user::module) common-lisp-user::module #:g23996 #:g23997 common-lisp-user::p-history-module si::structure-set #:g23998 #:g23999 #Y(common-lisp-user::reset-p-history-module nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 0 13 0 19 4 11 43 1 43 1 10 0 45 12 75 45 13 13 1 15 10 9 2 13 0 19 4 11 43 1 43 1 29) #67# #2# 64206) si::fset)) #2# 64206) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 65 12 19 2 66 1 0 73 29) #68=#A(t (67) (common-lisp-user::params-p-history-module ext::location (defun common-lisp-user::params-p-history-module) (#2# . 64347) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::param) common-lisp-user::instance common-lisp-user::param consp :save-p-history common-lisp-user::printing-module common-lisp-user::get-module-fct #:g24018 #:g24017 common-lisp-user::printing-module-suppress-cmds #:g24019 #:g24020 t #:g24021 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::production-history-recorder (:conflict-set-hook) common-lisp-user::sgp-fct find (:conflict-set-hook common-lisp-user::production-history-recorder) common-lisp-user::production-history-reward-markers (:reward-notify-hook) (:reward-notify-hook common-lisp-user::production-history-reward-markers) (:conflict-set-hook) (:conflict-set-hook) common-lisp-user::old-hooks (:conflict-set-hook nil) si::%dolist-var common-lisp-user::x eq :conflict-set-hook (:reward-notify-hook) (:reward-notify-hook) (:reward-notify-hook nil) :reward-notify-hook #:g24022 #:g24023 common-lisp-user::p-history-module si::structure-set #:g24024 #:g24025 (setf common-lisp-user::printing-module-suppress-cmds) :p-history-colors #:g24026 #:g24027 :draw-blank-columns #:g24028 #:g24029 :p-history-graph-x #:g24030 #:g24031 :p-history-graph-y #:g24032 #:g24033 common-lisp-user::p-history-module-enabled common-lisp-user::p-history-module-color-list common-lisp-user::p-history-module-draw-blanks common-lisp-user::p-history-module-x-spacing common-lisp-user::p-history-module-y-spacing #Y(common-lisp-user::params-p-history-module nil nil (24 45 7 24 45 8 26 10 0 16 9 39 416 10 0 4 42 10 290 15 11 19 1 12 47 1 13 45 14 10 1 73 39 271 13 0 19 1 15 45 16 10 1 45 17 11 18 45 19 13 0 13 1 33 20 18 2 43 1 43 1 64 219 10 3 5 39 43 15 21 15 22 19 1 23 4 12 19 2 24 76 39 6 15 25 19 1 23 15 26 15 27 19 1 23 4 12 19 2 24 76 39 6 15 28 19 1 23 38 147 15 21 15 29 19 1 23 4 12 19 2 24 39 60 15 30 19 1 23 4 45 31 15 32 19 1 23 10 0 45 33 75 45 34 38 30 10 1 4 51 0 13 0 1 21 17 35 76 39 11 14 36 10 0 6 2 12 19 1 23 10 1 5 51 1 10 1 40 -32 43 2 43 1 15 26 15 37 19 1 23 4 12 19 2 24 39 60 15 38 19 1 23 4 45 31 15 39 19 1 23 10 0 45 33 75 45 34 38 30 10 1 4 51 0 13 0 1 26 17 35 76 39 11 14 40 10 0 6 2 12 19 1 23 10 1 5 51 1 10 1 40 -32 43 2 43 1 10 4 45 41 10 4 5 45 42 13 1 15 43 9 1 13 0 19 4 44 43 1 43 1 65 10 1 45 45 10 1 45 46 13 0 13 1 33 47 18 2 43 1 43 1 66 43 1 43 2 38 119 42 48 27 10 1 45 49 10 1 5 45 50 13 1 15 43 9 5 13 0 19 4 44 43 1 43 1 38 90 42 51 27 10 1 45 52 10 1 5 45 53 13 1 15 43 9 3 13 0 19 4 44 43 1 43 1 38 61 42 54 27 10 1 45 55 10 1 5 45 56 13 1 15 43 9 6 13 0 19 4 44 43 1 43 1 38 32 42 57 27 10 1 45 58 10 1 5 45 59 13 1 15 43 9 7 13 0 19 4 44 43 1 43 1 38 3 75 73 38 55 10 0 42 10 8 13 1 19 1 60 38 43 42 48 8 13 1 19 1 61 38 33 42 51 8 13 1 19 1 62 38 23 42 54 8 13 1 19 1 63 38 13 42 57 8 13 1 19 1 64 38 3 75 73 29) #68# #2# 64347) si::fset)) #2# 64347) #Y(si::bytecodes nil nil (15 0 77 14 1 14 2 15 3 14 4 77 14 5 15 6 14 7 15 8 19 9 9 12 14 10 14 2 1 19 12 14 4 77 14 5 15 20 14 7 15 21 19 9 9 12 14 22 14 2 15 3 14 4 14 23 14 5 15 24 14 7 15 25 19 9 9 12 14 26 14 2 1 30 12 14 4 9 40 14 5 15 31 14 7 15 32 19 9 9 12 14 33 14 2 1 34 12 14 4 9 90 14 5 15 35 14 7 15 36 19 9 9 6 5 12 14 37 1 39 12 14 40 15 41 14 42 15 43 14 44 15 45 14 46 15 47 14 48 15 49 14 7 15 50 19 17 51 29) #69=#A(t (52) (common-lisp-user::production-history :save-p-history :valid-test common-lisp-user::tornil :default-value :warning "T or nil" :documentation "Whether or not to record the utility and whynot history of all conflict-resolution events." common-lisp-user::define-parameter :p-history-colors common-lisp-user::x listp length <= common-lisp-user::y stringp #Y(nil nil nil (24 45 15 26 10 0 76 73 40 5 10 0 16 16 29) #69# #2# 66542) every #Y(nil nil nil (24 45 11 26 10 0 76 73 40 29 10 0 16 12 73 39 22 10 0 16 13 12 9 3 19 2 14 73 39 9 34 17 12 13 0 19 2 18 29) #69# #2# 66542) "nil or a list of up to 3 color strings" "The colors to use for the selected, other matched, and mismatched cells respectively." :draw-blank-columns t "T or nil" "This parameter is depricated and has no effect." :p-history-graph-x numberp common-lisp-user::nonneg integerp #Y(nil nil nil (24 45 11 26 10 0 16 27 73 39 13 13 0 19 1 28 73 39 5 10 0 16 29 29) #69# #2# 66542) "non-negative integer" "Horizontal pixels between production boxes." :p-history-graph-y #Y(nil nil nil (24 45 11 26 10 0 16 27 73 39 13 13 0 19 1 28 73 39 5 10 0 16 29 29) #69# #2# 66542) "non-negative integer" "Vertical pixels between production boxes." :creation common-lisp-user::make-p-history-module #Y(nil nil nil (24 45 11 26 19 0 38 29) #69# #2# 66542) :reset common-lisp-user::reset-p-history-module :params common-lisp-user::params-p-history-module :run-start common-lisp-user::production-history-start-markers :run-end common-lisp-user::production-history-stop-markers :version "1.1" "Module to record production history for display in the environment." common-lisp-user::define-module-fct)) #2# 66542) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 39 12 19 2 40 1 0 73 29) #70=#A(t (41) (common-lisp-user::get-p-history-data ext::location (defun common-lisp-user::get-p-history-data) (#2# . 68318) ext::annotate :lambda-list common-lisp-user::production-history common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::x common-lisp-user::printing-module #:g24048 #:g24047 make-string-output-stream common-lisp-user::printing-module-v common-lisp-user::printing-module-c #:g24050 #:g24049 #:g24051 #:g24052 :stream common-lisp-user::make-act-r-output #:g24053 (setf common-lisp-user::printing-module-v) #:g24054 #:g24055 (setf common-lisp-user::printing-module-c) common-lisp-user::pp-fct #:g24056 #:g24057 (setf common-lisp-user::printing-module-v) #:g24058 #:g24059 (setf common-lisp-user::printing-module-c) get-output-stream-string close #Y(nil nil nil (24 45 9 26 13 0 15 10 19 1 7 47 1 11 45 12 10 1 39 138 19 0 13 12 13 0 19 1 14 12 13 0 19 1 15 12 46 16 46 17 46 18 10 3 45 19 14 20 13 1 19 2 21 45 22 13 0 13 1 33 23 18 2 43 1 43 1 10 3 45 24 14 20 13 1 19 2 21 45 25 13 0 13 1 33 26 18 2 43 1 43 1 64 10 10 5 6 1 12 19 1 27 65 10 3 45 28 10 2 45 29 13 0 13 1 33 30 18 2 43 1 43 1 10 3 45 31 10 3 45 32 13 0 13 1 33 33 18 2 43 1 43 1 66 10 0 16 34 12 13 0 19 1 35 22 43 3 43 2 3 73 29) #70# #2# 68318) common-lisp-user::all-productions mapcar #Y(common-lisp-user::get-p-history-data nil nil (26 15 6 19 1 7 45 8 10 0 73 39 17 34 36 12 19 0 37 12 19 2 38 12 10 0 6 2 73 43 1 29) #70# #2# 68318) si::fset)) #2# 68318))
