(#Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*subsymbolic-parameter-values* si::*make-special boundp ext::location (defvar common-lisp-user::*subsymbolic-parameter-values*) (#1=#P"C:/Users/Son Pham/Desktop/actr7/support/central-parameters.lisp" . 0) ext::annotate)) #1# 0) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*user-default-parameter-list* si::*make-special boundp ext::location (defvar common-lisp-user::*user-default-parameter-list*) (#1# . 3340) ext::annotate)) #1# 3340) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 97 12 19 2 98 1 0 73 29) #2=#A(t (99) (common-lisp-user::test-user-defaults-parameter ext::location (defun common-lisp-user::test-user-defaults-parameter) (#1# . 3384) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params listp length evenp common-lisp-user::i common-lisp-user::x #:g7320 + #Y(nil nil nil (24 45 12 26 8 1 45 13 13 2 13 0 19 2 14 51 2 43 1 10 1 16 10 73 39 6 10 0 6 1 73 29) #2# #1# 3384) mapcan common-lisp-user::names keywordp every common-lisp-user::current-model common-lisp-user::y :bad-parameter-name common-lisp-user::printing-module common-lisp-user::get-module-fct #:g7322 #:g7321 common-lisp-user::printing-module-suppress-cmds #:g7323 #:g7324 t #:g7325 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::sgp-fct #:g7326 #:g7327 (setf common-lisp-user::printing-module-suppress-cmds) eq #Y(nil nil nil (24 45 21 26 14 22 15 23 19 1 24 47 1 25 45 26 10 1 39 62 13 0 19 1 27 45 28 10 1 45 29 11 30 45 31 13 0 13 1 33 32 18 2 43 1 43 1 64 10 10 3 6 1 12 19 1 33 65 10 1 45 34 10 1 45 35 13 0 13 1 33 36 18 2 43 1 43 1 66 43 1 43 2 4 17 37 29) #2# #1# 3384) notany common-lisp-user::default common-lisp-user::*meta-processes* common-lisp-user::mps-table gethash #:g7328 common-lisp-user::mps-current #:g7329 #:g7330 #:g7331 common-lisp-user::meta-processes si::structure-set gensym common-lisp-user::define-model-fct common-lisp-user::res common-lisp-user::name #:g7332 #:g7334 common-lisp-user::valid-model-name common-lisp-user::meta-p-current-model #:g7333 #:g7335 common-lisp-user::meta-p-models #:g7336 common-lisp-user::meta-process #:g7337 #:g7339 common-lisp-user::meta-p-cannot-define-model #:g7338 #:g7342 #:g7341 #:g7343 #:g7344 #:g7345 (setf common-lisp-user::printing-module-suppress-cmds) #:g7346 #:g7347 (setf common-lisp-user::printing-module-suppress-cmds) #Y(nil nil nil (24 45 21 26 14 22 15 23 19 1 24 47 1 68 45 69 10 1 39 62 13 0 19 1 27 45 70 10 1 45 71 11 30 45 72 13 0 13 1 33 73 18 2 43 1 43 1 64 10 10 3 6 1 12 19 1 33 65 10 1 45 74 10 1 45 75 13 0 13 1 33 76 18 2 43 1 43 1 66 43 1 43 2 4 17 37 29) #2# #1# 3384) #:g7348 #:g7349 #:g7350 #:g7352 - #:g7351 *error-output* "~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%" common-lisp-user::current-mp-fct common-lisp-user::mp-models > "~S does not name a model in the current meta-process" format finish-output "No actions taken in with-model because there is no current meta-process" common-lisp-user::delete-model-fct #:g7353 #:g7354 "No actions taken in with-meta-process because ~S does not name a meta-process" #Y(common-lisp-user::test-user-defaults-parameter nil nil (24 45 7 26 10 0 16 8 73 39 475 10 0 16 9 16 10 73 39 466 8 -1 45 11 34 15 12 13 1 19 2 16 43 1 45 17 15 18 13 0 19 2 19 73 39 438 19 0 20 39 11 34 38 12 13 0 19 2 39 38 423 15 40 14 41 19 1 42 12 19 2 43 45 44 10 0 39 363 14 41 19 1 45 45 46 11 41 45 47 10 2 45 48 13 1 15 49 9 2 13 0 19 4 50 43 1 43 1 64 303 19 0 51 12 77 19 2 52 12 77 46 53 46 54 14 41 19 1 45 45 55 10 0 39 229 10 1 45 56 13 0 19 1 57 39 176 14 41 19 1 45 39 10 14 41 19 1 45 12 19 1 58 45 59 14 41 19 1 45 45 60 13 2 13 3 19 1 61 12 19 2 43 45 62 13 1 15 63 9 5 13 0 19 4 50 43 1 43 1 14 41 19 1 45 45 64 8 1 45 65 13 1 19 1 66 12 13 0 19 2 14 45 67 13 2 15 63 9 29 13 0 19 4 50 43 3 64 42 64 12 34 77 12 13 7 19 2 39 51 4 65 14 41 19 1 45 45 78 10 1 45 79 13 1 15 63 9 5 13 0 19 4 50 43 1 43 1 66 65 14 41 19 1 45 45 80 8 1 45 81 13 1 19 1 66 12 13 0 19 2 82 45 83 13 2 15 63 9 29 13 0 19 4 50 43 3 66 43 1 38 39 14 84 15 85 19 0 86 73 39 12 19 0 87 16 9 12 9 1 19 2 88 12 19 0 20 12 15 89 13 0 19 6 90 14 84 19 1 91 43 1 38 37 14 84 15 85 19 0 86 73 39 12 19 0 87 16 9 12 9 1 19 2 88 12 19 0 20 12 15 92 19 5 90 14 84 19 1 91 43 1 13 0 19 1 93 10 1 73 43 2 65 11 41 45 94 10 1 45 95 13 1 15 49 9 2 13 0 19 4 50 43 1 43 1 66 43 1 38 42 14 84 15 85 19 0 86 73 39 12 19 0 87 16 9 12 9 1 19 2 88 12 19 0 20 12 15 96 15 40 19 6 90 12 14 84 19 1 91 22 73 43 1 43 1 29) #2# #1# 3384) si::fset)) #1# 3384) #Y(si::bytecodes nil nil (14 0 14 1 1 5 12 14 6 15 7 14 8 15 9 14 10 15 11 14 12 77 19 11 13 29) #3=#A(t (14) (:starting-parameters :handler common-lisp-user::set-or-get common-lisp-user::value common-lisp-user::*user-default-parameter-list* #Y(nil nil nil (24 45 2 24 45 3 26 10 1 39 8 10 0 52 4 73 38 4 11 4 73 29) #3# #1# 4241) :documentation "Parameter settings to apply at the start of every model." :valid-test common-lisp-user::test-user-defaults-parameter :warning "A list that is valid for passing to sgp-fct." :default-value common-lisp-user::create-system-parameter)) #1# 4241) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 3 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 25 78 21 15 12 1 23 12 19 2 24 1 0 73 29) #4=#A(t (26) (common-lisp-user::central-parameters "CENTRAL-PARAMETERS-" (common-lisp-user::esc common-lisp-user::ol common-lisp-user::er) ((common-lisp-user::esc nil t nil 0 nil) (common-lisp-user::ol nil t nil 1 nil) (common-lisp-user::er nil t nil 2 nil)) common-lisp-user::copy-central-parameters (common-lisp-user::make-central-parameters) common-lisp-user::central-parameters-p si::define-structure ext::location (defstruct common-lisp-user::central-parameters) (#1# . 4649) ext::annotate common-lisp-user::make-central-parameters (defun common-lisp-user::make-central-parameters) (#1# . 4649) :lambda-list (&key #5=#:esc #6=#:ol #7=#:er) (nil :er :ol :esc) #5# #6# #7# 0 si::make-structure #Y(common-lisp-user::make-central-parameters nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 15 21 13 2 13 1 13 0 19 4 22 29) #4# #1# 4649) si::fset find-class)) #1# 4649) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #8=#A(t (20) (common-lisp-user::central-parameters-reset ext::location (defun common-lisp-user::central-parameters-reset) (#1# . 4693) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance common-lisp-user::check-for-esc-nil :maintenance t :output :priority :max :params common-lisp-user::schedule-event-now common-lisp-user::*user-default-parameter-list* common-lisp-user::sgp-fct #Y(common-lisp-user::central-parameters-reset nil nil (24 45 7 26 15 8 14 9 14 10 14 11 77 14 12 14 13 14 14 10 0 6 1 12 19 9 15 11 16 73 39 6 14 16 19 1 17 29) #8# #1# 4693) si::fset)) #1# 4693) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 52 12 19 2 53 1 0 73 29) #9=#A(t (54) (common-lisp-user::check-for-esc-nil ext::location (defun common-lisp-user::check-for-esc-nil) (#1# . 4957) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance common-lisp-user::central-parameters-esc common-lisp-user::param common-lisp-user::printing-module common-lisp-user::get-module-fct #:g7367 #:g7366 common-lisp-user::printing-module-suppress-cmds #:g7368 #:g7369 t #:g7370 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::sgp-fct #:g7371 #:g7372 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::current :bad-parameter-name eq common-lisp-user::get-parameter-default-value equalp #Y(nil nil nil (24 45 9 26 15 10 19 1 11 47 1 12 45 13 10 1 39 62 13 0 19 1 14 45 15 10 1 45 16 11 17 45 18 13 0 13 1 33 19 18 2 43 1 43 1 64 10 10 3 6 1 12 19 1 20 65 10 1 45 21 10 1 45 22 13 0 13 1 33 23 18 2 43 1 43 1 66 43 1 43 2 4 45 24 13 0 11 25 17 26 76 73 39 12 13 0 13 1 19 1 27 17 28 76 73 43 1 29) #9# #1# 4957) common-lisp-user::*subsymbolic-parameter-values* some #:g7374 #:g7373 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g7375 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* *standard-output* eql "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::mp-models length > common-lisp-user::current-model "Subsymbolic parameters have been set but :esc is currently nil." format finish-output "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #Y(common-lisp-user::check-for-esc-nil nil nil (24 45 7 26 13 0 19 1 8 76 39 9 34 29 12 14 30 19 2 31 73 39 172 15 10 19 1 11 47 1 32 45 33 10 1 39 10 13 0 19 1 34 12 19 1 35 73 39 144 13 0 19 1 34 12 19 1 35 45 36 13 1 19 1 37 76 40 121 10 0 76 40 27 13 0 11 38 17 26 40 19 11 39 40 15 13 0 11 17 17 26 39 7 14 38 11 40 17 41 39 33 14 38 15 42 19 0 43 16 44 12 9 1 19 2 45 12 19 0 46 12 15 47 19 5 48 14 38 19 1 49 38 56 14 38 15 50 19 0 43 16 44 12 9 1 19 2 45 12 19 0 46 12 15 47 19 5 48 14 38 19 1 49 13 0 15 51 19 0 43 16 44 12 9 1 19 2 45 12 19 0 46 12 15 47 19 5 48 75 73 43 1 43 2 29) #9# #1# 4957) si::fset)) #1# 4957) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 1 0 73 29) #10=#A(t (15) (common-lisp-user::register-subsymbolic-parameters ext::location (defun common-lisp-user::register-subsymbolic-parameters) (#1# . 5459) ext::annotate :lambda-list (&rest common-lisp-user::params) common-lisp-user::params si::%dolist-var common-lisp-user::param common-lisp-user::valid-parameter-name common-lisp-user::*subsymbolic-parameter-values* find #Y(common-lisp-user::register-subsymbolic-parameters nil nil (27 45 7 10 0 45 8 75 45 9 38 35 10 1 4 51 0 13 0 19 1 10 39 9 13 0 14 11 19 2 12 76 39 8 13 0 11 11 3 52 11 10 1 5 51 1 10 1 40 -37 75 73 43 2 29) #10# #1# 5459) si::fset)) #1# 5459) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #11=#A(t (11) (common-lisp-user::create-central-params ext::location (defun common-lisp-user::create-central-params) (#1# . 5703) ext::annotate :lambda-list (common-lisp-user::model-name) common-lisp-user::model-name common-lisp-user::make-central-parameters #Y(common-lisp-user::create-central-params nil nil (24 45 7 26 19 0 8 29) #11# #1# 5703) si::fset)) #1# 5703) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 24 12 19 2 25 1 0 73 29) #12=#A(t (26) (common-lisp-user::central-parameters-params ext::location (defun common-lisp-user::central-parameters-params) (#1# . 5807) ext::annotate :lambda-list (common-lisp-user::instance common-lisp-user::param) common-lisp-user::instance common-lisp-user::param consp :esc #:g7386 #:g7387 common-lisp-user::central-parameters si::structure-set :ol #:g7388 #:g7389 :er #:g7390 #:g7391 common-lisp-user::central-parameters-esc common-lisp-user::central-parameters-ol common-lisp-user::central-parameters-er #Y(common-lisp-user::central-parameters-params nil nil (24 45 7 24 45 8 26 10 0 16 9 39 95 10 0 4 42 10 27 10 1 45 11 10 1 5 45 12 13 1 15 13 9 0 13 0 19 4 14 43 1 43 1 38 61 42 15 27 10 1 45 16 10 1 5 45 17 13 1 15 13 9 1 13 0 19 4 14 43 1 43 1 38 32 42 18 27 10 1 45 19 10 1 5 45 20 13 1 15 13 9 2 13 0 19 4 14 43 1 43 1 38 3 75 73 38 35 10 0 42 10 8 13 1 19 1 21 38 23 42 15 8 13 1 19 1 22 38 13 42 18 8 13 1 19 1 23 38 3 75 73 29) #12# #1# 5807) si::fset)) #1# 5807) #Y(si::bytecodes nil nil (15 0 77 14 1 14 2 14 3 14 4 33 5 12 14 6 77 14 7 15 8 14 9 15 10 19 11 11 12 14 12 14 2 14 3 14 4 33 5 12 14 6 77 14 7 15 13 14 9 15 14 19 11 11 12 14 15 14 2 14 3 14 4 1 18 12 14 6 14 3 14 7 15 19 14 9 15 20 19 11 11 6 3 12 14 21 15 22 14 9 15 23 14 24 33 25 12 14 26 33 27 12 14 28 77 1 29 6 2 12 19 13 30 29) #13=#A(t (31) (common-lisp-user::central-parameters :esc :owner t :valid-test common-lisp-user::tornil :default-value :warning "either t or nil" :documentation "Enable Subsymbolic Computations" common-lisp-user::define-parameter :er "either t or nil" "Enable Randomness" :ol common-lisp-user::x common-lisp-user::posnum #Y(nil nil nil (24 45 16 26 13 0 19 1 5 73 40 6 13 0 19 1 17 29) #13# #1# 6307) "either t, nil, or a positive number" "Optimized Learning" :version "1.2" "a module that maintains parameters used by other modules" :creation common-lisp-user::create-central-params :params common-lisp-user::central-parameters-params :reset common-lisp-user::central-parameters-reset common-lisp-user::define-module-fct)) #1# 6307) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("CENTRAL-PARAMETERS" provide)) #1# 7072))
