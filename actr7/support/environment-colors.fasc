(#Y(si::bytecodes nil nil (1 0 16 1 1 2 52 0 15 0 15 3 15 4 15 5 19 4 6 1 0 73 29) #A(t (7) (common-lisp-user::*gt-colors* si::*make-special ("#ff0000" "#8080ff" "#008000" "#ff8000" "#7f7f7f" "#ff00ff" "#ffff00" "#c08000" "#f0f0f0" "#c000c0" "#00c050" "#f0c0ff" "#c05850") ext::location (defparameter common-lisp-user::*gt-colors*) (#1=#P"C:/Users/Son Pham/Desktop/actr7/support/environment-colors.lisp" . 0) ext::annotate)) #1# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 27 12 19 2 28 1 0 73 29) #2=#A(t (29) (common-lisp-user::create-color-list ext::location (defun common-lisp-user::create-color-list) (#1# . 1868) ext::annotate :lambda-list (common-lisp-user::colors common-lisp-user::buffers common-lisp-user::defaults) common-lisp-user::colors common-lisp-user::buffers common-lisp-user::defaults copy-list common-lisp-user::default-colors common-lisp-user::results length < ceiling si::%dotimes-var common-lisp-user::i append 1+ min nth #:g24422 #:g24423 #:g24424 nthcdr rplaca #Y(common-lisp-user::create-color-list nil nil (24 45 7 24 45 8 24 45 9 26 10 2 16 10 12 13 0 46 11 46 12 10 2 16 13 12 10 3 16 13 12 19 2 14 39 48 10 3 16 13 12 10 2 16 13 12 19 2 15 45 16 8 0 45 17 38 16 13 3 13 4 19 2 18 51 3 10 0 16 19 51 0 13 0 13 1 19 2 14 40 -23 43 2 10 4 39 110 10 4 16 13 12 10 3 16 13 12 19 2 20 45 16 8 0 45 17 38 49 13 0 10 2 17 21 76 39 34 10 0 45 22 10 3 45 23 13 2 10 5 17 21 45 24 13 2 10 1 17 25 12 10 0 17 26 10 0 43 1 43 2 10 0 16 19 51 0 13 0 13 1 19 2 14 40 -56 43 2 10 0 16 13 12 10 3 16 13 12 19 2 14 39 10 13 0 13 1 19 2 18 51 0 10 0 73 38 4 10 1 73 43 2 29) #2# #1# 1868) si::fset)) #1# 1868) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("ENVIRONMENT-COLORS" provide)) #1# 2550))
