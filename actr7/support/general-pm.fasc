(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 77 19 4 6 29) #A(t (7) (common-lisp-user::pm-module ext::location (defclass common-lisp-user::pm-module) (#1=#P"C:/Users/Son Pham/Desktop/actr7/support/general-pm.lisp" . 0) ext::annotate ((:initform nil :writers ((setf common-lisp-user::input-q)) :readers (common-lisp-user::input-q) :name common-lisp-user::input-queue) (:initargs (:modality) :initform 'common-lisp-user::free :writers ((setf common-lisp-user::mode-s)) :readers (common-lisp-user::mode-s) :name common-lisp-user::modality-state) (:initargs (:processor) :initform 'common-lisp-user::free :writers ((setf common-lisp-user::proc-s)) :readers (common-lisp-user::proc-s) :name common-lisp-user::processor-state) (:initargs (:preparation) :initform 'common-lisp-user::free :writers ((setf common-lisp-user::prep-s)) :readers (common-lisp-user::prep-s) :name common-lisp-user::preparation-state) (:initargs (:execution) :initform 'common-lisp-user::free :writers ((setf common-lisp-user::exec-s)) :readers (common-lisp-user::exec-s) :name common-lisp-user::execution-state) (:initform nil :initargs (:state-change) :writers ((setf common-lisp-user::state-change)) :readers (common-lisp-user::state-change) :name common-lisp-user::state-change-flag) (:initform nil :initargs (:name) :writers ((setf common-lisp-user::my-name)) :readers (common-lisp-user::my-name) :name common-lisp-user::module-name) (:initargs (:last-command) :initform nil :writers ((setf common-lisp-user::last-cmd)) :readers (common-lisp-user::last-cmd) :name common-lisp-user::last-command) (:initform nil :initargs (:last-prep) :writers ((setf common-lisp-user::last-prep)) :readers (common-lisp-user::last-prep) :name common-lisp-user::last-prep) (:initform nil :initargs (:exec-queue) :writers ((setf common-lisp-user::exec-queue)) :readers (common-lisp-user::exec-queue) :name common-lisp-user::exec-queue) (:initform 0.05 :initargs (:feat-prep-time) :writers ((setf common-lisp-user::feat-prep-time)) :readers (common-lisp-user::feat-prep-time) :name common-lisp-user::feature-prep-time) (:initform 0.05 :initargs (:init-time) :writers ((setf common-lisp-user::init-time)) :readers (common-lisp-user::init-time) :name common-lisp-user::movement-initiation-time) (:initform -0.1 :initargs (:init-stamp) :writers ((setf common-lisp-user::init-stamp)) :readers (common-lisp-user::init-stamp) :name common-lisp-user::init-stamp) (:initform 0.05 :initargs (:burst-time) :writers ((setf common-lisp-user::burst-time)) :readers (common-lisp-user::burst-time) :name common-lisp-user::burst-time) (:initform "" :initargs (:version-string) :writers ((setf common-lisp-user::version-string)) :readers (common-lisp-user::version-string) :name common-lisp-user::version-string) (:initform "" :writers ((setf common-lisp-user::prepare-spec)) :readers (common-lisp-user::prepare-spec) :name common-lisp-user::prepare-spec)) clos::load-defclass)) #1# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::change-state ext::location (defgeneric common-lisp-user::change-state) (#1# . 12630) ext::annotate :lambda-list (common-lisp-user::module &key common-lisp-user::proc common-lisp-user::exec common-lisp-user::prep last) :delete-methods t :documentation "Change one or more of a module's state flags." ensure-generic-function)) #1# 12630) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 41 12 14 38 19 6 42 29) #2=#A(t (43) (common-lisp-user::change-state ext::location (defmethod common-lisp-user::change-state (common-lisp-user::module common-lisp-user::pm-module) &key common-lisp-user::proc common-lisp-user::exec common-lisp-user::prep last) (#1# . 12884) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module &key common-lisp-user::proc common-lisp-user::exec common-lisp-user::prep last) common-lisp-user::module (t :last :prep :exec :proc) common-lisp-user::proc common-lisp-user::exec common-lisp-user::prep last #:g10299 #:g10300 (setf common-lisp-user::proc-s) #:g10301 #:g10302 (setf common-lisp-user::exec-s) #:g10303 #:g10304 (setf common-lisp-user::prep-s) #:g10305 #:g10306 (setf common-lisp-user::last-cmd) common-lisp-user::proc-s common-lisp-user::busy eq common-lisp-user::exec-s common-lisp-user::prep-s #:g10307 #:g10308 (setf common-lisp-user::mode-s) #:g10309 common-lisp-user::free #:g10310 (setf common-lisp-user::mode-s) #:g10311 t #:g10312 (setf common-lisp-user::state-change) #Y(common-lisp-user::change-state nil nil (24 45 7 28 8 22 40 2 77 46 9 22 40 2 77 46 10 22 40 2 77 46 11 22 40 2 77 46 12 10 3 39 21 10 4 45 13 10 4 45 14 13 0 13 1 33 15 18 2 43 1 43 1 10 2 39 21 10 4 45 16 10 3 45 17 13 0 13 1 33 18 18 2 43 1 43 1 10 1 39 21 10 4 45 19 10 2 45 20 13 0 13 1 33 21 18 2 43 1 43 1 10 0 39 21 10 4 45 22 10 1 45 23 13 0 13 1 33 24 18 2 43 1 43 1 13 4 19 1 25 12 1 26 17 27 40 23 13 4 19 1 28 12 1 26 17 27 40 11 13 4 19 1 29 12 1 26 17 27 39 23 10 4 45 30 1 26 45 31 13 0 13 1 33 32 18 2 43 1 43 1 38 21 10 4 45 33 1 34 45 35 13 0 13 1 33 36 18 2 43 1 43 1 10 4 45 37 11 38 45 39 13 0 13 1 33 40 18 2 43 1 43 1 29) #2# #1# 12884) clos::install-method)) #1# 12884) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 32 12 14 33 19 6 34 29) #3=#A(t (35) (common-lisp-user::clear ext::location (defmethod common-lisp-user::clear (common-lisp-user::module common-lisp-user::pm-module)) (#1# . 13330) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module) common-lisp-user::module common-lisp-user::check-jam :prep common-lisp-user::busy common-lisp-user::change-state common-lisp-user::feat-prep-time :destination common-lisp-user::my-name :module :params (:last common-lisp-user::none :prep common-lisp-user::free) common-lisp-user::schedule-event-relative common-lisp-user::complete-all-module-requests :output :priority #:g10331 #:g10332 (setf common-lisp-user::last-prep) #:g10333 #:g10334 (setf common-lisp-user::exec-queue) #:g10335 -0.1 #:g10336 (setf common-lisp-user::init-stamp) #Y(common-lisp-user::clear nil nil (24 45 7 26 13 0 19 1 8 76 73 39 127 13 0 14 9 15 10 19 3 11 13 0 19 1 12 12 15 11 14 13 13 0 19 1 14 12 14 15 13 0 19 1 14 12 14 16 15 17 19 8 18 13 0 19 1 12 12 15 19 14 16 13 0 19 1 14 6 1 12 14 20 77 14 21 9 -1 19 8 18 10 0 45 22 75 45 23 13 0 13 1 33 24 18 2 43 1 43 1 10 0 45 25 75 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 0 45 28 1 29 45 30 13 0 13 1 33 31 18 2 43 1 43 1 29) #3# #1# 13330) t clos::install-method)) #1# 13330) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::check-jam ext::location (defgeneric common-lisp-user::check-jam) (#1# . 14091) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "Returns NIL if the PM module is free, otherwise prints an error message and returns T." ensure-generic-function)) #1# 14091) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 36 12 14 21 19 6 37 29) #4=#A(t (38) (common-lisp-user::check-jam ext::location (defmethod common-lisp-user::check-jam (common-lisp-user::module common-lisp-user::pm-module)) (#1# . 14488) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module) common-lisp-user::module common-lisp-user::prep-s common-lisp-user::busy eq common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10347 #:g10346 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g10348 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* t *standard-output* eql #5="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" common-lisp-user::mp-models length > common-lisp-user::current-model "Module ~S jammed at time ~S" common-lisp-user::my-name common-lisp-user::mp-time format finish-output #6="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #7="~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%" #Y(common-lisp-user::check-jam nil nil (24 45 7 26 13 0 19 1 8 12 1 9 17 10 76 39 5 75 73 38 202 15 11 19 1 12 47 1 13 45 14 10 1 39 10 13 0 19 1 15 12 19 1 16 39 172 13 0 19 1 15 12 19 1 16 45 17 13 1 19 1 18 76 40 151 10 0 76 40 27 13 0 11 19 17 10 40 19 11 20 40 15 13 0 11 21 17 10 39 7 14 19 11 22 17 23 39 43 14 19 15 24 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 3 19 1 30 12 19 0 31 12 19 7 32 14 19 19 1 33 38 76 14 19 15 34 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 3 19 1 30 12 19 0 31 12 19 7 32 14 19 19 1 33 13 0 15 35 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 3 19 1 30 12 19 0 31 12 19 7 32 43 1 43 2 11 21 73 29) #4# #1# 14488) clos::install-method)) #1# 14488) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::reset-pm-module ext::location (defgeneric common-lisp-user::reset-pm-module) (#1# . 14679) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "Resets a PM module to base state:  all flags free, empty input queue." ensure-generic-function)) #1# 14679) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 38 12 14 39 19 6 40 29) #8=#A(t (41) (common-lisp-user::reset-pm-module ext::location (defmethod common-lisp-user::reset-pm-module (common-lisp-user::module common-lisp-user::pm-module)) (#1# . 15062) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module) common-lisp-user::module #:g10403 common-lisp-user::free #:g10404 (setf common-lisp-user::proc-s) #:g10405 #:g10406 (setf common-lisp-user::exec-s) #:g10407 #:g10408 (setf common-lisp-user::prep-s) #:g10409 #:g10410 (setf common-lisp-user::mode-s) #:g10411 common-lisp-user::none #:g10412 (setf common-lisp-user::last-cmd) #:g10413 #:g10414 (setf common-lisp-user::input-q) #:g10415 #:g10416 (setf common-lisp-user::last-prep) #:g10417 #:g10418 (setf common-lisp-user::exec-queue) #:g10419 -0.1 #:g10420 (setf common-lisp-user::init-stamp) #Y(common-lisp-user::reset-pm-module nil nil (24 45 7 26 10 0 45 8 1 9 45 10 13 0 13 1 33 11 18 2 43 1 43 1 10 0 45 12 1 9 45 13 13 0 13 1 33 14 18 2 43 1 43 1 10 0 45 15 1 9 45 16 13 0 13 1 33 17 18 2 43 1 43 1 10 0 45 18 1 9 45 19 13 0 13 1 33 20 18 2 43 1 43 1 10 0 45 21 1 22 45 23 13 0 13 1 33 24 18 2 43 1 43 1 10 0 45 25 75 45 26 13 0 13 1 33 27 18 2 43 1 43 1 10 0 45 28 75 45 29 13 0 13 1 33 30 18 2 43 1 43 1 10 0 45 31 75 45 32 13 0 13 1 33 33 18 2 43 1 43 1 10 0 45 34 1 35 45 36 13 0 13 1 33 37 18 2 43 1 43 1 29) #8# #1# 15062) t clos::install-method)) #1# 15062) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::print-module-state ext::location (defgeneric common-lisp-user::print-module-state) (#1# . 15401) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "Prints a representation of a PM module's state." ensure-generic-function)) #1# 15401) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 22 12 14 8 19 6 23 29) #9=#A(t (24) (common-lisp-user::print-module-state ext::location (defmethod common-lisp-user::print-module-state (mod common-lisp-user::pm-module)) (#1# . 15681) ext::annotate (common-lisp-user::pm-module) (mod) mod t "~& State of module ~S" common-lisp-user::my-name format "~% Modality:     ~S" common-lisp-user::mode-s "~% Preparation:  ~S" common-lisp-user::prep-s "~% Processor:    ~S" common-lisp-user::proc-s "~% Execution:    ~S" common-lisp-user::exec-s "~% Last command: ~S" common-lisp-user::last-cmd #Y(common-lisp-user::print-module-state nil nil (24 45 7 26 14 8 15 9 13 0 19 1 10 12 19 3 11 14 8 15 12 13 0 19 1 13 12 19 3 11 14 8 15 14 13 0 19 1 15 12 19 3 11 14 8 15 16 13 0 19 1 17 12 19 3 11 14 8 15 18 13 0 19 1 19 12 19 3 11 14 8 15 20 13 0 19 1 21 12 19 3 11 29) #9# #1# 15681) clos::install-method)) #1# 15681) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::pm-module-last-cmd-name ext::location (defgeneric common-lisp-user::pm-module-last-cmd-name) (#1# . 16024) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::buffer-name common-lisp-user::chunk-spec) :delete-methods t :documentation "Determine the name of the last command when it's not 'isa clear' and doesn't have a cmd slot." ensure-generic-function)) #1# 16024) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 10 12 14 11 19 6 12 29) #10=#A(t (13) (common-lisp-user::pm-module-last-cmd-name ext::location (defmethod common-lisp-user::pm-module-last-cmd-name (common-lisp-user::module common-lisp-user::pm-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 16211) ext::annotate (common-lisp-user::pm-module t t) (common-lisp-user::module common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::module common-lisp-user::buffer-name common-lisp-user::chunk-spec #Y(common-lisp-user::pm-module-last-cmd-name nil nil (24 45 7 24 45 8 24 45 9 26 75 73 29) #10# #1# 16211) t clos::install-method)) #1# 16211) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::pm-module-request ext::location (defgeneric common-lisp-user::pm-module-request) (#1# . 16349) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::buffer-name common-lisp-user::chunk-spec) :delete-methods t :documentation "Handles a request from a buffer." ensure-generic-function)) #1# 16349) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 15 7 1 25 12 14 26 19 6 27 29) #11=#A(t (28) (common-lisp-user::pm-module-request ext::location (defmethod common-lisp-user::pm-module-request :after (common-lisp-user::module common-lisp-user::pm-module) common-lisp-user::buffer-name common-lisp-user::chunk-spec) (#1# . 16467) ext::annotate (:after) (common-lisp-user::pm-module t t) (common-lisp-user::module common-lisp-user::buffer-name common-lisp-user::chunk-spec) common-lisp-user::module common-lisp-user::buffer-name common-lisp-user::chunk-spec common-lisp-user::chunk-spec-slot-spec common-lisp-user::spec length = common-lisp-user::clear common-lisp-user::spec-slot-name eq common-lisp-user::spec-slot-value common-lisp-user::cmd common-lisp-user::pm-module-last-cmd-name common-lisp-user::last-cmd eql :last common-lisp-user::change-state #Y(common-lisp-user::pm-module-request nil nil (24 45 8 24 45 9 24 45 10 26 13 0 19 1 11 45 12 10 0 16 13 12 9 1 19 2 14 39 25 15 15 10 0 4 12 19 1 16 17 17 39 12 10 0 4 12 19 1 18 39 3 1 15 43 1 40 42 13 0 15 19 19 2 11 45 12 10 0 16 13 12 9 1 19 2 14 39 8 10 0 4 12 19 1 18 43 1 40 10 13 2 13 1 13 0 19 3 20 45 21 10 0 39 12 13 3 19 1 21 12 10 0 17 22 76 73 39 10 13 3 14 23 13 0 19 3 24 43 1 29) #11# #1# 16467) t clos::install-method)) #1# 16467) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::print-module-status ext::location (defgeneric common-lisp-user::print-module-status) (#1# . 17328) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "Prints the module's state in query form" ensure-generic-function)) #1# 17328) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 43 12 14 44 19 6 45 29) #12=#A(t (46) (common-lisp-user::print-module-status ext::location (defmethod common-lisp-user::print-module-status (mod common-lisp-user::pm-module)) (#1# . 17460) ext::annotate (common-lisp-user::pm-module) (mod) mod common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10464 #:g10463 common-lisp-user::printing-module-suppress-cmds common-lisp-user::printing-module-c common-lisp-user::act-r-output-stream "~&~@?~%" "  preparation free      : ~S" common-lisp-user::prep-s common-lisp-user::free eq format #:g10466 #:g10465 "  preparation busy      : ~S" common-lisp-user::busy #:g10468 #:g10467 "  processor free        : ~S" common-lisp-user::proc-s #:g10470 #:g10469 "  processor busy        : ~S" #:g10472 #:g10471 "  execution free        : ~S" common-lisp-user::exec-s #:g10474 #:g10473 "  execution busy        : ~S" #:g10476 #:g10475 "  last-command          : ~S" common-lisp-user::last-cmd #Y(common-lisp-user::print-module-status nil nil (24 45 7 26 15 8 19 1 9 47 1 10 45 11 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 29 13 0 19 1 13 12 19 1 14 12 15 15 15 16 13 2 19 1 17 12 1 18 17 19 12 19 4 20 43 2 15 8 19 1 9 47 1 21 45 22 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 29 13 0 19 1 13 12 19 1 14 12 15 15 15 23 13 2 19 1 17 12 1 24 17 19 12 19 4 20 43 2 15 8 19 1 9 47 1 25 45 26 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 29 13 0 19 1 13 12 19 1 14 12 15 15 15 27 13 2 19 1 28 12 1 18 17 19 12 19 4 20 43 2 15 8 19 1 9 47 1 29 45 30 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 29 13 0 19 1 13 12 19 1 14 12 15 15 15 31 13 2 19 1 28 12 1 24 17 19 12 19 4 20 43 2 15 8 19 1 9 47 1 32 45 33 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 29 13 0 19 1 13 12 19 1 14 12 15 15 15 34 13 2 19 1 35 12 1 18 17 19 12 19 4 20 43 2 15 8 19 1 9 47 1 36 45 37 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 39 29 13 0 19 1 13 12 19 1 14 12 15 15 15 38 13 2 19 1 35 12 1 24 17 19 12 19 4 20 43 2 15 8 19 1 9 47 1 39 45 40 10 1 39 18 13 0 19 1 12 76 39 10 13 0 19 1 13 12 19 1 14 73 39 24 13 0 19 1 13 12 19 1 14 12 15 15 15 41 13 2 19 1 42 12 19 4 20 43 2 29) #12# #1# 17460) t clos::install-method)) #1# 17460) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::check-state ext::location (defgeneric common-lisp-user::check-state) (#1# . 18146) ext::annotate :lambda-list (common-lisp-user::module &key common-lisp-user::modality common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor common-lisp-user::last-command) :delete-methods t :documentation "Does a quick test of the state of a PM module, returning T iff all the specified states match." ensure-generic-function)) #1# 18146) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 21 12 14 20 19 6 22 29) #13=#A(t (23) (common-lisp-user::check-state ext::location (defmethod common-lisp-user::check-state (mod common-lisp-user::pm-module) &key common-lisp-user::modality common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor common-lisp-user::last-command) (#1# . 18400) ext::annotate (common-lisp-user::pm-module) (mod &key common-lisp-user::modality common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor common-lisp-user::last-command) mod (t :last-command :processor :execution :preparation :modality) common-lisp-user::modality common-lisp-user::preparation common-lisp-user::execution common-lisp-user::processor common-lisp-user::last-command common-lisp-user::mode-s eq common-lisp-user::prep-s common-lisp-user::exec-s common-lisp-user::proc-s common-lisp-user::last-cmd t #Y(common-lisp-user::check-state nil nil (24 45 7 28 8 22 40 2 77 46 9 22 40 2 77 46 10 22 40 2 77 46 11 22 40 2 77 46 12 22 40 2 77 46 13 10 4 39 11 13 4 13 5 19 1 14 17 15 76 39 5 75 73 38 84 10 3 39 11 13 3 13 5 19 1 16 17 15 76 39 5 75 73 38 64 10 2 39 11 13 2 13 5 19 1 17 17 15 76 39 5 75 73 38 44 10 1 39 11 13 1 13 5 19 1 18 17 15 76 39 5 75 73 38 24 10 0 39 11 13 0 13 5 19 1 19 17 15 76 39 5 75 73 38 4 11 20 73 29) #13# #1# 18400) clos::install-method)) #1# 18400) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::generic-state-query ext::location (defgeneric common-lisp-user::generic-state-query) (#1# . 18875) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value) :delete-methods t :documentation "Handles BUSY/FREE tests on STATE, MODALITY, EXECUTION, PREPARATION and PROCESSOR." ensure-generic-function)) #1# 18875) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 60 12 14 27 19 6 61 29) #14=#A(t (62) (common-lisp-user::generic-state-query ext::location (defmethod common-lisp-user::generic-state-query (common-lisp-user::module common-lisp-user::pm-module) common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value) (#1# . 19040) ext::annotate (common-lisp-user::pm-module t t t) (common-lisp-user::module common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value) common-lisp-user::module common-lisp-user::buffer common-lisp-user::slot common-lisp-user::value common-lisp-user::state common-lisp-user::modality common-lisp-user::busy common-lisp-user::mode-s eq common-lisp-user::free common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10514 #:g10513 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g10515 common-lisp-user::printing-module-model-warnings *error-output* common-lisp-user::*one-stream-hack* t *standard-output* eql #5# common-lisp-user::mp-models length > common-lisp-user::current-model "Invalid query made of the ~S buffer with slot ~S and value ~S" format finish-output #6# #7# common-lisp-user::execution common-lisp-user::exec-s #:g10517 #:g10516 #:g10518 "Invalid query made of the ~S buffer with slot ~S and value ~S" common-lisp-user::preparation common-lisp-user::prep-s #:g10520 #:g10519 #:g10521 "Invalid query made of the ~S buffer with slot ~S and value ~S" common-lisp-user::processor common-lisp-user::proc-s #:g10523 #:g10522 #:g10524 "Invalid query made of the ~S buffer with slot ~S and value ~S" common-lisp-user::last-command common-lisp-user::last-cmd #Y(common-lisp-user::generic-state-query nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 10 1 41 11 4 42 12 224 10 0 42 13 13 13 3 19 1 14 12 1 13 17 15 38 205 42 16 13 13 3 19 1 14 12 1 16 17 15 38 190 15 17 19 1 18 47 1 19 45 20 10 1 39 10 13 0 19 1 21 12 19 1 22 73 39 162 13 0 19 1 21 12 19 1 22 45 23 13 1 19 1 24 76 40 139 10 0 76 40 27 13 0 11 25 17 15 40 19 11 26 40 15 13 0 11 27 17 15 39 7 14 25 11 28 17 29 39 39 14 25 15 30 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 13 5 13 4 13 3 19 8 36 14 25 19 1 37 38 68 14 25 15 38 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 13 5 13 4 13 3 19 8 36 14 25 19 1 37 13 0 15 39 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 35 13 5 13 4 13 3 19 8 36 75 73 43 1 43 2 38 696 42 40 224 10 0 42 13 13 13 3 19 1 41 12 1 13 17 15 38 205 42 16 13 13 3 19 1 41 12 1 16 17 15 38 190 15 17 19 1 18 47 1 42 45 43 10 1 39 10 13 0 19 1 21 12 19 1 22 73 39 162 13 0 19 1 21 12 19 1 22 45 44 13 1 19 1 24 76 40 139 10 0 76 40 27 13 0 11 25 17 15 40 19 11 26 40 15 13 0 11 27 17 15 39 7 14 25 11 28 17 29 39 39 14 25 15 30 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 45 13 5 13 4 13 3 19 8 36 14 25 19 1 37 38 68 14 25 15 38 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 45 13 5 13 4 13 3 19 8 36 14 25 19 1 37 13 0 15 39 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 45 13 5 13 4 13 3 19 8 36 75 73 43 1 43 2 38 470 42 46 224 10 0 42 13 13 13 3 19 1 47 12 1 13 17 15 38 205 42 16 13 13 3 19 1 47 12 1 16 17 15 38 190 15 17 19 1 18 47 1 48 45 49 10 1 39 10 13 0 19 1 21 12 19 1 22 73 39 162 13 0 19 1 21 12 19 1 22 45 50 13 1 19 1 24 76 40 139 10 0 76 40 27 13 0 11 25 17 15 40 19 11 26 40 15 13 0 11 27 17 15 39 7 14 25 11 28 17 29 39 39 14 25 15 30 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 51 13 5 13 4 13 3 19 8 36 14 25 19 1 37 38 68 14 25 15 38 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 51 13 5 13 4 13 3 19 8 36 14 25 19 1 37 13 0 15 39 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 51 13 5 13 4 13 3 19 8 36 75 73 43 1 43 2 38 244 42 52 224 10 0 42 13 13 13 3 19 1 53 12 1 13 17 15 38 205 42 16 13 13 3 19 1 53 12 1 16 17 15 38 190 15 17 19 1 18 47 1 54 45 55 10 1 39 10 13 0 19 1 21 12 19 1 22 73 39 162 13 0 19 1 21 12 19 1 22 45 56 13 1 19 1 24 76 40 139 10 0 76 40 27 13 0 11 25 17 15 40 19 11 26 40 15 13 0 11 27 17 15 39 7 14 25 11 28 17 29 39 39 14 25 15 30 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 57 13 5 13 4 13 3 19 8 36 14 25 19 1 37 38 68 14 25 15 38 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 57 13 5 13 4 13 3 19 8 36 14 25 19 1 37 13 0 15 39 19 0 31 16 32 12 9 1 19 2 33 12 19 0 34 12 15 57 13 5 13 4 13 3 19 8 36 75 73 43 1 43 2 38 18 42 58 13 13 3 19 1 59 12 10 0 17 29 38 3 75 73 29) #14# #1# 19040) clos::install-method)) #1# 19040) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::preparation-complete ext::location (defgeneric common-lisp-user::preparation-complete) (#1# . 20356) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "Method to be called when movement preparation is complete." ensure-generic-function)) #1# 20356) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 31 12 14 32 19 6 33 29) #15=#A(t (34) (common-lisp-user::preparation-complete ext::location (defmethod common-lisp-user::preparation-complete (common-lisp-user::module common-lisp-user::pm-module)) (#1# . 20911) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module) common-lisp-user::module :prep common-lisp-user::free common-lisp-user::change-state common-lisp-user::last-prep common-lisp-user::exec-immediate-p #:g10531 common-lisp-user::exec-queue common-lisp-user::mklist append #:g10532 (setf common-lisp-user::exec-queue) common-lisp-user::init-stamp minusp plusp common-lisp-user::mp-time-ms common-lisp-user::init-time common-lisp-user::seconds->ms + >= :proc common-lisp-user::request-spec common-lisp-user::complete-request common-lisp-user::maybe-execute-movement #Y(common-lisp-user::preparation-complete nil nil (24 45 7 26 13 0 14 8 15 9 19 3 10 13 0 19 1 11 39 120 13 0 19 1 11 12 19 1 12 39 40 10 0 45 13 13 1 19 1 14 12 13 1 19 1 11 12 19 1 15 12 19 2 16 45 17 13 0 13 1 33 18 18 2 43 1 43 1 38 70 13 0 19 1 19 16 20 40 37 13 0 19 1 19 16 21 39 28 19 0 22 12 13 0 19 1 19 12 13 0 19 1 23 12 19 1 24 12 19 2 25 12 19 2 26 39 10 13 0 14 27 15 9 19 3 10 13 0 19 1 11 12 19 1 28 12 19 1 29 13 0 19 1 30 29) #15# #1# 20911) t clos::install-method)) #1# 20911) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::maybe-execute-movement ext::location (defgeneric common-lisp-user::maybe-execute-movement) (#1# . 21531) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "If there are any movements in <module>'s execution queue, execute one." ensure-generic-function)) #1# 21531) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #16=#A(t (19) (common-lisp-user::maybe-execute-movement ext::location (defmethod common-lisp-user::maybe-execute-movement (common-lisp-user::module common-lisp-user::pm-module)) (#1# . 21939) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module) common-lisp-user::module common-lisp-user::exec-queue common-lisp-user::exec-s common-lisp-user::free eq #:g10539 #:g10540 (setf common-lisp-user::exec-queue) common-lisp-user::perform-movement #Y(common-lisp-user::maybe-execute-movement nil nil (24 45 7 26 13 0 19 1 8 39 11 13 0 19 1 9 12 1 10 17 11 73 39 36 13 0 10 0 45 12 13 0 19 1 8 45 13 10 0 4 12 10 0 5 51 0 13 0 13 1 33 14 18 2 43 2 19 2 15 29) #16# #1# 21939) t clos::install-method)) #1# 21939) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::prepare ext::location (defgeneric common-lisp-user::prepare) (#1# . 22114) ext::annotate :lambda-list (common-lisp-user::module &rest common-lisp-user::params) :delete-methods t :documentation "Prepare a movement to be executed, but don't execute it. The first of <params> should be the name of a movement style class." ensure-generic-function)) #1# 22114) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 20 12 14 21 19 6 22 29) #17=#A(t (23) (common-lisp-user::prepare ext::location (defmethod common-lisp-user::prepare (common-lisp-user::module common-lisp-user::pm-module) &rest common-lisp-user::params) (#1# . 22498) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module &rest common-lisp-user::params) common-lisp-user::module common-lisp-user::params make-instance apply common-lisp-user::inst #:g10553 #:g10554 (setf common-lisp-user::exec-immediate-p) #:g10555 common-lisp-user::prepare-spec #:g10556 (setf common-lisp-user::request-spec) common-lisp-user::prepare-movement #Y(common-lisp-user::prepare nil nil (24 45 7 27 45 8 33 9 12 13 0 19 2 10 45 11 10 0 45 12 75 45 13 13 0 13 1 33 14 18 2 43 1 43 1 10 0 45 15 13 3 19 1 16 45 17 13 0 13 1 33 18 18 2 43 1 43 1 13 2 13 0 19 2 19 43 1 29) #17# #1# 22498) t clos::install-method)) #1# 22498) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::execute ext::location (defgeneric common-lisp-user::execute) (#1# . 22728) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::request) :delete-methods t :documentation "Tells <module> to execute the last movement prepared." ensure-generic-function)) #1# 22728) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 50 12 14 21 19 6 51 29) #18=#A(t (52) (common-lisp-user::execute ext::location (defmethod common-lisp-user::execute (common-lisp-user::module common-lisp-user::pm-module) common-lisp-user::request) (#1# . 23204) ext::annotate (common-lisp-user::pm-module t) (common-lisp-user::module common-lisp-user::request) common-lisp-user::module common-lisp-user::request common-lisp-user::last-prep common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10588 #:g10587 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g10589 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #5# common-lisp-user::mp-models length > common-lisp-user::current-model "Motor Module has no movement to EXECUTE." format finish-output #6# #7# common-lisp-user::prep-s common-lisp-user::busy #:g10591 #:g10590 #:g10592 "Motor Module cannot EXECUTE features being prepared." #:g10593 #:g10594 (setf common-lisp-user::request-spec) #:g10595 common-lisp-user::exec-queue common-lisp-user::mklist append #:g10596 (setf common-lisp-user::exec-queue) common-lisp-user::maybe-execute-movement #Y(common-lisp-user::execute nil nil (24 45 7 24 45 8 26 13 1 19 1 9 76 39 174 15 10 19 1 11 47 1 12 45 13 10 1 39 10 13 0 19 1 14 12 19 1 15 73 39 144 13 0 19 1 14 12 19 1 15 45 16 13 1 19 1 17 76 40 121 10 0 76 40 27 13 0 11 18 17 19 40 19 11 20 40 15 13 0 11 21 17 19 39 7 14 18 11 22 17 23 39 33 14 18 15 24 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 19 5 30 14 18 19 1 31 38 56 14 18 15 32 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 19 5 30 14 18 19 1 31 13 0 15 33 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 19 5 30 75 73 43 1 43 2 38 251 13 1 19 1 34 12 1 35 17 19 39 174 15 10 19 1 11 47 1 36 45 37 10 1 39 10 13 0 19 1 14 12 19 1 15 73 39 144 13 0 19 1 14 12 19 1 15 45 38 13 1 19 1 17 76 40 121 10 0 76 40 27 13 0 11 18 17 19 40 19 11 20 40 15 13 0 11 21 17 19 39 7 14 18 11 22 17 23 39 33 14 18 15 24 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 39 19 5 30 14 18 19 1 31 38 56 14 18 15 32 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 39 19 5 30 14 18 19 1 31 13 0 15 33 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 39 19 5 30 75 73 43 1 43 2 38 66 13 1 19 1 9 45 40 10 1 45 41 13 0 13 1 33 42 18 2 43 1 43 1 10 1 45 43 13 2 19 1 44 12 13 2 19 1 9 12 19 1 45 12 19 2 46 45 47 13 0 13 1 33 48 18 2 43 1 43 1 13 1 19 1 49 29) #18# #1# 23204) clos::install-method)) #1# 23204) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::pm-prepare-mvmt-mth ext::location (defgeneric common-lisp-user::pm-prepare-mvmt-mth) (#1# . 23694) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::params) :delete-methods t :documentation "Create the movement specified in <params>, which should begin with the name of a movement style, and consider it prepared. To be called only at model initialization." ensure-generic-function)) #1# 23694) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 18 12 14 19 19 6 20 29) #19=#A(t (21) (common-lisp-user::pm-prepare-mvmt-mth ext::location (defmethod common-lisp-user::pm-prepare-mvmt-mth (common-lisp-user::module common-lisp-user::pm-module) common-lisp-user::params) (#1# . 24271) ext::annotate (common-lisp-user::pm-module t) (common-lisp-user::module common-lisp-user::params) common-lisp-user::module common-lisp-user::params make-instance apply common-lisp-user::inst #:g10609 #:g10610 (setf common-lisp-user::exec-immediate-p) #:g10611 #:g10612 (setf common-lisp-user::last-prep) #Y(common-lisp-user::pm-prepare-mvmt-mth nil nil (24 45 7 24 45 8 26 33 9 12 13 0 19 2 10 45 11 10 0 45 12 75 45 13 13 0 13 1 33 14 18 2 43 1 43 1 10 2 45 15 10 1 45 16 13 0 13 1 33 17 18 2 43 1 43 1 43 1 29) #19# #1# 24271) t clos::install-method)) #1# 24271) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 77 19 4 6 29) #A(t (7) (common-lisp-user::movement-style ext::location (defclass common-lisp-user::movement-style) (#1# . 24454) ext::annotate ((:initargs (:fprep-time) :initform nil :writers ((setf common-lisp-user::fprep-time)) :readers (common-lisp-user::fprep-time) :name common-lisp-user::fprep-time) (:initargs (:exec-time) :initform nil :writers ((setf common-lisp-user::exec-time)) :readers (common-lisp-user::exec-time) :name common-lisp-user::exec-time) (:initargs (:finish-time) :initform nil :writers ((setf common-lisp-user::finish-time)) :readers (common-lisp-user::finish-time) :name common-lisp-user::finish-time) (:initargs (:exec-immediate-p) :initform t :writers ((setf common-lisp-user::exec-immediate-p)) :readers (common-lisp-user::exec-immediate-p) :name common-lisp-user::exec-immediate-p) (:initargs (:num-features) :initform nil :writers ((setf common-lisp-user::num-features)) :readers (common-lisp-user::num-features) :name common-lisp-user::num-features) (:initform nil :initargs (:style-name) :writers ((setf common-lisp-user::style-name)) :readers (common-lisp-user::style-name) :name common-lisp-user::style-name) (:initform nil :initargs (:feature-slots) :writers ((setf common-lisp-user::feature-slots)) :readers (common-lisp-user::feature-slots) :name common-lisp-user::feature-slots) (:initform nil :initargs (:request-spec) :writers ((setf common-lisp-user::request-spec)) :readers (common-lisp-user::request-spec) :name common-lisp-user::request-spec)) clos::load-defclass)) #1# 24454) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::prepare-movement ext::location (defgeneric common-lisp-user::prepare-movement) (#1# . 25360) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Tell <module> to prepare <movement>." ensure-generic-function)) #1# 25360) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 30 12 14 25 19 6 31 29) #20=#A(t (32) (common-lisp-user::prepare-movement ext::location (defmethod common-lisp-user::prepare-movement (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 25735) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt :prep common-lisp-user::busy :proc common-lisp-user::change-state #:g10625 common-lisp-user::compute-prep-time common-lisp-user::randomize-time #:g10626 (setf common-lisp-user::fprep-time) #:g10627 #:g10628 (setf common-lisp-user::last-prep) common-lisp-user::fprep-time common-lisp-user::seconds->ms common-lisp-user::preparation-complete :time-in-ms t :destination common-lisp-user::my-name :module common-lisp-user::schedule-event-relative #Y(common-lisp-user::prepare-movement nil nil (24 45 7 24 45 8 26 13 1 14 9 15 10 14 11 15 10 19 5 12 10 0 45 13 13 2 13 1 19 2 14 12 19 1 15 45 16 13 0 13 1 33 17 18 2 43 1 43 1 10 1 45 18 10 1 45 19 13 0 13 1 33 20 18 2 43 1 43 1 13 0 19 1 21 12 19 1 22 12 15 23 14 24 14 25 14 26 13 1 19 1 27 12 14 28 13 1 19 1 27 12 19 8 29 29) #20# #1# 25735) clos::install-method)) #1# 25735) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::compute-prep-time ext::location (defgeneric common-lisp-user::compute-prep-time) (#1# . 26125) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Return the feature preparation time for <movement>." ensure-generic-function)) #1# 26125) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 16 12 14 17 19 6 18 29) #21=#A(t (19) (common-lisp-user::compute-prep-time ext::location (defmethod common-lisp-user::compute-prep-time (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 26660) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt common-lisp-user::last-prep common-lisp-user::style-name eq common-lisp-user::feat-prep-time common-lisp-user::num-to-prepare * common-lisp-user::feat-differences #Y(common-lisp-user::compute-prep-time nil nil (24 45 7 24 45 8 26 13 1 19 1 9 76 40 19 13 0 19 1 10 12 13 1 19 1 9 12 19 1 10 17 11 76 39 18 13 1 19 1 12 12 13 0 19 1 13 12 19 2 14 38 22 13 1 19 1 12 12 13 0 13 1 19 1 9 12 19 2 15 12 19 2 14 29) #21# #1# 26660) t clos::install-method)) #1# 26660) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::perform-movement ext::location (defgeneric common-lisp-user::perform-movement) (#1# . 26979) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Have <module> perform <movement>." ensure-generic-function)) #1# 26979) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 36 12 14 13 19 6 37 29) #22=#A(t (38) (common-lisp-user::perform-movement ext::location (defmethod common-lisp-user::perform-movement (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 27504) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt common-lisp-user::init-time common-lisp-user::seconds->ms common-lisp-user::initiation-complete :time-in-ms t :destination common-lisp-user::my-name :module common-lisp-user::schedule-event-relative :proc common-lisp-user::busy :exec common-lisp-user::change-state #:g10647 common-lisp-user::mp-time-ms #:g10648 (setf common-lisp-user::init-stamp) #:g10649 common-lisp-user::compute-exec-time #:g10650 (setf common-lisp-user::exec-time) #:g10651 common-lisp-user::compute-finish-time #:g10652 (setf common-lisp-user::finish-time) common-lisp-user::queue-output-events common-lisp-user::queue-finish-event #Y(common-lisp-user::perform-movement nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 19 1 10 12 15 11 14 12 14 13 14 14 13 1 19 1 15 12 14 16 13 1 19 1 15 12 19 8 17 13 1 14 18 15 19 14 20 15 19 19 5 21 10 1 45 22 19 0 23 45 24 13 0 13 1 33 25 18 2 43 1 43 1 10 0 45 26 13 2 13 1 19 2 27 45 28 13 0 13 1 33 29 18 2 43 1 43 1 10 0 45 30 13 2 13 1 19 2 31 45 32 13 0 13 1 33 33 18 2 43 1 43 1 13 1 13 0 19 2 34 13 1 13 0 19 2 35 29) #22# #1# 27504) clos::install-method)) #1# 27504) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #23=#A(t (14) (common-lisp-user::initiation-complete ext::location (defmethod common-lisp-user::initiation-complete (common-lisp-user::module common-lisp-user::pm-module)) (#1# . 28046) ext::annotate (common-lisp-user::pm-module) (common-lisp-user::module) common-lisp-user::module :proc common-lisp-user::free common-lisp-user::change-state #Y(common-lisp-user::initiation-complete nil nil (24 45 7 26 13 0 14 8 15 9 19 3 10 29) #23# #1# 28046) t clos::install-method)) #1# 28046) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::finish-movement ext::location (defgeneric common-lisp-user::finish-movement) (#1# . 28137) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::mvmt) :delete-methods t :documentation "Method called when a movement finishes completely." ensure-generic-function)) #1# 28137) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #24=#A(t (18) (common-lisp-user::finish-movement ext::location (defmethod common-lisp-user::finish-movement (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 28459) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt :exec common-lisp-user::free common-lisp-user::change-state common-lisp-user::request-spec common-lisp-user::complete-request common-lisp-user::maybe-execute-movement #Y(common-lisp-user::finish-movement nil nil (24 45 7 24 45 8 26 13 1 14 9 15 10 19 3 11 13 0 19 1 12 12 19 1 13 13 1 19 1 14 29) #24# #1# 28459) t clos::install-method)) #1# 28459) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::compute-finish-time ext::location (defgeneric common-lisp-user::compute-finish-time) (#1# . 28642) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Return the finish time of <movement>." ensure-generic-function)) #1# 28642) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 14 14 15 15 19 8 16 29) #25=#A(t (17) (common-lisp-user::compute-finish-time ext::location (defmethod common-lisp-user::compute-finish-time (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 28963) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt common-lisp-user::burst-time common-lisp-user::exec-time + #Y(common-lisp-user::compute-finish-time nil nil (24 45 7 24 45 8 26 13 1 19 1 9 12 13 0 19 1 10 12 19 2 11 29) #25# #1# 28963) t :documentation "Return the finish time of the movement." clos::install-method)) #1# 28963) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::queue-finish-event ext::location (defgeneric common-lisp-user::queue-finish-event) (#1# . 29126) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Queue the FINISH-MOVEMENT associated with <movement>." ensure-generic-function)) #1# 29126) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 22 12 14 13 19 6 23 29) #26=#A(t (24) (common-lisp-user::queue-finish-event ext::location (defmethod common-lisp-user::queue-finish-event (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 29383) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt common-lisp-user::finish-time common-lisp-user::seconds->ms common-lisp-user::finish-movement :time-in-ms t :destination common-lisp-user::my-name :params :module :details "~a" format common-lisp-user::schedule-event-relative #Y(common-lisp-user::queue-finish-event nil nil (24 45 7 24 45 8 26 13 0 19 1 9 12 19 1 10 12 15 11 14 12 14 13 14 14 13 1 19 1 15 12 14 16 10 0 6 1 12 14 17 13 1 19 1 15 12 14 18 77 15 19 15 11 19 3 20 12 19 12 21 29) #26# #1# 29383) clos::install-method)) #1# 29383) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::compute-exec-time ext::location (defgeneric common-lisp-user::compute-exec-time) (#1# . 29752) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Return the execution time of <movement>." ensure-generic-function)) #1# 29752) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #27=#A(t (14) (common-lisp-user::compute-exec-time ext::location (defmethod common-lisp-user::compute-exec-time (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 29900) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt "No method defined for COMPUTE-EXEC-TIME." error #Y(common-lisp-user::compute-exec-time nil nil (24 45 7 24 45 8 26 15 9 19 1 10 29) #27# #1# 29900) t clos::install-method)) #1# 29900) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::queue-output-events ext::location (defgeneric common-lisp-user::queue-output-events) (#1# . 30027) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::movement) :delete-methods t :documentation "Queue the events--not including the FINISH-MOVEMENT--that <movement> will generate." ensure-generic-function)) #1# 30027) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #28=#A(t (14) (common-lisp-user::queue-output-events ext::location (defmethod common-lisp-user::queue-output-events (common-lisp-user::module common-lisp-user::pm-module) (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 30185) ext::annotate (common-lisp-user::pm-module common-lisp-user::movement-style) (common-lisp-user::module common-lisp-user::mvmt) common-lisp-user::module common-lisp-user::mvmt "No method defined for QUEUE-OUTPUT-EVENTS." error #Y(common-lisp-user::queue-output-events nil nil (24 45 7 24 45 8 26 15 9 19 1 10 29) #28# #1# 30185) t clos::install-method)) #1# 30185) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::feat-differences ext::location (defgeneric common-lisp-user::feat-differences) (#1# . 30316) ext::annotate :lambda-list (common-lisp-user::movement1 common-lisp-user::movement2) :delete-methods t :documentation "Return the number of different features that need to be prepared." ensure-generic-function)) #1# 30316) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #29=#A(t (14) (common-lisp-user::feat-differences ext::location (defmethod common-lisp-user::feat-differences (common-lisp-user::move1 common-lisp-user::movement-style) (common-lisp-user::move2 common-lisp-user::movement-style)) (#1# . 30457) ext::annotate (common-lisp-user::movement-style common-lisp-user::movement-style) (common-lisp-user::move1 common-lisp-user::move2) common-lisp-user::move1 common-lisp-user::move2 "No method defined for FEAT-DIFFERENCES." error #Y(common-lisp-user::feat-differences nil nil (24 45 7 24 45 8 26 15 9 19 1 10 29) #29# #1# 30457) t clos::install-method)) #1# 30457) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::num-possible-feats ext::location (defgeneric common-lisp-user::num-possible-feats) (#1# . 30621) ext::annotate :lambda-list (common-lisp-user::movement) :delete-methods t :documentation "Return the maximum number of features that could possibly need to be prepared." ensure-generic-function)) #1# 30621) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #30=#A(t (14) (common-lisp-user::num-possible-feats ext::location (defmethod common-lisp-user::num-possible-feats (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 30768) ext::annotate (common-lisp-user::movement-style) (common-lisp-user::mvmt) common-lisp-user::mvmt common-lisp-user::feature-slots length 1+ #Y(common-lisp-user::num-possible-feats nil nil (24 45 7 26 13 0 19 1 8 16 9 16 10 29) #30# #1# 30768) t clos::install-method)) #1# 30768) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::num-to-prepare ext::location (defgeneric common-lisp-user::num-to-prepare) (#1# . 30861) ext::annotate :lambda-list (common-lisp-user::movement) :delete-methods t :documentation "Return the number of features actually needed to prepare <movement>." ensure-generic-function)) #1# 30861) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 17 12 14 18 19 6 19 29) #31=#A(t (20) (common-lisp-user::num-to-prepare ext::location (defmethod common-lisp-user::num-to-prepare (common-lisp-user::mvmt common-lisp-user::movement-style)) (#1# . 30992) ext::annotate (common-lisp-user::movement-style) (common-lisp-user::mvmt) common-lisp-user::mvmt :dummy common-lisp-user::name slot-value #Y(nil nil nil (24 45 9 26 13 1 10 0 17 10 29) #31# #1# 30992) common-lisp-user::feature-slots mapcar remove length 1+ #Y(common-lisp-user::num-to-prepare nil nil (24 45 7 26 14 8 77 34 11 12 13 0 19 1 12 12 19 2 13 12 19 2 14 12 19 2 14 16 15 16 16 29) #31# #1# 30992) t clos::install-method)) #1# 30992) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 39 12 14 40 9 3 19 4 41 15 0 15 42 15 43 19 3 44 1 0 73 29) #32=#A(t (45) (common-lisp-user::defstyle ext::location (defmacro common-lisp-user::defstyle) (#1# . 31292) ext::annotate :lambda-list (common-lisp-user::name common-lisp-user::base-class &rest common-lisp-user::params) #:g10654 #:g10653 #:g10655 si::dm-too-few-arguments common-lisp-user::name common-lisp-user::base-class common-lisp-user::params progn defclass common-lisp-user::movement-style common-lisp-user::build-accessors :default-initargs :style-name common-lisp-user::sym->key :feature-slots quote defmethod (common-lisp-user::module common-lisp-user::pm-module) &key (common-lisp-user::request-spec) append if or (common-lisp-user::check-jam common-lisp-user::module) common-lisp-user::check-specs (common-lisp-user::complete-request common-lisp-user::request-spec) common-lisp-user::prepare-movement common-lisp-user::module make-instance :request-spec common-lisp-user::request-spec common-lisp-user::build-initializer #Y(common-lisp-user::defstyle nil nil (24 45 7 24 45 8 26 10 1 5 45 9 10 0 76 39 6 13 2 19 1 10 10 0 4 12 10 0 5 51 0 22 45 11 10 1 76 39 6 13 3 19 1 10 10 1 4 12 10 1 5 51 1 22 45 12 10 2 45 13 15 14 15 15 13 2 10 1 76 39 5 1 16 38 3 10 1 6 1 12 13 0 19 1 17 12 14 18 14 19 13 2 19 1 20 12 14 21 15 22 10 0 6 2 6 5 6 5 12 15 23 13 2 15 24 15 25 13 0 15 26 19 2 27 7 3 12 15 28 15 29 15 30 15 31 15 22 10 2 6 2 12 10 0 7 3 6 3 12 15 32 15 33 15 34 15 35 15 22 10 2 6 2 12 14 36 15 37 13 0 19 1 38 7 5 6 3 6 4 6 4 6 3 73 29) #32# #1# 31292) t si::fset function "Macro that defines new motor movement styles.  Pass in the name and the base 
class [if NIL is passed, it will default to MOVEMENT-STYLE] and the base 
parameters.  This will create a class and a method for any PM Module for the 
class." si::set-documentation)) #1# 31292) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 34 12 19 2 35 15 0 15 36 15 37 19 3 38 1 0 73 29) #33=#A(t (39) (common-lisp-user::check-specs ext::location (defun common-lisp-user::check-specs) (#1# . 32153) ext::annotate :lambda-list (common-lisp-user::name &rest common-lisp-user::specs) common-lisp-user::name common-lisp-user::specs member common-lisp-user::printing-module common-lisp-user::get-module-fct #:g10660 #:g10659 common-lisp-user::printing-module-v common-lisp-user::act-r-output-stream #:g10661 common-lisp-user::printing-module-model-warnings *error-output* eq common-lisp-user::*one-stream-hack* t *standard-output* eql #5# common-lisp-user::mp-models length > common-lisp-user::current-model "NIL specification passed to a PM command ~S: ~S" format finish-output #6# #7# #Y(common-lisp-user::check-specs nil nil (24 45 7 27 45 8 77 13 0 19 2 9 73 39 184 15 10 19 1 11 47 1 12 45 13 10 1 39 10 13 0 19 1 14 12 19 1 15 39 154 13 0 19 1 14 12 19 1 15 45 16 13 1 19 1 17 76 40 133 10 0 76 40 27 13 0 11 18 17 19 40 19 11 20 40 15 13 0 11 21 17 19 39 7 14 18 11 22 17 23 39 37 14 18 15 24 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 4 13 3 19 7 30 14 18 19 1 31 38 64 14 18 15 32 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 4 13 3 19 7 30 14 18 19 1 31 13 0 15 33 19 0 25 16 26 12 9 1 19 2 27 12 19 0 28 12 15 29 13 4 13 3 19 7 30 43 1 43 2 11 21 73 29) #33# #1# 32153) si::fset function "If there is an invalid specification, return something, else NIL" si::set-documentation)) #1# 32153) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 15 0 15 18 15 19 19 3 20 1 0 73 29) #34=#A(t (21) (common-lisp-user::build-accessors ext::location (defun common-lisp-user::build-accessors) (#1# . 32377) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params common-lisp-user::accum si::%dolist-var common-lisp-user::param :accessor :initarg common-lisp-user::sym->key :initform nreverse #Y(common-lisp-user::build-accessors nil nil (24 45 7 26 75 45 8 10 1 45 9 75 45 10 38 36 10 1 4 51 0 13 0 14 11 13 0 14 12 13 0 19 1 13 12 14 14 75 6 7 12 10 2 3 51 2 10 1 5 51 1 10 1 40 -38 75 51 0 10 2 16 15 43 2 43 1 29) #34# #1# 32377) si::fset function "From a list of parameters, a list of slot definitions." si::set-documentation)) #1# 32377) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 13 12 19 2 14 15 0 15 15 15 16 19 3 17 1 0 73 29) #35=#A(t (18) (common-lisp-user::build-initializer ext::location (defun common-lisp-user::build-initializer) (#1# . 32755) ext::annotate :lambda-list (common-lisp-user::params) common-lisp-user::params common-lisp-user::accum si::%dolist-var common-lisp-user::param common-lisp-user::sym->key nreverse #Y(common-lisp-user::build-initializer nil nil (24 45 7 26 75 45 8 10 1 45 9 75 45 10 38 29 10 1 4 51 0 13 0 19 1 11 12 10 2 3 51 2 13 0 10 2 3 51 2 10 1 5 51 1 10 1 40 -31 75 51 0 10 2 16 12 43 2 43 1 29) #35# #1# 32755) si::fset function "From a list of parameters, build a list for the make-instance initializer." si::set-documentation)) #1# 32755) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 15 5 15 6 77 19 4 7 29) #A(t (8) (common-lisp-user::attn-module ext::location (defclass common-lisp-user::attn-module) (#1# . 33113) ext::annotate (common-lisp-user::pm-module) ((:initform nil :initargs (:currently-attended) :writers ((setf common-lisp-user::currently-attended)) :readers (common-lisp-user::currently-attended) :name common-lisp-user::currently-attended) (:initform nil :initargs (:current-marker) :writers ((setf common-lisp-user::current-marker)) :readers (common-lisp-user::current-marker) :name common-lisp-user::current-marker) (:initform nil :writers ((setf common-lisp-user::loc-failure)) :readers (common-lisp-user::loc-failure) :name common-lisp-user::loc-failure) (:initform nil :writers ((setf common-lisp-user::attend-failure)) :readers (common-lisp-user::attend-failure) :name common-lisp-user::attend-failure) (:initform nil :writers ((setf common-lisp-user::unstuff-loc)) :readers (common-lisp-user::unstuff-loc) :name common-lisp-user::unstuff-loc) (:initform nil :writers ((setf common-lisp-user::unstuff-event)) :readers (common-lisp-user::unstuff-event) :name common-lisp-user::unstuff-event) (:initform nil :writers ((setf common-lisp-user::overstuff-loc)) :readers (common-lisp-user::overstuff-loc) :name common-lisp-user::overstuff-loc)) clos::load-defclass)) #1# 33113) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #36=#A(t (16) (common-lisp-user::reset-pm-module ext::location (defmethod common-lisp-user::reset-pm-module (common-lisp-user::module common-lisp-user::attn-module)) (#1# . 34256) ext::annotate (common-lisp-user::attn-module) (common-lisp-user::module) common-lisp-user::module call-next-method common-lisp-user::clear-attended #:g10680 #:g10681 (setf common-lisp-user::current-marker) #Y(common-lisp-user::reset-pm-module nil nil (24 45 7 26 19 0 8 13 0 19 1 9 10 0 45 10 75 45 11 13 0 13 1 33 12 18 2 43 1 43 1 29) #36# #1# 34256) t clos::install-method)) #1# 34256) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 13 12 14 14 19 6 15 29) #37=#A(t (16) (common-lisp-user::clear ext::location (defmethod common-lisp-user::clear (common-lisp-user::module common-lisp-user::attn-module)) (#1# . 34393) ext::annotate (common-lisp-user::attn-module) (common-lisp-user::module) common-lisp-user::module call-next-method #:g10688 #:g10689 (setf common-lisp-user::current-marker) common-lisp-user::clear-attended #Y(common-lisp-user::clear nil nil (24 45 7 26 19 0 8 10 0 45 9 75 45 10 13 0 13 1 33 11 18 2 43 1 43 1 13 0 19 1 12 29) #37# #1# 34393) t clos::install-method)) #1# 34393) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::clear-attended ext::location (defgeneric common-lisp-user::clear-attended) (#1# . 34521) ext::annotate :lambda-list (common-lisp-user::module) :delete-methods t :documentation "Set <module> so that it is attending nothing." ensure-generic-function)) #1# 34521) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 11 12 14 12 19 6 13 29) #38=#A(t (14) (common-lisp-user::clear-attended ext::location (defmethod common-lisp-user::clear-attended (common-lisp-user::module common-lisp-user::attn-module)) (#1# . 34627) ext::annotate (common-lisp-user::attn-module) (common-lisp-user::module) common-lisp-user::module #:g10696 #:g10697 (setf common-lisp-user::currently-attended) #Y(common-lisp-user::clear-attended nil nil (24 45 7 26 10 0 45 8 75 45 9 13 0 13 1 33 10 18 2 43 1 43 1 29) #38# #1# 34627) t clos::install-method)) #1# 34627) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 14 7 14 8 14 5 15 6 15 9 15 10 19 7 11 29) #A(t (12) (common-lisp-user::set-attended ext::location (defgeneric common-lisp-user::set-attended) (#1# . 34719) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::object) :delete-methods t :documentation "Note that <module> is now attending <object>." ensure-generic-function)) #1# 34719) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 12 12 14 13 19 6 14 29) #39=#A(t (15) (common-lisp-user::set-attended ext::location (defmethod common-lisp-user::set-attended (common-lisp-user::module common-lisp-user::attn-module) common-lisp-user::obj) (#1# . 34829) ext::annotate (common-lisp-user::attn-module t) (common-lisp-user::module common-lisp-user::obj) common-lisp-user::module common-lisp-user::obj #:g10704 #:g10705 (setf common-lisp-user::currently-attended) #Y(common-lisp-user::set-attended nil nil (24 45 7 24 45 8 26 10 1 45 9 10 1 45 10 13 0 13 1 33 11 18 2 43 1 43 1 29) #39# #1# 34829) t clos::install-method)) #1# 34829) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 19 12 14 20 19 6 21 29) #40=#A(t (22) (common-lisp-user::check-unstuff-buffer ext::location (defmethod common-lisp-user::check-unstuff-buffer (common-lisp-user::module common-lisp-user::attn-module) common-lisp-user::buffer common-lisp-user::chunk) (#1# . 34923) ext::annotate (common-lisp-user::attn-module t t) (common-lisp-user::module common-lisp-user::buffer common-lisp-user::chunk) common-lisp-user::module common-lisp-user::buffer common-lisp-user::chunk common-lisp-user::buffer-read common-lisp-user::current common-lisp-user::chunk-copied-from-fct common-lisp-user::was-copy common-lisp-user::copy eq common-lisp-user::chunk-p-fct (common-lisp-user::buffer common-lisp-user::unrequested) common-lisp-user::query-buffer #Y(common-lisp-user::check-unstuff-buffer nil nil (24 45 7 24 45 8 24 45 9 26 13 1 19 1 10 45 11 10 0 73 39 43 13 0 19 1 12 47 1 13 45 14 13 1 10 3 17 15 73 40 22 13 3 19 1 16 76 73 39 13 10 1 73 39 8 13 4 15 17 19 2 18 43 2 43 1 29) #40# #1# 34923) t clos::install-method)) #1# 34923) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 77 15 5 15 6 1 15 12 14 16 19 6 17 29) #41=#A(t (18) (common-lisp-user::unstuff-buffer ext::location (defmethod common-lisp-user::unstuff-buffer (common-lisp-user::module common-lisp-user::attn-module) common-lisp-user::buffer common-lisp-user::chunk) (#1# . 35683) ext::annotate (common-lisp-user::attn-module t t) (common-lisp-user::module common-lisp-user::buffer common-lisp-user::chunk) common-lisp-user::module common-lisp-user::buffer common-lisp-user::chunk common-lisp-user::erase-buffer :params :module common-lisp-user::my-name common-lisp-user::schedule-event-now #Y(common-lisp-user::unstuff-buffer nil nil (24 45 7 24 45 8 24 45 9 26 15 10 14 11 10 1 6 1 12 14 12 13 2 19 1 13 12 19 5 14 29) #41# #1# 35683) t clos::install-method)) #1# 35683) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #42=#A(t (21) (common-lisp-user::test-for-clear-request ext::location (defun common-lisp-user::test-for-clear-request) (#1# . 35858) ext::annotate :lambda-list (common-lisp-user::spec) common-lisp-user::spec common-lisp-user::act-r-chunk-spec-p common-lisp-user::chunk-spec-slot-spec common-lisp-user::main-spec length = common-lisp-user::spec-slot-op eq common-lisp-user::spec-slot-name common-lisp-user::clear common-lisp-user::spec-slot-value common-lisp-user::cmd #Y(common-lisp-user::test-for-clear-request nil nil (24 45 7 26 13 0 19 1 8 73 39 88 13 0 19 1 9 45 10 10 0 16 11 12 9 1 19 2 12 73 39 66 15 12 10 0 4 12 19 1 13 17 14 73 39 52 10 0 4 12 19 1 15 12 1 16 17 14 39 8 10 0 4 12 19 1 17 73 40 28 10 0 4 12 19 1 15 12 1 18 17 14 73 39 13 10 0 4 12 19 1 17 12 1 16 17 14 43 1 29) #42# #1# 35858) si::fset)) #1# 35858) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("GENERAL-PM" provide)) #1# 36468))
