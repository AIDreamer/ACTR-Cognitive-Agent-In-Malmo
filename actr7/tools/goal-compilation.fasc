(#Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 102 12 19 2 103 15 0 15 104 15 105 19 3 106 1 0 73 29) #1=#A(t (107) (common-lisp-user::map-goal-buffer ext::location (defun common-lisp-user::map-goal-buffer) (#2=#P"C:/Users/Son Pham/Desktop/actr7/tools/goal-compilation.lisp" . 0) ext::annotate :lambda-list (common-lisp-user::module common-lisp-user::p1 common-lisp-user::p1-s common-lisp-user::p2 common-lisp-user::p2-s common-lisp-user::buffer) common-lisp-user::module common-lisp-user::p1 common-lisp-user::p1-s common-lisp-user::p2 common-lisp-user::p2-s common-lisp-user::buffer common-lisp-user::production-buffer-indices assoc common-lisp-user::p1-style common-lisp-user::p2-style common-lisp-user::compilation-module-ppm common-lisp-user::ppm common-lisp-user::compilation-module-previous common-lisp-user::previous-production-bindings common-lisp-user::production-name common-lisp-user::production-compilation-instan append common-lisp-user::bindings (4 12 13 44) find (8 9 12 13 40 44) common-lisp-user::mappings string "+" symbol-name ">" concatenate intern second :key car common-lisp-user::p1-slots "=" ">" common-lisp-user::p2-slots common-lisp-user::x common-lisp-user::spec-slot-op = eq common-lisp-user::spec-slot-name #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 9 13 0 19 1 46 6 1 73 29) #1# #2# 0) mapcan #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 9 13 0 19 1 46 6 1 73 29) #1# #2# 0) intersection common-lisp-user::interesting-slots remove-duplicates si::%dolist-var common-lisp-user::slot #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 11 13 0 19 1 46 12 10 1 17 45 29) #1# #2# 0) remove-if-not common-lisp-user::p1slots #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 11 13 0 19 1 46 12 10 3 17 45 29) #1# #2# 0) common-lisp-user::p2slots common-lisp-user::spec-slot-value common-lisp-user::constant-value-p (9) (8 9 12 13) "=" ">" common-lisp-user::p1-slotsa "=" ">" common-lisp-user::p1-slotsb "=" ">" #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 76 73 40 16 13 0 19 1 46 12 13 2 14 36 15 46 19 4 26 29) #1# #2# 0) remove-if #Y(nil nil nil (24 45 42 26 13 0 19 1 46 6 1 73 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 9 13 0 19 1 46 6 1 73 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 46 12 10 1 17 45 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 46 12 10 3 17 45 29) #1# #2# 0) (40) (8 12 40 44) "=" ">" "*" ">" "=" ">" #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 76 73 40 16 13 0 19 1 46 12 13 2 14 36 15 46 19 4 26 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 46 6 1 73 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 9 13 0 19 1 46 6 1 73 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 46 12 10 1 17 45 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 46 12 10 3 17 45 29) #1# #2# 0) (8) (8 9 12 13 40 44) "=" ">" cadr "=" ">" #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 9 13 0 19 1 46 6 1 73 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 9 13 0 19 1 46 6 1 73 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 11 13 0 19 1 46 12 10 1 17 45 29) #1# #2# 0) #Y(nil nil nil (24 45 42 26 13 0 19 1 43 12 1 44 17 45 73 39 11 13 0 19 1 46 12 10 3 17 45 29) #1# #2# 0) #Y(common-lisp-user::map-goal-buffer nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 24 45 12 26 13 0 13 4 19 1 13 12 19 2 14 5 45 15 13 1 13 3 19 1 13 12 19 2 14 5 45 16 13 7 19 1 17 45 18 10 0 39 24 13 8 19 1 19 12 19 1 20 12 13 5 19 1 21 12 19 1 22 12 19 2 23 45 24 13 3 15 25 19 2 26 39 8 13 2 15 27 19 2 26 39 304 75 45 28 15 29 15 30 10 5 16 31 12 15 32 19 4 33 12 19 1 34 12 10 8 16 35 12 14 36 15 37 19 4 26 16 35 45 38 15 29 15 39 10 6 16 31 12 15 40 19 4 33 12 19 1 34 12 10 7 4 12 14 36 15 37 19 4 26 16 35 45 41 34 47 12 13 1 19 2 48 12 34 49 12 13 0 19 2 48 12 19 2 50 45 51 13 0 19 1 52 45 53 75 45 54 38 184 10 1 4 51 0 34 55 12 13 4 19 2 56 45 53 75 45 57 38 153 10 1 4 51 0 34 58 12 13 5 19 2 56 45 53 75 45 59 38 122 10 1 4 51 0 13 0 19 1 60 12 13 19 19 2 61 39 81 10 11 39 57 13 2 19 1 60 12 13 19 19 2 61 39 21 13 2 19 1 60 12 13 0 19 1 60 3 12 10 9 3 51 9 38 22 13 2 19 1 60 12 13 10 14 36 15 37 19 4 26 12 10 9 3 51 9 38 19 13 2 19 1 60 12 13 0 19 1 60 3 12 10 9 3 51 9 38 19 13 0 19 1 60 12 13 2 19 1 60 3 12 10 9 3 51 9 10 1 5 51 1 10 1 40 -124 43 2 10 1 5 51 1 10 1 40 -155 43 2 10 1 5 51 1 10 1 40 -186 43 2 10 3 73 43 4 38 1065 13 3 15 62 19 2 26 39 8 13 2 15 63 19 2 26 39 354 75 45 28 15 29 15 64 10 5 16 31 12 15 65 19 4 33 12 19 1 34 12 10 8 4 12 14 36 15 37 19 4 26 16 35 45 66 15 29 15 67 10 6 16 31 12 15 68 19 4 33 12 19 1 34 12 10 9 16 35 12 14 36 15 37 19 4 26 16 35 45 69 15 29 15 70 10 7 16 31 12 15 71 19 4 33 12 19 1 34 12 10 8 4 12 14 36 15 37 19 4 26 16 35 45 41 34 72 12 13 2 19 2 73 12 13 1 19 2 23 45 38 34 74 12 13 0 19 2 48 12 34 75 12 13 1 19 2 48 12 19 2 50 45 51 13 0 19 1 52 45 53 75 45 54 38 184 10 1 4 51 0 34 76 12 13 3 19 2 56 45 53 75 45 57 38 153 10 1 4 51 0 34 77 12 13 6 19 2 56 45 53 75 45 59 38 122 10 1 4 51 0 13 0 19 1 60 12 13 21 19 2 61 39 81 10 13 39 57 13 2 19 1 60 12 13 21 19 2 61 39 21 13 2 19 1 60 12 13 0 19 1 60 3 12 10 11 3 51 11 38 22 13 2 19 1 60 12 13 12 14 36 15 37 19 4 26 12 10 11 3 51 11 38 19 13 2 19 1 60 12 13 0 19 1 60 3 12 10 11 3 51 11 38 19 13 0 19 1 60 12 13 2 19 1 60 3 12 10 11 3 51 11 10 1 5 51 1 10 1 40 -124 43 2 10 1 5 51 1 10 1 40 -155 43 2 10 1 5 51 1 10 1 40 -186 43 2 10 5 73 43 6 38 694 13 3 15 78 19 2 26 39 8 13 2 15 79 19 2 26 39 354 75 45 28 15 29 15 80 10 5 16 31 12 15 81 19 4 33 12 19 1 34 12 10 8 4 12 14 36 15 37 19 4 26 16 35 45 66 15 29 15 82 10 6 16 31 12 15 83 19 4 33 12 19 1 34 12 10 9 16 35 12 14 36 15 37 19 4 26 16 35 45 69 15 29 15 84 10 7 16 31 12 15 85 19 4 33 12 19 1 34 12 10 8 4 12 14 36 15 37 19 4 26 16 35 45 41 34 86 12 13 2 19 2 73 12 13 1 19 2 23 45 38 34 87 12 13 0 19 2 48 12 34 88 12 13 1 19 2 48 12 19 2 50 45 51 13 0 19 1 52 45 53 75 45 54 38 184 10 1 4 51 0 34 89 12 13 3 19 2 56 45 53 75 45 57 38 153 10 1 4 51 0 34 90 12 13 6 19 2 56 45 53 75 45 59 38 122 10 1 4 51 0 13 0 19 1 60 12 13 21 19 2 61 39 81 10 13 39 57 13 2 19 1 60 12 13 21 19 2 61 39 21 13 2 19 1 60 12 13 0 19 1 60 3 12 10 11 3 51 11 38 22 13 2 19 1 60 12 13 12 14 36 15 37 19 4 26 12 10 11 3 51 11 38 19 13 2 19 1 60 12 13 0 19 1 60 3 12 10 11 3 51 11 38 19 13 0 19 1 60 12 13 2 19 1 60 3 12 10 11 3 51 11 10 1 5 51 1 10 1 40 -124 43 2 10 1 5 51 1 10 1 40 -155 43 2 10 1 5 51 1 10 1 40 -186 43 2 10 5 73 43 6 38 323 13 3 15 91 19 2 26 39 8 13 2 15 92 19 2 26 39 303 75 45 28 15 29 15 93 10 5 16 31 12 15 94 19 4 33 12 19 1 34 12 10 8 4 12 14 36 15 37 19 4 26 16 95 45 38 15 29 15 96 10 6 16 31 12 15 97 19 4 33 12 19 1 34 12 10 7 4 12 14 36 15 37 19 4 26 16 95 45 41 34 98 12 13 1 19 2 48 12 34 99 12 13 0 19 2 48 12 19 2 50 45 51 13 0 19 1 52 45 53 75 45 54 38 184 10 1 4 51 0 34 100 12 13 4 19 2 56 45 53 75 45 57 38 153 10 1 4 51 0 34 101 12 13 5 19 2 56 45 53 75 45 59 38 122 10 1 4 51 0 13 0 19 1 60 12 13 19 19 2 61 39 81 10 11 39 57 13 2 19 1 60 12 13 19 19 2 61 39 21 13 2 19 1 60 12 13 0 19 1 60 3 12 10 9 3 51 9 38 22 13 2 19 1 60 12 13 10 14 36 15 37 19 4 26 12 10 9 3 51 9 38 19 13 2 19 1 60 12 13 0 19 1 60 3 12 10 9 3 51 9 38 19 13 0 19 1 60 12 13 2 19 1 60 3 12 10 9 3 51 9 10 1 5 51 1 10 1 40 -124 43 2 10 1 5 51 1 10 1 40 -155 43 2 10 1 5 51 1 10 1 40 -186 43 2 10 3 73 43 4 38 3 75 73 43 4 29) #1# #2# 0) si::fset function "map references from p1 to p2 for goal style buffer" si::set-documentation)) #2# 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 52 12 19 2 53 1 0 73 29) #3=#A(t (54) (common-lisp-user::compose-goal-buffer ext::location (defun common-lisp-user::compose-goal-buffer) (#2# . 14796) ext::annotate :lambda-list (common-lisp-user::p1 common-lisp-user::p1-s common-lisp-user::p2 common-lisp-user::p2-s common-lisp-user::buffer) common-lisp-user::p1 common-lisp-user::p1-s common-lisp-user::p2 common-lisp-user::p2-s common-lisp-user::buffer string symbol-name ">" concatenate intern common-lisp-user::bn "=" common-lisp-user::b= "+" common-lisp-user::b+ "*" common-lisp-user::b* :key car find copy-tree common-lisp-user::c1 common-lisp-user::c2 second common-lisp-user::a1= common-lisp-user::a2= common-lisp-user::a1+ common-lisp-user::a2+ common-lisp-user::a1* common-lisp-user::a2* common-lisp-user::production-buffer-indices assoc common-lisp-user::it 4 12 13 44 common-lisp-user::buffer+-union append 0 8 common-lisp-user::buffer-condition-union 9 40 common-lisp-user::buffer=-union #Y(common-lisp-user::compose-goal-buffer nil nil (24 45 7 24 45 8 24 45 9 24 45 10 24 45 11 26 15 12 10 0 16 13 12 15 14 19 3 15 12 19 1 16 45 17 15 12 15 18 10 0 16 13 12 19 3 15 12 19 1 16 45 19 15 12 15 20 10 1 16 13 12 19 3 15 12 19 1 16 45 21 15 12 15 22 10 2 16 13 12 19 3 15 12 19 1 16 45 23 13 2 10 7 4 12 14 24 15 25 19 4 26 16 27 45 28 13 3 10 6 4 12 14 24 15 25 19 4 26 16 27 45 29 13 4 10 9 16 30 12 14 24 15 25 19 4 26 16 27 45 31 13 5 10 8 16 30 12 14 24 15 25 19 4 26 16 27 45 32 13 5 10 11 16 30 12 14 24 15 25 19 4 26 16 27 45 33 13 6 10 10 16 30 12 14 24 15 25 19 4 26 16 27 45 34 13 6 10 13 16 30 12 14 24 15 25 19 4 26 16 27 45 35 13 7 10 12 16 30 12 14 24 15 25 19 4 26 16 27 45 36 13 12 13 16 19 1 37 12 19 2 38 5 45 39 10 0 39 5 10 0 38 3 8 0 43 1 41 40 10 41 41 7 41 42 4 42 43 131 10 7 39 8 10 7 6 1 73 38 3 75 73 12 10 5 40 3 10 1 73 39 17 10 5 39 8 10 5 6 1 73 38 6 10 1 6 1 73 12 10 3 39 3 10 4 39 27 13 3 13 4 19 2 44 45 39 10 0 39 8 10 0 6 1 73 38 3 75 73 43 1 38 48 10 3 39 3 10 0 39 27 13 3 13 0 19 2 44 45 39 10 0 39 8 10 0 6 1 73 38 3 75 73 43 1 38 14 10 3 39 8 10 3 6 1 73 38 3 75 73 12 19 2 45 6 2 73 38 211 41 46 4 42 47 69 13 7 13 6 13 5 19 3 48 45 39 10 0 39 8 10 0 6 1 73 38 3 75 73 12 43 1 10 4 73 39 6 10 4 6 1 73 12 10 0 73 39 6 10 0 6 1 73 12 10 2 73 39 6 10 2 6 1 73 12 19 3 45 6 2 73 38 137 41 49 4 42 50 129 13 7 13 6 10 5 39 6 10 5 73 38 4 10 1 73 12 19 3 48 45 39 10 0 39 8 10 0 6 1 73 38 3 75 73 12 43 1 10 5 40 3 10 4 39 27 13 5 13 4 19 2 51 45 39 10 0 39 8 10 0 6 1 73 38 3 75 73 43 1 38 37 10 1 40 3 10 0 39 27 13 1 13 0 19 2 51 45 39 10 0 39 8 10 0 6 1 73 38 3 75 73 43 1 38 3 75 73 12 10 2 73 39 6 10 2 6 1 73 12 19 2 45 6 2 73 38 3 75 73 43 12 29) #3# #2# 14796) si::fset)) #2# 14796) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 41 12 19 2 42 1 0 73 29) #4=#A(t (43) (common-lisp-user::check-goal-consistency ext::location (defun common-lisp-user::check-goal-consistency) (#2# . 18506) ext::annotate :lambda-list (common-lisp-user::buffer common-lisp-user::module common-lisp-user::p1 common-lisp-user::p2) common-lisp-user::buffer common-lisp-user::module common-lisp-user::p1 common-lisp-user::p2 common-lisp-user::get-buffer-index 4 12 13 common-lisp-user::x common-lisp-user::production-statement-op #\+ eq common-lisp-user::production-statement-target #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 17 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) common-lisp-user::production-rhs find-if common-lisp-user::compilation-module-previous common-lisp-user::previous-production-bindings #\= #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 25 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) common-lisp-user::production-lhs common-lisp-user::production-bindings common-lisp-user::check-consistency 44 #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 17 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 25 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) 9 #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 25 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 25 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) 40 #\* #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 37 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) #Y(nil nil nil (24 45 15 26 13 0 19 1 16 12 1 25 17 18 73 39 11 13 0 19 1 19 12 10 4 17 18 29) #4# #2# 18506) t #Y(common-lisp-user::check-goal-consistency nil nil (24 45 7 24 45 8 24 45 9 24 45 10 26 13 1 13 3 19 2 11 41 12 7 41 13 4 42 14 50 13 2 34 20 12 13 1 19 1 21 12 19 2 22 12 13 2 19 1 23 12 19 1 24 12 34 26 12 13 0 19 1 27 12 19 2 22 12 13 0 19 1 28 12 19 5 29 38 160 42 30 50 13 2 34 31 12 13 1 19 1 21 12 19 2 22 12 13 2 19 1 23 12 19 1 24 12 34 32 12 13 0 19 1 27 12 19 2 22 12 13 0 19 1 28 12 19 5 29 38 108 42 33 50 13 2 34 34 12 13 1 19 1 21 12 19 2 22 12 13 2 19 1 23 12 19 1 24 12 34 35 12 13 0 19 1 27 12 19 2 22 12 13 0 19 1 28 12 19 5 29 38 56 42 36 50 13 2 34 38 12 13 1 19 1 21 12 19 2 22 12 13 2 19 1 23 12 19 1 24 12 34 39 12 13 0 19 1 27 12 19 2 22 12 13 0 19 1 28 12 19 5 29 38 4 11 40 73 29) #4# #2# 18506) si::fset)) #2# 18506) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 10 12 19 2 11 1 0 73 29) #5=#A(t (12) (common-lisp-user::pre-instantiate-goal ext::location (defun common-lisp-user::pre-instantiate-goal) (#2# . 21625) ext::annotate :lambda-list (common-lisp-user::buffer-and-index common-lisp-user::p2) common-lisp-user::buffer-and-index common-lisp-user::p2 t #Y(common-lisp-user::pre-instantiate-goal nil nil (24 45 7 24 45 8 26 11 9 73 29) #5# #2# 21625) si::fset)) #2# 21625) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 15 0 15 20 15 21 19 3 22 1 0 73 29) #6=#A(t (23) (common-lisp-user::no-rhs-goal-ref ext::location (defun common-lisp-user::no-rhs-goal-ref) (#2# . 21835) ext::annotate :lambda-list (common-lisp-user::buffer common-lisp-user::p1 common-lisp-user::p2) common-lisp-user::buffer common-lisp-user::p1 common-lisp-user::p2 string "=" symbol-name concatenate intern common-lisp-user::production-standard-rep second common-lisp-user::recursive-find #Y(common-lisp-user::no-rhs-goal-ref nil nil (24 45 7 24 45 8 24 45 9 26 15 10 15 11 10 2 16 12 12 19 3 13 12 19 1 14 12 13 0 19 1 15 16 16 12 19 2 17 76 73 29) #6# #2# 21835) si::fset function "Can't compile if the variable naming the buffer is used in the actions of p2" si::set-documentation)) #2# 21835) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 57 12 19 2 58 1 0 73 29) #7=#A(t (59) (common-lisp-user::goal-reason ext::location (defun common-lisp-user::goal-reason) (#2# . 22128) ext::annotate :lambda-list (common-lisp-user::p1-index common-lisp-user::p2-index common-lisp-user::failed-function) common-lisp-user::p1-index common-lisp-user::p2-index common-lisp-user::failed-function common-lisp-user::no-rhs-goal-ref eql "the buffer variable cannot be used in the actions of the second production if there is a request in the first production." 2 6 10 11 14 15 42 43 46 47 "the buffer is explicitly cleared in the first production" 16 18 20 22 24 25 26 27 28 29 30 31 56 57 58 60 59 61 62 63 "there are queries of the buffer in the first production" 41 45 "the first production makes both a modification and a modification request" "the buffer is explicitly cleared in the second production" "there are queries of the buffer in the second production" "the second production makes both a modification and a modification request" 4 12 13 44 "both productions make requests" "one production makes a modification and the other makes a modification request" #Y(common-lisp-user::goal-reason nil nil (24 45 7 24 45 8 24 45 9 26 10 0 39 7 13 0 1 10 17 11 39 6 1 12 73 38 249 10 2 41 13 28 41 14 25 41 15 22 41 16 19 41 17 16 41 18 13 41 19 10 41 20 7 41 21 4 42 22 6 1 23 73 38 212 41 24 58 41 25 55 41 26 52 41 27 49 41 28 46 41 29 43 41 30 40 41 31 37 41 32 34 41 33 31 41 34 28 41 35 25 41 36 22 41 37 19 41 38 16 41 39 13 41 40 10 41 41 7 41 42 4 42 43 6 1 44 73 38 147 41 45 4 42 46 6 1 47 73 38 136 10 1 41 13 28 41 14 25 41 15 22 41 16 19 41 17 16 41 18 13 41 19 10 41 20 7 41 21 4 42 22 6 1 48 73 38 99 41 24 58 41 25 55 41 26 52 41 27 49 41 28 46 41 29 43 41 30 40 41 31 37 41 32 34 41 33 31 41 34 28 41 35 25 41 36 22 41 37 19 41 38 16 41 39 13 41 40 10 41 41 7 41 42 4 42 43 6 1 49 73 38 34 41 45 4 42 46 6 1 50 73 38 23 10 2 41 51 10 41 52 7 41 53 4 42 54 6 1 55 73 38 4 1 56 73 29) #7# #2# 22128) si::fset)) #2# 22128) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 15 4 15 5 15 6 77 15 7 19 9 8 29) #A(t (9) (common-lisp-user::goal ((44 40 common-lisp-user::no-rhs-goal-ref) (44 8 common-lisp-user::no-rhs-goal-ref) (44 0 t) (40 44 t) (40 40 t) (40 12 t) (40 8 t) (40 4 t) (40 0 t) (13 40 common-lisp-user::no-rhs-goal-ref) (13 9 common-lisp-user::no-rhs-goal-ref) (13 8 common-lisp-user::no-rhs-goal-ref) (13 0 t) (12 40 common-lisp-user::no-rhs-goal-ref) (12 9 common-lisp-user::no-rhs-goal-ref) (12 8 common-lisp-user::no-rhs-goal-ref) (12 0 t) (9 13 t) (9 12 t) (9 9 t) (9 8 t) (9 4 t) (9 0 t) (8 44 t) (8 40 t) (8 13 t) (8 12 t) (8 9 t) (8 8 t) (8 4 t) (8 0 t) (4 40 common-lisp-user::no-rhs-goal-ref) (4 9 common-lisp-user::no-rhs-goal-ref) (4 8 common-lisp-user::no-rhs-goal-ref) (4 0 t) (0 44 t) (0 40 t) (0 13 t) (0 12 t) (0 9 t) (0 8 t) (0 4 t)) (common-lisp-user::goal) common-lisp-user::map-goal-buffer common-lisp-user::compose-goal-buffer common-lisp-user::check-goal-consistency common-lisp-user::pre-instantiate-goal common-lisp-user::goal-reason common-lisp-user::define-compilation-type-fct)) #2# 23380))
