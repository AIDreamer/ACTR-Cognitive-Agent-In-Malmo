(#Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 10 14 3 15 4 19 2 5 52 0 15 0 15 6 15 7 15 8 19 4 9 1 0 73 29) #A(t (10) (common-lisp-user::*history-recorder-data-cache* si::*make-special boundp :test equalp make-hash-table ext::location (defvar common-lisp-user::*history-recorder-data-cache*) (#1=#P"C:/Users/Son Pham/Desktop/actr7/tools/history-recorder.lisp" . 0) ext::annotate)) #1# 0) #Y(si::bytecodes nil nil (15 0 15 1 77 77 15 2 15 3 15 4 77 77 77 15 5 9 6 77 77 15 6 19 15 7 15 0 15 8 15 9 15 10 19 4 11 15 12 15 8 15 13 15 14 19 4 11 15 12 14 15 77 15 16 19 4 11 15 0 19 1 31 78 27 15 12 1 29 12 19 2 30 1 0 73 29) #2=#A(t (32) (common-lisp-user::history-recorder "HISTORY-RECORDER-" (common-lisp-user::traces common-lisp-user::buffers common-lisp-user::enabled common-lisp-user::live (common-lisp-user::data-function #3=(make-hash-table :test 'eq)) (common-lisp-user::save-function #4=(make-hash-table :test 'eq))) ((common-lisp-user::traces nil t nil 0 nil) (common-lisp-user::buffers nil t nil 1 nil) (common-lisp-user::enabled nil t nil 2 nil) (common-lisp-user::live nil t nil 3 nil) (common-lisp-user::data-function #3# t nil 4 nil) (common-lisp-user::save-function #4# t nil 5 nil)) common-lisp-user::copy-history-recorder (common-lisp-user::make-history-recorder) common-lisp-user::history-recorder-p si::define-structure ext::location (defstruct common-lisp-user::history-recorder) (#1# . 4732) ext::annotate common-lisp-user::make-history-recorder (defun common-lisp-user::make-history-recorder) (#1# . 4732) :lambda-list (&key #5=#:traces #6=#:buffers #7=#:enabled #8=#:live (#9=#:data-function (make-hash-table :test 'eq)) (#10=#:save-function (make-hash-table :test 'eq))) (nil :save-function :data-function :live :enabled :buffers :traces) #5# #6# #7# #8# :test eq make-hash-table #9# #10# 0 si::make-structure #Y(common-lisp-user::make-history-recorder nil nil (28 17 22 40 2 77 46 18 22 40 2 77 46 19 22 40 2 77 46 20 22 40 2 77 46 21 22 40 9 14 22 15 23 19 2 24 12 46 25 22 40 9 14 22 15 23 19 2 24 12 46 26 15 27 13 5 13 4 13 3 13 2 13 1 13 0 19 7 28 29) #2# #1# 4732) si::fset find-class)) #1# 4732) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 18 12 19 2 19 1 0 73 29) #11=#A(t (20) (common-lisp-user::history-recorder-set-initial-params ext::location (defun common-lisp-user::history-recorder-set-initial-params) (#1# . 4878) ext::annotate :lambda-list (common-lisp-user::x) common-lisp-user::x :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::history-recorder-enabled common-lisp-user::clear-history-recorder #:g19771 t #:g19772 common-lisp-user::history-recorder si::structure-set #Y(common-lisp-user::history-recorder-set-initial-params nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 38 13 0 19 1 11 76 73 39 29 13 0 19 1 12 10 0 45 13 11 14 45 15 13 1 15 16 9 2 13 0 19 4 17 43 1 43 1 43 1 29) #11# #1# 4878) si::fset)) #1# 4878) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 44 12 19 2 45 1 0 73 29) #12=#A(t (46) (common-lisp-user::history-recorder-reset-params ext::location (defun common-lisp-user::history-recorder-reset-params) (#1# . 5252) ext::annotate :lambda-list (common-lisp-user::x) common-lisp-user::x :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::history-recorder-enabled common-lisp-user::history-recorder-traces si::%dolist-var common-lisp-user::y common-lisp-user::printing-module #:g19802 #:g19801 common-lisp-user::printing-module-suppress-cmds #:g19803 #:g19804 t #:g19805 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::sgp-fct #:g19806 #:g19807 (setf common-lisp-user::printing-module-suppress-cmds) #:g19809 #:g19808 #:g19810 #:g19811 #:g19812 (setf common-lisp-user::printing-module-suppress-cmds) :traced-buffers common-lisp-user::history-recorder-buffers copy-list string< :key symbol-name sort #:g19813 #:g19814 (setf common-lisp-user::printing-module-suppress-cmds) #Y(common-lisp-user::history-recorder-reset-params nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 6 13 0 19 1 11 73 39 203 13 0 19 1 12 45 13 75 45 14 38 90 10 1 4 51 0 15 15 19 1 9 47 1 16 45 17 10 1 39 64 13 0 19 1 18 45 19 10 1 45 20 11 21 45 22 13 0 13 1 33 23 18 2 43 1 43 1 64 12 13 3 11 21 6 2 12 19 1 24 65 10 1 45 25 10 1 45 26 13 0 13 1 33 27 18 2 43 1 43 1 66 43 1 43 2 10 1 5 51 1 10 1 40 -92 43 2 15 15 19 1 9 47 1 28 45 29 10 1 73 39 79 13 0 19 1 18 45 30 10 1 45 31 11 21 45 32 13 0 13 1 33 33 18 2 43 1 43 1 64 27 14 34 13 3 19 1 35 16 36 12 15 37 14 38 15 39 19 4 40 6 2 12 19 1 24 65 10 1 45 41 10 1 45 42 13 0 13 1 33 43 18 2 43 1 43 1 66 43 1 43 2 43 1 29) #12# #1# 5252) si::fset)) #1# 5252) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 16 12 19 2 17 1 0 73 29) #13=#A(t (18) (common-lisp-user::disable-history-recorder ext::location (defun common-lisp-user::disable-history-recorder) (#1# . 5661) ext::annotate :lambda-list (common-lisp-user::x) common-lisp-user::x :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::clear-history-recorder #:g19817 #:g19818 common-lisp-user::history-recorder si::structure-set #Y(common-lisp-user::disable-history-recorder nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 28 13 0 19 1 11 10 0 45 12 75 45 13 13 1 15 14 9 2 13 0 19 4 15 43 1 43 1 43 1 29) #13# #1# 5661) si::fset)) #1# 5661) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 31 12 19 2 32 1 0 73 29) #14=#A(t (33) (common-lisp-user::add-history-trace-param ext::location (defun common-lisp-user::add-history-trace-param) (#1# . 5882) ext::annotate :lambda-list (common-lisp-user::param) common-lisp-user::param :history-recorder common-lisp-user::get-module-fct common-lisp-user::module #:g19831 #:g19829 common-lisp-user::history-recorder-traces adjoin #:g19830 common-lisp-user::history-recorder si::structure-set common-lisp-user::printing-module #:g19833 #:g19832 common-lisp-user::printing-module-suppress-cmds #:g19834 #:g19835 t #:g19836 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::sgp-fct #:g19837 #:g19838 (setf common-lisp-user::printing-module-suppress-cmds) #Y(common-lisp-user::add-history-trace-param nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 117 10 1 45 11 10 1 45 12 13 1 13 0 19 1 13 12 19 2 14 45 15 13 1 15 16 9 0 13 0 19 4 17 43 3 15 18 19 1 9 47 1 19 45 20 10 1 39 64 13 0 19 1 21 45 22 10 1 45 23 11 24 45 25 13 0 13 1 33 26 18 2 43 1 43 1 64 12 13 4 11 24 6 2 12 19 1 27 65 10 1 45 28 10 1 45 29 13 0 13 1 33 30 18 2 43 1 43 1 66 43 1 43 2 8 1 73 43 1 29) #14# #1# 5882) si::fset)) #1# 5882) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 30 12 19 2 31 1 0 73 29) #15=#A(t (32) (common-lisp-user::remove-history-trace-param ext::location (defun common-lisp-user::remove-history-trace-param) (#1# . 6110) ext::annotate :lambda-list (common-lisp-user::param) common-lisp-user::param :history-recorder common-lisp-user::get-module-fct common-lisp-user::module #:g19848 common-lisp-user::history-recorder-traces remove #:g19849 common-lisp-user::history-recorder si::structure-set common-lisp-user::printing-module #:g19851 #:g19850 common-lisp-user::printing-module-suppress-cmds #:g19852 #:g19853 t #:g19854 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::sgp-fct #:g19855 #:g19856 (setf common-lisp-user::printing-module-suppress-cmds) #Y(common-lisp-user::remove-history-trace-param nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 114 10 0 45 11 13 2 13 1 19 1 12 12 19 2 13 45 14 13 1 15 15 9 0 13 0 19 4 16 43 1 43 1 15 17 19 1 9 47 1 18 45 19 10 1 39 63 13 0 19 1 20 45 21 10 1 45 22 11 23 45 24 13 0 13 1 33 25 18 2 43 1 43 1 64 11 13 4 75 6 2 12 19 1 26 65 10 1 45 27 10 1 45 28 13 0 13 1 33 29 18 2 43 1 43 1 66 43 1 43 2 8 1 73 43 1 29) #15# #1# 6110) si::fset)) #1# 6110) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 37 12 19 2 38 1 0 73 29) #16=#A(t (39) (common-lisp-user::add-history-traced-buffer ext::location (defun common-lisp-user::add-history-traced-buffer) (#1# . 6369) ext::annotate :lambda-list (common-lisp-user::buffer) common-lisp-user::buffer :history-recorder common-lisp-user::get-module-fct common-lisp-user::module #:g19869 #:g19867 common-lisp-user::history-recorder-buffers adjoin #:g19868 common-lisp-user::history-recorder si::structure-set common-lisp-user::printing-module #:g19871 #:g19870 common-lisp-user::printing-module-suppress-cmds #:g19872 #:g19873 t #:g19874 (setf common-lisp-user::printing-module-suppress-cmds) :traced-buffers copy-list string< :key symbol-name sort common-lisp-user::sgp-fct #:g19875 #:g19876 (setf common-lisp-user::printing-module-suppress-cmds) #Y(common-lisp-user::add-history-traced-buffer nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 132 10 1 45 11 10 1 45 12 13 1 13 0 19 1 13 12 19 2 14 45 15 13 1 15 16 9 1 13 0 19 4 17 43 3 15 18 19 1 9 47 1 19 45 20 10 1 39 79 13 0 19 1 21 45 22 10 1 45 23 11 24 45 25 13 0 13 1 33 26 18 2 43 1 43 1 64 27 14 27 13 3 19 1 13 16 28 12 15 29 14 30 15 31 19 4 32 6 2 12 19 1 33 65 10 1 45 34 10 1 45 35 13 0 13 1 33 36 18 2 43 1 43 1 66 43 1 43 2 8 1 73 43 1 29) #16# #1# 6369) si::fset)) #1# 6369) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 36 12 19 2 37 1 0 73 29) #17=#A(t (38) (common-lisp-user::remove-history-traced-buffer ext::location (defun common-lisp-user::remove-history-traced-buffer) (#1# . 6678) ext::annotate :lambda-list (common-lisp-user::buffer) common-lisp-user::buffer :history-recorder common-lisp-user::get-module-fct common-lisp-user::module #:g19886 common-lisp-user::history-recorder-buffers remove #:g19887 common-lisp-user::history-recorder si::structure-set common-lisp-user::printing-module #:g19889 #:g19888 common-lisp-user::printing-module-suppress-cmds #:g19890 #:g19891 t #:g19892 (setf common-lisp-user::printing-module-suppress-cmds) :traced-buffers copy-list string< :key symbol-name sort common-lisp-user::sgp-fct #:g19893 #:g19894 (setf common-lisp-user::printing-module-suppress-cmds) #Y(common-lisp-user::remove-history-traced-buffer nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 130 10 0 45 11 13 2 13 1 19 1 12 12 19 2 13 45 14 13 1 15 15 9 1 13 0 19 4 16 43 1 43 1 15 17 19 1 9 47 1 18 45 19 10 1 39 79 13 0 19 1 20 45 21 10 1 45 22 11 23 45 24 13 0 13 1 33 25 18 2 43 1 43 1 64 27 14 26 13 3 19 1 12 16 27 12 15 28 14 29 15 30 19 4 31 6 2 12 19 1 32 65 10 1 45 33 10 1 45 34 13 0 13 1 33 35 18 2 43 1 43 1 66 43 1 43 2 8 1 73 43 1 29) #17# #1# 6678) si::fset)) #1# 6678) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 35 12 19 2 36 1 0 73 29) #18=#A(t (37) (common-lisp-user::history-recorder-initial-flags ext::location (defun common-lisp-user::history-recorder-initial-flags) (#1# . 7029) ext::annotate :lambda-list (common-lisp-user::params common-lisp-user::data common-lisp-user::save) common-lisp-user::params common-lisp-user::data common-lisp-user::save :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::x common-lisp-user::y common-lisp-user::z common-lisp-user::history-recorder-data-function si::hash-set common-lisp-user::history-recorder-save-function common-lisp-user::printing-module #:g19915 #:g19914 common-lisp-user::printing-module-suppress-cmds #:g19916 #:g19917 t #:g19918 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::sgp-fct #:g19919 #:g19920 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::add-history-trace-param #Y(nil nil nil (24 45 13 24 45 14 24 45 15 26 13 2 13 3 19 1 16 12 13 1 19 3 17 13 2 13 3 19 1 18 12 13 0 19 3 17 15 19 19 1 11 47 1 20 45 21 10 1 39 62 13 0 19 1 22 45 23 10 1 45 24 11 25 45 26 13 0 13 1 33 27 18 2 43 1 43 1 64 10 10 5 6 1 12 19 1 28 65 10 1 45 29 10 1 45 30 13 0 13 1 33 31 18 2 43 1 43 1 66 43 1 43 2 4 39 8 13 2 19 1 32 38 4 8 0 73 29) #18# #1# 7029) mapcar #Y(common-lisp-user::history-recorder-initial-flags nil nil (24 45 7 24 45 8 24 45 9 26 15 10 19 1 11 45 12 10 0 73 39 13 34 33 12 13 3 13 2 13 1 19 4 34 43 1 29) #18# #1# 7029) si::fset)) #1# 7029) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 56 12 19 2 57 1 0 73 29) #19=#A(t (58) (common-lisp-user::history-recorder-initial-buffers ext::location (defun common-lisp-user::history-recorder-initial-buffers) (#1# . 7530) ext::annotate :lambda-list (common-lisp-user::x) common-lisp-user::x :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::printing-module #:g19937 #:g19936 common-lisp-user::printing-module-suppress-cmds #:g19938 #:g19939 t #:g19940 (setf common-lisp-user::printing-module-suppress-cmds) (:traced-buffers) common-lisp-user::sgp-fct #:g19941 #:g19942 (setf common-lisp-user::printing-module-suppress-cmds) common-lisp-user::buffers eq common-lisp-user::current-model #:g19945 #:g19944 make-broadcast-stream common-lisp-user::printing-module-model-warnings #:g19946 *error-output* #:g19947 #:g19948 (setf common-lisp-user::printing-module-model-warnings) common-lisp-user::procedural #:g19949 #:g19950 (setf common-lisp-user::printing-module-model-warnings) common-lisp-user::it common-lisp-user::production car common-lisp-user::procedural-buffer-indices mapcar common-lisp-user::y "~a ~d" find common-lisp-user::add-history-traced-buffer format #Y(nil nil nil (24 45 46 26 77 15 47 13 0 13 0 13 1 19 2 48 39 8 13 0 19 1 49 38 4 8 0 73 12 19 4 50 29) #19# #1# 7530) string< :key symbol-name sort #Y(common-lisp-user::history-recorder-initial-buffers nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 73 39 239 15 11 19 1 9 47 1 12 45 13 10 1 39 61 13 0 19 1 14 45 15 10 1 45 16 11 17 45 18 13 0 13 1 33 19 18 2 43 1 43 1 64 9 15 20 19 1 21 4 73 65 10 1 45 22 10 1 45 23 13 0 13 1 33 24 18 2 43 1 43 1 66 43 1 43 2 45 25 13 0 11 17 17 26 39 131 19 0 27 39 85 15 11 19 1 9 47 1 28 45 29 10 1 39 67 19 0 30 12 13 0 19 1 31 12 46 32 49 33 10 1 45 34 75 45 35 13 0 13 1 33 36 18 2 43 1 43 1 64 7 15 37 19 1 9 65 10 1 45 38 10 1 45 39 13 0 13 1 33 40 18 2 43 1 43 1 66 43 1 44 1 43 2 38 13 19 0 30 48 33 15 37 19 1 9 44 1 45 41 10 0 39 17 15 42 15 43 13 0 19 1 44 12 19 2 45 3 38 4 19 0 25 43 1 51 0 34 51 12 19 0 25 12 15 52 14 53 15 54 19 4 55 12 19 2 45 43 1 43 1 29) #19# #1# 7530) si::fset)) #1# 7530) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 11 12 19 2 12 1 0 73 29) #20=#A(t (13) (common-lisp-user::default-save-history-info ext::location (defun common-lisp-user::default-save-history-info) (#1# . 8205) ext::annotate :lambda-list (common-lisp-user::data stream) common-lisp-user::data stream :stream write #Y(common-lisp-user::default-save-history-info nil nil (24 45 7 24 45 8 26 13 1 14 9 13 0 19 3 10 29) #20# #1# 8205) si::fset)) #1# 8205) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 17 12 19 2 18 1 0 73 29) #21=#A(t (19) (common-lisp-user::get-history-information ext::location (defun common-lisp-user::get-history-information) (#1# . 8285) ext::annotate :lambda-list (common-lisp-user::parameter common-lisp-user::key) common-lisp-user::parameter common-lisp-user::key symbolp :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::history-recorder-data-function gethash common-lisp-user::fun common-lisp-user::*history-recorder-data-cache* #Y(common-lisp-user::get-history-information nil nil (24 45 7 24 45 8 26 10 0 16 9 39 42 15 10 19 1 11 45 12 10 0 73 39 26 13 2 13 0 19 1 13 12 19 2 14 45 15 10 0 73 39 6 13 0 20 0 23 43 1 43 1 38 17 13 1 10 0 4 12 14 16 19 2 14 5 12 19 2 14 29) #21# #1# 8285) si::fset)) #1# 8285) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #22=#A(t (21) (common-lisp-user::select-live-data ext::location (defun common-lisp-user::select-live-data) (#1# . 8684) ext::annotate :lambda-list (common-lisp-user::model-name common-lisp-user::params-list) common-lisp-user::model-name common-lisp-user::params-list :history-recorder common-lisp-user::get-module-fct common-lisp-user::module common-lisp-user::current-model eql common-lisp-user::x common-lisp-user::history-recorder-traces find #Y(nil nil nil (24 45 14 26 13 0 13 1 19 1 15 12 19 2 16 29) #22# #1# 8684) remove-if-not #Y(common-lisp-user::select-live-data nil nil (24 45 7 24 45 8 26 15 9 19 1 10 45 11 10 0 39 32 19 0 12 12 10 2 17 13 39 15 9 1 34 17 12 13 1 19 2 18 3 73 38 6 8 0 6 1 73 38 6 8 0 6 1 73 43 1 29) #22# #1# 8684) si::fset)) #1# 8684) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 19 12 19 2 20 1 0 73 29) #23=#A(t (21) (common-lisp-user::add-saved-file-user ext::location (defun common-lisp-user::add-saved-file-user) (#1# . 8986) ext::annotate :lambda-list (common-lisp-user::key) common-lisp-user::key symbolp common-lisp-user::*history-recorder-data-cache* gethash common-lisp-user::entry numberp #:g19954 #:g19956 + #:g19955 rplaca t #Y(common-lisp-user::add-saved-file-user nil nil (24 45 7 26 10 0 16 8 76 39 50 10 0 4 12 14 9 19 2 10 45 11 10 0 4 16 12 39 30 10 0 45 13 8 1 45 14 10 1 4 12 13 0 19 2 15 45 16 13 2 10 0 17 17 10 0 43 3 43 1 11 18 73 29) #23# #1# 8986) si::fset)) #1# 8986) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 21 12 19 2 22 1 0 73 29) #24=#A(t (23) (common-lisp-user::remove-saved-file-user ext::location (defun common-lisp-user::remove-saved-file-user) (#1# . 9185) ext::annotate :lambda-list (common-lisp-user::key) common-lisp-user::key symbolp common-lisp-user::*history-recorder-data-cache* gethash common-lisp-user::entry numberp #:g19960 #:g19962 - #:g19961 rplaca zerop remhash t #Y(common-lisp-user::remove-saved-file-user nil nil (24 45 7 26 10 0 16 8 76 39 65 10 0 4 12 14 9 19 2 10 45 11 10 0 4 16 12 39 45 10 0 45 13 8 1 45 14 10 1 4 12 13 0 19 2 15 45 16 13 2 10 0 17 17 10 0 43 3 10 0 4 16 18 39 9 10 1 4 12 11 9 17 19 43 1 11 20 73 29) #24# #1# 9185) si::fset)) #1# 9185) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 72 12 19 2 73 1 0 73 29) #25=#A(t (74) (common-lisp-user::load-history-information ext::location (defun common-lisp-user::load-history-information) (#1# . 9483) ext::annotate :lambda-list (common-lisp-user::file-name common-lisp-user::params-list) common-lisp-user::file-name common-lisp-user::params-list probe-file common-lisp-user::exists :direction :input open common-lisp-user::f #:g19963 #:g19964 0 error si::temp #Y(nil nil nil (24 45 19 26 10 0 51 2 35 1 0 29) #25# #1# 9483) si::*handler-clusters* read condition common-lisp-user::condition1 common-lisp-user::check type-of subtypep listp length = :saved-act-r-history-data eq second symbolp third stringp :check-act-r-version common-lisp-user::ssp-fct #:g19966 #:g19967 #Y(nil nil nil (24 45 19 26 10 0 51 2 35 1 0 29) #25# #1# 9483) :test make-hash-table common-lisp-user::table common-lisp-user::keys common-lisp-user::model #:g19970 #:g19971 #Y(nil nil nil (24 45 19 26 10 0 51 2 35 1 0 29) #25# #1# 9483) :reading-data-done common-lisp-user::val keywordp si::hash-set "Invalid data found in history file ~s" format common-lisp-user::*history-recorder-data-cache* common-lisp-user::x find #Y(nil nil nil (24 45 57 26 13 0 13 2 19 2 58 29) #25# #1# 9483) remove-if-not append common-lisp-user::result "Error encountered loading saved data file ~s~%" "Saved file was from ACT-R version ~a which is not compatible with current version ~a" (:act-r-version) "Error encountered loading saved data file ~s~%~a" "File does not appear to contain saved history information" close :abort t "File could not be found by ACT-R" #Y(common-lisp-user::load-history-information nil nil (24 45 7 24 45 8 26 57 0 60 527 10 2 16 9 45 10 10 0 39 507 13 3 14 11 14 12 19 3 13 45 14 64 476 57 15 60 49 75 45 16 57 17 61 1 23 15 18 34 20 3 6 1 12 11 21 3 48 21 13 3 19 1 22 36 2 44 1 10 1 45 23 77 13 0 72 2 43 1 36 2 62 73 43 1 63 47 1 24 45 25 10 1 16 26 12 15 23 19 2 27 76 39 43 10 0 16 28 39 37 10 0 16 29 12 9 3 19 2 30 39 25 10 0 4 12 11 31 17 32 39 15 10 0 16 33 16 34 39 7 10 0 16 35 16 36 39 333 14 37 10 0 16 35 6 2 12 19 1 38 4 39 293 57 39 60 250 75 45 40 57 17 61 1 224 15 18 34 41 3 6 1 12 11 21 3 48 21 10 3 16 33 12 77 14 42 15 32 19 2 43 12 46 44 46 45 46 46 58 60 150 57 17 61 1 1 57 47 60 51 75 45 48 57 17 61 1 26 15 18 34 49 3 6 1 12 11 21 3 48 21 13 13 77 14 50 19 3 22 36 2 44 1 10 1 45 23 77 13 0 72 2 43 1 36 2 62 43 1 63 45 51 13 0 11 50 17 32 39 5 75 73 36 2 10 0 39 24 10 0 16 28 39 18 10 0 16 29 12 9 2 19 2 30 39 6 10 0 4 16 52 39 26 10 0 4 12 10 4 3 51 4 10 0 4 12 13 5 10 0 16 33 12 19 3 53 38 16 9 0 77 15 54 13 15 19 3 55 6 2 73 36 13 43 1 35 0 0 62 63 13 12 14 56 9 1 10 2 3 12 19 3 53 9 1 10 0 6 2 12 34 59 12 13 11 19 2 60 12 19 2 61 43 3 36 2 44 1 10 1 45 23 77 13 0 72 2 43 1 36 2 62 73 43 1 63 47 1 23 45 62 10 1 16 26 12 15 23 19 2 27 39 16 9 0 77 15 63 13 8 19 3 55 6 2 73 38 4 10 0 73 43 2 38 24 9 0 77 15 64 10 0 16 35 12 15 65 19 1 38 4 12 19 4 55 6 2 73 38 16 9 0 77 15 66 13 6 15 67 19 4 55 6 2 73 43 2 69 10 0 39 6 13 0 19 1 68 70 65 10 0 39 10 13 0 14 69 14 70 19 3 68 66 43 1 38 8 9 0 1 71 6 2 73 43 1 63 29) #25# #1# 9483) si::fset)) #1# 9483) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 49 12 19 2 50 1 0 73 29) #26=#A(t (51) (common-lisp-user::save-history-information ext::location (defun common-lisp-user::save-history-information) (#1# . 11823) ext::annotate :lambda-list (common-lisp-user::file) common-lisp-user::file :history-recorder common-lisp-user::get-module-fct common-lisp-user::module #:g19983 #:g19984 0 error si::temp #Y(nil nil nil (24 45 15 26 10 0 51 2 35 1 0 29) #26# #1# 11823) si::*handler-clusters* :direction :output :if-does-not-exist :create :if-exists :supersede open common-lisp-user::f "(:saved-act-r-history-data ~s ~s)~%" common-lisp-user::current-model (:act-r-version) common-lisp-user::ssp-fct format common-lisp-user::history-recorder-traces si::%dolist-var common-lisp-user::x "(~s " common-lisp-user::history-recorder-save-function gethash common-lisp-user::history-recorder-data-function ")~%" close :abort t condition common-lisp-user::result type-of subtypep "Error encountered saving file ~s~%~a" "Data saved in file ~s" "No current model could not save data in  ~S" #Y(common-lisp-user::save-history-information nil nil (24 45 7 26 15 8 19 1 9 45 10 10 0 39 245 57 11 60 190 75 45 12 57 13 61 1 164 15 14 34 16 3 6 1 12 11 17 3 48 17 13 4 14 18 14 19 14 20 14 21 14 22 14 23 19 7 24 45 25 64 110 13 0 15 26 19 0 27 12 15 28 19 1 29 4 12 19 4 30 13 4 19 1 31 45 32 75 45 33 38 60 10 1 4 51 0 13 2 15 34 13 0 19 3 30 13 0 13 6 19 1 35 12 19 2 36 12 13 0 13 6 19 1 37 12 19 2 36 12 20 0 23 12 13 2 20 2 23 13 2 15 38 19 2 30 10 1 5 51 1 10 1 40 -62 75 73 43 2 69 10 0 39 6 13 0 19 1 39 70 65 10 0 39 10 13 0 14 40 14 41 19 3 39 66 43 1 36 2 44 1 10 1 45 42 77 13 0 72 2 43 1 36 2 62 73 43 1 63 47 1 42 45 43 10 1 16 44 12 15 42 19 2 45 39 18 9 0 77 15 46 13 3 13 1 19 4 30 6 2 73 38 14 9 1 77 15 47 13 3 19 3 30 6 2 73 43 2 38 14 9 0 77 15 48 13 1 19 3 30 6 2 73 43 1 29) #26# #1# 11823) si::fset)) #1# 11823) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 14 12 19 2 15 1 0 73 29) #27=#A(t (16) (common-lisp-user::clear-history-recorder ext::location (defun common-lisp-user::clear-history-recorder) (#1# . 12876) ext::annotate :lambda-list (common-lisp-user::instance) common-lisp-user::instance #:g19990 #:g19991 common-lisp-user::history-recorder si::structure-set #:g19992 #:g19993 #Y(common-lisp-user::clear-history-recorder nil nil (24 45 7 26 10 0 45 8 75 45 9 13 1 15 10 9 0 13 0 19 4 11 43 1 43 1 10 0 45 12 75 45 13 13 1 15 10 9 1 13 0 19 4 11 43 1 43 1 29) #27# #1# 12876) si::fset)) #1# 12876) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 77 19 4 4 15 0 1 9 12 19 2 10 1 0 73 29) #28=#A(t (11) (common-lisp-user::get-saved-text-trace ext::location (defun common-lisp-user::get-saved-text-trace) (#1# . 13016) ext::annotate :lambda-list :detail t common-lisp-user::get-saved-trace #Y(common-lisp-user::get-saved-text-trace nil nil (26 14 6 14 7 19 2 8 29) #28# #1# 13016) si::fset)) #1# 13016) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 19 4 4 15 0 14 5 77 15 6 19 4 4 15 0 1 32 12 19 2 33 1 0 73 29) #29=#A(t (34) (common-lisp-user::text-history-trace ext::location (defun common-lisp-user::text-history-trace) (#1# . 13169) ext::annotate :lambda-list (&key common-lisp-user::detail common-lisp-user::start common-lisp-user::end common-lisp-user::key) (nil :key :end :start :detail) common-lisp-user::detail common-lisp-user::start common-lisp-user::end common-lisp-user::key :save-trace common-lisp-user::get-history-information make-string-output-stream common-lisp-user::output common-lisp-user::full-trace si::%dolist-var common-lisp-user::x common-lisp-user::seconds->ms >= <= t eq common-lisp-user::low second common-lisp-user::medium common-lisp-user::high "~a~%" third format get-output-stream-string #Y(common-lisp-user::text-history-trace nil nil (28 7 22 40 2 77 46 8 22 40 2 77 46 9 22 40 2 77 46 10 22 40 2 77 46 11 14 12 13 0 19 2 13 12 19 0 14 12 46 15 46 16 10 0 45 17 75 45 18 38 124 10 1 4 51 0 10 6 76 40 14 10 0 4 12 13 6 19 1 19 12 19 2 20 39 80 10 5 76 40 14 10 0 4 12 13 5 19 1 19 12 19 2 21 39 60 13 7 11 22 17 23 40 52 10 7 42 24 12 10 0 16 25 12 1 24 17 23 38 36 42 26 23 10 0 16 25 12 1 24 17 23 40 10 10 0 16 25 12 1 26 17 23 38 11 42 27 7 10 0 16 25 38 2 75 39 13 13 3 15 28 10 0 16 29 12 19 3 30 10 1 5 51 1 10 1 40 -126 75 51 0 10 3 16 31 43 2 43 2 29) #29# #1# 13169) si::fset)) #1# 13169) #Y(si::bytecodes nil nil (14 0 77 77 14 1 1 4 12 14 5 15 6 14 7 15 8 19 9 9 29) #30=#A(t (10) (:history-recorder :creation common-lisp-user::x common-lisp-user::make-history-recorder #Y(nil nil nil (24 45 2 26 19 0 3 29) #30# #1# 13855) :version "1.0a1" :documentation "Module to support Environment saving and replaying trace information." common-lisp-user::define-module-fct)) #1# 13855))
